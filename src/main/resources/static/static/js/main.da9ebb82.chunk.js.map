{"version":3,"sources":["views/Login.js","views/ChangeTempPassword.js","api/WebApi.js","components/Modal.js","components/Toast.js","components/SearchInput.js","views/DataSource.js","api/Constants.js","components/ColorPicker.js","components/Checkbox.js","api/Util.js","api/EchartsApi.js","components/GridDraggable.js","components/GridResizable.js","components/TableWidget.js","components/filters/Slicer.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/Tabs.js","components/Select.js","components/WidgetEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/DashboardFullScreenView.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","handleKeyPress","keyCode","login","_this$state","state","username","password","user","axios","post","then","res","loginResponse","data","error","errorMsg","onLoginSuccess","_this2","isAuthenticated","sysRole","react_default","a","createElement","Fragment","className","type","onChange","onKeyDown","onClick","React","Component","withRouter","ChangeTempPassword","changePassword","confirmedPassword","length","history","push","style","fontSize","textAlign","fontWeight","marginBottom","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","concat","onClose","react_fontawesome_index_es","icon","size","Toast","message","showToast","setTimeout","hide","_toastRef","assertThisInitialized","toastStatus","SearchInput","reset","inputWidth","inputStyle","width","margin","placeholder","DataSource","handleNameInputChange","save","showUpdatePassword","id","connectionUrl","driverClassName","ping","ds","put","closeEditPanel","catch","result","clearEditPanel","initialState","openEditPanel","showEditPanel","confirmDelete","_this$state$objectToD","objectToDelete","delete","closeConfirmDeletionPanel","openConfirmDeletionPanel","datasource","showConfirmDeletionPanel","toggleUpdatePassword","prevState","jdbcDataSources","searchValue","webApi","_this$state2","_this$state2$jdbcData","_this$state2$objectTo","mode","jdbcDataSourceItems","_loop","i","includes","key","class","marginRight","src_components_SearchInput","src_components_Modal","rows","CHART","FILTER","WIDGET_TYPES","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","SYS_ROLE_ADMIN","SYS_ROLE_VIEWER","DEFAULT_DASHBOARD_HEIGHT","ColorPicker","handleClick","showPalette","handleClose","handleChange","color","rgb","rgba","r","g","b","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","Checkbox","toggle","checked","_this$props2","checkmarkBoxStyle","backgroundColor","jsonToArray","json","array","JSON","parse","e","CHART_COLORS","getPieOption","queryResultData","pieKey","pieValue","legend","series","row","tooltip","orient","center","radius","getPieOptionTemplate","WIDGET_BORDER","GridDraggable","onMouseDown","preventDefault","gridItemNode","ReactDOM","findDOMNode","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","fixedWidth","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","TableWidget","goToLink","link","onTableTdClick","_this$props$data","_this$props$columns","columns","_this$props$drillThro","drillThrough","columnHeaders","forEach","column","columnName","header","Header","accessor","index","findIndex","d","dashboardId","Cell","es","defaultPageSize","previousText","nextText","Slicer","toggleSelectAll","newIsSelectAll","isSelectAll","newCheckBoxes","toConsumableArray","checkBoxes","isChecked","handleSearchValueChange","handleCheckBoxChange","x","_this$props$checkBoxe","checkBoxItems","checkBox","src_components_Checkbox","selectText","GridItem","console","log","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","instance","handleOriginal","drills","widgetDrillThrough","onChartClick","param","echarts","onChartLegendselectchanged","echart","onSlicerChange","onWidgetFilterInputChange","onSingleValueChange","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","filterType","_this$props$queryResu","queryResult","Util","widgetItem","Constants","src_components_TableWidget","chartOption","EchartsApi","echarts_for_react_lib_default","option","onEvents","components_filters_Slicer","isEditMode","_this$props2$style","_style$showBorder","showBorder","borderColor","showTitle","borderStyle","gridBoxStyle","border","components_GridDraggable","components_GridResizable","GridLayout","_this$props$widgets","widgets","showGridlines","backgroundSize","backgroundImage","boxItems","map","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","viewWidth","newWidgets","gridWidth","resizeWidgetsToActual","resizeWidgetsToBase","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryFilters","queryCharts","saveWidgets","stringify","w","splice","_this$state$widgets","getFilterParams","_this$state$widgets2","filterParams","filterParam","_widget$checkBoxes","paramValues","j","remark","queryParameter","_widgets$i","queryChart","_widgets$i2","queryFilter","params","_this3","_arr","values","_i","val","_this4","widgetViewWidth","onStyleValueChange","components_ColorPicker","src_components_GridLayout","Tabs","handleTabClick","activeTab","tabHeaders","tabContent","active","Select","handleOptionChange","_this$props$options","options","optionValue","optionDisplay","_this$props$preloadOn","preloadOneEmpty","optionList","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","_widget$data","sqlQuery","jdbcDataSourceId","runQuery","_x","objectSpread","handleAceEditorChange","newValue","handleIntegerOptionChange","intValue","_this$state3","_this$state4","onSave","queryRequest","addDrillThrough","_this$state5","drillColumnName","drillDashboardId","newDrillThrough","removeDrillThrough","drill","generateChart","_this$state6","_this$state6$queryRes","renderChartPreview","_this$state7","_this$state7$queryRes","chartPreview","_this$state8","components_Select","_this$state9","_this$state9$jdbcData","_this$state9$drillThr","_this$state9$drillDas","drillItems","columnItems","col","dataType","showQueryTab","src_components_Tabs","react_ace_lib_default","marginTop","theme","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","DashboardEditView","loadViewByDashboardName","url","location","search","dashboardName","URLSearchParams","getPageWidth","isReadOnly","refresh","toggleAutoRefresh","autoRefreshTimerId","clearInterval","refreshInterval","interval","timerId","setInterval","queryWidgets","updateLastRefreshed","refreshWidgetView","widgetViewPanel","current","now","Date","toTimeString","replace","lastRefreshed","dashboard","onDashboardSave","edit","cancelEdit","onSaveWidget","showWidgetEditPanel","openWidgetEditPanel","widgetEditPanel","applyFilters","fullScreen","window","open","onTableCellClick","onDashboardDelete","deleteDashboard","jdbcDataSourceOptions","createRef","match","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","editButtonPanel","autoRefreshStatus","fullScreenButtonPanel","controlButtons","components_WidgetViewPanel","ref","src_components_WidgetEditPanel","Dashboard","fetchBoards","view","activeDashboardId","pathname","indexOf","Number","substring","_this$state$dashboard","showEdit","dashboardRows","menuActive","Route","path","render","views_DashboardEditView","User","fetchUsers","users","fetchGroups","groups","tempPassword","userGroups","userGroupId","initialEditPanelState","selectedSysRole","addUserGroup","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_this$state3$users","_this$state3$groups","_this$state3$userGrou","_this$state3$objectTo","userItems","userGroupItems","_loop2","Group","fetchDashboards","group","groupDashboards","groupDashboardId","addGroupDashboard","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","UserManagement","views_Group","views_User","Account","fetchUser","apiKey","generateApiKey","DashboardFullScreenView","dashboardEditView","wrappedComponentRef","comp","MENU_ITEMS","Workspace","handleMenuClick","menuLink","currentMenuLink","logout","onLogout","startsWith","find","m","menuItems","menuList","filter","menu","Link","to","isAccountMenuActive","Switch","exact","component","views_UserManagement","src_views_Dashboard","src_components_Toast","PageNotFound","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","faCircleNotch","faSearch","faSave","faCalendarPlus","faFilter","App","isAuthorizing","directUrl","currentPath","spin","src_views_Login","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","BrowserRouter","basename","src_App_0","document","getElementById"],"mappings":"2mBAOMA,sBAEJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA0BRQ,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SA7BnBb,EAiCnBc,eAAiB,SAACN,GACK,KAAlBA,EAAMO,SACPf,EAAKgB,SAnCUhB,EAuCnBgB,MAAQ,WAAM,IAAAC,EAIRjB,EAAKkB,MAFPC,EAFUF,EAEVE,SACAC,EAHUH,EAGVG,SAGIC,EAAO,CACXF,SAAUA,EACVC,SAAUA,GAGPD,EAOAC,EAOLE,IAAMC,KAAK,mBAAoBF,GAC5BG,KAAK,SAAAC,GACJ,IAAMC,EAAgBD,EAAIE,KACtBD,EAAcE,MAChB5B,EAAKS,SAAS,CACZoB,SAAUH,EAAcE,QAG1B5B,EAAKD,MAAM+B,eAAeJ,KAd9B1B,EAAKS,SAAS,CACZoB,SAAU,oBARZ7B,EAAKS,SAAS,CACZoB,SAAU,qBAlDd7B,EAAKkB,MAAQ,CACXW,SAAU,GACVV,SAAU,GACVC,SAAU,IALKpB,mFASC,IAAA+B,EAAA5B,KAEd6B,GAAkB,EADF7B,KAAKJ,MAAjBkC,UAGND,GAAkB,GAGfA,GACHV,IAAMC,KAAK,sBACRC,KAAK,SAAAC,GACJ,IAAMC,EAAgBD,EAAIE,KACrBD,EAAcE,OACjBG,EAAKhC,MAAM+B,eAAeJ,sCAyDlC,OACEQ,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAf,QACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAmBnC,KAAKe,MAAMW,UAC7CK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAMC,SAClBqB,SAAUrC,KAAKI,kBACfkC,UAAWtC,KAAKW,iBAElBoB,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAME,SAClBoB,SAAUrC,KAAKI,kBACfkC,UAAWtC,KAAKW,iBAElBoB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,sBAAsBI,QAASvC,KAAKa,OAAtD,oBAvGM2B,IAAMC,YAgHXC,cAAW/C,GChHpBgD,cAEJ,SAAAA,EAAY/C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2C,IACjB9C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6C,GAAAxC,KAAAH,KAAMJ,KAWRQ,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAdnBb,EAkBnB+C,eAAiB,WAAM,IAAA9B,EAIjBjB,EAAKkB,MAFPE,EAFmBH,EAEnBG,SACA4B,EAHmB/B,EAGnB+B,kBAGF,GAAI5B,GAAY4B,GACT5B,IAAa4B,EAAmB,CACrC,GAAI5B,EAAS6B,OAAS,EAIpB,YAHAjD,EAAKS,SAAS,CACZoB,SAAQ,8BAKZ,IAAMR,EAAO,CACXD,SAAUA,GAGZE,IAAMC,KAAK,6BAA8BF,GACtCG,KAAK,SAAAC,GACJ,IAAMC,EAAgBD,EAAIE,MAAQ,GAC9BD,EAAcE,MAChB5B,EAAKS,SAAS,CACZoB,SAAUH,EAAcE,QAG1B5B,EAAKD,MAAMmD,QAAQC,KAAK,+BAI9BnD,EAAKS,SAAS,CACZoB,SAAQ,mCAhDZ7B,EAAKkB,MAAQ,CACXW,SAAU,GACVT,SAAU,GACV4B,kBAAmB,IALJhD,qHAqEjB,OACEkC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OAAKgB,MAhBQ,CACjBC,SAAU,OACVC,UAAW,SACXC,WAAY,OACZC,aAAc,SAYV,mBACAtB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAmBnC,KAAKe,MAAMW,UAC7CK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,OAAKgB,MAbE,CACfG,WAAY,OACZC,aAAc,MACdH,SAAU,SAUF,8BACAnB,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAMC,SAClBqB,SAAUrC,KAAKI,oBACjB2B,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,oBACLC,MAAOV,KAAKe,MAAM8B,kBAClBR,SAAUrC,KAAKI,oBACjB2B,EAAAC,EAAAC,cAAA,UAAQE,UAAU,sBAAsBI,QAASvC,KAAK4C,gBAAtD,sBA3FmBJ,IAAMC,WAoGxBC,cAAWC,qCCnGbW,UAAgB,eAAAC,EAAAzD,OAAA0D,EAAA,EAAA1D,CAAA2D,EAAAzB,EAAA0B,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAzB,EAAA6B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEL7C,IAAM8C,IAAI,sBAFL,cAEtBL,EAFsBE,EAAAI,KAAAJ,EAAAK,OAAA,SAGrBP,EAASpC,MAAQ,IAHI,cAAAsC,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAAAA,EAAAK,OAAA,SAKrB,IALqB,yBAAAL,EAAAO,SAAAV,EAAA,iBAAH,yBAAAJ,EAAAe,MAAAtE,KAAAuE,YAAA,IC0BdC,2LA5BJ,IAAA3E,EAAAG,KAAAyE,EAMHzE,KAAKJ,MAJP8E,EAFKD,EAELC,KAFKC,EAAAF,EAGLG,kBAHK,IAAAD,EAGQ,GAHRA,EAILE,EAJKJ,EAILI,MACAC,EALKL,EAKLK,SAGIC,EAAcL,EAAO,gBAAkB,eAC7C,OACE3C,EAAAC,EAAAC,cAAA,OAAKE,UAAS,iBAAA6C,OAAmBD,IAC/BhD,EAAAC,EAAAC,cAAA,OAAKE,UAAS,eAAA6C,OAAiBJ,IAC7B7C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAe0C,GAC9B9C,EAAAC,EAAAC,cAAA,UAAQE,UAAU,iCAAiCI,QAAS,kBAAM1C,EAAKD,MAAMqF,YAC3ElD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,QAAQC,KAAK,SAGvCrD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACZ2C,YAtBOtC,IAAMC,oBCDpB4C,sBAEJ,SAAAA,EAAYzF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqF,IACjBxF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuF,GAAAlF,KAAAH,KAAMJ,KASR8E,KAAO,SAACY,GACNzF,EAAKS,SAAS,CACZiF,WAAW,EACXD,QAASA,GACR,WACDE,WAAW,WACT3F,EAAK4F,QACJ,SAjBY5F,EAqBnB4F,KAAO,WACL5F,EAAKS,SAAS,CACZiF,WAAW,EACXD,QAAS,MAtBXzF,EAAKkB,MAAQ,CACXwE,WAAW,EACXD,QAAS,IAGXD,EAAMK,UAAN5F,OAAA6F,EAAA,EAAA7F,QAAA6F,EAAA,EAAA7F,CAAAD,IAPiBA,wEAgCV,IAAAiB,EAIHd,KAAKe,MAFPwE,EAFKzE,EAELyE,UACAD,EAHKxE,EAGLwE,QAGIM,EAAcL,EAAY,gBAAkB,eAElD,OACExD,EAAAC,EAAAC,cAAA,OAAKE,UAAS,mBAAA6C,OAAqBY,IACjC7D,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKyF,MAAzC,KACA1D,EAAAC,EAAAC,cAAA,WACGqD,WA9CS9C,IAAMC,YAApB4C,EA8BGX,KAAO,SAACY,GACbD,EAAMK,UAAUhB,KAAKY,IAsBVD,QCYAQ,sBA7Db,SAAAA,EAAYjG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6F,IACjBhG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+F,GAAA1F,KAAAH,KAAMJ,KAWRQ,kBAAoB,SAACC,GAAU,IACrBI,EAASZ,EAAKD,MAAda,KACFC,EAAQL,EAAMG,OAAOE,MAC3Bb,EAAKD,MAAMyC,SAAS5B,EAAMC,IAfTb,EAkBnBiG,MAAQ,WAAM,IACJrF,EAASZ,EAAKD,MAAda,KACRZ,EAAKD,MAAMyC,SAAS5B,EAAM,KAlB1BZ,EAAKkB,MAAQ,GAFIlB,wEAuBV,IAAA4E,EAKHzE,KAAKJ,MAHPa,EAFKgE,EAELhE,KACAC,EAHK+D,EAGL/D,MACAqF,EAJKtB,EAILsB,WAGEC,EAAa,GAKjB,OAJID,IACFC,EAAWC,MAAQF,EAAa,MAIhChE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gCACbJ,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,SAASlC,MAAO,CAACiD,OAAQ,WAEjDnE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAMA,EACNC,MAAOA,EACPyF,YAAY,YACZ9D,SAAUrC,KAAKI,kBACf+B,UAAU,qBACVc,MAAO+C,KAGXjE,EAAAC,EAAAC,cAAA,UAAQE,UAAU,8CAA8CI,QAASvC,KAAK8F,OAC5E/D,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,QAAQC,KAAK,iBAvDrB5C,IAAMC,YC0UjB2D,cAlUb,SAAAA,EAAYxG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoG,IACjBvG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsG,GAAAjG,KAAAH,KAAMJ,KAmCRQ,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAtCnBb,EA0CnBwG,sBAAwB,SAAC5F,EAAMC,GAC7Bb,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAOC,KA5COb,EAuDnByG,KAAO,WAAM,IAAAxF,EAUPjB,EAAKkB,MARPwF,EAFSzF,EAETyF,mBACAC,EAHS1F,EAGT0F,GACAC,EAJS3F,EAIT2F,cACAC,EALS5F,EAKT4F,gBACA1F,EANSF,EAMTE,SACAC,EAPSH,EAOTG,SACAR,EARSK,EAQTL,KACAkG,EATS7F,EAST6F,KAGF,GAAKlG,EAAL,CAKA,IAAImG,EAAK,CACPH,cAAeA,EACfC,gBAAiBA,EACjB1F,SAAUA,EACVP,KAAMA,EACNkG,KAAMA,GAGG,OAAPH,GACFI,EAAGJ,GAAKA,EACJD,GAAsBtF,IACxB2F,EAAG3F,SAAWA,GAIhBE,IAAM0F,IAAI,qBAAsBD,GAC7BvF,KAAK,SAAAC,GACJzB,EAAKiH,iBACLjH,EAAKyD,qBAENyD,MAAM,SAAAtF,GACL4D,EAAMX,KAAK,qCAGfkC,EAAG3F,SAAWA,EAEdE,IAAMC,KAAK,qBAAsBwF,GAC9BvF,KAAK,SAAAC,GACJzB,EAAKiH,iBACLjH,EAAKyD,qBAENyD,MAAM,SAAAtF,GACL4D,EAAMX,KAAK,yCApCfW,EAAMX,KAAK,kBApEI7E,EA6GnB8G,KAAO,SAACH,GACNrF,IAAM8C,IAAN,2BAAAe,OAAqCwB,IAClCnF,KAAK,SAAAC,GACJ,IAAM0F,EAAS1F,EAAIE,KACnB6D,EAAMX,KAAKsC,MAjHEnH,EAqHnBoH,eAAiB,WACfpH,EAAKS,SAAST,EAAKqH,eAtHFrH,EAyHnBsH,cAAgB,SAACP,GACJ,OAAPA,EACF/G,EAAKS,SAAS,CACZiG,oBAAoB,EACpBC,GAAII,EAAGJ,GACPC,cAAeG,EAAGH,cAClBC,gBAAiBE,EAAGF,gBACpB1F,SAAU4F,EAAG5F,SACbC,SAAU2F,EAAG3F,SACbR,KAAMmG,EAAGnG,KACTkG,KAAMC,EAAGD,OAGX9G,EAAKoH,iBAGPpH,EAAKS,SAAS,CACZ8G,eAAe,KA1IAvH,EA8InBiH,eAAiB,WACfjH,EAAKS,SAAS,CACZ8G,eAAe,KAhJAvH,EAoJnBwH,cAAgB,WAAM,IAAAC,EAGhBzH,EAAKkB,MADPwG,sBAFkB,IAAAD,EAED,GAFCA,EAIpBnG,IAAMqG,OAAO,sBAAwBD,EAAef,IACjDnF,KAAK,SAAAC,GACJzB,EAAKyD,mBACLzD,EAAK4H,+BA3JQ5H,EA+JnB6H,yBAA2B,SAACC,GAC1B9H,EAAKS,SAAS,CACZiH,eAAgBI,EAChBC,0BAA0B,KAlKX/H,EAsKnB4H,0BAA4B,WAC1B5H,EAAKS,SAAS,CACZiH,eAAgB,GAChBK,0BAA0B,KAzKX/H,EA6KnBgI,qBAAuB,WACrBhI,EAAKS,SAAS,SAAAwH,GAAS,MAAK,CAC1BvB,oBAAqBuB,EAAUvB,uBA7KjC1G,EAAKkB,MAAQ,CACXgH,gBAAiB,GACjBX,eAAe,EACfQ,0BAA0B,EAC1BL,eAAgB,GAChBhB,oBAAoB,EACpByB,YAAa,GACbxB,GAAI,KACJ/F,KAAM,GACNgG,cAAe,GACfC,gBAAiB,GACjB1F,SAAU,GACVC,SAAU,GACV0F,KAAM,IAfS9G,mFAiCjBG,KAAKsD,4LAgByB2E,WAAxBF,SACN/H,KAAKM,SAAS,CACZyH,gBAAiBA,uIA6InB,IAbO,IAAAnG,EAAA5B,KAAAkI,EAQHlI,KAAKe,MANPwF,EAFK2B,EAEL3B,mBACAC,EAHK0B,EAGL1B,GAHK2B,EAAAD,EAILH,uBAJK,IAAAI,EAIa,GAJbA,EAKLH,EALKE,EAKLF,YACAJ,EANKM,EAMLN,yBANKQ,EAAAF,EAOLX,sBAPK,IAAAa,EAOY,GAPZA,EAUDC,EAAc,OAAP7B,EAAc,MAAQ,OAE7B8B,EAAsB,GAZrBC,EAAA,SAaEC,GACP,IAAM5B,EAAKmB,EAAgBS,GACrB/H,EAAOmG,EAAGnG,OACXuH,GAAgBA,GAAevH,EAAKgI,SAAST,KAChDM,EAAoBtF,KAEhBjB,EAAAC,EAAAC,cAAA,OAAKyG,IAAKF,EAAGrG,UAAU,uBACrBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2CACZ1B,GAEHsB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qCAAqCI,QAAS,kBAAMX,EAAKuF,cAAcP,KACvF7E,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,OAAOC,KAAK,QAEpCrD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qCAAqCI,QAAS,kBAAMX,EAAK8F,yBAAyBd,KAClG7E,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,YAAYC,KAAK,QAEzCrD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qCAAqCI,QAAS,kBAAMX,EAAK+E,KAAKC,EAAGJ,MACjFzE,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,OAAOC,KAAK,YAlBvCoD,EAAI,EAAGA,EAAIT,EAAgBjF,OAAQ0F,IAAKD,EAAxCC,GA2BT,OACEzG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAAA,OAAK0G,MAAM,OACT5G,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAac,MAAO,CAAC2F,YAAa,QAC/C7G,EAAAC,EAAAC,cAAC4G,EAAD,CACEpI,KAAM,cACNC,MAAOV,KAAKe,MAAMiH,YAClB3F,SAAUrC,KAAKqG,sBACfN,WAAY,OAGhBhE,EAAAC,EAAAC,cAAA,UAAQE,UAAU,oBAAoBI,QAAS,kBAAMX,EAAKuF,cAAc,QACtEpF,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,SADxB,SAIFpD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACZmG,GAGHvG,EAAAC,EAAAC,cAAC6G,EAAD,CACEpE,KAAM1E,KAAKe,MAAMqG,cACjBnC,QAASjF,KAAK8G,eACdlC,WAAY,oBACZC,MAAOwD,GAEPtG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,qBAAYF,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAhB,MACZJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMN,KAClB4B,SAAUrC,KAAKI,oBAGjB2B,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,YACE8G,KAAK,IACL3G,KAAK,OACL3B,KAAK,gBACLC,MAAOV,KAAKe,MAAM0F,cAClBpE,SAAUrC,KAAKI,oBAGjB2B,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,kBACLC,MAAOV,KAAKe,MAAM2F,gBAClBrE,SAAUrC,KAAKI,oBAGjB2B,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAMC,SAClBqB,SAAUrC,KAAKI,oBAGN,SAATiI,GACAtG,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAACiD,OAAQ,oBACnBnE,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAK6H,sBAAzC,qBAIQ,QAATQ,GAAkB9B,IACnBxE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAME,SAClBoB,SAAUrC,KAAKI,qBAKrB2B,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAM4F,KAClBtE,SAAUrC,KAAKI,oBAEjB2B,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcI,QAASvC,KAAKsG,MAA9C,UAIJvE,EAAAC,EAAAC,cAAC6G,EAAD,CACEpE,KAAMkD,EACN3C,QAASjF,KAAKyH,0BACd7C,WAAY,oBACZC,MAAO,oBACP9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,mCACmCoF,EAAe9G,KADlD,KAGAsB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKqH,eAAzC,iDAvSN,MAAO,CACLd,oBAAoB,EACpBC,GAAI,KACJ/F,KAAM,GACNgG,cAAe,GACfC,gBAAiB,GACjB1F,SAAU,GACVC,SAAU,GACV0F,KAAM,WA9BalE,aCRZuG,UAAQ,SACRC,EAAS,SACTC,EAAe,CAACF,EAAOC,GAEvBE,EAAS,SACTC,EAAc,SACdC,EAAe,CAACF,EAAQC,GAExBE,EAAM,MACNC,EAAQ,QACRC,EAAc,CAACD,EAAOD,GAItBG,EAAiB,QAEjBC,EAAkB,SAElBC,EAA2B,8BCyDzBC,cAzEb,SAAAA,EAAYhK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4J,IACjB/J,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8J,GAAAzJ,KAAAH,KAAMJ,KAMRiK,YAAc,WACZhK,EAAKS,SAAS,SAAAwH,GAAS,MAAK,CAC1BgC,aAAchC,EAAUgC,gBATTjK,EAanBkK,YAAc,WACZlK,EAAKS,SAAS,CACZwJ,aAAa,KAfEjK,EAmBnBmK,aAAe,SAACC,GAAU,IAChBxJ,EAASZ,EAAKD,MAAda,KACFyJ,EAAMD,EAAMC,IACZC,EAAI,QAAAnF,OAAWkF,EAAIE,EAAf,MAAApF,OAAqBkF,EAAIG,EAAzB,MAAArF,OAA+BkF,EAAII,EAAnC,MAAAtF,OAAyCkF,EAAIlI,EAA7C,KACVnC,EAAKD,MAAMyC,SAAS5B,EAAM0J,IArB1BtK,EAAKkB,MAAQ,CACX+I,aAAa,GAHEjK,wEA4BjB,IAAMoK,EAAQ,CACZhE,MAAO,OACPsE,OAAQ,OACRC,aAAc,MACdC,WAAYzK,KAAKJ,MAAMc,OAyBzB,OACEqB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKgB,MAxBM,CACbyH,QAAS,MACTD,WAAY,OACZD,aAAc,MACdG,UAAW,2BACXC,QAAS,eACTC,OAAQ,WAkBctI,QAASvC,KAAK6J,aAChC9H,EAAAC,EAAAC,cAAA,OAAKgB,MAAOgH,KAEZjK,KAAKe,MAAM+I,aACX/H,EAAAC,EAAAC,cAAA,OAAKgB,MAnBK,CACd6H,SAAU,WACVC,OAAQ,IAkBFhJ,EAAAC,EAAAC,cAAA,OAAKgB,MAfC,CACZ6H,SAAU,QACVE,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRC,KAAM,OAUmB5I,QAASvC,KAAK+J,cACjChI,EAAAC,EAAAC,cAACmJ,EAAA,aAAD,CAAcnB,MAAOjK,KAAKJ,MAAMc,MAAO2B,SAAUrC,KAAKgK,wBAnExCxH,IAAMC,WCuCjB4I,uBAtCb,SAAAA,EAAYzL,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqL,IACjBxL,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuL,GAAAlL,KAAAH,KAAMJ,KAKR0L,OAAS,WAAM,IAAA7G,EAIT5E,EAAKD,MAFPa,EAFWgE,EAEXhE,KACA8K,EAHW9G,EAGX8G,QAGF1L,EAAKD,MAAMyC,SAAS5B,GAAO8K,IAV3B1L,EAAKkB,MAAQ,GAFIlB,wEAeV,IAAA2L,EAIHxL,KAAKJ,MAFPc,EAFK8K,EAEL9K,MAKI+K,EAAoB,CACxBC,gBARKF,EAGLD,QAGoC,UAAY,WAKlD,OACExJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBAAqBI,QAASvC,KAAKsL,QAChDvJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBAAyBc,MAAOwI,KAGjD1J,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAkBzB,WAjClB8B,IAAMC,iCCEhBkJ,GAAc,SAACC,GAC1B,IAAIC,EACJ,IACEA,EAAQC,KAAKC,MAAMH,GACnB,MAAMI,GACNH,EAAQ,GAEV,OAAOA,GCVHI,GAAe,CACnB,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,WA2BjCC,GAAe,SAACC,EAAiBC,EAAQC,GAGpD,IAFA,IAAIC,EAAS,GACTC,EAAS,GACJ/D,EAAI,EAAGA,EAAI2D,EAAgBrJ,OAAQ0F,IAAK,CAC/C,IAAMgE,EAAML,EAAgB3D,GAC5B8D,EAAOtJ,KAAKwJ,EAAIJ,IAChBG,EAAOvJ,KAAK,CACVvC,KAAM+L,EAAIJ,GACV1L,MAAO8L,EAAIH,KAGf,OAnCkC,SAACC,EAAQC,GAC3C,MAAO,CACLtC,MAAOgC,GACPQ,QAAS,GAETH,OAAQ,CACNlK,KAAM,SACNsK,OAAQ,WACRlL,KAAM8K,EACNrB,MAAO,GACPD,IAAK,GACLE,OAAQ,IAEVqB,OAAQ,CACN,CACEnK,KAAK,MACLuK,OAAQ,CAAC,MAAO,OAChBC,OAAQ,MACRpL,KAAM+K,KAiBLM,CAAqBP,EAAQC,ICxChCO,GAAgB,EAkHPC,eA9Gb,SAAAA,EAAYnN,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+M,IACjBlN,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiN,GAAA5M,KAAAH,KAAMJ,KAiBRoN,YAAc,SAAC3M,GACbA,EAAM4M,iBACN,IACMC,EADWC,IAASC,YAATtN,OAAA6F,EAAA,EAAA7F,QAAA6F,EAAA,EAAA7F,CAAAD,KACawN,WACxBC,EAAUjN,EAAMkN,QAAUL,EAAaM,WACvCC,EAAUpN,EAAMqN,QAAUR,EAAaS,UAUrCC,EAAkBV,EAAlBU,cACRA,EAAcC,iBAAiB,UAAWhO,EAAKiO,WAC/CF,EAAcC,iBAAiB,YAAahO,EAAKkO,aACjDlO,EAAKS,SAAS,CACZgN,QAASA,EACTG,QAASA,IAGX5N,EAAKD,MAAMoN,YAAY,SAzCNnN,EA4CnBiO,UAAY,SAACzN,GACXA,EAAM4M,iBACN,IAAMe,EAAWb,IAASC,YAATtN,OAAA6F,EAAA,EAAA7F,QAAA6F,EAAA,EAAA7F,CAAAD,KACjB,GAAImO,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAapO,EAAKmN,aACpDY,EAAcK,oBAAoB,UAAWpO,EAAKiO,WAClDF,EAAcK,oBAAoB,YAAapO,EAAKkO,aAEtDlO,EAAKD,MAAMkO,aArDMjO,EAwDnBkO,YAAc,SAAC1N,GAEb,GADAA,EAAM4M,iBACkB,SAApBpN,EAAKD,MAAMyI,KAAf,CAIA,IAAI6F,EAAW,EACXrO,EAAKD,MAAMuO,aACbD,EAAW,GAGb,IACMhB,EADWC,IAASC,YAATtN,OAAA6F,EAAA,EAAA7F,QAAA6F,EAAA,EAAA7F,CAAAD,KACawN,WAC1Be,EAAW/N,EAAMkN,QAAU1N,EAAKkB,MAAMuM,QACtCe,EAAWhO,EAAMqN,QAAU7N,EAAKkB,MAAM0M,QAEpCa,EAAgBpB,EAAaG,WAC7BkB,EAAiBD,EAAcE,YAC/BC,EAAkBH,EAAcI,aAElCC,EAAWC,SAAS1B,EAAajK,MAAMgD,MAAO,IAAsB,EAAhB6G,GACpD+B,EAAYD,SAAS1B,EAAajK,MAAMsH,OAAQ,IAAsB,EAAhBuC,GAEtDsB,EAAW,IACbA,EAAW,GAETC,EAAW,IACbA,EAAW,GAETD,EAAWO,EAAWJ,IACxBH,EAAWG,EAAiBI,GAE1BN,EAAWQ,EAAYJ,IACzBJ,EAAWI,EAAkBI,GAG/BT,EAAWU,KAAKC,MAAMX,EAAWF,GAAYA,EAC7CG,EAAWS,KAAKC,MAAMV,EAAWH,GAAYA,EAE7ChB,EAAajK,MAAMkI,KAAOiD,EAAW,KACrClB,EAAajK,MAAM+H,IAAMqD,EAAW,OA9FpCxO,EAAKkB,MAAQ,CACXuM,QAAS,EACTG,QAAS,GAJM5N,sFASjB,IAAMmO,EAAWb,IAASC,YAAYpN,MACtC,GAAIgO,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAajO,KAAKgN,aACpDY,EAAcK,oBAAoB,UAAWjO,KAAK8N,WAClDF,EAAcK,oBAAoB,YAAajO,KAAK+N,+CAsFtD,OACEhM,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACb6K,YAAahN,KAAKgN,YAClBc,UAAW9N,KAAK8N,WAChB/L,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,oBAAoB6J,YAAU,YA1GhCxM,IAAMC,WCF5BwM,GAAY,GACZC,GAAa,GACbpC,GAAgB,EAiHPqC,eA5Gb,SAAAA,EAAYvP,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmP,IACjBtP,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqP,GAAAhP,KAAAH,KAAMJ,KAiBRoN,YAAc,SAAC3M,GACbA,EAAM4M,iBACN,IAAMe,EAAWb,IAASC,YAATtN,OAAA6F,EAAA,EAAA7F,QAAA6F,EAAA,EAAA7F,CAAAD,KACXuO,EAAW/N,EAAMkN,QACjBc,EAAWhO,EAAMqN,QAEfE,EAAkBI,EAAlBJ,cACRA,EAAcC,iBAAiB,UAAWhO,EAAKiO,WAC/CF,EAAcC,iBAAiB,YAAahO,EAAKkO,aACjDlO,EAAKS,SAAS,CACZ8N,SAAUA,EACVC,SAAUA,IAGZxO,EAAKD,MAAMoN,YAAY,WAhCNnN,EAmCnBiO,UAAY,SAACzN,GACXA,EAAM4M,iBACN,IAAMe,EAAWb,IAASC,YAATtN,OAAA6F,EAAA,EAAA7F,QAAA6F,EAAA,EAAA7F,CAAAD,KACjB,GAAImO,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAapO,EAAKmN,aACpDY,EAAcK,oBAAoB,UAAWpO,EAAKiO,WAClDF,EAAcK,oBAAoB,YAAapO,EAAKkO,aAEtDlO,EAAKD,MAAMkO,aA5CMjO,EA+CnBkO,YAAc,SAAC1N,GAEb,GADAA,EAAM4M,iBACkB,WAApBpN,EAAKD,MAAMyI,KAAf,CAIA,IAAIiF,EAAUjN,EAAMkN,QAAU1N,EAAKkB,MAAMqN,SACrCX,EAAUpN,EAAMqN,QAAU7N,EAAKkB,MAAMsN,SAGnCnB,EADWC,IAASC,YAATtN,OAAA6F,EAAA,EAAA7F,QAAA6F,EAAA,EAAA7F,CAAAD,KACawN,WACxB+B,EAAYR,SAAS1B,EAAajK,MAAMgD,MAAO,IAC/CoJ,EAAaT,SAAS1B,EAAajK,MAAMsH,OAAQ,IAEjD+D,EAAgBpB,EAAaG,WAC7BkB,EAAiBD,EAAcE,YAC/BC,EAAkBH,EAAcI,aAElCY,EAAWR,KAAKC,MAAMK,EAAY9B,GAClCiC,EAAYT,KAAKC,MAAMM,EAAa5B,GAEpC6B,EAAWL,KACbK,EAAWL,IAGTM,EAAYL,KACdK,EAAYL,IAGd,IAAM/D,EAAO+B,EAAaM,WAA6B,EAAhBV,GACjC9B,EAAMkC,EAAaS,UAA4B,EAAhBb,GAEjCwC,EAAYnE,EAAOoD,IACrBe,EAAWf,EAAiBpD,GAG1BoE,EAAYvE,EAAMyD,IACpBc,EAAYd,EAAkBzD,GAGhCkC,EAAajK,MAAMgD,MAAQqJ,EAAW,KACtCpC,EAAajK,MAAMsH,OAASgF,EAAY,KAExC1P,EAAKS,SAAS,CACZ8N,SAAU/N,EAAMkN,QAChBc,SAAUhO,EAAMqN,YA1FlB7N,EAAKkB,MAAQ,CACXqN,SAAU,EACVC,SAAU,GAJKxO,sFASjB,IAAMmO,EAAWb,IAASC,YAAYpN,MACtC,GAAIgO,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAajO,KAAKgN,aACpDY,EAAcK,oBAAoB,UAAWjO,KAAK8N,WAClDF,EAAcK,oBAAoB,YAAajO,KAAK+N,+CAmFtD,OACEhM,EAAAC,EAAAC,cAAA,OACEE,UAAU,iBACV6K,YAAahN,KAAKgN,YAClBc,UAAW9N,KAAK8N,WAChB/L,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,WAAW6J,YAAU,YAxGvBxM,IAAMC,qBC2DnB+M,8BA7Db,SAAAA,EAAY5P,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwP,IACjB3P,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0P,GAAArP,KAAAH,KAAMJ,KAKR6P,SAAW,SAACC,GACV7P,EAAKD,MAAM+P,eAAeD,IAL1B7P,EAAKkB,MAAQ,GAFIlB,wEAUV,IAAA+B,EAAA5B,KAAAyE,EAMHzE,KAAKJ,MANFgQ,EAAAnL,EAELjD,YAFK,IAAAoO,EAEE,GAFFA,EAAAC,EAAApL,EAGLqL,eAHK,IAAAD,EAGK,GAHLA,EAAAE,EAAAtL,EAILuL,oBAJK,IAAAD,EAIU,GAJVA,EAKLtO,EALKgD,EAKLhD,MAGIwO,EAAgB,GAuBtB,OAtBAH,EAAQI,QAAQ,SAAAC,GACd,IAAMC,EAAaD,EAAO1P,KACpB4P,EAAS,CACbC,OAAQF,EACRG,SAAUH,GAEZ,GAAIJ,EAAalN,OAAS,EAAG,CAC3B,IAAM0N,EAAQR,EAAaS,UAAU,SAAAC,GAAC,OAAIA,EAAEN,aAAeA,IAC3D,IAAe,IAAXI,EAAc,CAChB,IAAMG,EAAcX,EAAaQ,GAAOG,YACxCN,EAAOO,KAAQ,SAAAhR,GAAK,OAClBmC,EAAAC,EAAAC,cAAA,QAAME,UAAU,aACdI,QAAS,kBAAMX,EAAK6N,SAAL,wBAAAzK,OAAsC2L,EAAtC,KAAA3L,OAAqDoL,EAArD,KAAApL,OAAmEpF,EAAMc,UACvFd,EAAMc,SAMfuP,EAAcjN,KAAKqN,KAGjB5O,EAEAM,EAAAC,EAAAC,cAAA,WACGR,GAMLM,EAAAC,EAAAC,cAAC4O,GAAA,EAAD,CACErP,KAAMA,EACNsO,QAASG,EACTa,gBAAiB,GACjBC,aAAc,OACdC,SAAU,gBAzDQxO,IAAMC,YC6FjBwO,uBA3Fb,SAAAA,EAAYrR,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiR,IACjBpR,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmR,GAAA9Q,KAAAH,KAAMJ,KAYRsR,gBAAkB,WAGhB,IAFA,IAAMC,GAAkBtR,EAAKkB,MAAMqQ,YAC7BC,EAAavR,OAAAwR,EAAA,EAAAxR,CAAOD,EAAKD,MAAM2R,YAC5B/I,EAAI,EAAGA,EAAI6I,EAAcvO,OAAQ0F,IACxC6I,EAAc7I,GAAGgJ,UAAYL,EAG/BtR,EAAKS,SAAS,SAAAwH,GAAS,MAAK,CAC1BsJ,aAActJ,EAAUsJ,eAG1BvR,EAAKD,MAAMyC,SAASxC,EAAKD,MAAM4G,GAAI6K,IAxBlBxR,EA2BnB4R,wBAA0B,SAACpR,GACzB,IAAM2H,EAAc3H,EAAMG,OAAOE,MACjCb,EAAKS,SAAS,CACZ0H,YAAaA,KA9BEnI,EAkCnB6R,qBAAuB,SAACjR,EAAM+Q,GAC5B,IAAMH,EAAavR,OAAAwR,EAAA,EAAAxR,CAAOD,EAAKD,MAAM2R,YAC/Bf,EAAQa,EAAcZ,UAAU,SAAAkB,GAAC,OAAIA,EAAEjR,QAAUD,IACvD4Q,EAAcb,GAAOgB,UAAYA,EACjC3R,EAAKD,MAAMyC,SAASxC,EAAKD,MAAM4G,GAAI6K,IApCnCxR,EAAKkB,MAAQ,CACXqQ,aAAa,EACbpJ,YAAa,IAJEnI,wEAoDjB,IAXO,IAAA+R,EAGH5R,KAAKJ,MADP2R,kBAFK,IAAAK,EAEQ,GAFRA,EAAA9Q,EAQHd,KAAKe,MAFPiH,EANKlH,EAMLkH,YACAoJ,EAPKtQ,EAOLsQ,YAGIS,EAAgB,GACbrJ,EAAI,EAAGA,EAAI+I,EAAWzO,OAAQ0F,IAAK,CAC1C,IAAMsJ,EAAWP,EAAW/I,GACtB9H,EAAQoR,EAASpR,QAClBsH,GAAgBA,GAAetH,EAAM+H,SAAST,KACjD6J,EAAc7O,KAEVjB,EAAAC,EAAAC,cAAC8P,GAAD,CACErJ,IAAKF,EACL/H,KAAMqR,EAASpR,MACfA,MAAOoR,EAASpR,MAChB6K,QAASuG,EAASN,UAClBnP,SAAUrC,KAAK0R,wBAOzB,IAAMM,EAAaZ,EAAc,eAAiB,aAElD,OACErP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASc,MAAO,CAACI,aAAc,OAAQd,QAASvC,KAAKkR,iBAAkBc,GACzFjQ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMiH,YAClB3F,SAAUrC,KAAKyR,wBACftL,YAAY,cAGdpE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZ0P,WAtFUrP,IAAMC,YCUrBwP,eAEJ,SAAAA,EAAYrS,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiS,IACjBpS,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmS,GAAA9R,KAAAH,KAAMJ,KAgBRoN,YAAc,SAAC3E,GACb6J,QAAQC,IAAI,uBAAwB9J,GACpCxI,EAAKS,SAAS,CACZ+H,KAAMA,KApBSxI,EAwBnBiO,UAAY,WACVjO,EAAKS,SAAS,CACZ+H,KAAM,KAGR,IAAM2F,EAAWb,IAASC,YAATtN,OAAA6F,EAAA,EAAA7F,QAAA6F,EAAA,EAAA7F,CAAAD,KACX8R,EAAI3D,EAASR,WACb4E,EAAIpE,EAASL,UACb1H,EAAQ2I,SAASZ,EAAS/K,MAAMgD,MAAO,IACvCsE,EAASqE,SAASZ,EAAS/K,MAAMsH,OAAQ,IAGzC8H,EAAS,CACb7L,GAHe3G,EAAKD,MAAM4G,GAI1BmL,EAAGA,EACHS,EAAGA,EACHnM,MAAOA,EACPsE,OAAQA,GAGV1K,EAAKD,MAAM0S,aAAaD,IA5CPxS,EA+CnBkO,YAAc,SAAC1N,EAAOgI,EAAMtH,GAC1BV,EAAM4M,kBAhDWpN,EAmDnB0S,WAAa,SAACC,GACZ3S,EAAKD,MAAM6S,aAAaD,IApDP3S,EAuDnB6S,UAAY,SAACF,KAvDM3S,EA2DnB8S,WAAa,SAACH,KA3DK3S,EA+DnB+S,aAAe,SAACJ,GACd3S,EAAKD,MAAMiT,eAAeL,IAhET3S,EAmEnBiT,qBAAuB,SAAC/R,EAAOgS,EAAS5C,EAAQ6C,GAC9C,MAAO,CACLzQ,QAAS,SAACyJ,EAAGiH,GACXf,QAAQC,IAAI,6BACZD,QAAQC,IAAI,0BAA2BnG,GACvCkG,QAAQC,IAAI,yBAA0BhC,GACtC+B,QAAQC,IAAI,sBAAuBY,GACnCb,QAAQC,IAAI,iCAAkCa,GAE9C,IAAM3C,EAASF,EAAOG,OAEhB5P,EADMqS,EAAQvG,IACF6D,GACZ6C,EAASF,EAASpT,MAAMuT,oBAAsB,GACpDjB,QAAQC,IAAI,uBAAwB9B,EAAQ3P,EAAOwS,GACnD,IAAM1C,EAAQ0C,EAAOzC,UAAU,SAAAC,GAAC,OAAIA,EAAEN,aAAeC,IACrD,IAAe,IAAXG,EAAc,CAChB,IAAMG,EAAcuC,EAAO1C,GAAOG,YAClC9Q,EAAKD,MAAMmD,QAAQC,KAAnB,wBAAAgC,OAAgD2L,EAAhD,KAAA3L,OAA+DqL,EAA/D,KAAArL,OAAyEtE,QApF9Db,EA0FnBuT,aAAe,SAACC,EAAOC,GACrBpB,QAAQC,IAAI,eAAgBkB,EAAOC,IA3FlBzT,EA8FnB0T,2BAA6B,SAACF,EAAOG,GACnCtB,QAAQC,IAAI,6BAA8BkB,EAAOG,IA/FhC3T,EAkGnB8P,eAAiB,SAACD,GAChB7P,EAAKD,MAAMmD,QAAQC,KAAK0M,IAnGP7P,EAsGnB4T,eAAiB,SAACjB,EAAUjB,GAC1B,IAAM/P,EAAO,CACX+P,WAAYA,GAEd1R,EAAKD,MAAM8T,0BAA0BlB,EAAUhR,IA1G9B3B,EA6GnB8T,oBAAsB,SAACnB,EAAUnS,GAC/B,IACMmB,EAAO,CACXd,MAFYL,EAAMG,OAAOE,OAI3Bb,EAAKD,MAAM8T,0BAA0BlB,EAAUhR,IAlH9B3B,EAqHnB+T,oBAAsB,WACpB,IAAMC,EAAgB,CACpBC,MAASjU,EAAKuT,aACdW,oBAAuBlU,EAAK0T,4BAHJ9O,EAgBtB5E,EAAKD,MATP4G,EAPwB/B,EAOxB+B,GACApE,EARwBqC,EAQxBrC,KACA4R,EATwBvP,EASxBuP,UACAC,EAVwBxP,EAUxBwP,WAVwBC,EAAAzP,EAWxB0P,mBAXwB,IAAAD,EAWV,GAXUA,EAYxBlE,EAZwBvL,EAYxBuL,aAZwBJ,EAAAnL,EAaxBjD,YAbwB,IAAAoO,EAajB,GAbiBA,EAcxB2B,EAdwB9M,EAcxB8M,WACA7Q,EAfwB+D,EAexB/D,MAGIyL,EAAkBiI,GAAiBD,EAAY3S,MAC/CsO,EAAUqE,EAAYrE,SAAW,GACjCrO,EAAQ0S,EAAY1S,MAEtB4S,EAActS,EAAAC,EAAAC,cAAA,YAClB,GAAIG,IAASkS,GACX,GAAIN,IAAcM,EAChBD,EACEtS,EAAAC,EAAAC,cAACsS,GAAD,CACE/S,KAAM2K,EACN2D,QAASA,EACTrO,MAAOA,EACPuO,aAAcA,EACdL,eAAgB9P,EAAK8P,sBAGpB,GAAIqE,IAAcM,EAAe,KAEpClI,EAEE5K,EAFF4K,OACAC,EACE7K,EADF6K,SAEImI,EAAcC,GAAwBtI,EAAiBC,EAAQC,GACrEgI,EACEtS,EAAAC,EAAAC,cAACyS,GAAA1S,EAAD,CACE2S,OAAQH,EACRrS,UAAU,UACVyS,SAAUf,UAIPzR,IAASkS,IACdL,IAAeK,EACjBD,EACEtS,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAAC4S,GAAD,CACErO,GAAIA,EACJ+K,WAAYA,EACZlP,SAAUxC,EAAK4T,kBAIZQ,IAAeK,IACxBD,EACEtS,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL1B,MAAOA,EACP2B,SAAU,SAAChC,GAAD,OAAWR,EAAK8T,oBAAoBnN,EAAInG,SAO5D,OAAOgU,GA3LPxU,EAAKkB,MAAQ,CACXsH,KAAM,IAHSxI,sFAQjB,IAAMmO,EAAWb,IAASC,YAAYpN,MACtC,GAAIgO,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAajO,KAAKgN,aACpDY,EAAcK,oBAAoB,UAAWjO,KAAK8N,WAClDF,EAAcK,oBAAoB,YAAajO,KAAK+N,+CAmL/C,IAAAnM,EAAA5B,KAAAwL,EAMHxL,KAAKJ,MAJP4G,EAFKgF,EAELhF,GACA3B,EAHK2G,EAGL3G,MACAiQ,EAJKtJ,EAILsJ,WAJKC,EAAAvJ,EAKLvI,aALK,IAAA8R,EAKG,GALHA,EAAAC,EAcH/R,EALFgS,kBATK,IAAAD,KAWLE,GAGEjS,EAJFkS,UAIElS,EAHFiS,aAEAnK,GACE9H,EAFFyI,gBAEEzI,EADF8H,QAGIqK,EAAcH,EAAU,aAAAjQ,OAAgBkQ,GAAgB,wBAE1DG,EAAe,CACjBlK,KAAMnL,KAAKJ,MAAM+R,EAAI,KACrB3G,IAAKhL,KAAKJ,MAAMwS,EAAI,KACpBnM,MAAOjG,KAAKJ,MAAMqG,MAAQ,KAC1BsE,OAAQvK,KAAKJ,MAAM2K,OAAS,KAC5BQ,OAAQA,EACRuK,OAAQF,GAiBV,OAdAlD,QAAQC,IAAIkD,GAeVtT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWc,MAAOoS,GAC/BtT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4CAA4C0C,GAEzDiQ,GACA/S,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcc,MAAO,CAAC2F,YAAa,SAChD7G,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6BAA6BI,QAAS,kBAAMX,EAAK2Q,WAAW/L,KACzEzE,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,OAAO6J,YAAU,KAEzCjN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6BAA6BI,QAAS,kBAAMX,EAAKgR,aAAapM,KAC3EzE,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,YAAY6J,YAAU,OAOpDjN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACZnC,KAAK4T,uBAGNkB,GACA/S,EAAAC,EAAAC,cAACsT,GAAD,CACEzH,UAAW9N,KAAK8N,UAChBd,YAAahN,KAAKgN,YAClBe,YAAa/N,KAAK+N,YAClB1F,KAAMrI,KAAKe,MAAMsH,KACjB8F,WAAYnO,KAAKJ,MAAMuO,aAIzB2G,GACA/S,EAAAC,EAAAC,cAACuT,GAAD,CACE1H,UAAW9N,KAAK8N,UAChBd,YAAahN,KAAKgN,YAClBe,YAAa/N,KAAK+N,YAClB1F,KAAMrI,KAAKe,MAAMsH,eAhRN7F,IAAMC,WAyRdC,eAAWuP,IC/OXwD,uBAlDb,SAAAA,EAAY7V,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyV,IACjB5V,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2V,GAAAtV,KAAAH,KAAMJ,KACDmB,MAAQ,GAFIlB,wEAMV,IAAA+B,EAAA5B,KAAAyE,EAOHzE,KAAKJ,MALPqG,EAFKxB,EAELwB,MACAsE,EAHK9F,EAGL8F,OACAmB,EAJKjH,EAILiH,gBAJKgK,EAAAjR,EAKLkR,eALK,IAAAD,EAKK,GALLA,EASHzS,EAAQ,CACVgD,MAAOA,EAAQ,KACfsE,OAAQA,EAAS,KACjBmB,gBAAiBA,GAZZjH,EAMLmR,gBAUA3S,EAAM4S,eAAiB,YACvB5S,EAAM6S,gBAAkB,0DAG1B,IAAMC,EAAWJ,EAAQK,IAAI,SAAC3D,EAAQ7B,GAAT,OAC3BzO,EAAAC,EAAAC,cAACgU,GAADnW,OAAAoW,OAAA,CACExN,IAAK8H,EACLrC,WAAYvM,EAAKhC,MAAMuO,WACvB2G,WAAYlT,EAAKhC,MAAMkV,YACnBzC,EAJN,CAKEC,aAAc1Q,EAAKhC,MAAM0S,aACzBG,aAAc7Q,EAAKhC,MAAM6S,aACzBI,eAAgBjR,EAAKhC,MAAMiT,eAC3Ba,0BAA2B9R,EAAKhC,MAAM8T,+BAK1C,OACE3R,EAAAC,EAAAC,cAAA,OACEE,UAAU,cACVc,MAAOA,GACN8S,UA9CgBvT,IAAMC,YCQzB0T,GAAa,KA4VJC,eAxVb,SAAAA,EAAYxW,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoW,IACjBvW,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsW,GAAAjW,KAAAH,KAAMJ,KAcRyW,WAAa,SAACC,GAAc,IAClBX,EAAY9V,EAAKkB,MAAjB4U,QACFY,EAAUzW,OAAAwR,EAAA,EAAAxR,CAAO6V,GAEjBa,EAAYF,EAAY,GAC9BzW,EAAK4W,sBAAsBF,EAAYC,GACvC3W,EAAKS,SAAS,CACZqV,QAASY,EACTC,UAAWA,KAvBI3W,EA2BnB6W,oBAAsB,SAACf,EAASa,GAC9B,IAAK,IAAIhO,EAAI,EAAGA,EAAImN,EAAQ7S,OAAQ0F,IAAK,CACvC,IAAMmO,EAAQ9W,EAAK+W,YAAYjB,EAAQnN,GAAGmJ,EAAG6E,GACvCK,EAAYhX,EAAK+W,YAAYjB,EAAQnN,GAAGvC,MAAOuQ,GACrDb,EAAQnN,GAAGmJ,EAAIgF,EACfhB,EAAQnN,GAAGvC,MAAQ4Q,IAhCJhX,EAoCnB4W,sBAAwB,SAACd,EAASa,GAChC,IAAK,IAAIhO,EAAI,EAAGA,EAAImN,EAAQ7S,OAAQ0F,IAAK,CACvC,IAAMsO,EAAUjX,EAAKkX,cAAcpB,EAAQnN,GAAGmJ,EAAG6E,GAC3CQ,EAAenX,EAAKkX,cAAcpB,EAAQnN,GAAGvC,MAAOuQ,GAC1Db,EAAQnN,GAAGmJ,EAAImF,EACfnB,EAAQnN,GAAGvC,MAAQ+Q,IAzCJnX,EA6CnBkX,cAAgB,SAACE,EAAKT,GACpB,OAAO1H,KAAKoI,MAAMD,EAAMT,EAAYL,KA9CnBtW,EAiDnB+W,YAAc,SAACK,EAAKT,GAClB,OAAO1H,KAAKoI,MAAMD,EAAMd,GAAaK,IAlDpB3W,EAqDnBsX,aAAe,SAACxG,EAAa2F,GACP,OAAhB3F,GAGJxP,IAAM8C,IAAN,wBAAAe,OAAkC2L,IAC/BtP,KAAK,SAAAC,GACJ,IAAM0F,EAAS1F,EAAIE,KACnB3B,EAAKS,SAAS,CACZqV,QAAS3O,GACR,WACDnH,EAAKwW,WAAWC,GAChBzW,EAAKuX,eACLvX,EAAKwX,mBAjEMxX,EA6JnB6R,qBAAuB,SAACjR,EAAM+Q,GAC5B3R,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAO+Q,KA/JO3R,EAmKnByX,YAAc,WACZ,IAAMf,EAAazK,KAAKC,MAAMD,KAAKyL,UAAU1X,EAAKkB,MAAM4U,UAChDa,EAAc3W,EAAKkB,MAAnByV,UACR3W,EAAK6W,oBAAoBH,EAAYC,GACrCrV,IAAMC,KAAK,sBAAuBmV,GAC/BlV,KAAK,SAAAC,OAxKSzB,EA4KnByS,aAAe,SAACD,GAAW,IACjBsD,EAAY9V,EAAKkB,MAAjB4U,QACFnF,EAAQmF,EAAQlF,UAAU,SAAA+G,GAAC,OAAIA,EAAEhR,KAAO6L,EAAO7L,KAC/C+P,EAAUzW,OAAAwR,EAAA,EAAAxR,CAAO6V,GACvBY,EAAW/F,GAAOmB,EAAIU,EAAOV,EAC7B4E,EAAW/F,GAAO4B,EAAIC,EAAOD,EAC7BmE,EAAW/F,GAAOvK,MAAQoM,EAAOpM,MACjCsQ,EAAW/F,GAAOjG,OAAS8H,EAAO9H,OAClC1K,EAAKS,SAAS,CACZqV,QAASY,GACR,WAED1W,EAAKyX,iBAxLUzX,EA4LnBwH,cAAgB,WAAM,IAIdmL,EADF3S,EAAKkB,MADPwG,eAGFpG,IAAMqG,OAAN,cAAAxC,OAA2BwN,IACxBnR,KAAK,SAAAC,GAAO,IACHqU,EAAY9V,EAAKkB,MAAjB4U,QACFnF,EAAQmF,EAAQlF,UAAU,SAAA+G,GAAC,OAAIA,EAAEhR,KAAOgM,IACxC+D,EAAUzW,OAAAwR,EAAA,EAAAxR,CAAO6V,GACvBY,EAAWkB,OAAOjH,EAAO,GACzB3Q,EAAKS,SAAS,CACZqV,QAASY,IAEX1W,EAAK4H,+BA1MQ5H,EA8MnB6H,yBAA2B,SAAC8K,GAC1B3S,EAAKS,SAAS,CACZiH,eAAgBiL,EAChB5K,0BAA0B,KAjNX/H,EAqNnB4H,0BAA4B,WAC1B5H,EAAKS,SAAS,CACZiH,eAAgB,GAChBK,0BAA0B,KAxNX/H,EA4NnB6T,0BAA4B,SAAClB,EAAUhR,GAAS,IAAAkW,EAG1C7X,EAAKkB,MADP4U,eAF4C,IAAA+B,EAElC,GAFkCA,EAIxClH,EAAQmF,EAAQlF,UAAU,SAAA+G,GAAC,OAAIA,EAAEhR,KAAOgM,IACxC+D,EAAUzW,OAAAwR,EAAA,EAAAxR,CAAO6V,GACjBtD,EAASsD,EAAQnF,GACvB,GAAI6B,EAAO4B,aAAeK,EAAkB,KAExC/C,EACE/P,EADF+P,WAEFgF,EAAW/F,GAAOe,WAAaA,OAC1B,GAAIc,EAAO4B,aAAeK,EAAwB,KAErD5T,EACEc,EADFd,MAEF6V,EAAW/F,GAAO9P,MAAQA,EAG5Bb,EAAKS,SAAS,CACZqV,QAASY,KAhPM1W,EAuPnB8X,gBAAkB,WAKhB,IALsB,IAAAC,EAGlB/X,EAAKkB,MADP4U,eAFoB,IAAAiC,EAEV,GAFUA,EAIhBC,EAAe,GACZrP,EAAI,EAAGA,EAAImN,EAAQ7S,OAAQ0F,IAAK,CACvC,IAAM6J,EAASsD,EAAQnN,GACvB,GAAI6J,EAAOjQ,OAASkS,EAAkB,KAC5BL,EAAe5B,EAAf4B,WACF6D,EAAc,GACpB,GAAI7D,IAAeK,EAAkB,CAKnC,IALmC,IAAAyD,EAG/B1F,EADFd,kBAFiC,IAAAwG,EAEpB,GAFoBA,EAI7BC,EAAc,GACXC,EAAI,EAAGA,EAAI1G,EAAWzO,OAAQmV,IAAK,CAC1C,IAAMnG,EAAWP,EAAW0G,GACxBnG,EAASN,WACXwG,EAAYhV,KAAK8O,EAASpR,OAG9BoX,EAAYpX,MAAQsX,EAChBA,EAAYlV,SAAWyO,EAAWzO,SACpCgV,EAAYI,OAAS,mBAEdjE,IAAeK,IACxBwD,EAAYpX,MAAQ2R,EAAO3R,OAE7BoX,EAAYzE,MAAQhB,EAAO7Q,KAAK2W,eAChCL,EAAY1V,KAAOiQ,EAAO4B,WAC1B4D,EAAa7U,KAAK8U,IAGtB,OAAOD,GAtRPhY,EAAKkB,MAAQ,CACX4U,QAAS,GACTa,UAAW,KACXrI,YAAY,EACZyH,eAAe,EACfhO,0BAA0B,EAC1BL,eAAgB,IARD1H,0HAyEjB,IAFA,IAAMgY,EAAe7X,KAAK2X,kBAClBhC,EAAY3V,KAAKe,MAAjB4U,QACCnN,EAAI,EAAGA,EAAImN,EAAQ7S,OAAQ0F,IAAK,KAAA4P,EAInCzC,EAAQnN,GAFVhC,EAFqC4R,EAErC5R,GAFqC4R,EAGrChW,OAEWkS,GACXtU,KAAKqY,WAAW7R,EAAIqR,2CAOxB,IAFa,IACLlC,EAAY3V,KAAKe,MAAjB4U,QACCnN,EAAI,EAAGA,EAAImN,EAAQ7S,OAAQ0F,IAAK,KAAA8P,EAKlC3C,EAAQnN,GAHXhC,EAFqC8R,EAErC9R,GACApE,EAHqCkW,EAGrClW,KACA6R,EAJqCqE,EAIrCrE,WAEE7R,IAASkS,GACXtU,KAAKuY,YAAY/R,EAAIyN,uCAKhBzB,EAAUqF,GAAc,IAAAjW,EAAA5B,KAC3BwY,EAA0B,OAAjBX,EAAwB,GAAKA,EACpClC,EAAY3V,KAAKe,MAAjB4U,QACRxU,IAAMC,KAAN,wBAAA4D,OAAmCwN,GAAYgG,GAC5CnX,KAAK,SAAAC,GACJ,IAAM6S,EAAc7S,EAAIE,KAClBgP,EAAQmF,EAAQlF,UAAU,SAAA+G,GAAC,OAAIA,EAAEhR,KAAO2N,EAAY3N,KACpD+P,EAAUzW,OAAAwR,EAAA,EAAAxR,CAAO6V,GACvBY,EAAW/F,GAAO2D,YAAcA,EAChCvS,EAAKtB,SAAS,CACZqV,QAASY,0CAKL/D,EAAUyB,GAAY,IAAAwE,EAAAzY,KACxB2V,EAAY3V,KAAKe,MAAjB4U,QACR,GAAI1B,IAAeK,EACjBnT,IAAMC,KAAN,wBAAA4D,OAAmCwN,GAAY,IAC5CnR,KAAK,SAAAC,GAIJ,IAHA,IAAM6S,EAAc7S,EAAIE,KAClB2K,EAAkBiI,GAAiBD,EAAY3S,MAC/C+P,EAAa,GACV/I,EAAI,EAAGA,EAAI2D,EAAgBrJ,OAAQ0F,IAE1C,IADA,IAD+CkQ,EAChC5Y,OAAO6Y,OAAOxM,EAAgB3D,IAC7CoQ,EAAA,EAAAA,EAAAF,EAAA5V,OAAA8V,IAA0B,CAArB,IAAMC,EAAGH,EAAAE,GACZrH,EAAWvO,KAAK,CACdtC,MAAOmY,EACPrH,WAAW,IAIjB,IAAMhB,EAAQmF,EAAQlF,UAAU,SAAA+G,GAAC,OAAIA,EAAEhR,KAAO2N,EAAY3N,KACpD+P,EAAUzW,OAAAwR,EAAA,EAAAxR,CAAO6V,GACvBY,EAAW/F,GAAO2D,YAAcA,EAChCoC,EAAW/F,GAAOe,WAAaA,EAC/BkH,EAAKnY,SAAS,CACZqV,QAASY,WAGV,GAAItC,IAAeK,EAAwB,CAUhD,IAAM9D,EAAQmF,EAAQlF,UAAU,SAAA+G,GAAC,OAAIA,EAAEhR,KAAOgM,IACxC+D,EAAUzW,OAAAwR,EAAA,EAAAxR,CAAO6V,GACvBY,EAAW/F,GAAO9P,MAAQ,GAC1BV,KAAKM,SAAS,CACZqV,QAASY,sCAmIN,IAAAuC,EAAA9Y,KAEDiD,EAAQ,CACZgD,MAF0BjG,KAAKJ,MAAzBmZ,gBAEmB,MAG3B,OACEhX,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iCAAiCc,MAAOA,GAEpDjD,KAAKJ,MAAMkV,YACV/S,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kCACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAf,WACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,SACLC,MAAOV,KAAKJ,MAAM2K,OAClBlI,SAAU,SAAChC,GAAD,OAAWyY,EAAKlZ,MAAMoZ,mBAAmB,SAAU3Y,EAAMG,OAAOE,QAC1EyB,UAAU,eACVc,MAAO,CAACgD,MAAO,WAGjBlE,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAACgX,EAAD,CAAaxY,KAAM,kBAAmBC,MAAOV,KAAKJ,MAAM8L,gBAAiBrJ,SAAUrC,KAAKJ,MAAMoZ,sBAGhGjX,EAAAC,EAAAC,cAAC8P,GAAD,CAAUtR,KAAK,aAAaC,MAAM,eAAe6K,QAASvL,KAAKe,MAAMoN,WAAY9L,SAAUrC,KAAK0R,uBAChG3P,EAAAC,EAAAC,cAAC8P,GAAD,CAAUtR,KAAK,gBAAgBC,MAAM,iBAAiB6K,QAASvL,KAAKe,MAAM6U,cAAevT,SAAUrC,KAAK0R,wBAK5G3P,EAAAC,EAAAC,cAACiX,GAAD,CACEjT,MAAOjG,KAAKe,MAAMyV,UAClBjM,OAAQvK,KAAKJ,MAAM2K,OACnBmB,gBAAiB1L,KAAKJ,MAAM8L,gBAC5ByC,WAAYnO,KAAKe,MAAMoN,WACvByH,cAAe5V,KAAKe,MAAM6U,cAC1BD,QAAS3V,KAAKe,MAAM4U,QACpBb,WAAY9U,KAAKJ,MAAMkV,WACvBxC,aAActS,KAAKsS,aACnBG,aAAczS,KAAKJ,MAAM6S,aACzBI,eAAgB7S,KAAK0H,yBACrBgM,0BAA2B1T,KAAK0T,4BAGlC3R,EAAAC,EAAAC,cAAC6G,EAAD,CACEpE,KAAM1E,KAAKe,MAAM6G,yBACjB3C,QAASjF,KAAKyH,0BACd7C,WAAY,oBACZC,MAAO,oBACP9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,gDAGAJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKqH,eAAzC,mBAnVoB7E,IAAMC,gCC+CrB0W,4CA1Db,SAAAA,EAAYvZ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmZ,IACjBtZ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqZ,GAAAhZ,KAAAH,KAAMJ,KAYRwZ,eAAiB,SAACvU,GAChBhF,EAAKS,SAAS,CACZ+Y,UAAWxU,KAbbhF,EAAKkB,MAAQ,GAFIlB,mFAOjB,IAAMwZ,EAAYrZ,KAAKJ,MAAMyZ,UAC7BrZ,KAAKM,SAAS,CACZ+Y,UAAWA,qCAqBb,IAXO,IAAAzX,EAAA5B,KAEL8E,EACE9E,KAAKJ,MADPkF,SAIAuU,EACErZ,KAAKe,MADPsY,UAGIC,EAAa,GACfC,EAAa,KACR/Q,EAAI,EAAGA,EAAI1D,EAAShC,OAAQ0F,IAC/B1D,EAAS0D,IAAI,WACf,IAAM3D,EAAQC,EAAS0D,GAAG5I,MAAMiF,MAC5B2U,EAAS,GACT3U,IAAUwU,IACZG,EAAS,oBACTD,EAAazU,EAAS0D,GAAG5I,MAAMkF,UAGjCwU,EAAWtW,KACTjB,EAAAC,EAAAC,cAAA,MAAIE,UAAS,mBAAA6C,OAAqBwU,GAAU9Q,IAAKF,EAAGjG,QAAS,kBAAMX,EAAKwX,eAAevU,KAASA,IATnF,GAcnB,OACE9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cACXmX,GAEHvX,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZoX,WApDQ/W,IAAMC,YCiEVgX,eA/Db,SAAAA,EAAY7Z,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyZ,IACjB5Z,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2Z,GAAAtZ,KAAAH,KAAMJ,KAcR8Z,mBAAqB,SAACrZ,GACpB,IAAMI,EAAOZ,EAAKD,MAAMa,KAClBC,EAAQL,EAAMG,OAAOE,MAC3Bb,EAAKD,MAAMyC,SAAS5B,EAAMC,IAhB1Bb,EAAKkB,MAAQ,GAFIlB,wEAqBV,IAAA4E,EAOHzE,KAAKJ,MALPc,EAFK+D,EAEL/D,MAFKiZ,EAAAlV,EAGLmV,eAHK,IAAAD,EAGK,GAHLA,EAILE,EAJKpV,EAILoV,YACAC,EALKrV,EAKLqV,cALKC,EAAAtV,EAMLuV,gBAGIC,EAAa,GAyBnB,YAlCO,IAAAF,OAWLE,EAAWjX,KACTjB,EAAAC,EAAAC,cAAA,UAAQvB,MAAM,GAAGgI,IAAI,MAIzBkR,EAAQ1J,QAAQ,SAACyE,EAAQnE,GACvB,IAAI9P,EACAkK,EACAiP,GAAeC,GAEjBpZ,EAAQiU,EAAOkF,GACfjP,EAAU+J,EAAOmF,KAGjBpZ,EAAQiU,EACR/J,EAAU+J,GAGZsF,EAAWjX,KACTjB,EAAAC,EAAAC,cAAA,UAAQvB,MAAOA,EAAOgI,IAAK8H,GAAQ5F,MAKrC7I,EAAAC,EAAAC,cAAA,UAAQvB,MAAOA,EAAO2B,SAAUrC,KAAK0Z,oBAClCO,UA3DYzX,IAAMC,WCgkBZyX,eA1iBb,SAAAA,EAAYta,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAka,IACjBra,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoa,GAAA/Z,KAAAH,KAAMJ,KAoCRua,YArCmB,eAAA5W,EAAAzD,OAAA0D,EAAA,EAAA1D,CAAA2D,EAAAzB,EAAA0B,KAqCL,SAAAC,EAAO6O,GAAP,IAAAzK,EAAA,OAAAtE,EAAAzB,EAAA6B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZnE,EAAKS,SAAST,EAAKqH,cADPpD,EAAAE,KAAA,EAGkBiE,IAHlB,OAGNF,EAHMjE,EAAAI,KAIZrE,EAAKS,SAAS,CACZyH,gBAAiBA,IAGnB5G,IAAM8C,IAAI,iBACP5C,KAAK,SAAAC,GACJ,IAAM8Y,EAAa9Y,EAAIE,KACvB3B,EAAKS,SAAS,CACZ+Z,gBAAiBD,MAIN,OAAb5H,EACF3S,EAAKS,SAAS,CACZkS,SAAU,QAGZ3S,EAAKS,SAAS,CACZkS,SAAUA,IAEZrR,IAAM8C,IAAI,cAAgBuO,GACvBnR,KAAK,SAAAC,GACJ,IAAM+Q,EAAS/Q,EAAIE,KAEjBY,EAIEiQ,EAJFjQ,KACA4R,EAGE3B,EAHF2B,UACAC,EAEE5B,EAFF4B,WACAjE,EACEqC,EADFrC,aAEF,GAAI5N,IAASkS,GAMX,GALAzU,EAAKS,SAAS,CACZ0T,UAAWA,EACXhE,aAAcA,IAGZgE,IAAcM,EAAe,KAAAgG,EAI3BjI,EAAO7Q,KAFT4K,EAF6BkO,EAE7BlO,OACAC,EAH6BiO,EAG7BjO,SAEFxM,EAAKS,SAAS,CACZ8L,OAAQA,EACRC,SAAUA,UAGT,GAAIjK,IAASkS,EAAkB,KAElC6D,EACE9F,EAAO7Q,KADT2W,eAEFtY,EAAKS,SAAS,CACZ2T,WAAYA,EACZkE,eAAgBA,IASpBtY,EAAKS,SAAS,CACZkS,SAAUA,EACV3N,MAAOwN,EAAOxN,MACd8M,EAAGU,EAAOV,EACVS,EAAGC,EAAOD,EACVnM,MAAOoM,EAAOpM,MACdsE,OAAQ8H,EAAO9H,OACfgQ,SAAUlI,EAAOkI,SACjBnY,KAAMA,EACNoY,iBAAkBnI,EAAOmI,iBACzBvX,MAAOoP,EAAOpP,OACb,WACDpD,EAAK4a,gBA5ED,wBAAA3W,EAAAO,SAAAV,MArCK,gBAAA+W,GAAA,OAAAnX,EAAAe,MAAAtE,KAAAuE,YAAA,GAAA1E,EAwHnBO,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SA1HnBb,EA8HnBmZ,mBAAqB,SAACvY,EAAMC,GAC1B,IAAMuC,EAAKnD,OAAA6a,EAAA,EAAA7a,CAAA,GAAOD,EAAKkB,MAAMkC,OAC7BA,EAAM,CAACxC,IAASC,EAChBb,EAAKS,SAAS,CACZ2C,MAAOA,KAlIQpD,EAsInB+a,sBAAwB,SAACC,GACvBhb,EAAKS,SAAS,CACZia,SAAUM,KAxIKhb,EA4InBib,0BAA4B,SAACra,EAAMC,GACjC,IAAMqa,EAAWnM,SAASlO,EAAO,KAAO,EACxCb,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAOsa,KA/IOlb,EAmJnB6Z,mBAAqB,SAACjZ,EAAMC,GAC1Bb,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAOC,KArJOb,EA0JnByG,KAAO,WAAM,IAAAxF,EAQPjB,EAAKkB,MANPyR,EAFS1R,EAET0R,SACA3N,EAHS/D,EAGT+D,MACA2V,EAJS1Z,EAIT0Z,iBACAD,EALSzZ,EAKTyZ,SACAnY,EANStB,EAMTsB,KACAa,EAPSnC,EAOTmC,MAGIoP,EAAS,CACbxN,MAAOA,EACP8L,YAAa9Q,EAAKD,MAAM+Q,YACxBvO,KAAMA,EACNoY,iBAAkBA,EAClBD,SAAUA,EACVtX,MAAOA,GAGT,GAAIb,IAASkS,EAAiB,KAAApM,EAIxBrI,EAAKkB,MAFPiT,EAF0B9L,EAE1B8L,UACAhE,EAH0B9H,EAG1B8H,aAKF,GAHAqC,EAAOrC,aAAeA,EACtBqC,EAAO2B,UAAYA,EAEfA,IAAcM,QAEX,GAAIN,IAAcM,EAAe,KAAA0G,EAIlCnb,EAAKkB,MAFPqL,EAFoC4O,EAEpC5O,OACAC,EAHoC2O,EAGpC3O,SAEFgG,EAAO7Q,KAAO,CACZ4K,OAAQA,EACRC,SAAUA,SAGT,GAAIjK,IAASkS,EAAkB,KAAA2G,EAIhCpb,EAAKkB,MAFPkT,EAFkCgH,EAElChH,WACAkE,EAHkC8C,EAGlC9C,eAEF9F,EAAO4B,WAAaA,EACpB5B,EAAO7Q,KAAO,CACZ2W,eAAgBA,GAUH,OAAb3F,EACFrR,IAAMC,KAAK,aAAciR,GACtBhR,KAAK,SAAAC,GACJzB,EAAKD,MAAMsb,YAGf7I,EAAO7L,GAAKgM,EACZrR,IAAM0F,IAAI,aAAcwL,GACrBhR,KAAK,SAAAC,GACJzB,EAAKD,MAAMsb,aA3NArb,EAgOnB4a,SAAW,WACT,IAAMU,EAAc,CAClBX,iBAAkB3a,EAAKkB,MAAMyZ,iBAC7BD,SAAU1a,EAAKkB,MAAMwZ,UAGvBpZ,IAAMC,KAAK,sBAAuB+Z,GAC/B9Z,KAAK,SAAAC,GACJ,IAAM0F,EAAS1F,EAAIE,KACnB3B,EAAKS,SAAS,CACZ6T,YAAanN,OA1OFnH,EA+OnBub,gBAAkB,WAAM,IAAAC,EAKlBxb,EAAKkB,MAHPiP,EAFoBqL,EAEpBrL,aACAsL,EAHoBD,EAGpBC,gBACAC,EAJoBF,EAIpBE,iBAGF,IAAe,IADDvL,EAAaS,UAAU,SAAAC,GAAC,OAAIA,EAAEN,aAAekL,IACzC,CAChB,IAAME,EAAe1b,OAAAwR,EAAA,EAAAxR,CAAOkQ,GAC5BwL,EAAgBxY,KAAK,CACnBoN,WAAYkL,EACZ3K,YAAa4K,IAEf1b,EAAKS,SAAS,CACZ0P,aAAcwL,MA7PD3b,EAkQnB4b,mBAAqB,SAACC,GAAU,IACtB1L,EAAiBnQ,EAAKkB,MAAtBiP,aACFQ,EAAQR,EAAaS,UAAU,SAAAC,GAAC,OAAKA,EAAEN,aAAesL,EAAMtL,YAAgBM,EAAEC,cAAgB+K,EAAM/K,cAC1G,IAAe,IAAXH,EAAc,CAChB,IAAMgL,EAAe1b,OAAAwR,EAAA,EAAAxR,CAAOkQ,GAC5BwL,EAAgB/D,OAAOjH,EAAO,GAC9B3Q,EAAKS,SAAS,CACZ0P,aAAcwL,MAzQD3b,EA8QnB8b,cAAgB,WACd,GAAI9b,EAAKkB,MAAMiT,YAAcM,EAAe,KAAAsH,EAKtC/b,EAAKkB,MAHPqL,EAFwCwP,EAExCxP,OACAC,EAHwCuP,EAGxCvP,SAHwCwP,EAAAD,EAIxCzH,YAEI3S,EAAO4S,SAN6B,IAAAyH,EAI1B,GAJ0BA,GAMAra,MACpCgT,EAAcC,GAAwBjT,EAAM4K,EAAQC,GAC1DxM,EAAKS,SAAS,CACZkU,YAAaA,MAxRA3U,EA6RnBic,mBAAqB,WAAM,IAAAC,EAIrBlc,EAAKkB,MAFPiT,EAFuB+H,EAEvB/H,UAFuBgI,EAAAD,EAGvB5H,YAEIrE,QALmB,IAAAkM,EAGT,GAHSA,GAKGlM,SAAW,GAEnCmM,EAAgBla,EAAAC,EAAAC,cAAA,4BACpB,GAAI+R,IAAcM,QAEX,GAAIN,IAAcM,EAAe,KAAA4H,EAKlCrc,EAAKkB,MAHPyT,EAFoC0H,EAEpC1H,YACApI,EAHoC8P,EAGpC9P,OACAC,EAJoC6P,EAIpC7P,SAGF4P,EACEla,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,KAAG0G,MAAM,qBAAhB,cACA5G,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,SACNC,MAAO0L,EACP/J,SAAUxC,EAAK6Z,mBACfE,QAAS9J,EACTgK,cAAe,OACfD,YAAa,SAIf9X,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,WACNC,MAAO2L,EACPhK,SAAUxC,EAAK6Z,mBACfE,QAAS9J,EACTgK,cAAe,OACfD,YAAa,SAEf9X,EAAAC,EAAAC,cAAA,UAAQM,QAAS1C,EAAK8b,eAAtB,kBACA5Z,EAAAC,EAAAC,cAACyS,GAAA1S,EAAD,CACE2S,OAAQH,EACRvR,MAAO,CAACsH,OAAQ,QAAStE,MAAO,QAChC9D,UAAU,uBAIlB,OAAO8Z,GA5UPpc,EAAKkB,MAAQlB,EAAKqH,aAFDrH,qHAiVV,IAAA+B,EAAA5B,KAAAoc,EAOHpc,KAAKe,MALPqB,EAFKga,EAELha,KACA+R,EAHKiI,EAGLjI,YAHKkI,EAAAD,EAILrU,uBAJK,IAAAsU,EAIa,GAJbA,EAAAC,EAAAF,EAKLpM,oBALK,IAAAsM,EAKU,GALVA,EAAAC,EAAAH,EAML/B,uBANK,IAAAkC,EAMa,GANbA,EASD/a,EAAO4S,GAAiBD,EAAY3S,MACpCsO,EAAUqE,EAAYrE,SAAW,GACjCrO,EAAQ0S,EAAY1S,MAEpB+a,EAAaxM,EAAagG,IAAI,SAAA0F,GAAK,OACvC3Z,EAAAC,EAAAC,cAAA,OAAKyG,IAAKgT,EAAMtL,WAAYjO,UAAU,OACpCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAf,WAAqCuZ,EAAMtL,YAC3CrO,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAf,cAAwCuZ,EAAM/K,aAC9C5O,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qBAAoBI,QAAS,kBAAMX,EAAK6Z,mBAAmBC,KAC3E3Z,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,YAAYC,KAAK,WAKvCqX,EAAc3M,EAAQkG,IAAI,SAAA0G,GAAG,OACjC3a,EAAAC,EAAAC,cAAA,OAAKyG,IAAKgU,EAAIjc,MAAOic,EAAIjc,KAAzB,IAAgCic,EAAIC,YAGhCC,EAAexa,IAASkS,GAAoBlS,IAASkS,GAAoBtU,KAAKe,MAAMkT,aAAeK,EAEzG,OACEvS,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKsG,MAAzC,QACAvE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAf,SACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,OACNC,MAAO0B,EACPC,SAAUrC,KAAK0Z,mBACfE,QAAStF,EACT0F,iBAAiB,MAKvBjY,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAC4a,GAAD,CAAMxD,UAAU,SACdtX,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,SACT9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,QACLC,MAAOV,KAAKe,MAAM8D,MAClBxC,SAAUrC,KAAKI,oBAGjB2B,EAAAC,EAAAC,cAAC8P,GAAD,CAAUtR,KAAK,aAAaC,MAAM,cAAc6K,QAASvL,KAAKe,MAAMkC,MAAMgS,WAAY5S,SAAUrC,KAAKgZ,qBACrGjX,EAAAC,EAAAC,cAAC8P,GAAD,CAAUtR,KAAK,YAAYC,MAAM,aAAa6K,QAASvL,KAAKe,MAAMkC,MAAMkS,UAAW9S,SAAUrC,KAAKgZ,qBAElGjX,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,SACL3B,KAAK,SACLC,MAAOV,KAAKe,MAAMkC,MAAM8H,OACxB1I,SAAU,SAAChC,GAAD,OAAWuB,EAAKoX,mBAAmB,SAAU3Y,EAAMG,OAAOE,UAGtEqB,EAAAC,EAAAC,cAAA,0BAEEF,EAAAC,EAAAC,cAACgX,EAAD,CAAaxY,KAAM,cAAeC,MAAOV,KAAKe,MAAMkC,MAAMiS,YAAa7S,SAAUrC,KAAKgZ,sBAGxFjX,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAACgX,EAAD,CAAaxY,KAAM,kBAAmBC,MAAOV,KAAKe,MAAMkC,MAAMyI,gBAAiBrJ,SAAUrC,KAAKgZ,wBAOlG5W,IAASkS,GACTvS,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,UACT9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,aACNC,MAAOV,KAAKe,MAAMkT,WAClB5R,SAAUrC,KAAK0Z,mBACfE,QAAStF,EACT0F,iBAAiB,MAMvB4C,GACA7a,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,SACT9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,mBACNC,MAAOV,KAAKe,MAAMyZ,iBAClBnY,SAAUrC,KAAK8a,0BACflB,QAAS7R,EACT+R,cAAe,OACfD,YAAa,OAGf9X,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAC6a,GAAA9a,EAAD,CACEiB,MAAO,CAAE8Z,UAAW,OACpBrc,MAAOV,KAAKe,MAAMwZ,SAClBlS,KAAK,QACL2U,MAAM,QACNvc,KAAK,QACL4B,SAAUrC,KAAK4a,sBACfrQ,OAAQ,QACRtE,MAAO,OACP/C,SAAU,GACV+Z,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBC,WAAY,CACVC,iBAAiB,EACjBC,QAAS,KAIbvb,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKya,UAAzC,cAGF1Y,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACsS,GAAD,CACE/S,KAAMA,EACNsO,QAASA,EACTrO,MAAOA,IAGTM,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,WACGwa,KAMPra,IAASkS,GACTvS,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,SACT9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,YACNC,MAAOV,KAAKe,MAAMiT,UAClB3R,SAAUrC,KAAK0Z,mBACfE,QAAStF,EACT0F,iBAAiB,IAEnBjY,EAAAC,EAAAC,cAAA,wBACCjC,KAAK8b,uBAKV1Z,IAASkS,GACTvS,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,iBACT9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,kBACNC,MAAOV,KAAKe,MAAMua,gBAClB1B,QAAS9J,EACTzN,SAAUrC,KAAK0Z,mBACfI,cAAe,OACfD,YAAa,SAGf9X,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,mBACNC,MAAOV,KAAKe,MAAMwa,iBAClB3B,QAASS,EACThY,SAAUrC,KAAK8a,0BACfhB,cAAe,OACfD,YAAa,OAEf9X,EAAAC,EAAAC,cAAA,OAAK0G,MAAM,aACR6T,GAEHza,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKob,iBAAzC,SAKJhZ,IAASkS,GACTvS,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,mBACT9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,iBACLC,MAAOV,KAAKe,MAAMoX,eAClB9V,SAAUrC,KAAKI,8DAvhB/B,MAAO,CACL2H,gBAAiB,GACjByK,SAAU,KACV3N,MAAO,GACP0V,SAAU,GACVC,iBAAkB,GAClBrG,YAAa,GACb/R,KAAMkS,EACNL,WAAYK,EACZN,UAAWM,EACXrR,MAAO,CACLgS,YAAY,EACZC,YAAa,qBACbC,WAAW,EACXzJ,gBAAiB,yBACjBX,OAAQ,GAEVoN,eAAgB,GAChBnI,aAAc,GACdqK,gBAAiB,GACjBiB,gBAAiB,GACjBC,iBAAkB,GAClBnP,OAAQ,GACRC,SAAU,GACVmI,YAAa,WAhCWhS,IAAMC,WCJ9B8a,eAEJ,SAAAA,EAAY3d,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAud,IACjB1d,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyd,GAAApd,KAAAH,KAAMJ,KAgER4d,wBAA0B,WACxB,IAAMC,EAAM5d,EAAKD,MAAM8d,SAASC,OAE1BC,EADS,IAAIC,gBAAgBJ,GACNxZ,IAAI,QAE3B8U,EAAkBlZ,EAAKie,eAE7Bje,EAAKS,SAAS,CACZyd,YAAY,EACZtd,KAAMmd,EACN7E,gBAAiBA,GAChB,WACD5X,IAAM8C,IAAN,sBAAAe,OAAgC4Y,IAC7Bvc,KAAK,SAAAC,GACJ,IAAM0F,EAAS1F,EAAIE,KACnB3B,EAAKS,SAAS,CACZqQ,YAAa3J,EAAOR,GACpB/F,KAAMuG,EAAOvG,KACbwC,MAAO+D,EAAO/D,OACb,WACDpD,EAAKme,iBArFIne,EA2FnBO,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SA7FnBb,EAiGnBie,aAAe,WAEb,OADiB3Q,IAASC,YAATtN,OAAA6F,EAAA,EAAA7F,QAAA6F,EAAA,EAAA7F,CAAAD,KACD2O,YAAc,IAnGb3O,EAsGnBoe,kBAAoB,WAAM,IAChBC,EAAuBre,EAAKkB,MAA5Bmd,mBACR,GAAIA,EACFC,cAAcD,GACdre,EAAKS,SAAS,CACZ4d,mBAAoB,SAEjB,KACGE,EAAoBve,EAAKkB,MAAzBqd,gBACJC,EAAWzP,SAASwP,EAAiB,KAAO,GAChDC,EAAWA,EAAW,EAAI,EAAIA,EAC9B,IAAMC,EAAUC,YAAY,WAC1B1e,EAAK2e,eACL3e,EAAK4e,uBACO,IAAXJ,GACHxe,EAAKS,SAAS,CACZ4d,mBAAoBI,MAtHPze,EA2HnBme,QAAU,WACRne,EAAK6e,oBACL7e,EAAK4e,uBA7HY5e,EAgInB6e,kBAAoB,WAAM,IAAA5d,EAIpBjB,EAAKkB,MAFP4P,EAFsB7P,EAEtB6P,YACAoI,EAHsBjY,EAGtBiY,gBAEFlZ,EAAK8e,gBAAgBC,QAAQzH,aAAaxG,EAAaoI,EAAiB,OArIvDlZ,EAwInB2e,aAAe,WACb3e,EAAK8e,gBAAgBC,QAAQvH,eAzIZxX,EA4InB4e,oBAAsB,WACpB,IAAMI,GAAM,IAAIC,MAAOC,eAAeC,QAAQ,0BAA2B,MACzEnf,EAAKS,SAAS,CACZ2e,cAAeJ,KA/IAhf,EAmJnByG,KAAO,WAAM,IAAA4B,EAKPrI,EAAKkB,MAHP4P,EAFSzI,EAETyI,YAKIuO,EAAY,CAChB1Y,GAAImK,EACJlQ,KATSyH,EAGTzH,KAOAwC,MAVSiF,EAITjF,OASF9B,IAAM0F,IAAI,iBAAkBqY,GACzB7d,KAAK,SAAAC,MAGRzB,EAAKD,MAAMuf,gBAAgBxO,GAE3B9Q,EAAKS,SAAS,CACZwU,YAAY,KAvKGjV,EA2KnBuf,KAAO,WACLvf,EAAKS,SAAS,CACZwU,YAAY,KA7KGjV,EAiLnBwf,WAAa,WACXxf,EAAKS,SAAS,CACZwU,YAAY,KAnLGjV,EAuLnByf,aAAe,WACbzf,EAAKS,SAAS,CACZif,qBAAqB,IAGvB1f,EAAK6e,qBA5LY7e,EA+LnB2f,oBAAsB,SAAChN,GACrB3S,EAAK4f,gBAAgBb,QAAQzE,YAAY3H,GACzC3S,EAAKS,SAAS,CACZif,qBAAqB,KAlMN1f,EAsMnB6f,aAAe,SAAC7H,GACdhY,EAAK8e,gBAAgBC,QAAQJ,aAAa3G,IAvMzBhY,EA0MnB8f,WAAa,WAAM,IACTlf,EAASZ,EAAKkB,MAAdN,KACFgd,EAAG,kCAAAzY,OAAqCvE,GAC9Cmf,OAAOC,KAAKpC,EAAK,WA7MA5d,EAgNnBigB,iBAAmB,WACjBjgB,EAAKD,MAAMmD,QAAQC,KAAnB,sCAjNiBnD,EAoNnBmZ,mBAAqB,SAACvY,EAAMC,GAC1B,IAAMuC,EAAKnD,OAAA6a,EAAA,EAAA7a,CAAA,GAAOD,EAAKkB,MAAMkC,OAC7BA,EAAM,CAACxC,IAASC,EAChBb,EAAKS,SAAS,CACZ2C,MAAOA,KAxNQpD,EA4NnBwH,cAAgB,WAAM,IAAAC,EAGhBzH,EAAKkB,MADPwG,eAEIoJ,QAJc,IAAArJ,EAED,GAFCA,GAIed,GACnCrF,IAAMqG,OAAN,iBAAAxC,OAA8B2L,IAC3BtP,KAAK,SAAAC,GACJzB,EAAKD,MAAMmgB,kBAAkBpP,GAC7B9Q,EAAK4H,+BApOQ5H,EAwOnBmgB,gBAAkB,WAAM,IAAAhF,EAIlBnb,EAAKkB,MACHme,EAAY,CAChB1Y,GANoBwU,EAEpBrK,YAKAlQ,KAPoBua,EAGpBva,MAMFZ,EAAK6H,yBAAyBwX,IAjPbrf,EAoPnB6H,yBAA2B,SAACwX,GAC1Brf,EAAKS,SAAS,CACZiH,eAAgB2X,EAChBtX,0BAA0B,KAvPX/H,EA2PnB4H,0BAA4B,WAC1B5H,EAAKS,SAAS,CACZiH,eAAgB,GAChBK,0BAA0B,KA3P5B/H,EAAKkB,MAAQ,CACXwe,qBAAqB,EACrB3X,0BAA0B,EAC1BL,eAAgB,GAChBuN,YAAY,EACZiJ,YAAY,EACZG,mBAAoB,GACpBe,cAAe,GACfb,gBAAiB,GACjB6B,sBAAuB,GACvBtP,YAAa,EACblQ,KAAM,GACNwC,MAAO,GACP8V,gBAAiB,KAGnBlZ,EAAK8e,gBAAkBnc,IAAM0d,YAC7BrgB,EAAK4f,gBAAkBjd,IAAM0d,YApBZrgB,mFAuBC,IAAA+B,EAAA5B,KACdwG,EAAKxG,KAAKJ,MAAMugB,MAAM3H,OAAOhS,GAC3BmK,OAAqByP,IAAP5Z,EAAmBA,EAAK,KAC5C0L,QAAQC,IAAI,wCAAyCxB,GAErD,IAAM8M,EAAMzd,KAAKJ,MAAM8d,SAASC,OAC1BnF,EAAS,IAAIqF,gBAAgBJ,GANjB4C,GAAA,EAAAC,GAAA,EAAAC,OAAAH,EAAA,IAOlB,QAAAI,EAAAC,EAAgBjI,EAAOkI,UAAvBC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAzc,QAAA6c,MAAAR,GAAA,EAAkC,KAA1BS,EAA0BN,EAAA9f,MAChCwR,QAAQC,IAAI2O,EAAK,GAAI,KAAMA,EAAK,KARhB,MAAAC,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GAWlB,IAAMxH,EAAkB/Y,KAAK8d,eAC7B9d,KAAKM,SAAS,CACZyY,gBAAiBA,GAChB,WACmB,OAAhBpI,EACF/O,EAAKtB,SAAS,CACZqQ,YAAa,OAGfxP,IAAM8C,IAAN,iBAAAe,OAA2B2L,IACxBtP,KAAK,SAAAC,GACJ,IAAM0F,EAAS1F,EAAIE,KACnBI,EAAKtB,SAAS,CACZqQ,YAAa3J,EAAOR,GACpB/F,KAAMuG,EAAOvG,KACbwC,MAAO+D,EAAO/D,OACb,WACDrB,EAAKoc,+DAOM,IACbE,EAAuBle,KAAKe,MAA5Bmd,mBACJA,GACFC,cAAcD,oCAqMT,IASH+C,EATGxI,EAAAzY,KAAAib,EAMHjb,KAAKe,MAJPmd,EAFKjD,EAELiD,mBACAe,EAHKhE,EAGLgE,cACAnK,EAJKmG,EAILnG,WACAiJ,EALK9C,EAKL8C,WAEImD,EAA2C,KAAvBhD,EAA4B,MAAQ,KAG1DiD,EAAwB,KACtBC,EACJrf,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,+BAAuBgd,GACC,QAAtBiC,GACAnf,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,kBACLC,MAAOV,KAAKe,MAAMqd,gBAClB/b,SAAUrC,KAAKI,kBACf+B,UAAU,eACVc,MAAO,CAACgD,MAAO,UAGnBlE,EAAAC,EAAAC,cAAA,UAAQE,UAAU,4BAA4BI,QAASvC,KAAKie,mBAElC,OAAtBiD,EAEEnf,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,cAAcC,KAAK,KAAK4J,YAAU,IAGxDjN,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,cAAcC,KAAK,KAAK4J,YAAU,KAI9DjN,EAAAC,EAAAC,cAAA,UAAQE,UAAU,4BAA4BI,QAASvC,KAAKge,SAC1Djc,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,WAAWC,KAAK,KAAK4J,YAAU,KAEvDjN,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcI,QAASvC,KAAKwe,cAC5Czc,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,SAASC,KAAK,KAAK4J,YAAU,IADrD,mBAyCJ,OAnCK+O,EAgCHoD,EAAwBC,EA9BtBH,EADEnM,EAEA/S,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcI,QAASvC,KAAKqf,YAC3Ctd,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,QAAQC,KAAK,KAAK4J,YAAU,KAErDjN,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcI,QAASvC,KAAKsG,MAC5CvE,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,OAAOC,KAAK,KAAK4J,YAAU,KAEnDjN,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcI,QAASvC,KAAKggB,iBAC3Cje,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,YAAYC,KAAK,KAAK4J,YAAU,KAEzDjN,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMkW,EAAK+G,oBAAoB,QACjEzd,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,gBAAgBC,KAAK,KAAK4J,YAAU,IAD5D,gBAOFjN,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACGkf,EACDrf,EAAAC,EAAAC,cAAA,UAAQE,UAAU,4BAA4BI,QAASvC,KAAK2f,YAC1D5d,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,KAAKC,KAAK,KAAK4J,YAAU,KAEjDjN,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKof,MACvCrd,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,OAAOC,KAAK,KAAK4J,YAAU,MAUzDjN,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAEX4b,IAAejJ,EAEb/S,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACZnC,KAAKe,MAAMN,MAGdsB,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMN,KAClB4B,SAAUrC,KAAKI,kBACf+B,UAAU,0BAMlBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZgf,EACAF,IAILlf,EAAAC,EAAAC,cAACof,GAADvhB,OAAAoW,OAAA,CACEoL,IAAKthB,KAAK2e,gBACV7J,WAAY9U,KAAKe,MAAM+T,WACvBiE,gBAAiB/Y,KAAKe,MAAMgY,gBAC5BtG,aAAczS,KAAKwf,oBACnBxG,mBAAoBhZ,KAAKgZ,oBACrBhZ,KAAKe,MAAMkC,QAGjBlB,EAAAC,EAAAC,cAAC6G,EAAD,CACEpE,KAAM1E,KAAKe,MAAMwe,oBACjBta,QAAS,kBAAMwT,EAAKnY,SAAS,CAAEif,qBAAqB,KACpD3a,WAAY,+BACZC,MAAO,eACP9C,EAAAC,EAAAC,cAACsf,GAAD,CACED,IAAKthB,KAAKyf,gBACVQ,sBAAuBjgB,KAAKe,MAAMkf,sBAClCtP,YAAa3Q,KAAKe,MAAM4P,YACxBuK,OAAQlb,KAAKsf,gBAIjBvd,EAAAC,EAAAC,cAAC6G,EAAD,CACEpE,KAAM1E,KAAKe,MAAM6G,yBACjB3C,QAASjF,KAAKyH,0BACd7C,WAAY,oBACZC,MAAO,oBACP9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,mCACmCnC,KAAKe,MAAMwG,eAAe9G,KAD7D,KAGAsB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKqH,eAAzC,mBA7YsB7E,IAAMC,WAqZvBC,eAAW6a,ICzZpBiE,eAEJ,SAAAA,EAAY5hB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwhB,IACjB3hB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0hB,GAAArhB,KAAAH,KAAMJ,KAsBR6hB,YAAc,WACZtgB,IAAM8C,IAAI,iBACP5C,KAAK,SAAAC,GACJ,IAAM8Y,EAAa9Y,EAAIE,KACvB3B,EAAKS,SAAS,CACZ8Z,WAAYA,OA5BDva,EAiCnBO,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAnCnBb,EAuCnBwG,sBAAwB,SAAC5F,EAAMC,GAC7Bb,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAOC,KAzCOb,EA6CnBiH,eAAiB,WACfjH,EAAKS,SAAS,CACZ8G,eAAe,EACf3G,KAAM,MAhDSZ,EAoDnByG,KAAO,WAAM,IAET7F,EACEZ,EAAKkB,MADPN,KAGF,GAAKA,EAAL,CAKA,IAAMye,EAAY,CAChBze,KAAMA,EACNwC,MAAO,CACLsH,OAAQ+J,EACR5I,gBAAiB,2BAIrBvK,IAAMC,KAAK,gBAAiB8d,GACzB7d,KAAK,SAAAC,GACJ,IAAMqP,EAAcrP,EAAIE,KACxB3B,EAAKiH,iBACLjH,EAAK4hB,cACL5hB,EAAKD,MAAMmD,QAAQC,KAAnB,wBAAAgC,OAAgD2L,MAEjD5J,MAAM,SAAAtF,GACL4D,EAAMX,KAAK,wCApBbW,EAAMX,KAAK,kBA1DI7E,EAkFnB6hB,KAAO,SAAC/Q,GACN9Q,EAAKS,SAAS,CACZqhB,kBAAmBhR,GAClB,WACD9Q,EAAKD,MAAMmD,QAAQC,KAAnB,wBAAAgC,OAAgD2L,OAtFjC9Q,EA0FnBsf,gBAAkB,SAACxO,GACjB9Q,EAAK4hB,eA3FY5hB,EA8FnBkgB,kBAAoB,SAACpP,GACnB9Q,EAAK4hB,cACL5hB,EAAKS,SAAS,CACZqhB,kBAAmB,GAClB,WACD9hB,EAAKD,MAAMmD,QAAQC,KAAK,2BAjG1BnD,EAAKkB,MAAQ,CACXiH,YAAa,GACboS,WAAY,GACZhT,eAAe,EACfua,kBAAmB,EACnBlhB,KAAM,IAPSZ,mFAYjB,IAAM+hB,EAAW5hB,KAAKJ,MAAM8d,SAASkE,SAC/BpR,EAAQoR,EAASC,QAjBO,yBAkB9B,IAAe,IAAXrR,EAAc,CAChB,IAAMmR,EAAoBG,OAAOF,EAASG,UAAUvR,EAnBxB,wBAmB0D1N,SACtF9C,KAAKM,SAAS,CACZqhB,kBAAmBA,IAGvB3hB,KAAKyhB,+CAgGL,IAbO,IAAA7f,EAAA5B,KAAAc,EAKHd,KAAKe,MALFihB,EAAAlhB,EAELsZ,kBAFK,IAAA4H,EAEQ,GAFRA,EAGLL,EAHK7gB,EAGL6gB,kBACA3Z,EAJKlH,EAILkH,YAMIia,EADFjiB,KAAKJ,MADPkC,UAE2BwS,EAEvB4N,EAAgB,GAZf3Z,EAAA,SAaEC,GACP,IAAM0W,EAAY9E,EAAW5R,GACvB/H,EAAOye,EAAUze,KACjB0hB,EAAaR,IAAsBzC,EAAU1Y,GAAK,6BAA+B,KAClFwB,GAAgBA,GAAevH,EAAKgI,SAAST,KAChDka,EAAclf,KAEVjB,EAAAC,EAAAC,cAAA,OAAKyG,IAAKF,EAAGrG,UAAS,gCAAA6C,OAAkCmd,GAAc5f,QAAS,kBAAMX,EAAK8f,KAAKxC,EAAU1Y,MACtG/F,KARF+H,EAAI,EAAGA,EAAI4R,EAAWtX,OAAQ0F,IAAKD,EAAnCC,GAeT,OACEzG,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAACiD,OAAQ,QACjB+b,GACAlgB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,0CAA0CI,QAAS,kBAAMX,EAAKtB,SAAS,CAAE8G,eAAe,MACxGrF,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,SADxB,QAKFpD,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAAC8Z,UAAW,QACtBhb,EAAAC,EAAAC,cAAC4G,EAAD,CACEpI,KAAM,cACNC,MAAOV,KAAKe,MAAMiH,YAClB3F,SAAUrC,KAAKqG,sBACfN,WAAY,QAIlBhE,EAAAC,EAAAC,cAAA,WACGigB,IAGLngB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAACmgB,EAAA,EAAD,CACEC,KAAK,2BACLC,OAAQ,SAAC1iB,GAAD,OACNmC,EAAAC,EAAAC,cAACsgB,GAAD,CACE7Z,IAAK9I,EAAMugB,MAAM3H,OAAOhS,GACxB2Y,gBAAiBvd,EAAKud,gBACtBY,kBAAmBne,EAAKme,wBAMhChe,EAAAC,EAAAC,cAAC6G,EAAD,CACEpE,KAAM1E,KAAKe,MAAMqG,cACjBnC,QAAS,kBAAMrD,EAAKtB,SAAS,CAAE8G,eAAe,KAC9CxC,WAAY,oBACZC,MAAO,OACP9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMN,KAClB4B,SAAUrC,KAAKI,oBAEjB2B,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKsG,MAAzC,kBAtLY7D,aA+LTC,eAAW8e,IC0MXgB,eA3Yb,SAAAA,EAAY5iB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwiB,IACjB3iB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0iB,GAAAriB,KAAAH,KAAMJ,KAmBRQ,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAtBnBb,EA0BnBwG,sBAAwB,SAAC5F,EAAMC,GAC7Bb,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAOC,KA5BOb,EAgCnBib,0BAA4B,SAACra,EAAMC,GACjC,IAAMqa,EAAWnM,SAASlO,EAAO,KAAO,EACxCb,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAOsa,KAnCOlb,EAwDnB4iB,WAAa,WACXthB,IAAM8C,IAAI,YACP5C,KAAK,SAAAC,GACJ,IAAMohB,EAAQphB,EAAIE,KAClB3B,EAAKS,SAAS,CACZoiB,MAAOA,OA7DI7iB,EAkEnB8iB,YAAc,WACZxhB,IAAM8C,IAAI,aACP5C,KAAK,SAAAC,GACJ,IAAMshB,EAASthB,EAAIE,KACnB3B,EAAKS,SAAS,CACZsiB,OAAQA,OAvEG/iB,EA4EnBsH,cAAgB,SAACjG,GACF,OAATA,EACFrB,EAAKS,SAAS,CACZkG,GAAItF,EAAKsF,GACTxF,SAAUE,EAAKF,SACfP,KAAMS,EAAKT,KACXoiB,aAAc,GACd/gB,QAASZ,EAAKY,QACdghB,WAAY5hB,EAAK4hB,aAGnBjjB,EAAKoH,iBAGPpH,EAAKS,SAAS,CACZyiB,YAAa,GACb3b,eAAe,KA5FAvH,EAgGnBiH,eAAiB,WACfjH,EAAKS,SAAS,CACZ8G,eAAe,KAlGAvH,EAsGnBoH,eAAiB,WACfpH,EAAKS,SAAST,EAAKmjB,wBAvGFnjB,EA0GnBgI,qBAAuB,WACrBhI,EAAKS,SAAS,SAAAwH,GAAS,MAAK,CAC1BvB,oBAAqBuB,EAAUvB,uBA5GhB1G,EAgHnByG,KAAO,WAAM,IAAAxF,EASPjB,EAAKkB,MAPPwF,EAFSzF,EAETyF,mBACAC,EAHS1F,EAGT0F,GACAxF,EAJSF,EAITE,SACAP,EALSK,EAKTL,KACAoiB,EANS/hB,EAMT+hB,aACA/gB,EAPShB,EAOTgB,QACAghB,EARShiB,EAQTgiB,WAGF,GAAK9hB,EAAL,CAIA,IAAIiiB,EAAkB3O,EACtB,GAAIA,IAA6BzU,EAAKD,MAAMkC,QAAS,CACnD,IAAIA,EAIF,OAHAmhB,EAAkBnhB,EAQtB,IAAIZ,EAAO,CACTF,SAAUA,EACVP,KAAMA,EACNqB,QAASmhB,EACTH,WAAYA,GAGH,OAAPtc,GACFtF,EAAKsF,GAAKA,EACND,GAAsBsc,IACxB3hB,EAAK2hB,aAAeA,GAGtB1hB,IAAM0F,IAAI,WAAY3F,GACnBG,KAAK,SAAAC,GACJzB,EAAKoH,iBACLpH,EAAKiH,iBACLjH,EAAK4iB,iBAGTvhB,EAAK2hB,aAAeA,EAEpB1hB,IAAMC,KAAK,WAAYF,GACpBG,KAAK,SAAAC,GACJzB,EAAKoH,iBACLpH,EAAKiH,iBACLjH,EAAK4iB,kBApKM5iB,EAyKnBqjB,aAAe,WAAM,IAAAhb,EAIfrI,EAAKkB,MAFPgiB,EAFiB7a,EAEjB6a,YAFiBI,EAAAjb,EAGjB4a,kBAHiB,IAAAK,EAGJ,GAHIA,EAMnB,IAAe,IADDL,EAAWrS,UAAU,SAAA2S,GAAO,OAAIA,IAAYL,IACxC,CAChB,IAAMM,EAAavjB,OAAAwR,EAAA,EAAAxR,CAAOgjB,GAC1BO,EAAcrgB,KAAK+f,GACnBljB,EAAKS,SAAS,CACZwiB,WAAYO,MAnLCxjB,EAwLnByjB,gBAAkB,SAACF,GAAY,IAAAG,EAGzB1jB,EAAKkB,MADP+hB,kBAF2B,IAAAS,EAEd,GAFcA,EAIvB/S,EAAQsS,EAAWrS,UAAU,SAAAjK,GAAE,OAAIA,IAAO4c,IAChD,IAAe,IAAX5S,EAAc,CAChB,IAAM6S,EAAavjB,OAAAwR,EAAA,EAAAxR,CAAOgjB,GAC1BO,EAAc5L,OAAOjH,EAAO,GAC5B3Q,EAAKS,SAAS,CACZwiB,WAAYO,MAjMCxjB,EAsMnBwH,cAAgB,WAAM,IAAAC,EAGhBzH,EAAKkB,MADPwG,sBAFkB,IAAAD,EAED,GAFCA,EAIpBnG,IAAMqG,OAAO,YAAcD,EAAef,IACvCnF,KAAK,SAAAC,GACJzB,EAAK4iB,aACL5iB,EAAK4H,+BA7MQ5H,EAiNnB6H,yBAA2B,SAACxG,GAC1BrB,EAAKS,SAAS,CACZiH,eAAgBrG,EAChB0G,0BAA0B,KApNX/H,EAwNnB4H,0BAA4B,WAC1B5H,EAAKS,SAAS,CACZiH,eAAgB,GAChBK,0BAA0B,KAzN5B/H,EAAKkB,MAAQ,CACX2hB,MAAO,GACPE,OAAQ,GACRhb,0BAA0B,EAC1BL,eAAgB,GAChBS,YAAa,GACbzB,oBAAoB,EACpBa,eAAe,EACfZ,GAAI,KACJxF,SAAU,GACVP,KAAM,GACNoiB,aAAc,GACd/gB,QAASwS,EACTyO,YAAa,GACbD,WAAY,IAhBGjjB,mFAoDjBG,KAAKyiB,aACLziB,KAAK2iB,+CA6LL,IAnBO,IAAA/gB,EAAA5B,KAAAgb,EAUHhb,KAAKe,MARPyF,EAFKwU,EAELxU,GACAD,EAHKyU,EAGLzU,mBAHKid,EAAAxI,EAIL0H,aAJK,IAAAc,EAIG,GAJHA,EAAAC,EAAAzI,EAKL4H,cALK,IAAAa,EAKI,GALJA,EAAAC,EAAA1I,EAML8H,kBANK,IAAAY,EAMQ,GANRA,EAOL1b,EAPKgT,EAOLhT,YACAJ,EARKoT,EAQLpT,yBARK+b,EAAA3I,EASLzT,sBATK,IAAAoc,EASY,GATZA,EAaL7hB,EACE9B,KAAKJ,MADPkC,QAGIuG,EAAc,OAAP7B,EAAc,MAAQ,OAE7Bod,EAAY,GAlBXrb,EAAA,SAmBEC,GACP,IAAMtH,EAAOwhB,EAAMla,GACb/H,EAAOS,EAAKT,KACZO,EAAWE,EAAKF,WACjBgH,GAAgBA,IAAgBhH,EAASyH,SAAST,IAAgBvH,EAAKgI,SAAST,MACnF4b,EAAU5gB,KAENjB,EAAAC,EAAAC,cAAA,OAAKyG,IAAKF,EAAGrG,UAAU,uBACrBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2CACZjB,EAAKF,SACLE,EAAKT,KACLS,EAAKY,SAERC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qCAAqCI,QAAS,kBAAMX,EAAKuF,cAAcjG,KACvFa,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,OAAOC,KAAK,QAEpCrD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qCAAqCI,QAAS,kBAAMX,EAAK8F,yBAAyBxG,KAClGa,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,YAAYC,KAAK,YAlB5CoD,EAAI,EAAGA,EAAIka,EAAM5f,OAAQ0F,IAAKD,EAA9BC,GA2BT,IAAMqb,EAAiB,GA9ChBC,EAAA,SA+CEtb,GAEP,IADA,IAAM4a,EAAUN,EAAWta,GAClByP,EAAI,EAAGA,EAAI2K,EAAO9f,OAAQmV,IACjC,GAAImL,IAAYR,EAAO3K,GAAGzR,GAAI,CAC5Bqd,EAAe7gB,KAEXjB,EAAAC,EAAAC,cAAA,OAAKyG,IAAK0a,GACRrhB,EAAAC,EAAAC,cAAA,qBAAa2gB,EAAO3K,GAAGxX,MACvBsB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAK0hB,gBAAgBF,KAA/D,YAIN,QAZN,IAAS5a,EAAI,EAAGA,EAAIsa,EAAWhgB,OAAQ0F,IAAKsb,EAAnCtb,GAiBT,OACEzG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK0G,MAAM,OACT5G,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAac,MAAO,CAAC2F,YAAa,QAC/C7G,EAAAC,EAAAC,cAAC4G,EAAD,CACEpI,KAAM,cACNC,MAAOV,KAAKe,MAAMiH,YAClB3F,SAAUrC,KAAKqG,sBACfN,WAAY,OAGhBhE,EAAAC,EAAAC,cAAA,UAAQE,UAAU,oBAAoBI,QAAS,kBAAMX,EAAKuF,cAAc,QACtEpF,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,SADxB,SAIFpD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACZyhB,GAGH7hB,EAAAC,EAAAC,cAAC6G,EAAD,CACEpE,KAAM1E,KAAKe,MAAMqG,cACjBnC,QAASjF,KAAK8G,eACdlC,WAAY,kBACZC,MAAOwD,GAEPtG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAMC,SAClBqB,SAAUrC,KAAKI,oBAGjB2B,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMN,KAClB4B,SAAUrC,KAAKI,oBAGN,SAATiI,GACEtG,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAACiD,OAAQ,oBACnBnE,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAK6H,sBAAzC,qBAGM,QAATQ,GAAkB9B,IACnBxE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,eACLC,MAAOV,KAAKe,MAAM8hB,aAClBxgB,SAAUrC,KAAKI,qBAIrB2B,EAAAC,EAAAC,cAAA,4BACEqS,IAA6BxS,GAC7BC,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,UACNC,MAAOV,KAAKe,MAAMe,QAClBO,SAAUrC,KAAKqG,sBACfuT,QAAS,CAACtF,EjB1VQ,6BiB8VaxS,GACjCC,EAAAC,EAAAC,cAAA,WAAMqS,GAGRvS,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,cACNC,MAAOV,KAAKe,MAAMgiB,YAClB1gB,SAAUrC,KAAK8a,0BACflB,QAASgJ,EACT9I,cAAe,OACfD,YAAa,OAEf9X,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKkjB,cAAzC,OACAnhB,EAAAC,EAAAC,cAAA,WACG4hB,GAGH9hB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKsG,MAAzC,UAIJvE,EAAAC,EAAAC,cAAC6G,EAAD,CACEpE,KAAMkD,EACN3C,QAASjF,KAAKyH,0BACd7C,WAAY,oBACZC,MAAO,oBACP9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,mCACmCoF,EAAe9G,KADlD,KAGAsB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKqH,eAAzC,0DA3VN,MAAO,CACLb,GAAI,KACJxF,SAAU,GACVP,KAAM,GACNoiB,aAAc,GACd/gB,QAAS,GACTihB,YAAa,GACbD,WAAY,WAjDCtgB,IAAMC,WCiTVshB,eAjTb,SAAAA,EAAYnkB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+jB,IACjBlkB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAikB,GAAA5jB,KAAAH,KAAMJ,KAeRQ,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAlBnBb,EAsBnBwG,sBAAwB,SAAC5F,EAAMC,GAC7Bb,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAOC,KAxBOb,EA4BnBib,0BAA4B,SAACra,EAAMC,GACjC,IAAMqa,EAAWnM,SAASlO,EAAO,KAAO,EACxCb,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAOsa,KA/BOlb,EAiDnB8iB,YAAc,WACZxhB,IAAM8C,IAAI,aACP5C,KAAK,SAAAC,GACJ,IAAMshB,EAASthB,EAAIE,KACnB3B,EAAKS,SAAS,CACZsiB,OAAQA,OAtDG/iB,EA2DnBmkB,gBAAkB,WAChB7iB,IAAM8C,IAAI,iBACP5C,KAAK,SAAAC,GACJ,IAAM8Y,EAAa9Y,EAAIE,KACvB3B,EAAKS,SAAS,CACZ8Z,WAAYA,OAhEDva,EAqEnBsH,cAAgB,SAAC8c,GACD,OAAVA,EACFpkB,EAAKS,SAAS,CACZkG,GAAIyd,EAAMzd,GACV/F,KAAMwjB,EAAMxjB,KACZyjB,gBAAiBD,EAAMC,kBAGzBrkB,EAAKoH,iBAEPpH,EAAKS,SAAS,CACZ6jB,iBAAkB,GAClB/c,eAAe,KAjFAvH,EAqFnBiH,eAAiB,WACfjH,EAAKS,SAAS,CACZ8G,eAAe,KAvFAvH,EA2FnBoH,eAAiB,WACfpH,EAAKS,SAAST,EAAKmjB,wBA5FFnjB,EA+FnByG,KAAO,WAAM,IAAAxF,EAKPjB,EAAKkB,MAHPyF,EAFS1F,EAET0F,GAKEyd,EAAQ,CACVxjB,KARSK,EAGTL,KAMAyjB,gBATSpjB,EAITojB,iBAQS,OAAP1d,GACFyd,EAAMzd,GAAKA,EACXrF,IAAM0F,IAAI,YAAaod,GACpB5iB,KAAK,SAAAC,GACJzB,EAAKoH,iBACLpH,EAAK8iB,cACL9iB,EAAKiH,oBAGT3F,IAAMC,KAAK,YAAa6iB,GACrB5iB,KAAK,SAAAC,GACJzB,EAAKoH,iBACLpH,EAAK8iB,cACL9iB,EAAKiH,oBAxHMjH,EA6HnBukB,kBAAmB,WAAM,IAAAlc,EAInBrI,EAAKkB,MAFPojB,EAFqBjc,EAErBic,iBAFqBE,EAAAnc,EAGrBgc,uBAHqB,IAAAG,EAGH,GAHGA,EAMvB,GAAIF,IAEa,IADDD,EAAgBzT,UAAU,SAAAE,GAAW,OAAIA,IAAgBwT,IACrD,CAChB,IAAMG,EAAkBxkB,OAAAwR,EAAA,EAAAxR,CAAOokB,GAC/BI,EAAmBthB,KAAKmhB,GACxBtkB,EAAKS,SAAS,CACZ4jB,gBAAiBI,MAzINzkB,EA+InB0kB,qBAAuB,SAAC5T,GAAgB,IAAA6T,EAGlC3kB,EAAKkB,MADPmjB,uBAFoC,IAAAM,EAElB,GAFkBA,EAIhChU,EAAQ0T,EAAgBzT,UAAU,SAAAjK,GAAE,OAAIA,IAAOmK,IACrD,IAAe,IAAXH,EAAc,CAChB,IAAM8T,EAAkBxkB,OAAAwR,EAAA,EAAAxR,CAAOokB,GAC/BI,EAAmB7M,OAAOjH,EAAO,GACjC3Q,EAAKS,SAAS,CACZ4jB,gBAAiBI,MAxJJzkB,EA6JnBwH,cAAgB,WAAM,IAAAC,EAGhBzH,EAAKkB,MADPwG,sBAFkB,IAAAD,EAED,GAFCA,EAIpBnG,IAAMqG,OAAO,aAAeD,EAAef,IACxCnF,KAAK,SAAAC,GACJzB,EAAK8iB,cACL9iB,EAAK4H,+BApKQ5H,EAwKnB6H,yBAA2B,SAACuc,GAC1BpkB,EAAKS,SAAS,CACZiH,eAAgB0c,EAChBrc,0BAA0B,KA3KX/H,EA+KnB4H,0BAA4B,WAC1B5H,EAAKS,SAAS,CACZiH,eAAgB,GAChBK,0BAA0B,KAhL5B/H,EAAKkB,MAAQ,CACX6hB,OAAQ,GACRxI,WAAY,GACZxS,0BAA0B,EAC1BL,eAAgB,GAChBH,eAAe,EACfY,YAAa,GACbxB,GAAI,KACJ/F,KAAM,GACN0jB,iBAAkB,GAClBD,gBAAiB,IAZFrkB,mFA6CjBG,KAAK2iB,cACL3iB,KAAKgkB,mDAsJL,IAdO,IAAApiB,EAAA5B,KAAAgb,EASHhb,KAAKe,MAPPyF,EAFKwU,EAELxU,GAFKid,EAAAzI,EAGL4H,cAHK,IAAAa,EAGI,GAHJA,EAAAgB,EAAAzJ,EAILZ,kBAJK,IAAAqK,EAIQ,GAJRA,EAAAC,EAAA1J,EAKLkJ,uBALK,IAAAQ,EAKa,GALbA,EAML1c,EANKgT,EAMLhT,YACAJ,EAPKoT,EAOLpT,yBAPK+b,EAAA3I,EAQLzT,sBARK,IAAAoc,EAQY,GARZA,EAWDtb,EAAc,OAAP7B,EAAc,MAAQ,OAE7Bme,EAAa,GAbZpc,EAAA,SAcEC,GACP,IAAMyb,EAAQrB,EAAOpa,GACf/H,EAAOwjB,EAAMxjB,OACduH,GAAgBA,GAAevH,EAAKgI,SAAST,KAChD2c,EAAW3hB,KAEPjB,EAAAC,EAAAC,cAAA,OAAKyG,IAAKF,EAAGrG,UAAU,uBACrBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2CACZ1B,GAEHsB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qCAAqCI,QAAS,kBAAMX,EAAKuF,cAAc8c,KACvFliB,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,OAAOC,KAAK,QAEpCrD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qCAAqCI,QAAS,kBAAMX,EAAK8F,yBAAyBuc,KAClGliB,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,YAAYC,KAAK,YAf5CoD,EAAI,EAAGA,EAAIoa,EAAO9f,OAAQ0F,IAAKD,EAA/BC,GAwBT,IAAMoc,EAAsB,GAtCrBd,EAAA,SAuCEtb,GAEP,IADA,IAAMmI,EAAcuT,EAAgB1b,GAC3ByP,EAAI,EAAGA,EAAImC,EAAWtX,OAAQmV,IACrC,GAAItH,IAAgByJ,EAAWnC,GAAGzR,GAAI,CACpCoe,EAAoB5hB,KAEhBjB,EAAAC,EAAAC,cAAA,OAAKyG,IAAKiI,GACR5O,EAAAC,EAAAC,cAAA,oBAAYmY,EAAWnC,GAAGxX,MAC1BsB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAK2iB,qBAAqB5T,KAApE,YAIN,QAZN,IAASnI,EAAI,EAAGA,EAAI0b,EAAgBphB,OAAQ0F,IAAKsb,EAAxCtb,GAiBT,OACEzG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK0G,MAAM,OACT5G,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAac,MAAO,CAAC2F,YAAa,QAC/C7G,EAAAC,EAAAC,cAAC4G,EAAD,CACEpI,KAAM,cACNC,MAAOV,KAAKe,MAAMiH,YAClB3F,SAAUrC,KAAKqG,sBACfN,WAAY,OAGhBhE,EAAAC,EAAAC,cAAA,UAAQE,UAAU,oBAAoBI,QAAS,kBAAMX,EAAKuF,cAAc,QACtEpF,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,SADxB,SAIFpD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACZwiB,GAGH5iB,EAAAC,EAAAC,cAAC6G,EAAD,CACEpE,KAAM1E,KAAKe,MAAMqG,cACjBnC,QAASjF,KAAK8G,eACdlC,WAAY,kBACZC,MAAOwD,GAEPtG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMN,KAClB4B,SAAUrC,KAAKI,oBAEjB2B,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,mBACNC,MAAOV,KAAKe,MAAMojB,iBAClB9hB,SAAUrC,KAAK8a,0BACflB,QAASQ,EACTN,cAAe,OACfD,YAAa,OAEf9X,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKokB,mBAAzC,OACAriB,EAAAC,EAAAC,cAAA,WACG2iB,GAGH7iB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKsG,MAAzC,UAIJvE,EAAAC,EAAAC,cAAC6G,EAAD,CACEpE,KAAMkD,EACN3C,QAASjF,KAAKyH,0BACd7C,WAAY,oBACZC,MAAO,oBACP9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,mCACmCoF,EAAe9G,KADlD,KAGAsB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKqH,eAAzC,0DArQN,MAAO,CACLb,GAAI,KACJ/F,KAAM,GACN0jB,iBAAkB,GAClBD,gBAAiB,WA1CH1hB,IAAMC,WCsBXoiB,eAtBb,SAAAA,EAAYjlB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6kB,IACjBhlB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+kB,GAAA1kB,KAAAH,KAAMJ,KACDmB,MAAQ,GAFIlB,wEAOjB,OACEkC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAAC4a,GAAD,CAAMxD,UAAU,SACdtX,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,SACT9C,EAAAC,EAAAC,cAAC6iB,GAAD,OAEF/iB,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,QACT9C,EAAAC,EAAAC,cAAC8iB,GAAS/kB,KAAKJ,iBAhBE4C,IAAMC,WCgIpBuiB,eAjIb,SAAAA,EAAYplB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAglB,IACjBnlB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAklB,GAAA7kB,KAAAH,KAAMJ,KAaRQ,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAhBnBb,EAwBnBolB,UAAY,WACV9jB,IAAM8C,IAAI,oBACP5C,KAAK,SAAAC,GACJ,IAAMJ,EAAOI,EAAIE,KACjB3B,EAAKS,SAAS,CACZkG,GAAItF,EAAKsF,GACTxF,SAAUE,EAAKF,SACfP,KAAMS,EAAKT,KACXqB,QAASZ,EAAKY,QACdojB,OAAQhkB,EAAKgkB,YAjCFrlB,EAsCnBslB,eAAiB,aAtCEtlB,EAyCnByG,KAAO,WAAM,IAAAxF,EAMPjB,EAAKkB,MAJPwF,EAFSzF,EAETyF,mBACA9F,EAHSK,EAGTL,KACAQ,EAJSH,EAITG,SACA4B,EALS/B,EAKT+B,kBAGI3B,EAAO,CACXT,KAAMA,GAGR,GAAI8F,EAAoB,CACtB,GAAItF,IAAa4B,EACf,OAGF3B,EAAKD,SAAWA,EAGlBE,IAAM0F,IAAI,mBAAoB3F,GAC3BG,KAAK,SAAAC,OA9DSzB,EAkEnBgI,qBAAuB,WACrBhI,EAAKS,SAAS,SAAAwH,GAAS,MAAK,CAC1BvB,oBAAqBuB,EAAUvB,uBAlEjC1G,EAAKkB,MAAQ,CACXwF,oBAAoB,EACpBC,GAAI,KACJxF,SAAU,GACVP,KAAM,GACNqB,QAAS,GACTojB,OAAQ,GACRjkB,SAAU,GACV4B,kBAAmB,IAVJhD,mFAqBjBG,KAAKilB,6CAmDE,IAAA/c,EAMHlI,KAAKe,MAJPwF,EAFK2B,EAEL3B,mBACAvF,EAHKkH,EAGLlH,SACAc,EAJKoG,EAILpG,QACAojB,EALKhd,EAKLgd,OAGF,OACEnjB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAac,MAAO,CAACgD,MAAO,UACzClE,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,WAAMjB,GAENe,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMN,KAClB4B,SAAUrC,KAAKI,oBAEjB2B,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,WAAMH,GAENC,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,WAAMijB,GACNnjB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKmlB,gBAAzC,wBACApjB,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAK6H,sBAAzC,mBAEEtB,GACExE,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAME,SAClBoB,SAAUrC,KAAKI,oBACjB2B,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,oBACLC,MAAOV,KAAKe,MAAM8B,kBAClBR,SAAUrC,KAAKI,qBAIvB2B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKsG,MAAzC,iBA5HY9D,IAAMC,WCsBb2iB,eApBb,SAAAA,EAAYxlB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAolB,IACjBvlB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAslB,GAAAjlB,KAAAH,KAAMJ,KACDmB,MAAQ,GAFIlB,mFAOjBqS,QAAQC,IAAI,0BAA2B,qBACvCnS,KAAKqlB,kBAAkB7H,2DAGhB,IAAA5b,EAAA5B,KACP,OACE+B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAACsgB,GAAD,CAAmB+C,oBAAqB,SAAAC,GAAI,OAAK3jB,EAAKyjB,kBAAoBE,aAhB5C/iB,IAAMC,WCYtC+iB,WAAa,CACjB,CACE9V,KAAM,uBACNhP,MAAO,YACPyE,KAAM,cAER,CACEuK,KAAM,wBACNhP,MAAO,cACPyE,KAAM,YAER,CACEuK,KAAM,4BACNhP,MAAO,kBACPyE,KAAM,eAMJsgB,eACJ,SAAAA,EAAY7lB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAylB,IACjB5lB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2lB,GAAAtlB,KAAAH,KAAMJ,KAqBR8lB,gBAAkB,SAACC,GACjB9lB,EAAKS,SAAS,CACZslB,gBAAiBD,KAxBF9lB,EA4BnBgmB,OAAS,WACP1kB,IAAM8C,IAAI,gBACP5C,KAAK,SAAAC,GACJzB,EAAKD,MAAMkmB,cA7BfjmB,EAAKkB,MAAQ,CACX6kB,gBAAiB,wBAHF/lB,mFAQjB,IACI6P,EADEkS,EAAW5hB,KAAKJ,MAAM8d,SAASkE,SAEjCA,EAASmE,WAbS,sBAcpBrW,EAdoB,qBAiBpBA,EADiB8V,GAAWQ,KAAK,SAAAC,GAAC,OAAIrE,EAASmE,WAAWE,EAAEvW,QAC5CA,KAGlB1P,KAAKM,SAAS,CACZslB,gBAAiBlW,qCAiBZ,IAAA9N,EAAA5B,KAEL4lB,EACE5lB,KAAKe,MADP6kB,gBAGF1T,QAAQC,IAAI,sBALL,IAAA1N,EAUHzE,KAAKJ,MAFPoB,EARKyD,EAQLzD,SACAc,EATK2C,EASL3C,QAGEokB,EAAY,GACZC,EAAW,GAEbA,EADErkB,IAAYwS,EACHkR,GAAWY,OAAO,SAAAH,GAAC,MAAe,yBAAXA,EAAEvW,OAEzB8V,GAEb,IAnBO,IAAAjd,EAAA,SAmBEC,GACP,IAAM6d,EAAOF,EAAS3d,GAChBgR,EAASoM,IAAoBS,EAAK3W,KAAO,mBAAqB,GACpEwW,EAAUljB,KAENjB,EAAAC,EAAAC,cAAA,MAAIyG,IAAK2d,EAAK3W,KAAMvN,UAAWqX,GAC7BzX,EAAAC,EAAAC,cAACqkB,EAAA,EAAD,CAAMC,GAAIF,EAAK3W,KAAMnN,QAAS,kBAAMX,EAAK8jB,gBAAgBW,EAAK3W,QAC5D3N,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAMkhB,EAAKlhB,KAAM6J,YAAU,IAC5CjN,EAAAC,EAAAC,cAAA,QAAME,UAAU,2BAA2BkkB,EAAK3lB,WARjD8H,EAAI,EAAGA,EAAI2d,EAASrjB,OAAQ0F,IAAKD,EAAjCC,GAeT,IAAMge,EAxEgB,uBAwEMZ,EAAwC,mBAAqB,GAEzF,OACE7jB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAf,QACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,sBACX+jB,GAEHnkB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAS,yCAAA6C,OAA2CwhB,IACvDzkB,EAAAC,EAAAC,cAACqkB,EAAA,EAAD,CAAMC,GAAG,qBAAqBhkB,QAAS,kBAAMX,EAAK8jB,gBAnFtC,wBAoFV3jB,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,OAAO6J,YAAU,IACvCjN,EAAAC,EAAAC,cAAA,QAAME,UAAU,2BAA2BnB,KAG/Ce,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uCAAuCI,QAASvC,KAAK6lB,QAClE9jB,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,eAAe6J,YAAU,OAIrDjN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAACwkB,EAAA,EAAD,KACE1kB,EAAAC,EAAAC,cAACmgB,EAAA,EAAD,CAAOsE,OAAK,EAACrE,KAAK,wBAAwBsE,UAAWvgB,IACrDrE,EAAAC,EAAAC,cAACmgB,EAAA,EAAD,CAAOsE,OAAK,EAACrE,KAAK,qBAAqBsE,UAAW3B,KAClDjjB,EAAAC,EAAAC,cAACmgB,EAAA,EAAD,CAAOsE,OAAK,EAACrE,KAAK,4BAA4BsE,UAAWvB,KACzDrjB,EAAAC,EAAAC,cAACmgB,EAAA,EAAD,CAAOsE,OAAK,EAACrE,KAAK,4BAA4BC,OAAQ,kBAAMvgB,EAAAC,EAAAC,cAAC2kB,GAAmBhlB,EAAKhC,UACrFmC,EAAAC,EAAAC,cAACmgB,EAAA,EAAD,CAAOC,KAAK,uBAAuBC,OAAQ,kBAAMvgB,EAAAC,EAAAC,cAAC4kB,GAAcjlB,EAAKhC,YAGzEmC,EAAAC,EAAAC,cAAC6kB,EAAD,cApGgBtkB,IAAMC,WAyGfC,eAAW+iB,IC9HXsB,oLATX,OACEhlB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACqkB,EAAA,EAAD,CAAMC,GAAG,UAAT,iBALmB/jB,IAAMC,WCiBjCukB,IAAQC,IAAIC,IAAcC,IAAYC,IAAYC,IAAQC,IACxDC,IAAQC,IAAYC,IAAcC,IAAcC,IAChDC,IAAMC,IAAQC,IAAQC,IAAcC,IAAYC,IAChDC,IAAcC,IAAWC,IAAeC,IAAUC,IAClDC,IAAgBC,SAGZC,eACJ,SAAAA,EAAY7oB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyoB,IACjB5oB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2oB,GAAAtoB,KAAAH,KAAMJ,KAiDR+B,eAAiB,WAAyC,IAAxCJ,EAAwCgD,UAAAzB,OAAA,QAAAsd,IAAA7b,UAAA,GAAAA,UAAA,GAAxB,GAAIqd,EAAoBrd,UAAAzB,OAAA,QAAAsd,IAAA7b,UAAA,GAAAA,UAAA,GAAT,KAC3ChD,EAAcshB,aAChBhjB,EAAKD,MAAMmD,QAAQC,KAAK,mBAExBnD,EAAKS,SAAS,CACZU,SAAUO,EAAcP,SACxBc,QAASP,EAAcO,QACvB4mB,eAAe,GACd,WACD,IAAIC,EAAY,uBACZ/G,IACF+G,EAAY/G,GAEd/hB,EAAKD,MAAMmD,QAAQC,KAAK2lB,MA/DX9oB,EAoEnBimB,SAAW,WACTjmB,EAAKS,SAAS,CACZU,SAAU,GACVc,QAAS,GACT4mB,eAAe,GACd,WACD7oB,EAAKD,MAAMmD,QAAQC,KAAK,aAxE1BnD,EAAKkB,MAAQ,CACXC,SAAU,GACVc,QAAS,GACT4mB,eAAe,GALA7oB,mFASC,IAAA+B,EAAA5B,KACZ4hB,EAAW5hB,KAAKJ,MAAM8d,SAASkE,SAC/BjE,EAAS3d,KAAKJ,MAAM8d,SAASC,OAK/BiL,GAHW,IAAI/K,gBAAgBF,GACb1Z,IAAI,UAER2d,EAAWjE,GAMzB9b,GAAkB,EAFlB7B,KAAKe,MADPe,UAKAD,GAAkB,GAGfA,GACH7B,KAAKM,SAAS,CACZooB,eAAe,GACd,WACDvnB,IAAMC,KAAK,sBACRC,KAAK,SAAAC,GACJ,IAAMC,EAAgBD,EAAIE,KACtBD,EAAcE,MACdG,EAAKtB,SAAS,CACZwB,QAAS,GACT4mB,eAAe,GACd,WACD9mB,EAAKhC,MAAMmD,QAAQC,KAAK,YAG1BpB,EAAKD,eAAeJ,EAAeqnB,wCAoCxC,IAAAnQ,EAAAzY,KAAAc,EAKHd,KAAKe,MAHPC,EAFKF,EAELE,SACAc,EAHKhB,EAGLgB,QACA4mB,EAJK5nB,EAIL4nB,cAGE7mB,GAAkB,EAKtB,OAJIC,IACFD,GAAkB,GAGhB6mB,EAEA3mB,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,cAAc0jB,MAAM,EAAMzjB,KAAK,OAKvDrD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACwkB,EAAA,EAAD,KACE1kB,EAAAC,EAAAC,cAACmgB,EAAA,EAAD,CAAOsE,OAAK,EAACrE,KAAK,IAAIC,OAAQ,kBAAMvgB,EAAAC,EAAAC,cAAC6mB,EAAD,CAAOhnB,QAASA,EAASH,eAAgB8W,EAAK9W,oBAClFI,EAAAC,EAAAC,cAACmgB,EAAA,EAAD,CAAOC,KAAK,SAASC,OAAQ,kBAAMvgB,EAAAC,EAAAC,cAAC6mB,EAAD,CAAOhnB,QAASA,EAASH,eAAgB8W,EAAK9W,oBACjFI,EAAAC,EAAAC,cAACmgB,EAAA,EAAD,CAAOC,KAAK,kBAAkBsE,UAAWhkB,IACzCZ,EAAAC,EAAAC,cAAC8mB,GAAD,CACEC,cAAennB,EACfwgB,KAAK,aACLsE,UAAWlB,GACXzkB,SAAUA,EACVc,QAASA,EACTgkB,SAAU9lB,KAAK8lB,WAEjB/jB,EAAAC,EAAAC,cAACmgB,EAAA,EAAD,CAAOuE,UAAWI,cA/GVvkB,IAAMC,WAsHxB,SAASsmB,GAATxlB,GAAsE,IAApCd,EAAoCc,EAA/CojB,UAAsBqC,EAAyBzlB,EAAzBylB,cAAkBC,EAAOnpB,OAAAopB,EAAA,EAAAppB,CAAAyD,EAAA,+BACpE,OACExB,EAAAC,EAAAC,cAACmgB,EAAA,EAADtiB,OAAAoW,OAAA,GACM+S,EADN,CAEE3G,OACE,SAAC1iB,GAAD,OAA6B,IAAlBopB,EACTjnB,EAAAC,EAAAC,cAACQ,EAAD3C,OAAAoW,OAAA,GAAetW,EAAWqpB,IAC1BlnB,EAAAC,EAAAC,cAACknB,EAAA,EAAD,CAAU5C,GAAI,CAAC3E,SAAU,SAAU7gB,MAAO,CAACqoB,KAAMxpB,EAAM8d,iBAMlDhb,mBAAW+lB,cC1J1Btb,IAASmV,OACPvgB,EAAAC,EAAAC,cAAConB,GAAA,EAAD,CAAeC,SAAS,SACtBvnB,EAAAC,EAAAC,cAACsnB,GAAD,OAEFC,SAASC,eAAe","file":"static/js/main.da9ebb82.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { sysRole } = this.props;\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      axios.post('/auth/login/cookie')\r\n        .then(res => {\r\n          const loginResponse = res.data;\r\n          if (!loginResponse.error) {\r\n            this.props.onLoginSuccess(loginResponse);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.keyCode === 13) {\r\n      this.login();\r\n    }\r\n  }\r\n\r\n  login = () => {\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const loginResponse = res.data;\r\n        if (loginResponse.error) {\r\n          this.setState({\r\n            errorMsg: loginResponse.error\r\n          });\r\n        } else {\r\n          this.props.onLoginSuccess(loginResponse);\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div className=\"login-app-title\">Poli</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <div className=\"login-panel-body\">\r\n            <div className=\"form-panel\">\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n              <label>Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n              <button className=\"button login-button\" onClick={this.login}>Login</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport './Login.css';\r\n\r\nclass ChangeTempPassword extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  changePassword = () => {\r\n    const {\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    if (password && confirmedPassword\r\n        && password === confirmedPassword) {\r\n      if (password.length < 8) {\r\n        this.setState({\r\n          errorMsg: `Use 8 or more characters.`\r\n        });\r\n        return;\r\n      }\r\n\r\n      const user = {\r\n        password: password\r\n      }\r\n\r\n      axios.post('/auth/login/changepassword', user)\r\n        .then(res => {\r\n          const loginResponse = res.data || {};\r\n          if (loginResponse.error) {\r\n            this.setState({\r\n              errorMsg: loginResponse.error\r\n            });\r\n          } else {\r\n            this.props.history.push('/workspace/dashboard');\r\n          }\r\n        });\r\n    } else {\r\n      this.setState({\r\n        errorMsg: `Those passwords didn't match.`\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const titleStyle = {\r\n      fontSize: '22px',\r\n      textAlign: 'center',\r\n      fontWeight: 'bold',\r\n      marginBottom: '15px'\r\n    }\r\n\r\n    const tipStyle = {\r\n      fontWeight: 'bold',\r\n      marginBottom: '5px',\r\n      fontSize: '15px'\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div style={titleStyle}>Change password</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <div className=\"login-panel-body\">\r\n            <div className=\"form-panel\">\r\n              <div style={tipStyle}>* Use 8 or more characters</div>\r\n              <label>New password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n              <label>Confirm password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"confirmedPassword\" \r\n                value={this.state.confirmedPassword}\r\n                onChange={this.handleInputChange} />\r\n              <button className=\"button login-button\" onClick={this.changePassword}>Confirm</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ChangeTempPassword);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      modalClass = '',\r\n      title,\r\n      children\r\n    } = this.props;\r\n\r\n    const modalStatus = show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={`modal-panel ${modalClass}`}>\r\n          <div className=\"model-header row\">\r\n            <div className=\"model-title\">{title}</div>\r\n            <button className=\"model-close-button icon-button\" onClick={() => this.props.onClose()}>\r\n              <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          <div className='modal-body'>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Toast.css';\r\n\r\nclass Toast extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showToast: false,\r\n      message: ''\r\n    };\r\n\r\n    Toast._toastRef = this;\r\n  }\r\n\r\n  show = (message) => {\r\n    this.setState({ \r\n      showToast: true,\r\n      message: message\r\n    }, () => {\r\n      setTimeout(() => {\r\n        this.hide();\r\n      }, 3500);\r\n    });\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({ \r\n      showToast: false,\r\n      message: ''\r\n    });\r\n  }\r\n\r\n  static show = (message) => {\r\n    Toast._toastRef.show(message);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showToast,\r\n      message\r\n    } = this.state;\r\n\r\n    const toastStatus = showToast ? 'display-block' : 'display-none';\r\n\r\n    return (\r\n      <div className={`toast-container ${toastStatus}`}>\r\n        <button className=\"button\" onClick={this.hide}>X</button>\r\n        <div>\r\n          {message}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toast;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './SearchInput.css';\r\n\r\nclass SearchInput extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    inputWidth: PropTypes.number\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const { name } = this.props;\r\n    const value = event.target.value;\r\n    this.props.onChange(name, value);\r\n  }\r\n\r\n  reset = () => {\r\n    const { name } = this.props;\r\n    this.props.onChange(name, '');\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      value,\r\n      inputWidth\r\n    } = this.props;\r\n\r\n    let inputStyle = {};\r\n    if (inputWidth) {\r\n      inputStyle.width = inputWidth + 'px';\r\n    }\r\n\r\n    return (\r\n      <div className=\"search-input-container\">\r\n        <div className=\"row\">\r\n          <div className=\"search-input-icon float-left\">\r\n            <FontAwesomeIcon icon=\"search\" style={{margin: '10px'}} />\r\n          </div>\r\n          <div className=\"float-left\">\r\n            <input\r\n              type=\"text\"\r\n              name={name}\r\n              value={value}\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleInputChange}\r\n              className=\"search-input-input\"\r\n              style={inputStyle}\r\n            />\r\n          </div>\r\n          <button className=\"button search-input-reset-button float-left\" onClick={this.reset}>\r\n            <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchInput;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './Datasource.css';\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport SearchInput from '../components/SearchInput';\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      showUpdatePassword: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataSources();\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      driverClassName,\r\n      username,\r\n      password,\r\n      name,\r\n      ping,\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      Toast.show('Enter a name.');\r\n      return;\r\n    }\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      driverClassName: driverClassName,\r\n      username: username,\r\n      name: name,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword && password) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          Toast.show('The name exists. Try another.');\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          Toast.show('The name exists. Try another.');\r\n        });\r\n    } \r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        Toast.show(result);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        driverClassName: ds.driverClassName,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/jdbcdatasource/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (datasource) => {\r\n    this.setState({\r\n      objectToDelete: datasource,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      id,\r\n      jdbcDataSources = [],\r\n      searchValue,\r\n      showConfirmDeletionPanel,\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const jdbcDataSourceItems = [];\r\n    for (let i = 0; i < jdbcDataSources.length; i++) {\r\n      const ds = jdbcDataSources[i];\r\n      const name = ds.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        jdbcDataSourceItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {name}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.ping(ds.id)}>\r\n                  <FontAwesomeIcon icon=\"plug\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"full-page-content\">\r\n        <div class=\"row\">\r\n          <div className=\"float-left\" style={{marginRight: '5px'}}>\r\n            <SearchInput \r\n              name={'searchValue'} \r\n              value={this.state.searchValue} \r\n              onChange={this.handleNameInputChange} \r\n              inputWidth={200}\r\n            />\r\n          </div>\r\n          <button className=\"button float-left\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New\r\n          </button>\r\n        </div>\r\n        <div className=\"row mt-10\">\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Name <span className=\"required\">*</span></label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n            />\r\n\r\n            <label>Connection Url</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label>Driver Class Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"driverClassName\" \r\n              value={this.state.driverClassName}\r\n              onChange={this.handleInputChange} \r\n            />\r\n\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} \r\n            />\r\n            \r\n            { mode === 'Edit' && (\r\n              <div style={{margin: '3px 0px 8px 0px'}}>\r\n                <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n              </div>\r\n            )}\r\n\r\n            { (mode === 'New' || showUpdatePassword) && ( \r\n              <div>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} \r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <label>Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} \r\n            />\r\n            <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","/**\r\n * Constants\r\n */\r\nexport const CHART = 'chart';\r\nexport const FILTER = 'filter';\r\nexport const WIDGET_TYPES = [CHART, FILTER];\r\n\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\r\n\r\nexport const SYS_ROLE_ADMIN = 'admin';\r\nexport const SYS_ROLE_DEVELOPER = 'developer';\r\nexport const SYS_ROLE_VIEWER = 'viewer';\r\n\r\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;","import React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPalette: false\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      showPalette: !prevState.showPalette\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      showPalette: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    const { name } = this.props;\r\n    const rgb = color.rgb;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    this.props.onChange(name, rgba);\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: this.props.value\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: 2\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.showPalette && (\r\n          <div style={popover}>\r\n            <div style={cover} onClick={this.handleClose} />\r\n            <ChromePicker color={this.props.value} onChange={this.handleChange} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    const {\r\n      name,\r\n      checked\r\n    } = this.props;\r\n\r\n    this.props.onChange(name, !checked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      checked\r\n    } = this.props;\r\n\r\n    const checkmarkBoxBgColor = checked ? '#000000' : '#FFFFFF';\r\n    const checkmarkBoxStyle = {\r\n      backgroundColor: checkmarkBoxBgColor\r\n    };\r\n\r\n    return (\r\n      <div className=\"checkbox-container\" onClick={this.toggle}>\r\n        <div className=\"checkbox-checkmark\">\r\n          <div className=\"checkbox-checkmark-box\" style={checkmarkBoxStyle}>\r\n          </div>\r\n        </div>\r\n        <div className=\"checkbox-label\">{value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};\r\n\r\nexport const jsonToArray = (json) => {\r\n  let array;\r\n  try {\r\n    array = JSON.parse(json);\r\n  } catch(e) {\r\n    array = [];\r\n  }\r\n  return array;\r\n}\r\n","import * as Util from '../api/Util';\r\n\r\nconst CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOptionTemplate = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      type: 'scroll',\r\n      orient: 'vertical',\r\n      data: legend,\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['40%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport const getPieOption = (queryResultData, pieKey, pieValue) => {\r\n  let legend = [];\r\n  let series = [];\r\n  for (let i = 0; i < queryResultData.length; i++) {\r\n    const row = queryResultData[i];\r\n    legend.push(row[pieKey]);\r\n    series.push({\r\n      name: row[pieKey],\r\n      value: row[pieValue]\r\n    });  \r\n  }\r\n  return getPieOptionTemplate(legend, series);\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    /*\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n      boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n    */\r\n   \r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport './TableWidget.css';\r\n\r\nclass TableWidget extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  goToLink = (link) => {\r\n    this.props.onTableTdClick(link);\r\n  }\r\n\r\n  render() {   \r\n    const {\r\n      data = [],\r\n      columns = [],\r\n      drillThrough = [],\r\n      error\r\n    } = this.props;\r\n\r\n    const columnHeaders = [];\r\n    columns.forEach(column => {\r\n      const columnName = column.name;\r\n      const header = {\r\n        Header: columnName,\r\n        accessor: columnName\r\n      };\r\n      if (drillThrough.length > 0) {\r\n        const index = drillThrough.findIndex(d => d.columnName === columnName);\r\n        if (index !== -1) {\r\n          const dashboardId = drillThrough[index].dashboardId;\r\n          header.Cell = (props => \r\n            <span className=\"link-label\" \r\n              onClick={() => this.goToLink(`/workspace/dashboard/${dashboardId}?${columnName}=${props.value}`)}>\r\n              {props.value}\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n\r\n      columnHeaders.push(header);\r\n    });\r\n\r\n    if (error) {\r\n      return (\r\n        <div>\r\n          {error}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ReactTable\r\n        data={data}\r\n        columns={columnHeaders}\r\n        defaultPageSize={10}\r\n        previousText={'Prev'}\r\n        nextText={'Next'}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableWidget;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Checkbox from '../Checkbox';\r\nimport './Slicer.css';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSelectAll: false,\r\n      searchValue: ''\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    checkBoxes: PropTypes.array.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n  };\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n\r\n    this.props.onChange(this.props.id, newCheckBoxes);\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.id, newCheckBoxes);\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      checkBoxes = [],\r\n    } = this.props;\r\n\r\n    const {\r\n      searchValue,\r\n      isSelectAll\r\n    } = this.state;\r\n\r\n    const checkBoxItems = [];\r\n    for (let i = 0; i < checkBoxes.length; i++) {\r\n      const checkBox = checkBoxes[i];\r\n      const value = checkBox.value;\r\n      if (!searchValue || (searchValue && value.includes(searchValue))) {\r\n        checkBoxItems.push(\r\n          (\r\n            <Checkbox \r\n              key={i} \r\n              name={checkBox.value} \r\n              value={checkBox.value} \r\n              checked={checkBox.isChecked} \r\n              onChange={this.handleCheckBoxChange} \r\n            />\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    const selectText = isSelectAll ? 'Deselect All' : 'Select All'\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" style={{marginBottom: '5px'}} onClick={this.toggleSelectAll}>{selectText}</button>\r\n        <input \r\n          type=\"text\" \r\n          name=\"name\" \r\n          value={this.state.searchValue}\r\n          onChange={this.handleSearchValueChange}\r\n          placeholder=\"Search...\"\r\n        />\r\n        \r\n        <div className=\"slicer-body\">\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\nimport TableWidget from './TableWidget';\r\nimport Slicer from './filters/Slicer';\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough || []; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        const index = drills.findIndex(d => d.columnName === header);\r\n        if (index !== -1) {\r\n          const dashboardId = drills[index].dashboardId;\r\n          this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  onTableTdClick = (link) => {\r\n    this.props.history.push(link);\r\n  }\r\n\r\n  onSlicerChange = (widgetId, checkBoxes) => {\r\n    const data = {\r\n      checkBoxes: checkBoxes\r\n    };\r\n    this.props.onWidgetFilterInputChange(widgetId, data);\r\n  }\r\n\r\n  onSingleValueChange = (widgetId, event) => {\r\n    const value = event.target.value;\r\n    const data = {\r\n      value: value\r\n    };\r\n    this.props.onWidgetFilterInputChange(widgetId, data);\r\n  }\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      id,\r\n      type,\r\n      chartType,\r\n      filterType,\r\n      queryResult = {},\r\n      drillThrough,\r\n      data = {},\r\n      checkBoxes,\r\n      value\r\n    } = this.props;\r\n\r\n    const queryResultData = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    let widgetItem = (<div></div>);\r\n    if (type === Constants.CHART) {\r\n      if (chartType === Constants.TABLE) {\r\n        widgetItem = (\r\n          <TableWidget\r\n            data={queryResultData}\r\n            columns={columns}\r\n            error={error}\r\n            drillThrough={drillThrough}\r\n            onTableTdClick={this.onTableTdClick}\r\n          />\r\n        );\r\n      } else if (chartType === Constants.PIE) {\r\n        const { \r\n          pieKey,\r\n          pieValue\r\n        } = data;\r\n        const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\r\n        widgetItem = (\r\n          <ReactEcharts \r\n            option={chartOption}   \r\n            className=\"echarts\"\r\n            onEvents={onChartEvents}  \r\n          />\r\n        );\r\n      } \r\n    } else if (type === Constants.FILTER) {\r\n      if (filterType === Constants.SLICER) {\r\n        widgetItem = (\r\n          <div className=\"grid-box-content-panel\">\r\n            <Slicer \r\n              id={id} \r\n              checkBoxes={checkBoxes} \r\n              onChange={this.onSlicerChange} \r\n            />\r\n          </div>\r\n        );\r\n      } else if (filterType === Constants.SINGLE_VALUE) {\r\n        widgetItem = (\r\n          <div className=\"grid-box-content-panel\">\r\n            <input \r\n              type=\"text\"  \r\n              value={value}\r\n              onChange={(event) => this.onSingleValueChange(id, event)} \r\n            />\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    \r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      title,\r\n      isEditMode,\r\n      style = {}\r\n    } = this.props;\r\n\r\n    const { \r\n      showBorder = false,\r\n      showTitle = true,\r\n      borderColor,\r\n      backgroundColor,\r\n      zIndex\r\n    } = style;\r\n\r\n    const borderStyle = showBorder ? `2px solid ${borderColor}` : '2px solid transparent';\r\n\r\n    let gridBoxStyle = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: zIndex,\r\n      border: borderStyle\r\n    };\r\n\r\n    console.log(gridBoxStyle);\r\n\r\n    /*\r\n    <div className=\"grid-box-file-button-group\">\r\n      <div className=\"inline-block\" onClick={() => this.exportJson(id)}>\r\n        <FontAwesomeIcon icon=\"file-export\" fixedWidth />\r\n      </div>\r\n      \r\n      <div className=\"inline-block\" onClick={() => this.exportCsv(id)}>\r\n        <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\r\n      </div>\r\n    </div>\r\n    */\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={gridBoxStyle}>\r\n        <div className=\"grid-box-title\">\r\n          <div className=\"grid-box-title-value float-left ellipsis\">{title}</div>\r\n\r\n          { isEditMode && (\r\n            <div className=\"float-right\" style={{marginRight: '20px'}}>\r\n              <div className=\"grid-box-icon inline-block\" onClick={() => this.editWidget(id)}>\r\n                <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n              </div>\r\n              <div className=\"grid-box-icon inline-block\" onClick={() => this.removeWidget(id)}>\r\n                <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { isEditMode && (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} \r\n          />\r\n        )}\r\n\r\n        { isEditMode && (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} \r\n          />\r\n        )}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(GridItem);","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      backgroundColor,\r\n      widgets = [],\r\n      showGridlines\r\n    } = this.props;\r\n\r\n    let style = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      backgroundColor: backgroundColor\r\n    };\r\n\r\n    if (showGridlines) {\r\n      style.backgroundSize = '15px 15px';\r\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n        onWidgetFilterInputChange={this.props.onWidgetFilterInputChange}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={style} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ColorPicker from './ColorPicker';\r\nimport Checkbox from './Checkbox';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\nimport Modal from '../components/Modal';\r\nimport * as Constants from '../api/Constants';\r\n\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      snapToGrid: false,\r\n      showGridlines: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  resizeGrid = (viewWidth) => {\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n\r\n    const gridWidth = viewWidth - 10;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return Math.round(num * gridWidth / BASE_WIDTH);\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Math.round(num * BASE_WIDTH / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, viewWidth) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get(`/ws/widget/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(viewWidth);\r\n          this.queryFilters();\r\n          this.queryCharts();\r\n        });\r\n      });\r\n  }\r\n \r\n  queryCharts() {\r\n    const filterParams = this.getFilterParams();\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const {\r\n        id,\r\n        type,\r\n      } = widgets[i];\r\n      if (type === Constants.CHART) {\r\n        this.queryChart(id, filterParams);\r\n      }\r\n    }\r\n  }\r\n\r\n  queryFilters() {\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const {\r\n        id,\r\n        type,\r\n        filterType\r\n      }  = widgets[i];\r\n      if (type === Constants.FILTER) {\r\n        this.queryFilter(id, filterType);\r\n      }\r\n    }\r\n  }\r\n\r\n  queryChart(widgetId, filterParams) {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    axios.post(`/ws/jdbcquery/widget/${widgetId}`, params)\r\n      .then(res => {\r\n        const queryResult = res.data;\r\n        const index = widgets.findIndex(w => w.id === queryResult.id);\r\n        const newWidgets = [...widgets];\r\n        newWidgets[index].queryResult = queryResult;\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n\r\n  queryFilter(widgetId, filterType) {\r\n    const { widgets } = this.state;\r\n    if (filterType === Constants.SLICER) {\r\n      axios.post(`/ws/jdbcquery/widget/${widgetId}`, [])\r\n        .then(res => {\r\n          const queryResult = res.data;\r\n          const queryResultData = Util.jsonToArray(queryResult.data);\r\n          const checkBoxes = [];\r\n          for (let i = 0; i < queryResultData.length; i++) {\r\n            const values = Object.values(queryResultData[i]);\r\n            for (const val of values) {\r\n              checkBoxes.push({\r\n                value: val,\r\n                isChecked: false\r\n              });\r\n            }\r\n          }\r\n          const index = widgets.findIndex(w => w.id === queryResult.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = queryResult;\r\n          newWidgets[index].checkBoxes = checkBoxes;\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    } else if (filterType === Constants.SINGLE_VALUE) {\r\n      /*\r\n        const values = Object.values(queryResultData);\r\n        let value = '';\r\n        for (const val of values) {\r\n          value = val;\r\n          break;\r\n        }\r\n        newFilters[index].value = value;\r\n      */\r\n      const index = widgets.findIndex(w => w.id === widgetId);\r\n      const newWidgets = [...widgets];\r\n      newWidgets[index].value = '';\r\n      this.setState({\r\n        widgets: newWidgets\r\n      });\r\n    }\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    this.setState({\r\n      [name]: isChecked\r\n    });\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    }, () => {\r\n      // FIXME: only save this widget. Not all.\r\n      this.saveWidgets();\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete\r\n    } = this.state;\r\n    const widgetId = objectToDelete;\r\n    axios.delete(`/ws/widget/${widgetId}`)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (widgetId) => {\r\n    this.setState({\r\n      objectToDelete: widgetId,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  onWidgetFilterInputChange = (widgetId, data) => {\r\n    const { \r\n      widgets = []\r\n    } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widgetId);\r\n    const newWidgets = [...widgets];\r\n    const widget = widgets[index];\r\n    if (widget.filterType === Constants.SLICER) {\r\n      const {\r\n        checkBoxes\r\n      } = data;\r\n      newWidgets[index].checkBoxes = checkBoxes;\r\n    } else if (widget.filterType === Constants.SINGLE_VALUE) {\r\n      const {\r\n        value\r\n      } = data;\r\n      newWidgets[index].value = value;\r\n    }\r\n\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });   \r\n  }\r\n\r\n  /**\r\n   * FIXME: optimize it. No need to calculate this every time.\r\n   */\r\n  getFilterParams = () => {\r\n    const { \r\n      widgets = []\r\n    } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      if (widget.type === Constants.FILTER) {\r\n        const { filterType } = widget;\r\n        const filterParam = {};\r\n        if (filterType === Constants.SLICER) {\r\n          const { \r\n            checkBoxes = []\r\n          } = widget;\r\n          const paramValues = [];\r\n          for (let j = 0; j < checkBoxes.length; j++) {\r\n            const checkBox = checkBoxes[j];\r\n            if (checkBox.isChecked) {\r\n              paramValues.push(checkBox.value);\r\n            }\r\n          }\r\n          filterParam.value = paramValues;\r\n          if (paramValues.length === checkBoxes.length) {\r\n            filterParam.remark = 'select all';\r\n          }\r\n        } else if (filterType === Constants.SINGLE_VALUE) {\r\n          filterParam.value = widget.value;\r\n        }\r\n        filterParam.param = widget.data.queryParameter;\r\n        filterParam.type = widget.filterType;\r\n        filterParams.push(filterParam);\r\n      }\r\n    }\r\n    return filterParams;\r\n  }\r\n\r\n  render() {\r\n    const { widgetViewWidth } = this.props;\r\n    const style = {\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {this.props.isEditMode && (\r\n          <div className=\"dashboard-attribute-edit-panel\">\r\n            <div className=\"inline-block\">Height:</div>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.props.height}\r\n              onChange={(event) => this.props.onStyleValueChange('height', event.target.value)} \r\n              className=\"inline-block\" \r\n              style={{width: '200px'}}\r\n              />\r\n\r\n            <div>\r\n              Background Color\r\n              <ColorPicker name={'backgroundColor'} value={this.props.backgroundColor} onChange={this.props.onStyleValueChange} />\r\n            </div>\r\n\r\n            <Checkbox name=\"snapToGrid\" value=\"Snap to grid\" checked={this.state.snapToGrid} onChange={this.handleCheckBoxChange} />\r\n            <Checkbox name=\"showGridlines\" value=\"Show gridlines\" checked={this.state.showGridlines} onChange={this.handleCheckBoxChange} />\r\n  \r\n          </div>\r\n        )}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          backgroundColor={this.props.backgroundColor}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.openConfirmDeletionPanel} \r\n          onWidgetFilterInputChange={this.onWidgetFilterInputChange}\r\n        />\r\n        \r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete this widget?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","import React from 'react';\r\nimport './Tabs.css';\r\n\r\nclass Tabs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const activeTab = this.props.activeTab;\r\n    this.setState({\r\n      activeTab: activeTab\r\n    });\r\n  }\r\n\r\n  handleTabClick = (title) => {\r\n    this.setState({\r\n      activeTab: title\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children\r\n    } = this.props;\r\n\r\n    const {\r\n      activeTab\r\n    } = this.state;\r\n\r\n    const tabHeaders = [];\r\n    let tabContent = null;\r\n    for (let i = 0; i < children.length; i++) {\r\n      if (children[i]) {\r\n        const title = children[i].props.title;\r\n        let active = '';\r\n        if (title === activeTab) {\r\n          active = 'tab-header-active';\r\n          tabContent = children[i].props.children;\r\n        }\r\n        \r\n        tabHeaders.push(\r\n          <li className={`tab-header-item ${active}`} key={i} onClick={() => this.handleTabClick(title)}>{title}</li>\r\n        );\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className=\"tab-container\">\r\n        <ul className=\"tab-header\">\r\n          {tabHeaders}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {tabContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Select extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    optionDisplay: PropTypes.string,\r\n    optionValue: PropTypes.string,\r\n    preloadOneEmpty: PropTypes.bool\r\n  };\r\n\r\n  handleOptionChange = (event) => {\r\n    const name = this.props.name;\r\n    const value = event.target.value;\r\n    this.props.onChange(name, value);\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      value,\r\n      options = [],\r\n      optionValue,\r\n      optionDisplay,\r\n      preloadOneEmpty = true\r\n    } = this.props;\r\n\r\n    const optionList = [];\r\n    if (preloadOneEmpty) {\r\n      optionList.push(\r\n        <option value=\"\" key=\"\"></option>\r\n      );\r\n    }\r\n    \r\n    options.forEach((option, index) => {\r\n      let value;\r\n      let display;\r\n      if (optionValue && optionDisplay) {\r\n        // The options contain objects.\r\n        value = option[optionValue];\r\n        display = option[optionDisplay];\r\n      } else {\r\n        // The options contain string or number.\r\n        value = option;\r\n        display = option;\r\n      }\r\n      \r\n      optionList.push(\r\n        <option value={value} key={index}>{display}</option>\r\n      ) \r\n    });\r\n\r\n    return (\r\n      <select value={value} onChange={this.handleOptionChange}>\r\n        {optionList}\r\n      </select>\r\n    )\r\n  };\r\n}\r\n\r\nexport default Select;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport AceEditor from 'react-ace';\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nimport './WidgetEditPanel.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport Checkbox from './Checkbox';\r\nimport Tabs from './Tabs';\r\nimport Select from './Select';\r\nimport TableWidget from './TableWidget';\r\nimport ColorPicker from './ColorPicker';\r\n\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      title: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: {},\r\n      type: Constants.CHART,\r\n      filterType: Constants.SINGLE_VALUE,\r\n      chartType: Constants.TABLE,\r\n      style: {\r\n        showBorder: false,\r\n        borderColor: 'rgba(9, 30, 66, 1)',\r\n        showTitle: true,\r\n        backgroundColor: 'rgba(255, 255, 255, 1)',\r\n        zIndex: 1\r\n      },\r\n      queryParameter: '',\r\n      drillThrough: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: '',\r\n      pieKey: '',\r\n      pieValue: '',\r\n      chartOption: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const widget = res.data;\r\n          const {\r\n            type,\r\n            chartType,\r\n            filterType,\r\n            drillThrough\r\n          } = widget;\r\n          if (type === Constants.CHART) {\r\n            this.setState({\r\n              chartType: chartType,\r\n              drillThrough: drillThrough\r\n            });\r\n\r\n            if (chartType === Constants.PIE) {\r\n              const {\r\n                pieKey,\r\n                pieValue\r\n              } = widget.data;\r\n              this.setState({\r\n                pieKey: pieKey,\r\n                pieValue: pieValue\r\n              });\r\n            }\r\n          } else if (type === Constants.FILTER) {\r\n            const {\r\n              queryParameter\r\n            } = widget.data;\r\n            this.setState({\r\n              filterType: filterType,\r\n              queryParameter: queryParameter\r\n            });\r\n            if (filterType === Constants.SLICER) {\r\n\r\n            } else if (filterType === Constants.SINGLE_VALUE) {\r\n\r\n            }\r\n          }\r\n          \r\n          this.setState({\r\n            widgetId: widgetId,\r\n            title: widget.title,\r\n            x: widget.x,\r\n            y: widget.y,\r\n            width: widget.width,\r\n            height: widget.height,\r\n            sqlQuery: widget.sqlQuery,\r\n            type: type,\r\n            jdbcDataSourceId: widget.jdbcDataSourceId,\r\n            style: widget.style\r\n          }, () => {\r\n            this.runQuery();\r\n          });\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  onStyleValueChange = (name, value) => {\r\n    const style = {...this.state.style};\r\n    style[[name]] = value;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n\r\n  save = () => {\r\n    const {\r\n      widgetId,\r\n      title,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      type,\r\n      style\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      title: title,\r\n      dashboardId: this.props.dashboardId,\r\n      type: type,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      style: style\r\n    }\r\n\r\n    if (type === Constants.CHART) {\r\n      const {\r\n        chartType,\r\n        drillThrough\r\n      } = this.state;\r\n      widget.drillThrough = drillThrough;\r\n      widget.chartType = chartType;\r\n\r\n      if (chartType === Constants.TABLE) {\r\n\r\n      } else if (chartType === Constants.PIE) {\r\n        const {\r\n          pieKey,\r\n          pieValue\r\n        } = this.state;\r\n        widget.data = {\r\n          pieKey: pieKey,\r\n          pieValue: pieValue\r\n        }\r\n      }\r\n    } else if (type === Constants.FILTER) {\r\n      const  {\r\n        filterType,\r\n        queryParameter\r\n      } = this.state;\r\n      widget.filterType = filterType;\r\n      widget.data = {\r\n        queryParameter: queryParameter\r\n      }\r\n      if (filterType === Constants.SLICER) {\r\n\r\n      } else if (filterType === Constants.SINGLE_VALUE) {\r\n\r\n      }\r\n    }\r\n    \r\n\r\n    if (widgetId === null) {\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          queryResult: result\r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = () => {\r\n    const { \r\n      drillThrough,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const index = drillThrough.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrillThrough = [...drillThrough];\r\n      newDrillThrough.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drillThrough: newDrillThrough\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill) => {\r\n    const { drillThrough } = this.state;\r\n    const index = drillThrough.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrillThrough = [...drillThrough];\r\n      newDrillThrough.splice(index, 1);\r\n      this.setState({\r\n        drillThrough: newDrillThrough\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = () => {\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        pieKey, \r\n        pieValue, \r\n        queryResult = {}\r\n      } = this.state;\r\n      const data = Util.jsonToArray(queryResult.data);\r\n      const chartOption = EchartsApi.getPieOption(data, pieKey, pieValue);\r\n      this.setState({\r\n        chartOption: chartOption\r\n      });\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      queryResult = {},\r\n    } = this.state;\r\n    const columns = queryResult.columns || [];\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        chartOption,\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n\r\n      chartPreview = (\r\n        <div>\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label>Aggr Key (string)</label>\r\n          <Select\r\n            name={'pieKey'}\r\n            value={pieKey}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n          />\r\n\r\n\r\n          <label>By Aggr Value (number)</label>\r\n          <Select\r\n            name={'pieValue'}\r\n            value={pieValue}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n          />\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      type,\r\n      queryResult,\r\n      jdbcDataSources = [],\r\n      drillThrough = [],\r\n      drillDashboards = []\r\n    } = this.state;\r\n\r\n    const data = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    const drillItems = drillThrough.map(drill =>\r\n      <div key={drill.columnName} className=\"row\">\r\n        <div className=\"float-left\">Column: {drill.columnName}</div>\r\n        <div className=\"float-left\">Dashboard: {drill.dashboardId}</div>\r\n        <button className=\"button float-right\"onClick={() => this.removeDrillThrough(drill)}>\r\n          <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    const columnItems = columns.map(col =>\r\n      <div key={col.name}>{col.name} {col.dataType}</div>\r\n    );\r\n\r\n    const showQueryTab = type === Constants.CHART || (type === Constants.FILTER && this.state.filterType === Constants.SLICER);\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        <div className=\"row mt-10\">\r\n          <div className=\"float-left\">Type:</div>\r\n          <div className=\"float-left\">\r\n            <Select\r\n              name={'type'}\r\n              value={type}\r\n              onChange={this.handleOptionChange}\r\n              options={Constants.WIDGET_TYPES}\r\n              preloadOneEmpty={false}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mt-10\">\r\n          <Tabs activeTab=\"Basic\">\r\n            <div title=\"Basic\">\r\n              <div className=\"form-panel\">\r\n                <label>Title</label>\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"title\" \r\n                  value={this.state.title}\r\n                  onChange={this.handleInputChange} \r\n                />\r\n\r\n                <Checkbox name=\"showBorder\" value=\"Show border\" checked={this.state.style.showBorder} onChange={this.onStyleValueChange} />\r\n                <Checkbox name=\"showTitle\" value=\"Show title\" checked={this.state.style.showTitle} onChange={this.onStyleValueChange} />\r\n\r\n                <label>Z Index</label>\r\n                <input \r\n                  type=\"number\" \r\n                  name=\"zIndex\" \r\n                  value={this.state.style.zIndex}\r\n                  onChange={(event) => this.onStyleValueChange('zIndex', event.target.value)} \r\n                />\r\n\r\n                <div>\r\n                  Border Color\r\n                  <ColorPicker name={'borderColor'} value={this.state.style.borderColor} onChange={this.onStyleValueChange} />\r\n                </div>\r\n\r\n                <div>\r\n                  Background Color\r\n                  <ColorPicker name={'backgroundColor'} value={this.state.style.backgroundColor} onChange={this.onStyleValueChange} />\r\n                </div>\r\n\r\n                \r\n              </div>\r\n            </div>\r\n\r\n            { type === Constants.FILTER && (  \r\n              <div title=\"Filter\">\r\n                <div className=\"form-panel\">\r\n                  <label>Filter Options</label>\r\n                  <Select\r\n                    name={'filterType'}\r\n                    value={this.state.filterType}\r\n                    onChange={this.handleOptionChange}\r\n                    options={Constants.FILTER_TYPES}\r\n                    preloadOneEmpty={false}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { showQueryTab && (\r\n              <div title=\"Query\">\r\n                <div className=\"form-panel\">\r\n                  <label>DataSource</label>\r\n                  <Select\r\n                    name={'jdbcDataSourceId'}\r\n                    value={this.state.jdbcDataSourceId}\r\n                    onChange={this.handleIntegerOptionChange}\r\n                    options={jdbcDataSources}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'id'}\r\n                    />\r\n                \r\n                  <label>SQL Query</label>\r\n                  <AceEditor\r\n                    style={{ marginTop: '8px' }}\r\n                    value={this.state.sqlQuery}\r\n                    mode=\"mysql\"\r\n                    theme=\"xcode\"\r\n                    name=\"blah2\"\r\n                    onChange={this.handleAceEditorChange}\r\n                    height={'300px'}\r\n                    width={'100%'}\r\n                    fontSize={15}\r\n                    showPrintMargin={false}\r\n                    showGutter={true}\r\n                    highlightActiveLine={true}\r\n                    setOptions={{\r\n                      showLineNumbers: true,\r\n                      tabSize: 2\r\n                    }}\r\n                  />\r\n\r\n                  <div className=\"mt-3\">\r\n                    <button className=\"button\" onClick={this.runQuery}>Run Query</button>\r\n                  </div>\r\n\r\n                  <label>Result</label>\r\n                  <TableWidget\r\n                    data={data}\r\n                    columns={columns}\r\n                    error={error}\r\n                  />\r\n\r\n                  <label>Columns Mapping</label>\r\n                  <div>\r\n                    {columnItems}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { type === Constants.CHART && (\r\n              <div title=\"Chart\">\r\n                <div className=\"form-panel\">\r\n                  <label>Chart Type</label>\r\n                  <Select\r\n                    name={'chartType'}\r\n                    value={this.state.chartType}\r\n                    onChange={this.handleOptionChange}\r\n                    options={Constants.CHART_TYPES}\r\n                    preloadOneEmpty={false}\r\n                  />\r\n                  <label>Preview</label>\r\n                  {this.renderChartPreview()} \r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            { type === Constants.CHART && (\r\n              <div title=\"Drill Through\">\r\n                <div className=\"form-panel\">\r\n                  <label>Column</label>\r\n                  <Select\r\n                    name={'drillColumnName'}\r\n                    value={this.state.drillColumnName}\r\n                    options={columns}\r\n                    onChange={this.handleOptionChange}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'name'}\r\n                  />\r\n\r\n                  <label>Dashboard</label>\r\n                  <Select\r\n                    name={'drillDashboardId'}\r\n                    value={this.state.drillDashboardId}\r\n                    options={drillDashboards}\r\n                    onChange={this.handleIntegerOptionChange}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'id'}\r\n                  />\r\n                  <div class=\"row mt-10\">\r\n                    {drillItems}\r\n                  </div>\r\n                  <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { type === Constants.FILTER && (\r\n              <div title=\"Query parameter\">\r\n                <div className=\"form-panel\">\r\n                  <label>Parameter</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    name=\"queryParameter\" \r\n                    value={this.state.queryParameter}\r\n                    onChange={this.handleInputChange} \r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\n\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      isEditMode: false,\r\n      isReadOnly: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      refreshInterval: 15,\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      style: {},\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    console.log('DashboardEditView - componentDidMount', dashboardId);\r\n\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    for(let pair of params.entries()) {\r\n      console.log(pair[0]+ ', '+ pair[1]); \r\n    } \r\n\r\n    const widgetViewWidth = this.getPageWidth();\r\n    this.setState({\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const result = res.data;\r\n            this.setState({\r\n              dashboardId: result.id,\r\n              name: result.name,\r\n              style: result.style\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = () => {\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    const dashboardName = params.get('name');\r\n\r\n    const widgetViewWidth = this.getPageWidth();\r\n\r\n    this.setState({\r\n      isReadOnly: true,\r\n      name: dashboardName,\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            style: result.style\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth - 40;\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const { refreshInterval } = this.state;\r\n      let interval = parseInt(refreshInterval, 10) || 15;\r\n      interval = interval < 1 ? 1 : interval;\r\n      const timerId = setInterval(() => {\r\n        this.queryWidgets();\r\n        this.updateLastRefreshed();\r\n      }, interval * 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    this.refreshWidgetView();\r\n    this.updateLastRefreshed();\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n  } \r\n\r\n  queryWidgets = () => {\r\n    this.widgetViewPanel.current.queryCharts();\r\n  }\r\n\r\n  updateLastRefreshed = () => {\r\n    const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\r\n    this.setState({\r\n      lastRefreshed: now\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      style\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      style: style\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.props.onDashboardSave(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    this.widgetEditPanel.current.fetchWidget(widgetId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/workspace/dashboard/view?name=${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onTableCellClick = () => {\r\n    this.props.history.push(`/workspace/dashboard/drill?name=&`);\r\n  }\r\n\r\n  onStyleValueChange = (name, value) => {\r\n    const style = {...this.state.style};\r\n    style[[name]] = value;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {},\r\n    } = this.state;\r\n    const dashboardId = objectToDelete.id;\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        this.props.onDashboardDelete(dashboardId);\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  deleteDashboard = () => {\r\n    const { \r\n      dashboardId,\r\n      name\r\n    } = this.state;\r\n    const dashboard = {\r\n      id: dashboardId,\r\n      name: name\r\n    }\r\n    this.openConfirmDeletionPanel(dashboard);\r\n  }\r\n\r\n  openConfirmDeletionPanel = (dashboard) => {\r\n    this.setState({\r\n      objectToDelete: dashboard,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      lastRefreshed,\r\n      isEditMode,\r\n      isReadOnly\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel = null;\r\n    const controlButtons = (\r\n      <React.Fragment>\r\n        <span>Last refreshed: {lastRefreshed}</span>\r\n        { autoRefreshStatus === 'OFF' && (\r\n          <input \r\n            type=\"text\" \r\n            name=\"refreshInterval\" \r\n            value={this.state.refreshInterval}\r\n            onChange={this.handleInputChange}\r\n            className=\"inline-block\" \r\n            style={{width: '50px'}}\r\n          />\r\n        )}\r\n        <button className=\"button square-button mr-3\" onClick={this.toggleAutoRefresh}>\r\n          {\r\n            autoRefreshStatus === 'ON' ? \r\n            (\r\n              <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\r\n            ) : \r\n            (\r\n              <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\r\n            )\r\n          }\r\n        </button>\r\n        <button className=\"button square-button mr-3\" onClick={this.refresh}>\r\n          <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\r\n        </button>\r\n        <button className=\"button mr-3\" onClick={this.queryWidgets}>\r\n          <FontAwesomeIcon icon=\"filter\" size=\"lg\" fixedWidth /> Apply Filters\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n\r\n    if (!isReadOnly) {\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button mr-3\" onClick={this.cancelEdit}>\r\n               <FontAwesomeIcon icon=\"times\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button mr-3\" onClick={this.save}>\r\n              <FontAwesomeIcon icon=\"save\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button mr-3\" onClick={this.deleteDashboard}>\r\n               <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>\r\n              <FontAwesomeIcon icon=\"calendar-plus\" size=\"lg\" fixedWidth /> New Widget\r\n            </button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            {controlButtons}\r\n            <button className=\"button square-button mr-3\" onClick={this.fullScreen}>\r\n              <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={this.edit}>\r\n              <FontAwesomeIcon icon=\"edit\" size=\"lg\" fixedWidth />\r\n            </button>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      fullScreenButtonPanel = controlButtons;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-menu-panel row\">\r\n          <div className=\"float-left\">\r\n            {\r\n              isReadOnly || !isEditMode ?\r\n              (\r\n                <div className=\"dashboard-name\">\r\n                  {this.state.name}\r\n                </div>\r\n              ) :(\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"name\" \r\n                  value={this.state.name}\r\n                  onChange={this.handleInputChange} \r\n                  className=\"dashboard-name-input\"\r\n                />\r\n              )\r\n            }\r\n            \r\n          </div>\r\n          <div className=\"float-right\">\r\n            {fullScreenButtonPanel}\r\n            {editButtonPanel}\r\n          </div>\r\n        </div>\r\n\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          isEditMode={this.state.isEditMode}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          onStyleValueChange={this.onStyleValueChange}\r\n          {...this.state.style}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'dashboard-edit-widget-dialog'} \r\n          title={'Widget Edit'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {this.state.objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './Dashboard.css';\r\nimport * as Constants from '../api/Constants';\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport SearchInput from '../components/SearchInput';\r\n\r\nconst ROUTE_WORKSPACE_DASHBOARD = '/workspace/dashboard/';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      activeDashboardId: 0,\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    const index = pathname.indexOf(ROUTE_WORKSPACE_DASHBOARD);\r\n    if (index !== -1) {\r\n      const activeDashboardId = Number(pathname.substring(index + ROUTE_WORKSPACE_DASHBOARD.length));\r\n      this.setState({\r\n        activeDashboardId: activeDashboardId\r\n      })\r\n    }\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false,\r\n      name: ''\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      Toast.show('Enter a name.');\r\n      return;\r\n    }\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      style: {\r\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\r\n        backgroundColor: 'rgba(233, 235, 238, 1)'\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.closeEditPanel();\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      })\r\n      .catch(error => {\r\n        Toast.show('The name exists. Try another.');\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.setState({\r\n      activeDashboardId: dashboardId\r\n    }, () => {\r\n      this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n    });\r\n  }\r\n\r\n  onDashboardSave = (dashboardId) => {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  onDashboardDelete = (dashboardId) => {\r\n    this.fetchBoards();\r\n    this.setState({\r\n      activeDashboardId: 0\r\n    }, () => {\r\n      this.props.history.push('/workspace/dashboard');\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dashboards = [],\r\n      activeDashboardId,\r\n      searchValue\r\n    } = this.state;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.props;\r\n    const showEdit = sysRole === Constants.SYS_ROLE_VIEWER ? false : true;\r\n\r\n    const dashboardRows = [];\r\n    for (let i = 0; i < dashboards.length; i++) {\r\n      const dashboard = dashboards[i];\r\n      const name = dashboard.name;\r\n      const menuActive = activeDashboardId === dashboard.id ? 'dashboard-menu-item-active' : '';\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        dashboardRows.push(\r\n          (\r\n            <div key={i} className={`dashboard-menu-item ellipsis ${menuActive}`} onClick={() => this.view(dashboard.id)}>\r\n              {name}\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-sidebar\">\r\n          <div style={{margin: '5px'}}>\r\n            { showEdit && (\r\n              <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\r\n                <FontAwesomeIcon icon=\"plus\" /> New\r\n              </button>\r\n            )}\r\n\r\n            <div style={{marginTop: '5px'}}>\r\n              <SearchInput \r\n                name={'searchValue'} \r\n                value={this.state.searchValue} \r\n                onChange={this.handleNameInputChange} \r\n                inputWidth={117}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            {dashboardRows}\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route \r\n            path=\"/workspace/dashboard/:id\" \r\n            render={(props) => \r\n              <DashboardEditView \r\n                key={props.match.params.id} \r\n                onDashboardSave={this.onDashboardSave} \r\n                onDashboardDelete={this.onDashboardDelete} \r\n              />\r\n            } \r\n            />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'small-modal-panel'} \r\n          title={'New'} >\r\n          <div className=\"form-panel\">\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n            />\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport SearchInput from '../components/SearchInput';\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      searchValue: '',\r\n      showUpdatePassword: false,\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: Constants.SYS_ROLE_VIEWER,\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      this.setState({\r\n        id: user.id,\r\n        username: user.username,\r\n        name: user.name,\r\n        tempPassword: '',\r\n        sysRole: user.sysRole,\r\n        userGroups: user.userGroups\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      userGroupId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    if (!username) {\r\n      return;\r\n    }\r\n\r\n    let selectedSysRole = Constants.SYS_ROLE_VIEWER;\r\n    if (Constants.SYS_ROLE_ADMIN === this.props.sysRole) {\r\n      if (sysRole) {\r\n        selectedSysRole = sysRole;\r\n      } else {\r\n        // TODO: throw errors.\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: selectedSysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      if (showUpdatePassword && tempPassword) {\r\n        user.tempPassword = tempPassword;\r\n      }\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  addUserGroup = () => {\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId) => {\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/user/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (user) => {\r\n    this.setState({\r\n      objectToDelete: user,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      showUpdatePassword,\r\n      users = [],\r\n      groups = [],\r\n      userGroups = [],\r\n      searchValue,\r\n      showConfirmDeletionPanel,\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.props;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const userItems = [];\r\n    for (let i = 0; i < users.length; i++) {\r\n      const user = users[i];\r\n      const name = user.name;\r\n      const username = user.username;\r\n      if (!searchValue || (searchValue && (username.includes(searchValue) || name.includes(searchValue)))) {\r\n        userItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {user.username}\r\n                {user.name}\r\n                {user.sysRole}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(user)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(user)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups.length; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups.length; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId}>\r\n                <div>Group: {groups[j].name}</div>\r\n                <button className=\"button\" onClick={() => this.removeUserGroup(groupId)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"row\">\r\n          <div className=\"float-left\" style={{marginRight: '5px'}}>\r\n            <SearchInput \r\n              name={'searchValue'} \r\n              value={this.state.searchValue} \r\n              onChange={this.handleNameInputChange} \r\n              inputWidth={200}\r\n            />\r\n          </div>\r\n          <button className=\"button float-left\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New\r\n          </button>\r\n        </div>\r\n        <div className=\"row mt-10\">\r\n          {userItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'mid-modal-panel'} \r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} \r\n            />\r\n\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n            />\r\n\r\n            { mode === 'Edit' && (\r\n                <div style={{margin: '3px 0px 8px 0px'}}>\r\n                  <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n                </div>\r\n            )}\r\n            { (mode === 'New' || showUpdatePassword) && ( \r\n              <div>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"tempPassword\" \r\n                  value={this.state.tempPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </div>\r\n            )}\r\n            \r\n            <label>System Role</label>\r\n            { Constants.SYS_ROLE_ADMIN === sysRole && (\r\n              <Select\r\n                name={'sysRole'}\r\n                value={this.state.sysRole}\r\n                onChange={this.handleNameInputChange}\r\n                options={[Constants.SYS_ROLE_VIEWER, Constants.SYS_ROLE_DEVELOPER]}\r\n              />\r\n            )}\r\n\r\n            { Constants.SYS_ROLE_DEVELOPER === sysRole && (\r\n              <div>{Constants.SYS_ROLE_VIEWER}</div>\r\n            )}\r\n            \r\n            <br/>\r\n            \r\n            <label>Groups</label>\r\n            <Select\r\n              name={'userGroupId'}\r\n              value={this.state.userGroupId}\r\n              onChange={this.handleIntegerOptionChange}\r\n              options={groups}\r\n              optionDisplay={'name'}\r\n              optionValue={'id'}\r\n            />\r\n            <button className=\"button\" onClick={this.addUserGroup}>Add</button>\r\n            <div>\r\n              {userGroupItems}\r\n            </div>\r\n\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport SearchInput from '../components/SearchInput';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      showEditPanel: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      this.setState({\r\n        id: group.id,\r\n        name: group.name,\r\n        groupDashboards: group.groupDashboards\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      groupDashboardId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } \r\n  }\r\n\r\n  addGroupDashboard= () => {\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    if (groupDashboardId) {\r\n      const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n      if (index === -1) {\r\n        const newGroupDashboards = [...groupDashboards];\r\n        newGroupDashboards.push(groupDashboardId);\r\n        this.setState({\r\n          groupDashboards: newGroupDashboards\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId) => {\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/group/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (group) => {\r\n    this.setState({\r\n      objectToDelete: group,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = [],\r\n      searchValue,\r\n      showConfirmDeletionPanel,\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const groupItems = [];\r\n    for (let i = 0; i < groups.length; i++) {\r\n      const group = groups[i];\r\n      const name = group.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        groupItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {name}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(group)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(group)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards.length; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards.length; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId}>\r\n                <div>Name: {dashboards[j].name}</div>\r\n                <button className=\"button\" onClick={() => this.removeGroupDashboard(dashboardId)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"row\">\r\n          <div className=\"float-left\" style={{marginRight: '5px'}}>\r\n            <SearchInput \r\n              name={'searchValue'} \r\n              value={this.state.searchValue} \r\n              onChange={this.handleNameInputChange} \r\n              inputWidth={200}\r\n            />\r\n          </div>\r\n          <button className=\"button float-left\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New\r\n          </button>\r\n        </div>\r\n        <div className=\"row mt-10\">\r\n          {groupItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'mid-modal-panel'} \r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            <label>Dashboards</label>\r\n            <Select\r\n              name={'groupDashboardId'}\r\n              value={this.state.groupDashboardId}\r\n              onChange={this.handleIntegerOptionChange}\r\n              options={dashboards}\r\n              optionDisplay={'name'}\r\n              optionValue={'id'}\r\n            />\r\n            <button className=\"button\" onClick={this.addGroupDashboard}>Add</button>\r\n            <div>\r\n              {groupDashboardItems}\r\n            </div>\r\n            \r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\n\r\nimport User from './User';\r\nimport Group from './Group';\r\nimport Tabs from '../components/Tabs';\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-page-content\">\r\n        <Tabs activeTab=\"Group\">\r\n          <div title=\"Group\">\r\n            <Group />\r\n          </div>\r\n          <div title=\"User\">\r\n            <User {...this.props} />\r\n          </div>\r\n        </Tabs>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const user = res.data;\r\n        this.setState({\r\n          id: user.id,\r\n          username: user.username,\r\n          name: user.name,\r\n          sysRole: user.sysRole,\r\n          apiKey: user.apiKey\r\n        });\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        return;\r\n      }  \r\n\r\n      user.password = password;\r\n    }\r\n\r\n    axios.put('/ws/user/account', user)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"full-page-content\">\r\n        <div className=\"form-panel\" style={{width: '500px'}}>   \r\n          <label>Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\"   \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label>System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label>API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button className=\"button\" onClick={this.generateApiKey}>Generate new API Key</button>\r\n          <br/>\r\n\r\n          <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n          {\r\n            showUpdatePassword && (\r\n              <React.Fragment>\r\n                <br/>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label>Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n          )}\r\n\r\n          <br/>\r\n          <button className=\"button\" onClick={this.save}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","\r\nimport React from 'react';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('DashboardFullScreenView', 'componentDidMount');\r\n    this.dashboardEditView.loadViewByDashboardName();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView wrappedComponentRef={comp => (this.dashboardEditView = comp)} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","import React from 'react';\r\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\n\r\nimport Toast from '../components/Toast';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport './Workspace.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data Source',\r\n    icon: 'database'\r\n  }, \r\n  {\r\n    link: '/workspace/usermanagement',\r\n    value: 'User Management',\r\n    icon: 'users-cog'\r\n  }\r\n];\r\n\r\nconst ACCOUNT_MENU_LINK = '/workspace/account';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    let link;\r\n    if (pathname.startsWith(ACCOUNT_MENU_LINK)) {\r\n      link = ACCOUNT_MENU_LINK;\r\n    } else {\r\n      const menuItem = MENU_ITEMS.find(m => pathname.startsWith(m.link));\r\n      link = menuItem.link;\r\n    }\r\n\r\n    this.setState({\r\n      currentMenuLink: link,\r\n    });\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  logout = () => {\r\n    axios.get('/auth/logout')\r\n      .then(res => {\r\n        this.props.onLogout();\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n    } = this.state;\r\n    \r\n    console.log('Workspace - render');\r\n\r\n    const {\r\n      username,\r\n      sysRole\r\n    } = this.props;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.link === '/workspace/dashboard');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li key={menu.link} className={active}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"workspace-nav\">  \r\n          <div className=\"workspace-name\">Poli</div>\r\n          <ul className=\"workspace-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div className=\"workspace-account-menu\">\r\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\r\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\r\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\r\n                <span className=\"workspace-nav-menu-text\">{username}</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"workspace-logout-button inline-block\" onClick={this.logout}>\r\n              <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"workspace-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n            <Route exact path=\"/workspace/dashboard/view\" component={DashboardFullScreenView} />\r\n            <Route exact path=\"/workspace/usermanagement\" render={() => <UserManagement {...this.props} />} />\r\n            <Route path=\"/workspace/dashboard\" render={() => <Dashboard {...this.props} />} />\r\n          </Switch>\r\n        </div>\r\n        <Toast />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Workspace);\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, withRouter, Component } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch, faSearch, faSave, \r\n  faCalendarPlus, faFilter\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport ChangeTempPassword from './views/ChangeTempPassword';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\n\r\n\r\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch, faSearch, faSave, \r\n  faCalendarPlus, faFilter\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      sysRole: '',\r\n      isAuthorizing: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    const search = this.props.location.search;\r\n\r\n    const params = new URLSearchParams(search);\r\n    const apiKey = params.get('apiKey');\r\n\r\n    let currentPath = pathname + search;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      this.setState({\r\n        isAuthorizing: true\r\n      }, () => {\r\n        axios.post('/auth/login/cookie')\r\n          .then(res => {\r\n            const loginResponse = res.data;\r\n            if (loginResponse.error) {\r\n                this.setState({\r\n                  sysRole: '',\r\n                  isAuthorizing: false\r\n                }, () => {\r\n                  this.props.history.push('/login');\r\n                });\r\n              } else {\r\n                this.onLoginSuccess(loginResponse, currentPath);\r\n              }\r\n          });\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n  onLoginSuccess = (loginResponse = {}, pathname = null) => {\r\n    if (loginResponse.tempPassword) {\r\n      this.props.history.push('/changepassword');\r\n    } else {\r\n      this.setState({\r\n        username: loginResponse.username,\r\n        sysRole: loginResponse.sysRole,\r\n        isAuthorizing: false\r\n      }, () => {\r\n        let directUrl = '/workspace/dashboard';\r\n        if (pathname) {\r\n          directUrl = pathname;\r\n        }\r\n        this.props.history.push(directUrl);\r\n      });\r\n    }\r\n  }\r\n\r\n  onLogout = () => {\r\n    this.setState({\r\n      username: '',\r\n      sysRole: '',\r\n      isAuthorizing: false\r\n    }, () => {\r\n      this.props.history.push('/login');\r\n    });\r\n  }\r\n   \r\n  render() {\r\n    const {\r\n      username,\r\n      sysRole,\r\n      isAuthorizing\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (isAuthorizing) {\r\n      return (\r\n        <FontAwesomeIcon icon='cicle-notch' spin={true} size=\"3x\" />\r\n      )\r\n    }\r\n    \r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Login sysRole={sysRole} onLoginSuccess={this.onLoginSuccess} />} />\r\n          <Route path=\"/login\" render={() => <Login sysRole={sysRole} onLoginSuccess={this.onLoginSuccess} />} />\r\n          <Route path=\"/changepassword\" component={ChangeTempPassword} />\r\n          <PrivateRoute \r\n            authenticated={isAuthenticated} \r\n            path='/workspace' \r\n            component={Workspace} \r\n            username={username}\r\n            sysRole={sysRole} \r\n            onLogout={this.onLogout}\r\n          />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} {...rest} />\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}