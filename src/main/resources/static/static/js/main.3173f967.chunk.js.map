{"version":3,"sources":["views/Overview.js","api/WebApi.js","views/DataSources.js","views/Dashboards.js","components/GridDraggable.js","components/GridResizable.js","components/GridItem.js","components/GridLayout.js","views/Test.js","views/EditDataSource.js","components/QuerySlicer.js","components/NumberRange.js","components/FilterViewPanel.js","views/DashboardEditView.js","views/SingleTest.js","App.js","index.js"],"names":["Overview","react_default","a","createElement","Component","fetchDataSources","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","get","abrupt","sent","stop","this","apply","arguments","_ref3","_callee3","url","response","_context3","axios","data","t0","_x2","DataSources","state","jdbcDataSources","showEditPanel","id","name","connectionUrl","username","password","type","ping","handleInputChange","event","target","value","_this","setState","defineProperty","save","preventDefault","ds","post","then","res","initData","update","console","log","put","delete","concat","clearEditPanel","prevState","showDeletePanel","webApi","_this2","filterDrawerClass","jdbcDataSourceItems","map","index","key","onClick","mode","Link","to","className","onChange","row","Dashboard","dashboards","fetchBoards","dashboardId","props","history","push","jump","dashboardRows","d","withRouter","GridDraggable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onMouseDown","gridItemNode","ReactDOM","findDOMNode","assertThisInitialized","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","i","length","style","zIndex","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","width","boxHeight","height","Math","floor","left","top","React","GridResizable","prevWidth","prevHeight","GridItem","x","y","styles","backgroundColor","position","title","components_GridDraggable","es","firstName","lastName","columns","Header","accessor","defaultPageSize","components_GridResizable","GridLayout","snapToGrid","showGridlines","margin","border","backgroundSize","backgroundImage","boxItems","box","components_GridItem","options","label","Test","selectedOption","newValue","submit","handleChange","lib_default","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","react_select_esm","components_GridLayout","PureComponent","EditDataSource","router","reset","initialState","match","params","undefined","QuerySlicer","isSelectAll","isChecked","checked","newCheckBox","toConsumableArray","checkBoxes","find","filterId","toggleSelectAll","newIsSelectAll","newCheckBoxes","NumberRange","filters","dataSourceId","sqlQuery","display","param","queryResult","FilterViewPanel","renderFilterPanel","filterPanel","filter","components_QuerySlicer","onQuerySlicerChange","components_NumberRange","f","fetchFilters","run","mockDataSources","mockDashboard","widgets","DashboardEditView","refresh","filterViewPanel","current","jdbcDataSourceOptions","createRef","dashboard","initFilters","initWidgets","components_FilterViewPanel","ref","SingleTest","App","handleClick","e","toggleMenu","menuMin","Route","exact","path","component","Dashboards","render","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.3173f967.chunk.js","sourcesContent":["\nimport React, { Component } from 'react';\n\nclass Overview extends Component {\n\n  render() {\n    return (\n      <div>\n        <h1>Overview</h1>      \n      </div>\n    );\n  }\n}\n\nexport default Overview;\n","import axios from 'axios';\n\nconst JSON_HEADER = {\n  headers: {\n    'Content-Type': 'application/json',\n  }\n};\n\nexport const fetchDataSources = async () => {\n  return await get('/ws/jdbcdatasource');\n};\n\nexport const fetchDashboardById = async (id) => {\n  return await get(`/ws/dashboard/${id}`);\n}\n\n\nconst get = async (url) => {\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (e) {\n    return [];\n  }\n} \n\n\n","\nimport React, { Component } from 'react';\n\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport * as webApi from '../api/WebApi';\n\nclass DataSources extends Component {\n\n  state = { \n    jdbcDataSources: [],\n    showEditPanel: false,\n    id: null,\n    name: '',\n    connectionUrl: '',\n    username: '',\n    password: '',\n    type: '',\n    ping: ''\n  };\n\n  componentDidMount() {\n    // Fetch all datasources\n    this.initData();\n    \n  }\n\n  async initData() {\n    const jdbcDataSources = await webApi.fetchDataSources();\n    this.setState({ \n      jdbcDataSources: jdbcDataSources \n    });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  save = (event) => {\n    event.preventDefault();\n    const ds = {\n      connectionUrl: this.state.connectionUrl,\n      username: this.state.username,\n      password: this.state.password,\n      name: this.state.name,\n      type: this.state.password,\n      ping: this.state.ping\n    };\n\n    axios.post('/ws/jdbcdatasource', ds)\n      .then(res => {\n        this.initData();\n      });\n  }\n\n  update = (ds) => {\n    console.log('update', ds);\n\n    axios.put('/ws/jdbcdatasource', ds)\n      .then(res => {\n        this.initData();\n      });\n  }\n\n  delete = (id) => {\n    console.log('delete', id);\n    axios.delete('/ws/jdbcdatasource/' + id)\n      .then(res => {\n        this.initData();\n      });\n  }\n\n  ping = (id) => {\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\n      .then(res => {\n        console.log('ping', res.data);\n      });\n  }\n\n  clearEditPanel = () => {\n    this.setState({\n      id: null,\n      connectionUrl: '',\n      username: '',\n      password: '',\n      name: '',\n      type: '',\n      ping: ''\n    });\n  }\n\n  showEditPanel = (ds) => {\n    if (ds !== null) {\n      this.setState({\n        id: ds.id,\n        connectionUrl: ds.connectionUrl,\n        username: ds.username,\n        password: ds.password,\n        name: ds.name,\n        type: ds.type,\n        ping: ds.ping\n      });\n    } else {\n      this.clearEditPanel();\n    }\n    \n    this.setState(prevState => ({\n      showEditPanel: !prevState.showEditPanel\n    })); \n  }\n\n  showDeletePanel = () => {\n\n  }\n\n  render() {\n\n    const filterDrawerClass = this.state.showEditPanel ? 'right-drawer display-block' : 'right-drawer display-none';\n\n    const jdbcDataSourceItems = this.state.jdbcDataSources.map((ds, index) => \n      <tr key={index}>\n        <td>{ds.name}</td>\n        <td>{ds.connectionUrl}</td>\n        <td>{ds.type}</td>\n        <td>{ds.username}</td>\n        <td>{ds.ping}</td>\n        <td><button onClick={() => this.showEditPanel(ds)}>update</button></td>\n        <td><button onClick={() => this.delete(ds.id)}>delete</button></td>\n        <td><button onClick={() => this.ping(ds.id)}>ping</button></td>\n      </tr>\n    );\n\n    const mode = this.state.id === null ? 'New' : 'Update';\n\n    return (\n      <div>\n        <h1>Data Sources</h1>\n        <div>\n          <h2>Table</h2>\n\n          <table>\n            <thead>\n            </thead>\n            <tbody>\n              {jdbcDataSourceItems}\n            </tbody>\n          </table>\n\n        </div>\n        <button onClick={() => this.showEditPanel(null)}>\n          Add\n        </button>\n        <button>\n          <Link to=\"/datasources/new\">New</Link>\n        </button>\n        <button>\n          <Link to=\"/datasources/edit/1\">Edit</Link>\n        </button>\n\n        <div className={filterDrawerClass}>\n          <h3>{mode}</h3>\n          <form>\n            <label>Name</label>\n            <input \n              type=\"text\" \n              name=\"name\" \n              value={this.state.name}\n              onChange={this.handleInputChange} />\n\n            <label>Connection Url</label>\n            <textarea\n              row=\"3\"\n              type=\"text\" \n              name=\"connectionUrl\" \n              value={this.state.connectionUrl}\n              onChange={this.handleInputChange} >\n            </textarea>\n\n            <label>Username</label>\n            <input \n              type=\"text\" \n              name=\"username\" \n              value={this.state.username}\n              onChange={this.handleInputChange} />\n\n            <label>Password</label>\n            <input \n              type=\"password\" \n              name=\"password\" \n              value={this.state.password}\n              onChange={this.handleInputChange} />\n\n            <label>Type</label>\n            <input \n              type=\"text\" \n              name=\"type\" \n              value={this.state.type}\n              onChange={this.handleInputChange} />\n\n            <label>Ping</label>\n            <input \n              type=\"text\" \n              name=\"ping\" \n              value={this.state.ping}\n              onChange={this.handleInputChange} />\n          </form>\n\n          <div>\n            <button onClick={this.save}>Save</button>\n            <button onClick={this.ping}>Ping</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DataSources;\n","\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport axios from 'axios';\n\n\nclass Dashboard extends Component {\n\n  state = { \n    dashboards: [],\n  };\n\n  componentDidMount() {\n    this.fetchBoards();\n  }\n\n  fetchBoards = () => {\n    axios.get('/ws/dashboard')\n      .then(res => {\n        const dashboards = res.data;\n        this.setState({ \n          dashboards: dashboards \n        });\n      });\n  }\n\n  save = () => {\n\n  }\n\n  update = (dashboardId) => {\n    this.props.history.push(`/dashboard/edit/${dashboardId}`);\n  }\n\n  delete = () => {\n\n  }\n\n  jump = () => {\n    this.props.history.push('/overview');\n  }\n\n\n  render() {\n\n    const dashboardRows = this.state.dashboards.map((d, index) => \n      <tr key={index}>\n        <td>{d.id}</td>\n        <td>{d.name}</td>\n        <td><button onClick={() => this.update(d.id)}>update</button></td>\n      </tr>\n    );\n\n    return (\n      <div>\n        Board\n        <button onClick={this.jump}>Overview</button>\n        <button onClick={() => this.props.history.push('/dashboard/new')}>New</button>\n\n        <table>\n          <thead>\n          </thead>\n          <tbody>\n            {dashboardRows}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Dashboard);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass GridDraggable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      xOffset: 0,\n      yOffset: 0\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\n    const yOffset = event.clientY - gridItemNode.offsetTop;\n\n    let boxes = document.getElementsByClassName(\"grid-box\");\n    for (let i = 0; i < boxes.length; i++) {\n        boxes[i].style.zIndex = 2;\n    }\n    gridItemNode.style.zIndex = 3;\n\n    \n    const { ownerDocument } = gridItemNode;\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\n    this.setState({\n      xOffset: xOffset,\n      yOffset: yOffset\n    });\n\n    this.props.onMouseDown('drag');\n  }\n\n  onMouseUp = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n    this.props.onMouseUp();\n  }\n\n  onMouseMove = (event) => {\n    console.log('GridDraggable onMouseMove', event);\n    event.preventDefault();\n    if (this.props.mode !== 'drag') {\n      return; \n    }\n\n    let gridCell = 5;\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    let currentX = event.clientX - this.state.xOffset;\n    let currentY = event.clientY - this.state.yOffset;\n    \n    const containerNode = gridItemNode.parentNode;\n    const containerWidth = containerNode.clientWidth;\n    const containerHeight = containerNode.clientHeight;\n    \n    let boxWidth = parseInt(gridItemNode.style.width, 10) + 4;\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + 4;\n\n\n    if (currentX < 0) {\n      currentX = 0;\n    }\n    if (currentY < 0) {\n      currentY = 0;\n    }\n    if (currentX + boxWidth > containerWidth) {\n      currentX = containerWidth - boxWidth;\n    }\n    if (currentY + boxHeight > containerHeight) {\n      currentY = containerHeight - boxHeight;\n    }\n    \n\n    currentX = Math.floor(currentX / gridCell) * gridCell;\n    currentY = Math.floor(currentY / gridCell) * gridCell;\n\n    gridItemNode.style.left = currentX + 'px';\n    gridItemNode.style.top = currentY + 'px';\n  }\n\n  render() {\n    return (\n      <div className=\"grid-draggable\"\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp} >\n      </div>\n    )\n  }\n}\n\nexport default GridDraggable;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass GridResizable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      xOffset: 0,\n      yOffset: 0,\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (event) => {\n    console.log('onMouseDown', event);\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    const xOffset = event.clientX;\n    const yOffset = event.clientY;\n    \n    const { ownerDocument } = thisNode;\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\n    this.setState({\n      xOffset: xOffset,\n      yOffset: yOffset\n    });\n\n    this.props.onMouseDown('resize');\n  }\n\n  onMouseUp = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n    this.props.onMouseUp();\n  }\n\n  onMouseMove = (event) => {\n    console.log('GridResizer onMouseMove', event);\n    event.preventDefault();\n\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\n\n    let currentX = event.clientX - this.state.xOffset;\n    let currentY = event.clientY - this.state.yOffset;\n\n    gridItemNode.style.width = Math.floor(prevWidth + currentX) + 'px';\n    gridItemNode.style.height = Math.floor(prevHeight + currentY) + 'px';\n\n    const xOffset = event.clientX;\n    const yOffset = event.clientY;\n    this.setState({\n      xOffset: xOffset,\n      yOffset: yOffset\n    });\n  }\n\n  render() {\n    return (\n      <div \n        className=\"grid-resizable\"\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp} >\n      </div>\n    )\n  }\n}\n\nexport default GridResizable;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GridDraggable from './GridDraggable';\nimport GridResizable from './GridResizable';\n\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\n\nclass GridItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      x: this.props.x,\n      y: this.props.y,\n      mode: ''\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (mode) => {\n    console.log('GridItem onMouseDown', mode);\n    this.setState({\n      mode: mode\n    });\n  }\n\n  onMouseUp = () => {\n    console.log('GridItem onMouseUp');\n    this.setState({\n      mode: ''\n    });\n  }\n\n  onMouseMove = (event, mode, state) => {\n    console.log('GridItem onMouseMove', event);\n    event.preventDefault();   \n  }\n\n  render() {\n    let styles = {\n      left: this.state.x,\n      top: this.state.y,\n      width: this.props.width,\n      height: this.props.height,\n      backgroundColor: '#f1f1f1',\n      position: 'absolute',\n      zIndex: 1\n    };\n\n    const data = [\n      {firstName: 'a1', lastName: 'b1'},\n      {firstName: 'a2', lastName: 'b2'},\n      {firstName: 'a3', lastName: 'b3'}\n    ];\n\n    return (\n      <div className=\"grid-box\" style={styles}>\n        <div className=\"grid-box-title\">\n          {this.props.title}\n        </div>\n        <GridDraggable \n          onMouseUp={this.onMouseUp}\n          onMouseDown={this.onMouseDown}\n          onMouseMove={this.onMouseMove}\n          mode={this.state.mode} />\n          \n          <ReactTable\n            data={data}\n            columns={[\n              {\n                Header: \"First Name\",\n                accessor: \"firstName\"\n              },\n              {\n                Header: \"Last Name\",\n                accessor: \"lastName\"\n              },\n            ]}\n            defaultPageSize={10}\n          />\n        <GridResizable \n          onMouseUp={this.onMouseUp}\n          onMouseDown={this.onMouseDown}\n          onMouseMove={this.onMouseMove}\n          mode={this.state.mode} />\n      </div>\n    )\n  }\n}\n\nexport default GridItem;","import React from 'react';\n\nimport GridItem from './GridItem';\n\nconst boxes = [\n   {\n    title: 'title1',\n    x: 0,\n    y: 0,\n    width: 100,\n    height: 100\n  },\n  {\n    title: 'title2',\n    x: 100,\n    y: 100,\n    width: 100,\n    height: 100\n  }\n];\n\nclass GridLayout extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      boxes: [],\n      snapToGrid: false,\n      showGridlines: true,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      boxes: boxes\n    });\n  }\n\n  render() {\n    const width = 600;\n    const height = 400;\n\n    let styles = {\n      width: width,\n      height: height,\n      position: 'relative',\n      margin: '20px',\n      border: '1px solid blue'\n    };\n\n    if (this.state.showGridlines) {\n      styles.backgroundSize = '20px 20px';\n      styles.backgroundImage = 'linear-gradient(to right, grey 1px, transparent 1px), linear-gradient(to bottom, grey 1px, transparent 1px)';\n    }\n\n    const boxItems = this.state.boxes.map((box, index) => \n      <GridItem\n        key={index}\n        x={box.x}\n        y={box.y}\n        width={box.width}\n        height={box.height}\n        title={box.title}\n      />\n    );\n\n\n    return (\n      <div\n        style={styles} >\n        {boxItems}\n      </div>\n    )\n  }\n}\n\nexport default GridLayout;","\nimport React from 'react';\nimport AceEditor from 'react-ace';\n\nimport 'brace/mode/mysql';\nimport 'brace/theme/xcode';\n\nimport Select from 'react-select';\n\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nimport GridLayout from '../components/GridLayout';\n\nconst options = [\n  { value: 'chocolate', label: 'Chocolate' },\n  { value: 'strawberry', label: 'Strawberry' },\n  { value: 'vanilla', label: 'Vanilla' }\n];\n\nclass Test extends React.PureComponent {\n\n  state = {\n    selectedOption: null,\n    data: [\n      {firstName: 'a1', lastName: 'b1'},\n      {firstName: 'a2', lastName: 'b2'},\n      {firstName: 'a3', lastName: 'b3'}\n    ]\n  }\n\n  onChange = (newValue) => {\n    console.log('change',newValue);\n  }\n\n  submit = () => {\n    console.log('submit', );\n  }\n\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption });\n    console.log(`Option selected:`, selectedOption);\n  }\n\n  render() {\n    const { selectedOption } = this.state;\n    const { data } = this.state;\n\n    return (\n      <div>\n        <AceEditor\n          mode=\"mysql\"\n          theme=\"xcode\"\n          name=\"blah2\"\n          onChange={this.onChange}\n          height={'300px'}\n          width={'300px'}\n          fontSize={18}\n          showPrintMargin={false}\n          showGutter={true}\n          highlightActiveLine={true}\n          setOptions={{\n            enableBasicAutocompletion: true,\n            enableLiveAutocompletion: true,\n            enableSnippets: false,\n            showLineNumbers: true,\n            tabSize: 2,\n            }}\n          />\n          <button onClick={this.submit}>Submit</button>\n\n          <Select\n            value={selectedOption}\n            onChange={this.handleChange}\n            options={options}\n          />\n\n          <ReactTable\n            data={data}\n            columns={[\n              {\n                Header: \"First Name\",\n                accessor: \"firstName\"\n              },\n              {\n                Header: \"Last Name\",\n                accessor: \"lastName\"\n              },\n            ]}\n            defaultPageSize={10}\n          />\n\n          <GridLayout />\n      </div>\n    )\n  }\n}\n\nexport default Test;\n","\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass EditDataSource extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {\n      id: 0,\n      name: '',\n      connectionUrl: '',\n      username: '',\n      password: '',\n      type: '',\n      ping: '',\n      mode: ''\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    console.log(\"id\", id);\n    let mode = 'Edit';\n    if (id === undefined) {\n      mode = 'New';\n    }\n    this.setState({\n      mode: mode\n    });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  save = (event) => {\n    event.preventDefault();\n    const ds = {\n      connectionUrl: this.state.connectionUrl,\n      username: this.state.username,\n      password: this.state.password,\n      name: this.state.name,\n      type: this.state.password,\n      ping: this.state.ping\n    };\n\n    const { router } = this.props;\n\n    axios.post('/ws/jdbcdatasource', ds)\n      .then(res => {\n        this.reset();\n        router.push('/datasources');\n      });\n  }\n\n  reset = () => {\n    this.setState(this.initialState);\n  }\n\n  ping = () => {\n    \n  }\n\n  render() {\n\n    return (\n      <div>\n        <h1>{this.state.mode} Data Source</h1>\n        \n\n        \n\n        <div>\n          <button type=\"primary\" onClick={this.save}>Save</button>\n          <button type=\"primary\" onClick={this.ping}>Ping</button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default EditDataSource;\n","import React from 'react';\n\nclass QuerySlicer extends React.Component {\n\n  state = {\n    isSelectAll: false,\n  }\n\n  handleChange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const isChecked = target.checked;\n\n    const newCheckBoxes = [...this.props.checkBoxes];\n    const newCheckBox = newCheckBoxes.find(x => x.value === name);\n    newCheckBox.isChecked = isChecked;\n\n    this.props.onChange(this.props.filterId, newCheckBox);\n  }\n\n  toggleSelectAll = () => {\n    const newIsSelectAll = !this.state.isSelectAll;\n    const newCheckBoxes = [...this.props.checkBoxes];\n    for (let i = 0; i < newCheckBoxes.length; i++) {\n      newCheckBoxes[i].isChecked = newIsSelectAll;\n    }\n    this.props.onChange(this.props.filterId, newCheckBoxes);\n\n    this.setState(prevState => ({\n      isSelectAll: !prevState.isSelectAll\n    }));\n  }\n\n  render() {\n\n    const checkBoxes = this.props.checkBoxes.map((box, index) => \n      <div key={index}>\n        <input \n          type=\"checkbox\" \n          name={box.value} \n          value={box.value} \n          checked={box.isChecked} \n          onChange={this.handleChange}\n          />\n          {box.value}\n        <br/>\n      </div>\n    );\n\n    return (\n      <div>\n        <button onClick={this.toggleSelectAll}>Toggle Select All {this.state.isSelectAll}</button>\n        <div>\n          {checkBoxes}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QuerySlicer;\n","import React from 'react';\n\nclass NumberRange extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        min\n        <input type=\"number\" name=\"min\" />\n        max\n        <input type=\"number\" name=\"max\" />\n      </div>\n    );\n  }\n}\n\nexport default NumberRange;","import React, { Component } from 'react';\r\nimport QuerySlicer from \"./QuerySlicer\";\r\nimport NumberRange from \"./NumberRange\";\r\n\r\n\r\nconst filters = [\r\n  {\r\n    type: 'slicer',\r\n    id: 1,\r\n    dashboardId: 1,\r\n    data: {\r\n      dataSourceId: 2,\r\n      sqlQuery: 'select name from table',\r\n      display: 'Name',\r\n      columns: [{\r\n          name: 'name',\r\n          param: 'name'\r\n        },\r\n        {\r\n          name: 'b',\r\n          param: ':column b'\r\n        }\r\n      ]\r\n    },\r\n    queryResult: ['s1', 's2', 's3']\r\n  }\r\n]\r\n\r\nclass FilterViewPanel extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      filters: filters\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('componentDidMount');\r\n    this.fetchFilters();\r\n  }\r\n\r\n  renderFilterPanel = () => {\r\n    console.log('renderFilterPanel');\r\n    const filterPanel = [];\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === 'slicer') {\r\n        console.log('11111');\r\n\r\n        const queryResult = filter.queryResult;\r\n        const checkBoxes = [];\r\n        for (let i = 0; i < queryResult.length; i++) {\r\n          checkBoxes.push({\r\n            value: queryResult[i],\r\n            isChecked: false\r\n          });\r\n        }\r\n\r\n        filterPanel.push(<QuerySlicer key={i} filterId={filter.id} checkBoxes={checkBoxes} onChange={this.onQuerySlicerChange} />);\r\n      } else if (filter.type === 'number-range') {\r\n        filterPanel.push(<NumberRange key={i} />);\r\n      } else if (filter.type === 'date-range') {\r\n\r\n      }\r\n    }\r\n    return filterPanel;\r\n  }\r\n\r\n  onQuerySlicerChange = (filterId, checkBoxes) => {\r\n    console.log('onQuerySlicerChange', filterId, checkBoxes);\r\n\r\n    const filter = this.state.filters.find(f => f.id === filterId);\r\n\r\n    const checked = [];\r\n    for (let i = 0; i < checkBoxes.length; i++) {\r\n      if (checkBoxes[i].isChecked) {\r\n        checked.push(checkBoxes[i]);\r\n      }\r\n    }\r\n\r\n    const isSelectAll = checked.length === checkBoxes.length;\r\n  }\r\n\r\n\r\n  fetchFilters = () => {\r\n    console.log('fetchFilters');\r\n    this.setState({\r\n      filters: filters\r\n    });\r\n  }\r\n\r\n  run = () => {\r\n    console.log('run');\r\n    \r\n    this.fetchFilters();\r\n\r\n    // TODO: call props\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h5>FilterViewPanel</h5>\r\n        {this.renderFilterPanel()}\r\n        <button onClick={this.run}>Run</button>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterViewPanel;","\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport FilterViewPanel from \"../components/FilterViewPanel\";\n\nconst filterTypes = [\n  { value: 'slicer', label: 'Slicer' },\n  { value: 'number-range', label: 'Number Range' },\n  { value: 'date-range', label: 'Date Range' }\n];\n\n\nconst mockDataSources = [{\n    name: 'ds1',\n    id: 1\n  }, {\n    name: 'ds2',\n    id: 2\n  }\n]\n\nconst mockDashboard = {\n  dashboardId: 1,\n  filters: [\n    {\n      type: 'slicer',\n      id: 1,\n      dashboardId: 1,\n      data: {\n        dataSourceId: 2,\n        sqlQuery: 'select name from table',\n        display: 'Name',\n        columns: [{\n            name: 'name',\n            param: 'name'\n          },\n          {\n            name: 'b',\n            param: ':column b'\n          }\n        ]\n      },\n      queryResult: ['s1', 's2', 's3']\n    }\n  ],\n  widgets: []\n}\n\n\nclass DashboardEditView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      jdbcDataSourceOptions: [],\n      dashboardId: 0,\n      name: '',\n      widgets: [],\n      filters: []\n    }\n\n    this.filterViewPanel = React.createRef();\n  }\n\n  componentDidMount() {\n    let dashboardId = 1; // this.props.match.params.id;\n    console.log(\"componentDidMount\", dashboardId);\n  }\n\n  async initData(dashboardId) {\n    const jdbcDataSources = mockDataSources;// await webApi.fetchDataSources();\n    const jdbcDataSourceOptions = [];\n    for (let i = 0; i < jdbcDataSources.length; i++) {\n      jdbcDataSourceOptions.push({\n        label: jdbcDataSources[i].name,\n        value: jdbcDataSources[i].id\n      });\n    }\n    this.setState({ \n      jdbcDataSourceOptions: jdbcDataSourceOptions \n    });\n\n    if (dashboardId !== undefined) {\n      const dashboard = mockDashboard; // await webApi.fetchDashboardById(dashboardId);\n      const filters = dashboard.filters;\n      const widgets = dashboard.widgets;\n      console.log('filters', filters);\n      this.setState({ \n        dashboardId: dashboardId,\n        filters: filters,\n        widgets: widgets\n      });\n\n      this.initFilters();\n      // TODO: inig widgets based on the base value of the filters.\n      this.initWidgets();\n    } else {\n      this.setState({ \n        dashboardId: null,\n        filters: [],\n        widgets: []\n      });\n    } \n  }\n\n  refresh = () => {\n    console.log('refresh');\n    this.filterViewPanel.current.fetchFilters();\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>DashboardEditView</h3>\n        <button onClick={this.refresh}>Refresh</button>\n        <FilterViewPanel ref={this.filterViewPanel}/>\n      </div>\n    )\n  };\n}\n\nexport default withRouter(DashboardEditView);\n","\r\nimport React, { Component } from 'react';\r\nimport FilterViewPanel from '../components/FilterViewPanel';\r\n\r\nclass SingleTest extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.filterViewPanel = React.createRef();\r\n  }\r\n\r\n  refresh = () => {\r\n    console.log('refresh');\r\n    this.filterViewPanel.current.fetchFilters();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h5>SingleTest</h5>\r\n        <FilterViewPanel ref={this.filterViewPanel}/>\r\n        <button onClick={this.refresh}>Refresh</button>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default SingleTest;","import React, { Component } from 'react';\nimport './App.css';\n\nimport { Route, Link } from \"react-router-dom\";\nimport Overview from './views/Overview';\nimport DataSources from './views/DataSources';\nimport Dashboards from './views/Dashboards';\nimport Test from './views/Test';\nimport EditDataSource from './views/EditDataSource';\nimport DashboardEditView from './views/DashboardEditView';\n\nimport SingleTest from './views/SingleTest';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: 'overview',\n      menuMin: ''\n    }\n  }\n\n  componentDidMount() {\n  }\n\n  handleClick = (e) => {\n    this.setState({\n      current: e.key,\n    });\n  }\n\n  toggleMenu = () => {\n    const menuMin = this.state.menuMin === '' ? 'menu-min' : '';\n    this.setState({\n      menuMin: menuMin\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Nav\">\n          <div className=\"Nav_title\">\n          </div>\n          <div className=\"Nav_menu\">\n            <ul className=\"menu\">\n              <li>\n                <Link to=\"/overview\">Overview</Link>\n              </li>\n              <li>\n                <Link to=\"/datasources\">Data Sources</Link>\n              </li>\n              <li>\n                <Link to=\"/dashboards\">Dashboards</Link>\n              </li>\n              <li>\n                <Link to=\"/test\">Test</Link>\n              </li>\n              <li>\n                <Link to=\"/single-test\">SingleTest</Link>\n              </li>\n              \n            </ul>\n            <div className=\"Nav__toggle-menu\">\n              <div onClick={this.toggleMenu}>toggle</div>\n            </div>\n          </div>\n        </div>\n        <div className={`Status_bar ${this.state.menuMin}`}>\n          account, logout\n        </div>\n        <div className={`Content ${this.state.menuMin}`}>\n          <Route exact path=\"/\" component={Overview} />\n          <Route exact path=\"/overview\" component={Overview} />\n          <Route exact path=\"/datasources\" component={DataSources} />\n          <Route exact path=\"/dashboards\" component={Dashboards} />\n          <Route exact path=\"/test\" component={Test} />\n          <Route exact path=\"/datasources/new\" component={EditDataSource} />\n          <Route exact path=\"/datasources/edit/:id\" component={EditDataSource} />\n          <Route exact path=\"/dashboard/new\" component={DashboardEditView} />\n          <Route exact path=\"/dashboard/edit/:id\" component={DashboardEditView} />\n          <Route exact path=\"/single-test\" component={SingleTest} />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/poli\">\n    <App />\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}