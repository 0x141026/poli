{"version":3,"sources":["views/Login.js","views/ChangeTempPassword.js","api/WebApi.js","components/Modal.js","components/Toast.js","views/DataSource.js","components/Checkbox.js","components/Slicer.js","api/Util.js","components/NumberRange.js","api/Constants.js","components/FilterViewPanel.js","components/ColorPicker.js","components/GridDraggable.js","components/GridResizable.js","api/EchartsApi.js","components/TableWidget.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/Tabs.js","components/Select.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/DashboardFullScreenView.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","handleKeyPress","keyCode","login","_this$state","state","username","password","user","axios","post","then","res","loginResponse","data","error","errorMsg","onLoginSuccess","_this2","console","log","react_default","a","createElement","Fragment","className","type","onChange","onKeyDown","onClick","React","Component","withRouter","ChangeTempPassword","changePassword","confirmedPassword","history","push","class","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","concat","onClose","index_es","icon","size","Toast","message","showToast","setTimeout","hide","_toastRef","assertThisInitialized","toastStatus","DataSource","save","showUpdatePassword","id","connectionUrl","driverClassName","ping","ds","put","closeEditPanel","catch","result","clearEditPanel","initialState","openEditPanel","showEditPanel","confirmDelete","_this$state$objectToD","objectToDelete","delete","closeConfirmDeletionPanel","openConfirmDeletionPanel","datasource","showConfirmDeletionPanel","toggleUpdatePassword","prevState","clearSearch","searchValue","jdbcDataSources","webApi","_this$state2","_this$state2$jdbcData","_this$state2$objectTo","mode","jdbcDataSourceItems","_loop","i","includes","key","length","placeholder","style","width","src_components_Modal","rows","margin","Checkbox","toggle","checked","_this$props2","checkmarkBoxStyle","backgroundColor","Slicer","isSelectAll","toggleSelectAll","newIsSelectAll","newCheckBoxes","toConsumableArray","checkBoxes","isChecked","filterId","handleSearchValueChange","indexOf","handleCheckBoxChange","index","findIndex","x","_this$props$checkBoxe","checkBoxItems","map","box","src_components_Checkbox","jsonToArray","json","array","JSON","parse","e","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","DEFAULT_FILTER_VIEW_WIDTH","DEFAULT_DASHBOARD_HEIGHT","FilterViewPanel","fetchFilters","dashboardId","filters","queryFilters","filter","Constants","queryRequest","queryResult","queryResultData","Util","f","newFilters","_arr","values","_i2","val","_arr2","_i3","renderFilterPanel","filterPanel","filterComponent","src_components_Slicer","onSlicerChange","onSingleValueChange","isEditMode","edit","fixedWidth","onEdit","applyFilters","_this$state$filters","filterParams","filterParam","_filter$checkBoxes","paramValues","j","checkBox","remark","param","onApplyFilters","splice","ColorPicker","handleClick","showPalette","handleClose","handleChange","color","rgb","rgba","r","g","b","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","WIDGET_BORDER","GridDraggable","onMouseDown","preventDefault","gridItemNode","ReactDOM","findDOMNode","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","CHART_COLORS","getPieOption","pieKey","pieValue","legend","series","row","tooltip","orient","center","radius","getPieOptionTemplate","TableWidget","_this$props$data","_this$props$columns","columns","_this$props$drillThro","drillThrough","columnHeaders","forEach","column","columnName","header","Header","accessor","d","Cell","href","es","defaultPageSize","previousText","nextText","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","instance","handleOriginal","drills","widgetDrillThrough","onChartClick","echarts","onChartLegendselectchanged","echart","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","_this$props$queryResu","widgetItem","src_components_TableWidget","chartOption","EchartsApi","echarts_for_react_lib_default","option","onEvents","_this$props2$style","_style$showBorder","showBorder","borderStyle","styles","border","marginRight","components_GridDraggable","components_GridResizable","GridLayout","_this$props$widgets","widgets","showGridlines","backgroundSize","backgroundImage","boxItems","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","isResizeToBase","preGridWidth","gridWidth","newWidgets","resizeWidgetsToBase","resizeWidgetsToActual","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryWidgets","params","w","handleHeightChange","onHeightChange","onBackgroundColorChange","saveWidgets","stringify","widgetViewWidth","components_ColorPicker","src_components_GridLayout","Tabs","handleTabClick","activeTab","_this$props$children","tabHeaders","tabContent","active","Select","handleOptionChange","_this$props$options","options","optionValue","optionDisplay","optionList","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","_result$data","sqlQuery","jdbcDataSourceId","runQuery","_x","_x2","objectSpread","handleAceEditorChange","newValue","handleIntegerOptionChange","intValue","onSave","addDrillThrough","_this$state3","drillColumnName","drillDashboardId","newDrills","removeDrillThrough","drill","generateChart","_this$state4","_this$state4$queryRes","renderChartPreview","_this$state5","_this$state5$queryRes","chartPreview","_this$state6","components_Select","_this$state7","_this$state7$jdbcData","_this$state7$drillDas","drillItems","columnItems","col","dataType","src_components_Tabs","react_ace_lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","FilterEditPanel","fetchFilter","useQuery","_this$state2$queryRes","requireSql","DashboardEditView","loadViewByDashboardName","url","location","search","URLSearchParams","dashboardName","showFilterViewPanel","pageWidth","getPageWidth","isReadOnly","refresh","toggleAutoRefresh","autoRefreshTimerId","clearInterval","refreshInterval","interval","timerId","setInterval","filterViewPanel","current","updateLastRefreshed","refreshWidgetView","refreshFilterView","widgetViewPanel","now","Date","toTimeString","replace","lastRefreshed","dashboard","onDashboardSave","cancelEdit","onSaveWidget","showWidgetEditPanel","onSaveFilter","showFilterEditPanel","toggleFilterViewPanel","resizePageLayout","openFilterEditPanel","filterEditPanel","openWidgetEditPanel","widgetEditPanel","fullScreen","window","open","onTableCellClick","onDashboardDelete","deleteDashboard","jdbcDataSourceOptions","createRef","match","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","editButtonPanel","_this3","autoRefreshStatus","fullScreenButtonPanel","controlButtons","components_WidgetViewPanel","ref","src_components_FilterViewPanel","src_components_WidgetEditPanel","src_components_FilterEditPanel","Dashboard","fetchBoards","view","activeDashboardId","_this$state$dashboard","dashboardRows","menuActive","Route","path","render","views_DashboardEditView","DashboardFullScreenView","dashboardEditView","wrappedComponentRef","comp","SYS_ROLES","User","fetchUsers","users","fetchGroups","groups","tempPassword","sysRole","userGroups","userGroupId","initialEditPanelState","addUserGroup","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_this$state3$users","_this$state3$groups","_this$state3$userGrou","userItems","userGroupItems","Group","fetchDashboards","group","groupDashboards","groupDashboardId","addGroupDashboard","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","UserManagement","views_Group","views_User","Account","fetchUser","apiKey","generateApiKey","alert","MENU_ITEMS","link","Workspace","handleMenuClick","menuLink","currentMenuLink","logout","pathname","menuItems","menuList","m","menu","Link","to","isAccountMenuActive","Switch","exact","component","src_components_Toast","PageNotFound","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","faCircleNotch","App","isAuthorizing","_this$state$sysRole","isAuthenticated","spin","src_views_Login","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.b49ba11f.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.css';\n\nclass Login extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorMsg: '',\n      username: '',\n      password: ''\n    };\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    console.log('Login - componentDidMount', 'cookie');\n    axios.post('/auth/login/cookie')\n      .then(res => {\n        const loginResponse = res.data || {};\n        if (!loginResponse.error) {\n          this.props.onLoginSuccess(loginResponse);\n        }\n      });\n  }\n\n  handleKeyPress = (event) => {\n    if(event.keyCode === 13) {\n      this.login();\n    }\n  }\n\n  login = () => {\n    const {\n      username,\n      password\n    } = this.state;\n\n    const user = {\n      username: username,\n      password: password\n    }\n\n    if (!username) {\n      this.setState({\n        errorMsg: 'Enter username'\n      });\n      return;\n    }\n\n    if (!password) {\n      this.setState({\n        errorMsg: 'Enter password'\n      });\n      return;\n    }\n\n    axios.post('/auth/login/user', user)\n      .then(res => {\n        const loginResponse = res.data || {};\n        if (loginResponse.error) {\n          this.setState({\n            errorMsg: loginResponse.error\n          });\n        } else {\n          this.props.onLoginSuccess(loginResponse);\n        }\n      });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"login-panel\">\n          <div className=\"login-app-title\">Poli</div>\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\n          <div className=\"long-panel-body\">\n            <div className=\"form-group\">\n              <label>Username</label>\n              <input \n                type=\"text\" \n                name=\"username\" \n                value={this.state.username}\n                onChange={this.handleInputChange} \n                onKeyDown={this.handleKeyPress} \n              />\n              <label>Password</label>\n              <input \n                type=\"password\" \n                name=\"password\" \n                value={this.state.password}\n                onChange={this.handleInputChange} \n                onKeyDown={this.handleKeyPress} \n              />\n            </div>\n            <button className=\"button login-button\" onClick={this.login}>Login</button>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withRouter(Login);","\nimport React from 'react';\nimport axios from 'axios';\nimport { withRouter } from \"react-router-dom\";\n\nclass ChangeTempPassword extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorMsg: '',\n      password: '',\n      confirmedPassword: ''\n    };\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  componentDidMount() {\n      console.log('ChangeTempPassword - componentDidMount');\n  }\n\n  changePassword = () => {\n    const {\n      password,\n      confirmedPassword\n    } = this.state;\n\n    if (password && confirmedPassword\n        && password === confirmedPassword) {\n      const user = {\n        password: password\n      }\n\n      axios.post('/auth/login/changepassword', user)\n        .then(res => {\n          const result = res.data;\n          this.props.history.push('/workspace/dashboard');\n        });\n    } else {\n      this.setState({\n        errorMsg: `Those passwords didn't match.`\n      });\n    }\n  }\n\n  render() {\n\n    return (\n      <div>\n        <label>{this.state.errorMsg}</label>\n        <div class=\"form-group\">\n          <label>New password</label>\n          <input \n            type=\"password\" \n            name=\"password\" \n            value={this.state.username}\n            onChange={this.handleInputChange} />\n          <label>Confirm password</label>\n          <input \n            type=\"password\" \n            name=\"confirmedPassword\" \n            value={this.state.confirmedPassword}\n            onChange={this.handleInputChange} />\n          <button onClick={this.changePassword}>Change</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ChangeTempPassword);","import axios from 'axios';\n\nconst JSON_HEADER = {\n  headers: {\n    'Content-Type': 'application/json',\n  }\n};\n\nexport const fetchDataSources = async () => {\n  try {\n    const response = await axios.get('/ws/jdbcdatasource');\n    return response.data || [];\n  } catch (e) {\n    return [];\n  }\n};\n\nexport const fetchDashboardById = async (id) => {\n  return await get(`/ws/dashboard/${id}`);\n}\n\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\n}\n\nconst get = async (url) => {\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (e) {\n    return [];\n  }\n} \n\n\n\n\n","import React from 'react';\nimport './Modal.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass Modal extends React.Component {\n\n  render() {\n    const {\n      show,\n      modalClass = '',\n      title,\n      children\n    } = this.props;\n\n    const modalStatus = show ? 'display-block' : 'display-none';\n    return (\n      <div className={`modal-overlay ${modalStatus}`}>\n        <div className={`modal-panel ${modalClass}`}>\n          <div className=\"model-header row\">\n            <div className=\"model-title\">{title}</div>\n            <button className=\"model-close-button icon-button\" onClick={() => this.props.onClose()}>\n              <FontAwesomeIcon icon=\"times\" size=\"lg\" />\n            </button>\n          </div>\n          <hr/>\n          <div className='modal-body'>\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;","import React from 'react';\nimport './Toast.css';\n\nclass Toast extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showToast: false,\n      message: ''\n    };\n\n    Toast._toastRef = this;\n  }\n\n  show = (message) => {\n    this.setState({ \n      showToast: true,\n      message: message\n    }, () => {\n      setTimeout(() => {\n        this.hide();\n      }, 3500);\n    });\n  }\n\n  hide = () => {\n    this.setState({ \n      showToast: false,\n      message: ''\n    });\n  }\n\n  static show = (message) => {\n    Toast._toastRef.show(message);\n  }\n\n  render() {\n    const {\n      showToast,\n      message\n    } = this.state;\n\n    const toastStatus = showToast ? 'display-block' : 'display-none';\n\n    return (\n      <div className={`toast-container ${toastStatus}`}>\n        <button className=\"button\" onClick={this.hide}>X</button>\n        <div>\n          {message}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Toast;","\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport * as webApi from '../api/WebApi';\nimport Modal from '../components/Modal';\nimport Toast from '../components/Toast';\nimport './Datasource.css';\n\nclass DataSource extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      jdbcDataSources: [],\n      showEditPanel: false,\n      showConfirmDeletionPanel: false,\n      objectToDelete: {},\n      showUpdatePassword: false,\n      searchValue: '',\n      id: null,\n      name: '',\n      connectionUrl: '',\n      driverClassName: '',\n      username: '',\n      password: '',\n      ping: ''\n    };\n  }\n\n  get initialState() {\n    return {\n      showUpdatePassword: false,\n      id: null,\n      name: '',\n      connectionUrl: '',\n      driverClassName: '',\n      username: '',\n      password: '',\n      ping: ''\n    };\n  }\n\n  componentDidMount() {\n    this.fetchDataSources();\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  async fetchDataSources() {\n    const jdbcDataSources = await webApi.fetchDataSources();\n    this.setState({ \n      jdbcDataSources: jdbcDataSources \n    });\n  }\n\n  save = () => {\n    const {\n      showUpdatePassword,\n      id,\n      connectionUrl,\n      driverClassName,\n      username,\n      password,\n      name,\n      ping,\n    } = this.state;\n\n    if (!name) {\n      return;\n    }\n\n    let ds = {\n      connectionUrl: connectionUrl,\n      driverClassName: driverClassName,\n      username: username,\n      name: name,\n      ping: ping\n    };\n\n    if (id !== null) {\n      ds.id = id;\n      if (showUpdatePassword && password) {\n        ds.password = password;\n      }\n\n      // Update\n      axios.put('/ws/jdbcdatasource', ds)\n        .then(res => {\n          this.closeEditPanel();\n          this.fetchDataSources();\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    } else {\n      ds.password = password;\n\n      // New\n      axios.post('/ws/jdbcdatasource', ds)\n        .then(res => {\n          this.closeEditPanel();\n          this.fetchDataSources();\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    } \n  }\n\n  ping = (id) => {\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\n      .then(res => {\n        const result = res.data;\n        Toast.show(result);\n      });\n  }\n\n  clearEditPanel = () => {\n    this.setState(this.initialState);\n  }\n\n  openEditPanel = (ds) => {\n    if (ds !== null) {\n      this.setState({\n        showUpdatePassword: false,\n        id: ds.id,\n        connectionUrl: ds.connectionUrl,\n        driverClassName: ds.driverClassName,\n        username: ds.username,\n        password: ds.password,\n        name: ds.name,\n        ping: ds.ping\n      });\n    } else {\n      this.clearEditPanel();\n    }\n    \n    this.setState({\n      showEditPanel: true\n    }); \n  }\n\n  closeEditPanel = () => {\n    this.setState({\n      showEditPanel: false\n    });\n  }\n\n  confirmDelete = () => {\n    const { \n      objectToDelete = {} \n    } = this.state;\n    axios.delete('/ws/jdbcdatasource/' + objectToDelete.id)\n      .then(res => {\n        this.fetchDataSources();\n        this.closeConfirmDeletionPanel();\n      });\n  }\n\n  openConfirmDeletionPanel = (datasource) => {\n    this.setState({\n      objectToDelete: datasource,\n      showConfirmDeletionPanel: true\n    });\n  }\n\n  closeConfirmDeletionPanel = () => {\n    this.setState({\n      objectToDelete: {},\n      showConfirmDeletionPanel: false\n    });\n  }\n\n  toggleUpdatePassword = () => {\n    this.setState(prevState => ({\n      showUpdatePassword: !prevState.showUpdatePassword\n    })); \n  }\n\n  clearSearch = () => {\n    this.setState({\n      searchValue: ''\n    });\n  }\n\n  render() {\n    const { \n      showUpdatePassword,\n      showConfirmDeletionPanel,\n      searchValue,\n      id,\n      jdbcDataSources = [],\n      objectToDelete = {}\n    } = this.state;\n\n    const mode = id === null ? 'New' : 'Edit';\n\n    const jdbcDataSourceItems = [];\n    for (let i = 0; i < jdbcDataSources.length; i++) {\n      const ds = jdbcDataSources[i];\n      const name = ds.name;\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\n        jdbcDataSourceItems.push(\n          (\n            <div key={i} className=\"datasource-card row\">\n              <div className=\"float-left ellipsis datasource-row-name\">\n                {name}\n              </div>\n              <div className=\"float-right\">\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(ds)}>\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\n                </button>\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(ds)}>\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\n                </button>\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.ping(ds.id)}>\n                  <FontAwesomeIcon icon=\"plug\" size=\"lg\" />\n                </button>\n              </div>\n            </div>\n          )\n        )\n      }\n    }\n\n    return (\n      <div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"searchValue\"\n            value={this.state.searchValue}\n            onChange={this.handleInputChange}\n            placeholder=\"Search...\"\n            style={{width: '200px'}}\n            />\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\n            <FontAwesomeIcon icon=\"plus\" /> New datasource\n          </button>\n          </div>\n        <div className=\"table-panel\">\n          {jdbcDataSourceItems}\n        </div>\n\n        <Modal \n          show={this.state.showEditPanel}\n          onClose={this.closeEditPanel}\n          modalClass={'small-modal-panel'}\n          title={mode} >\n\n          <div className=\"form-panel\">\n            <label>Name <span className=\"required\">*</span></label>\n            <input \n              type=\"text\" \n              name=\"name\" \n              value={this.state.name}\n              onChange={this.handleInputChange} />\n\n            <label>Connection Url</label>\n            <textarea\n              rows=\"4\"\n              type=\"text\" \n              name=\"connectionUrl\" \n              value={this.state.connectionUrl}\n              onChange={this.handleInputChange} >\n            </textarea>\n\n            <label>Driver class name</label>\n            <input \n              type=\"text\" \n              name=\"driverClassName\" \n              value={this.state.driverClassName}\n              onChange={this.handleInputChange} />\n\n            <label>Username</label>\n            <input \n              type=\"text\" \n              name=\"username\" \n              value={this.state.username}\n              onChange={this.handleInputChange} />\n            \n            { mode === 'Edit' ? \n              (\n                <div style={{margin: '3px 0px 8px 0px'}}>\n                  <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\n                </div>\n              ) : null\n            }\n            { mode === 'New' || showUpdatePassword ? \n              (\n                <div>\n                  <label>Password</label>\n                  <input \n                    type=\"password\" \n                    name=\"password\" \n                    value={this.state.password}\n                    onChange={this.handleInputChange} />\n                </div>\n              ) : null\n            }\n\n            <label>Ping</label>\n            <input \n              type=\"text\" \n              name=\"ping\" \n              value={this.state.ping}\n              onChange={this.handleInputChange} />\n            <button className=\"button mt-3\" onClick={this.save}>Save</button>\n          </div>\n        </Modal>\n\n        <Modal \n          show={showConfirmDeletionPanel}\n          onClose={this.closeConfirmDeletionPanel}\n          modalClass={'small-modal-panel'}\n          title={'Confirm Deletion'} >\n          <div className=\"confirm-deletion-panel\">\n            Are you sure you want to delete {objectToDelete.name}?\n          </div>\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default DataSource;\n","import React from 'react';\nimport './Checkbox.css';\n\nclass Checkbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n    };\n  }\n\n  toggle = () => {\n    const {\n      name,\n      checked\n    } = this.props;\n\n    this.props.onChange(name, !checked);\n  }\n\n  render() {\n    const {\n      value,\n      checked\n    } = this.props;\n\n    const checkmarkBoxBgColor = checked ? '#000000' : '#FFFFFF';\n    const checkmarkBoxStyle = {\n      backgroundColor: checkmarkBoxBgColor\n    };\n\n    return (\n      <div className=\"checkbox-container\" onClick={this.toggle}>\n        <div className=\"checkbox-checkmark\">\n          <div className=\"checkbox-checkmark-box\" style={checkmarkBoxStyle}>\n          </div>\n        </div>\n        <div className=\"checkbox-label\">{value}</div>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;\n","import React from 'react';\nimport Checkbox from './Checkbox';\nimport './Slicer.css';\n\nclass Slicer extends React.Component {\n\n  state = {\n    isSelectAll: false,\n    searchValue: ''\n  }\n\n  toggleSelectAll = () => {\n    const newIsSelectAll = !this.state.isSelectAll;\n    const newCheckBoxes = [...this.props.checkBoxes];\n    for (let i = 0; i < newCheckBoxes.length; i++) {\n      newCheckBoxes[i].isChecked = newIsSelectAll;\n    }\n    this.props.onChange(this.props.filterId, newCheckBoxes);\n\n    this.setState(prevState => ({\n      isSelectAll: !prevState.isSelectAll\n    }));\n  }\n\n  handleSearchValueChange = (event) => {\n    const searchValue = event.target.value;\n    if (searchValue) {\n      const result = [];\n      const { checkBoxes } = this.props;\n      for (let i = 0; i < checkBoxes.length; i++) {\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\n          result.push(checkBoxes[i]);\n        }\n      }\n    }\n\n    this.setState({\n      searchValue: searchValue\n    });\n\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\n  }\n\n  handleCheckBoxChange = (name, isChecked) => {\n    const newCheckBoxes = [...this.props.checkBoxes];\n    const index = newCheckBoxes.findIndex(x => x.value === name);\n    newCheckBoxes[index].isChecked = isChecked;\n    this.props.onChange(this.props.filterId, newCheckBoxes);\n  }\n\n  render() {\n    const { \n      checkBoxes = []\n    } = this.props;\n    const checkBoxItems = checkBoxes.map((box, index) => \n      <Checkbox \n        key={index} \n        name={box.value} \n        value={box.value} \n        checked={box.isChecked} \n        onChange={this.handleCheckBoxChange} \n      />\n    );\n\n    return (\n      <div>\n        <button className=\"button\" onClick={this.toggleSelectAll}>Select All {this.state.isSelectAll}</button>\n        <input \n            type=\"text\" \n            name=\"name\" \n            value={this.state.searchValue}\n            onChange={this.handleSearchValueChange}\n            placeholder=\"Search...\"\n          />\n        \n        <div className=\"slicer-body\">\n          {checkBoxItems}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Slicer;\n","\nexport const isArrayEmpty = (array) => {\n  return !Array.isArray(array) || !array.length;\n};\n\nexport const jsonToArray = (json) => {\n  let array;\n  try {\n    array = JSON.parse(json);\n  } catch(e) {\n    array = [];\n  }\n  return array;\n}\n","import React from 'react';\n\nclass NumberRange extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        min\n        <input type=\"number\" name=\"min\" />\n        max\n        <input type=\"number\" name=\"max\" />\n      </div>\n    );\n  }\n}\n\nexport default NumberRange;","/**\n * Constants\n */\nexport const SLICER = 'slicer';\nexport const SINGLE_VALUE= 'single';\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\n\nexport const PIE = 'pie';\nexport const TABLE = 'table';\nexport const CHART_TYPES = [TABLE, PIE];\n\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\n\nexport const SYS_ROLE_ADMIN = 'admin';\nexport const SYS_ROLE_DEVELOPER = 'developer';\nexport const SYS_ROLE_VIEWER = 'viewer';\n\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;","import React, { Component } from 'react';\nimport Slicer from \"./Slicer\";\nimport NumberRange from \"./NumberRange\";\nimport * as Util from '../api/Util';\nimport * as Constants from '../api/Constants';\n\nimport axios from 'axios';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './FilterViewPanel.css';\nimport Modal from '../components/Modal';\n\nclass FilterViewPanel extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      dashboardId: null,\n      filters: [],\n      showConfirmDeletionPanel: false,\n      objectToDelete: {}\n    };\n  }\n\n  fetchFilters = (dashboardId) => {\n    if (dashboardId === null) {\n      return;\n    }\n\n    this.setState({\n      dashboardId: dashboardId\n    })\n\n    axios.get('/ws/filter/dashboard/' + dashboardId)\n      .then(res => {\n        const result = res.data;\n        this.setState({\n          filters: result,\n        }, this.queryFilters);\n      });\n  }\n\n  queryFilters = () => {\n    const { filters } = this.state;\n    for (let i = 0; i < filters.length; i++) {\n      const filter = filters[i];\n      if (filter.type === Constants.SLICER) {\n        const queryRequest = filter.data;\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\n          .then(res => {\n            const queryResult = res.data;\n            const queryResultData = Util.jsonToArray(queryResult.data);\n\n            const index = filters.findIndex(f => f.id === queryResult.id);\n            const newFilters = [...this.state.filters];\n            newFilters[index].queryResult = queryResult;\n            const type = newFilters[index].type;\n            if (type === Constants.SLICER) {\n              const checkBoxes = [];\n              for (let i = 0; i < queryResultData.length; i++) {\n                const values = Object.values(queryResultData[i]);\n                for (const val of values) {\n                  checkBoxes.push({\n                    value: val,\n                    isChecked: false\n                  });\n                }\n              }\n\n              newFilters[index].checkBoxes = checkBoxes;\n            } else if (type === Constants.SINGLE_VALUE) {\n              const values = Object.values(queryResultData);\n              let value = '';\n              for (const val of values) {\n                value = val;\n                break;\n              }\n              newFilters[index].value = value;\n            }\n\n            this.setState({\n              filters: newFilters\n            });\n          });\n      }\n    }\n  }\n\n  renderFilterPanel = () => {\n    const filterPanel = [];\n    const filters = this.state.filters;\n    for (let i = 0; i < filters.length; i++) {\n      const filter = filters[i];\n      let filterComponent = (<div>NONE</div>);\n      if (filter.type === Constants.SLICER) {\n        const checkBoxes = filter.checkBoxes;\n        filterComponent = (\n          <Slicer \n            key={i} \n            filterId={filter.id} \n            checkBoxes={checkBoxes} \n            onChange={this.onSlicerChange} \n          />\n        );\n      } else if (filter.type === Constants.SINGLE_VALUE) {\n        filterComponent = (\n          <input \n            type=\"text\"  \n            value={filter.value}\n            onChange={(event) => this.onSingleValueChange(filter.id, event)} \n          />\n        );\n      }\n\n      filterPanel.push(\n        (\n          <div className=\"filter-card\">\n            <div className=\"filter-card-title\">\n              {filter.title}\n\n              { this.props.isEditMode ? \n                (\n                  <div className=\"icon-button-group\">\n                    <div className=\"inline-block\" onClick={() => this.edit(filter.id)}>\n                      <FontAwesomeIcon icon=\"edit\" fixedWidth />\n                    </div>\n                    <div className=\"inline-block\" onClick={() => this.openConfirmDeletionPanel(filter.id)}>\n                      <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\n                    </div>\n                  </div>\n                ): null \n              }\n            </div>\n            <div>\n              {filterComponent}\n            </div>\n          </div>\n        )\n      );\n    }\n    return filterPanel;\n  }\n\n  edit = (filterId) => {\n    this.props.onEdit(filterId);\n  }\n\n  onSlicerChange = (filterId, checkBoxes) => {\n    const index = this.state.filters.findIndex(f => f.id === filterId);\n    const newFilters = [...this.state.filters];\n    newFilters[index].checkBoxes = [...checkBoxes];\n    this.setState({\n      filters: newFilters\n    });  \n  }\n\n  onSingleValueChange = (filterId, event) => {\n    const { filters } = this.state;\n    const value = event.target.value;\n    const index = filters.findIndex(f => f.id === filterId);\n    const newFilters = [...filters];\n    newFilters[index].value = value;\n    this.setState({\n      filters: newFilters\n    });\n  }\n\n  applyFilters = () => {\n    const { \n      filters = []\n    } = this.state;\n    const filterParams = [];\n    for (let i = 0; i < filters.length; i++) {\n      const filter = filters[i];\n      const filterParam = {};\n      if (filter.type === Constants.SLICER) {\n        const { \n          checkBoxes = []\n        } = filter;\n        const paramValues = [];\n        for (let j = 0; j < checkBoxes.length; j++) {\n          const checkBox = checkBoxes[j];\n          if (checkBox.isChecked) {\n            paramValues.push(checkBox.value);\n          }\n        }\n        filterParam.value = paramValues;\n        if (paramValues.length === checkBoxes.length) {\n          filterParam.remark = 'select all';\n        }\n      } else if (filter.type === Constants.SINGLE_VALUE) {\n        filterParam.value = filter.value;\n      }\n      filterParam.param = filter.data.param;\n      filterParam.type = filter.type;\n      filterParams.push(filterParam);\n    }\n\n    this.props.onApplyFilters(filterParams);\n  }\n\n  confirmDelete = () => {\n    const { \n      objectToDelete\n    } = this.state;\n    const filterId = objectToDelete;\n    axios.delete(`/ws/filter/${filterId}`)\n      .then(res => {\n        const index = this.state.filters.findIndex(f => f.id === filterId);\n        const newFilters = [...this.state.filters];\n        newFilters.splice(index, 1);\n        this.setState({\n          filters: newFilters\n        });\n        this.closeConfirmDeletionPanel();\n      });\n  }\n\n  openConfirmDeletionPanel = (filterId) => {\n    this.setState({\n      objectToDelete: filterId,\n      showConfirmDeletionPanel: true\n    });\n  }\n\n  closeConfirmDeletionPanel = () => {\n    this.setState({\n      objectToDelete: {},\n      showConfirmDeletionPanel: false\n    });\n  }\n\n  render() {\n    const { show } = this.props;\n    const style = {};\n    if (show) {\n      style.width = Constants.DEFAULT_FILTER_VIEW_WIDTH + 'px';\n    } else {\n      style.width = '0px';\n    }\n\n    return (\n      <div className=\"dashboard-content-filter-panel\" style={style}>\n        <div>Filters</div>\n        <button className=\"button\" onClick={this.applyFilters}>Run</button>\n        <div className=\"filter-view-panel\">\n          {this.renderFilterPanel()}\n        </div>\n\n        <Modal \n          show={this.state.showConfirmDeletionPanel}\n          onClose={this.closeConfirmDeletionPanel}\n          modalClass={'small-modal-panel'}\n          title={'Confirm Deletion'} >\n          <div className=\"confirm-deletion-panel\">\n            Are you sure you want to delete this filter?\n          </div>\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\n        </Modal>\n      </div>\n    )\n  };\n}\n\nexport default FilterViewPanel;","import React from 'react';\nimport { ChromePicker } from 'react-color';\n\nclass ColorPicker extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPalette: false\n    }\n  }\n\n  handleClick = () => {\n    this.setState(prevState => ({\n      showPalette: !prevState.showPalette\n    })); \n  };\n\n  handleClose = () => {\n    this.setState({ \n      showPalette: false \n    });\n  };\n\n  handleChange = (color) => {\n    const rgb = color.rgb;\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\n    this.props.onChange(rgba);\n  };\n\n  render() {\n\n    const color = {\n      width: '36px',\n      height: '14px',\n      borderRadius: '2px',\n      background: this.props.value\n    };\n\n    const swatch = {\n      padding: '5px',\n      background: '#fff',\n      borderRadius: '1px',\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n      display: 'inline-block',\n      cursor: 'pointer'\n    };\n\n    const popover = {\n      position: 'absolute',\n      zIndex: '2'\n    };\n\n    const cover = {\n      position: 'fixed',\n      top: '0px',\n      right: '0px',\n      bottom: '0px',\n      left: '0px'\n    };\n\n    return (\n      <div>\n        <div style={swatch} onClick={this.handleClick}>\n          <div style={color} />\n        </div>\n        { this.state.showPalette ? \n          (\n            <div style={popover}>\n              <div style={cover} onClick={this.handleClose} />\n              <ChromePicker color={this.props.value} onChange={this.handleChange} />\n            </div>\n          ) : null }\n      </div>\n    )\n  };\n}\n\nexport default ColorPicker;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst WIDGET_BORDER = 2;\n\nclass GridDraggable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      xOffset: 0,\n      yOffset: 0\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\n    const yOffset = event.clientY - gridItemNode.offsetTop;\n\n    let boxes = document.getElementsByClassName(\"grid-box\");\n    for (let i = 0; i < boxes.length; i++) {\n        boxes[i].style.zIndex = 20;\n    }\n    gridItemNode.style.zIndex = 30;\n\n    const { ownerDocument } = gridItemNode;\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\n    this.setState({\n      xOffset: xOffset,\n      yOffset: yOffset\n    });\n\n    this.props.onMouseDown('drag');\n  }\n\n  onMouseUp = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n    this.props.onMouseUp();\n  }\n\n  onMouseMove = (event) => {\n    event.preventDefault();\n    if (this.props.mode !== 'drag') {\n      return; \n    }\n\n    let gridCell = 1;\n    if (this.props.snapToGrid) {\n      gridCell = 4;\n    }\n\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    let currentX = event.clientX - this.state.xOffset;\n    let currentY = event.clientY - this.state.yOffset;\n    \n    const containerNode = gridItemNode.parentNode;\n    const containerWidth = containerNode.clientWidth;\n    const containerHeight = containerNode.clientHeight;\n    \n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\n\n    if (currentX < 0) {\n      currentX = 0;\n    }\n    if (currentY < 0) {\n      currentY = 0;\n    }\n    if (currentX + boxWidth > containerWidth) {\n      currentX = containerWidth - boxWidth;\n    }\n    if (currentY + boxHeight > containerHeight) {\n      currentY = containerHeight - boxHeight;\n    }\n\n    currentX = Math.floor(currentX / gridCell) * gridCell;\n    currentY = Math.floor(currentY / gridCell) * gridCell;\n\n    gridItemNode.style.left = currentX + 'px';\n    gridItemNode.style.top = currentY + 'px';\n  }\n\n  render() {\n    return (\n      <div className=\"grid-draggable\"\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp}>\n        <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\n      </div>\n    )\n  }\n}\n\nexport default GridDraggable;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst MIN_WIDTH = 30;\nconst MIN_HEIGHT = 30;\nconst WIDGET_BORDER = 2;\n\n\nclass GridResizable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentX: 0,\n      currentY: 0,\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    const currentX = event.clientX;\n    const currentY = event.clientY;\n    \n    const { ownerDocument } = thisNode;\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\n    this.setState({\n      currentX: currentX,\n      currentY: currentY\n    });\n\n    this.props.onMouseDown('resize');\n  }\n\n  onMouseUp = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n    this.props.onMouseUp();\n  }\n\n  onMouseMove = (event) => {\n    event.preventDefault();\n    if (this.props.mode !== 'resize') {\n      return; \n    }\n\n    let xOffset = event.clientX - this.state.currentX;\n    let yOffset = event.clientY - this.state.currentY;\n\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\n\n    const containerNode = gridItemNode.parentNode;\n    const containerWidth = containerNode.clientWidth;\n    const containerHeight = containerNode.clientHeight;\n\n    let newWidth = Math.floor(prevWidth + xOffset);\n    let newHeight = Math.floor(prevHeight + yOffset);\n\n    if (newWidth < MIN_WIDTH) {\n      newWidth = MIN_WIDTH;\n    }\n    \n    if (newHeight < MIN_HEIGHT) {\n      newHeight = MIN_HEIGHT;\n    }\n\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\n\n    if (newWidth +  left > containerWidth) {\n      newWidth = containerWidth - left;\n    }\n\n    if (newHeight + top > containerHeight) {\n      newHeight = containerHeight - top;\n    }\n\n    gridItemNode.style.width = newWidth + 'px';\n    gridItemNode.style.height = newHeight + 'px';\n\n    this.setState({\n      currentX: event.clientX,\n      currentY: event.clientY\n    });\n  }\n\n  render() {\n    return (\n      <div \n        className=\"grid-resizable\"\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp} >\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\n      </div>\n    )\n  }\n}\n\nexport default GridResizable;","import * as Util from '../api/Util';\n\nconst CHART_COLORS = [\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\n];\n\nexport const getPieOptionTemplate = (legend, series) => {\n  return {\n    color: CHART_COLORS,\n    tooltip: {\n    },\n    legend: {\n      type: 'scroll',\n      orient: 'vertical',\n      data: legend,\n      right: 10,\n      top: 10,\n      bottom: 10\n    },\n    series: [\n      {\n        type:'pie',\n        center: ['40%', '50%'],\n        radius: '50%',\n        data: series\n      }\n    ]\n  }\n};\n\nexport const getPieOption = (queryResultData, pieKey, pieValue) => {\n  let legend = [];\n  let series = [];\n  for (let i = 0; i < queryResultData.length; i++) {\n    const row = queryResultData[i];\n    legend.push(row[pieKey]);\n    series.push({\n      name: row[pieKey],\n      value: row[pieValue]\n    });  \n  }\n  return getPieOptionTemplate(legend, series);\n}\n","import React from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport './TableWidget.css';\n\nclass TableWidget extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n    };\n  }\n\n  render() {   \n    const {\n      data = [],\n      columns = [],\n      drillThrough = [],\n      error\n    } = this.props;\n\n    const columnHeaders = [];\n    columns.forEach(column => {\n      const columnName = column.name;\n      const header = {\n        Header: columnName,\n        accessor: columnName\n      };\n      if (drillThrough.length > 0) {\n        const index = drillThrough.findIndex(d => d.columnName === columnName);\n        if (index !== -1) {\n          const dashboardId = drillThrough[index].dashboardId;\n          header.Cell = (props => <a href={`/poli/workspace/dashboard/${dashboardId}?${columnName}=${props.value}`}>{props.value}</a>);\n        }\n      }\n\n      columnHeaders.push(header);\n    });\n\n    if (error) {\n      return (\n        <div>\n          {error}\n        </div>\n      )\n    }\n\n    return (\n      <ReactTable\n        data={data}\n        columns={columnHeaders}\n        defaultPageSize={10}\n        previousText={'Prev'}\n        nextText={'Next'}\n      />\n    );\n  }\n}\n\nexport default TableWidget;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GridDraggable from './GridDraggable';\nimport GridResizable from './GridResizable';\n\nimport { withRouter } from 'react-router-dom';\n\nimport * as Util from '../api/Util';\nimport * as Constants from '../api/Constants';\n\nimport ReactEcharts from 'echarts-for-react';\nimport * as EchartsApi from '../api/EchartsApi';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport TableWidget from './TableWidget';\n\nclass GridItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: ''\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (mode) => {\n    console.log('GridItem onMouseDown', mode);\n    this.setState({\n      mode: mode\n    });\n  }\n\n  onMouseUp = () => {\n    console.log('GridItem onMouseUp');\n    this.setState({\n      mode: ''\n    });\n\n    const thisNode = ReactDOM.findDOMNode(this);\n    const x = thisNode.offsetLeft;\n    const y = thisNode.offsetTop;\n    const width = parseInt(thisNode.style.width, 10);\n    const height = parseInt(thisNode.style.height, 10);\n    const widgetId = this.props.id;\n\n    const widget = {\n      id: widgetId,\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n\n    this.props.onWidgetMove(widget);\n  }\n\n  onMouseMove = (event, mode, state) => {\n    event.preventDefault();   \n  }\n\n  editWidget = (widgetId) => {\n    this.props.onWidgetEdit(widgetId);\n  }\n\n  exportCsv = (widgetId) => {\n\n  }\n\n  exportJson = (widgetId) => {\n\n  }\n\n  removeWidget = (widgetId) => {\n    this.props.onWidgetRemove(widgetId);\n  }\n\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\n    return {\n      onClick: (e, handleOriginal) => {\n        console.log(\"A Td Element was clicked!\");\n        console.log(\"it produced this event:\", e);\n        console.log(\"It was in this column:\", column);\n        console.log(\"It was in this row:\", rowInfo);\n        console.log(\"It was in this table instance:\", instance);\n        \n        const header = column.Header;\n        const row = rowInfo.row;\n        const value = row[header];\n        const drills = instance.props.widgetDrillThrough || []; \n        console.log('onTableTdPropsChange', header, value, drills);\n        const index = drills.findIndex(d => d.columnName === header);\n        if (index !== -1) {\n          const dashboardId = drills[index].dashboardId;\n          this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\n        }\n      }\n    };\n  }\n\n  onChartClick = (param, echarts) => {\n    console.log('onChartClick', param, echarts);\n  };\n\n  onChartLegendselectchanged = (param, echart) => {\n    console.log('onChartLegendselectchanged', param, echart);\n  };\n\n  renderWidgetContent = () => {\n    const onChartEvents = {\n      'click': this.onChartClick,\n      'legendselectchanged': this.onChartLegendselectchanged\n    };\n\n    const { \n      chartType,\n      queryResult = {},\n      drillThrough,\n      data = {}\n    } = this.props;\n\n    const queryResultData = Util.jsonToArray(queryResult.data);\n    const columns = queryResult.columns || [];\n    const error = queryResult.error;\n\n    let widgetItem = (<div></div>);\n    if (chartType === Constants.TABLE) {\n      widgetItem = (\n        <TableWidget\n          data={queryResultData}\n          columns={columns}\n          error={error}\n          drillThrough={drillThrough}\n        />\n      );\n    } else if (chartType === Constants.PIE) {\n      const { \n        pieKey,\n        pieValue\n      } = data;\n      const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\n      widgetItem = (\n        <ReactEcharts \n          option={chartOption}   \n          className=\"echarts\"\n          onEvents={onChartEvents}  \n        />\n      );\n    } \n\n    return widgetItem;\n  }\n\n  render() {\n    const {\n      id,\n      title,\n      isEditMode,\n      style = {}\n    } = this.props;\n\n    const { \n      showBorder = false \n    } = style;\n\n    const borderStyle = showBorder ? '2px solid #4b4f56' : '2px solid #FFFFFF';\n\n    let styles = {\n      left: this.props.x + 'px',\n      top: this.props.y + 'px',\n      width: this.props.width + 'px',\n      height: this.props.height + 'px',\n      zIndex: 1,\n      border: borderStyle\n    };\n\n    return (\n      <div className=\"grid-box\" style={styles}>\n        <div className=\"grid-box-title\">\n          {title}\n\n          { isEditMode ? (\n            <div className=\"float-right\" style={{marginRight: '20px'}}>\n              <div className=\"inline-block\" onClick={() => this.editWidget(id)}>\n                <FontAwesomeIcon icon=\"edit\" fixedWidth />\n              </div>\n              <div className=\"inline-block\" onClick={() => this.removeWidget(id)}>\n                <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\n              </div>\n            </div>\n          ) : (\n            <div className=\"grid-box-file-button-group\">\n              <div className=\"inline-block\" onClick={() => this.exportJson(id)}>\n                <FontAwesomeIcon icon=\"file-export\" fixedWidth />\n              </div>\n              \n              <div className=\"inline-block\" onClick={() => this.exportCsv(id)}>\n                <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\n              </div>\n            </div>\n          )}\n          \n        </div>\n        <div className=\"grid-box-content\">\n          {this.renderWidgetContent()}\n        </div>\n\n        { isEditMode ? (\n          <GridDraggable \n            onMouseUp={this.onMouseUp}\n            onMouseDown={this.onMouseDown}\n            onMouseMove={this.onMouseMove}\n            mode={this.state.mode}\n            snapToGrid={this.props.snapToGrid} />\n        ): null}\n\n        { isEditMode ? (\n          <GridResizable \n            onMouseUp={this.onMouseUp}\n            onMouseDown={this.onMouseDown}\n            onMouseMove={this.onMouseMove}\n            mode={this.state.mode} />\n        ): null}\n        \n      </div>\n    )\n  }\n}\n\nexport default withRouter(GridItem);","import React from 'react';\n\nimport GridItem from './GridItem';\nimport './GridLayout.css';\n\nclass GridLayout extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const {\n      width,\n      height,\n      backgroundColor,\n      widgets = [],\n      showGridlines\n    } = this.props;\n\n    let style = {\n      width: width + 'px',\n      height: height + 'px',\n      backgroundColor: backgroundColor\n    };\n\n    if (showGridlines) {\n      style.backgroundSize = '15px 15px';\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\n    }\n\n    const boxItems = widgets.map((widget, index) => \n      <GridItem\n        key={index}\n        snapToGrid={this.props.snapToGrid}\n        isEditMode={this.props.isEditMode}\n        {...widget}\n        onWidgetMove={this.props.onWidgetMove}\n        onWidgetEdit={this.props.onWidgetEdit}\n        onWidgetRemove={this.props.onWidgetRemove}\n      />\n    );\n\n\n    return (\n      <div\n        className=\"grid-layout\"\n        style={style} >\n        {boxItems}\n      </div>\n    )\n  }\n}\n\nexport default GridLayout;","\nimport React from 'react';\nimport axios from 'axios';\n\nimport ColorPicker from './ColorPicker';\nimport Checkbox from './Checkbox';\n\nimport GridLayout from './GridLayout';\nimport * as Util from '../api/Util';\nimport Modal from '../components/Modal';\n\nconst BASE_WIDTH = 1200;\n\nclass WidgetViewPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      widgets: [],\n      gridWidth: 1200,\n      snapToGrid: false,\n      showGridlines: false,\n      showConfirmDeletionPanel: false,\n      objectToDelete: {}\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  resizeGrid = (width, isResizeToBase) => {\n    const preGridWidth = this.state.gridWidth;\n    const { widgets } = this.state;\n    const newWidgets = [...widgets];\n    if (isResizeToBase) {\n      this.resizeWidgetsToBase(newWidgets, preGridWidth);\n    }\n\n    const gridWidth = width - 10;\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\n    this.setState({\n      widgets: newWidgets,\n      gridWidth: gridWidth\n    });\n  }\n\n  resizeWidgetsToBase = (widgets, gridWidth) => {\n    for (let i = 0; i < widgets.length; i++) {\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\n      widgets[i].x = baseX;\n      widgets[i].width = baseWidth;\n    }\n  }\n\n  resizeWidgetsToActual = (widgets, gridWidth) => {\n    for (let i = 0; i < widgets.length; i++) {\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\n      widgets[i].x = actualX;\n      widgets[i].width = actualdWidth;\n    }\n  }\n\n  scaleToActual = (num, gridWidth) => {\n    return Math.round(num * gridWidth / BASE_WIDTH);\n  }\n\n  scaleToBase = (num, gridWidth) => {\n    return Math.round(num * BASE_WIDTH / gridWidth);\n  }\n\n  fetchWidgets = (dashboardId, width, filterParams) => {\n    if (dashboardId === null) {\n      return;\n    }\n    axios.get('/ws/widget/dashboard/' + dashboardId)\n      .then(res => {\n        const result = res.data;\n        this.setState({\n          widgets: result\n        }, () => {\n          this.resizeGrid(width, false);\n          this.queryWidgets(filterParams);\n        });\n      });\n  }\n\n  queryWidgets = (filterParams) => {\n    const params = filterParams === null ? [] : filterParams;\n    const { widgets } = this.state;\n    for (let i = 0; i < widgets.length; i++) {\n      const widget = widgets[i];\n      axios.post('/ws/jdbcquery/widget/' + widget.id, params)\n        .then(res => {\n          const result = res.data;\n          const index = widgets.findIndex(w => w.id === result.id);\n          const newWidgets = [...widgets];\n          newWidgets[index].queryResult = result;\n          this.setState({\n            widgets: newWidgets\n          });\n        });\n    }\n  }\n\n  handleCheckBoxChange = (name, isChecked) => {\n    this.setState({\n      [name]: isChecked\n    });\n  }\n\n  handleHeightChange = (event) => {\n    this.props.onHeightChange(event.target.value);\n  }\n\n  onBackgroundColorChange = (color) => {\n    this.props.onBackgroundColorChange(color);\n  }\n\n  saveWidgets = () => {\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\n    const { gridWidth } = this.state;\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\n    axios.post('/ws/widget/position', newWidgets)\n      .then(res => {\n      });\n  }\n\n  onWidgetMove = (widget) => {\n    const { widgets } = this.state;\n    const index = widgets.findIndex(w => w.id === widget.id);\n    const newWidgets = [...widgets];\n    newWidgets[index].x = widget.x;\n    newWidgets[index].y = widget.y;\n    newWidgets[index].width = widget.width;\n    newWidgets[index].height = widget.height;\n    this.setState({\n      widgets: newWidgets\n    });\n  }\n\n  confirmDelete = () => {\n    const { \n      objectToDelete\n    } = this.state;\n    const widgetId = objectToDelete;\n    axios.delete(`/ws/widget/${widgetId}`)\n      .then(res => {\n        const { widgets } = this.state;\n        const index = widgets.findIndex(w => w.id === widgetId);\n        const newWidgets = [...widgets];\n        newWidgets.splice(index, 1);\n        this.setState({\n          widgets: newWidgets\n        });\n        this.closeConfirmDeletionPanel();\n      });\n  }\n\n  openConfirmDeletionPanel = (widgetId) => {\n    this.setState({\n      objectToDelete: widgetId,\n      showConfirmDeletionPanel: true\n    });\n  }\n\n  closeConfirmDeletionPanel = () => {\n    this.setState({\n      objectToDelete: {},\n      showConfirmDeletionPanel: false\n    });\n  }\n\n  render() {\n    const { widgetViewWidth } = this.props;\n    const style = {\n      width: widgetViewWidth + 'px'\n    }\n\n    return (\n      <div className=\"dashboard-content-widget-panel\" style={style}>\n\n        {this.props.isEditMode ?\n        (\n          <div className=\"dashboard-attribute-edit-panel\">\n            <div className=\"inline-block\">Height:</div>\n            <input \n              type=\"text\" \n              name=\"height\" \n              value={this.props.height}\n              onChange={this.handleHeightChange} \n              className=\"inline-block\" \n              style={{width: '200px'}}\n              />\n\n            <div>\n              Background Color\n              <ColorPicker value={this.props.backgroundColor} onChange={this.onBackgroundColorChange} />\n            </div>\n\n            <Checkbox name=\"snapToGrid\" value=\"Snap to grid\" checked={this.state.snapToGrid} onChange={this.handleCheckBoxChange} />\n            <Checkbox name=\"showGridlines\" value=\"Show gridlines\" checked={this.state.showGridlines} onChange={this.handleCheckBoxChange} />\n  \n          </div>\n        ) : null}\n        \n        <GridLayout \n          width={this.state.gridWidth}\n          height={this.props.height}\n          backgroundColor={this.props.backgroundColor}\n          snapToGrid={this.state.snapToGrid}\n          showGridlines={this.state.showGridlines}\n          widgets={this.state.widgets}\n          isEditMode={this.props.isEditMode}\n          onWidgetMove={this.onWidgetMove}\n          onWidgetEdit={this.props.onWidgetEdit} \n          onWidgetRemove={this.openConfirmDeletionPanel} />\n        \n        <Modal \n          show={this.state.showConfirmDeletionPanel}\n          onClose={this.closeConfirmDeletionPanel}\n          modalClass={'small-modal-panel'}\n          title={'Confirm Deletion'} >\n          <div className=\"confirm-deletion-panel\">\n            Are you sure you want to delete this widget?\n          </div>\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\n        </Modal>\n      </div>\n    )\n  };\n}\n\nexport default WidgetViewPanel;","import React from 'react';\nimport './Tabs.css';\n\nclass Tabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n    };\n  }\n\n  componentDidMount() {\n    const activeTab = this.props.activeTab;\n    this.setState({\n      activeTab: activeTab\n    });\n  }\n\n  handleTabClick = (title) => {\n    this.setState({\n      activeTab: title\n    });\n  }\n\n  render() {\n    const {\n      children = []\n    } = this.props;\n\n    const {\n      activeTab\n    } = this.state;\n\n    const tabHeaders = [];\n    let tabContent = null;\n    for (let i = 0; i < children.length; i++) {\n      const title = children[i].props.title;\n      let active = '';\n      if (title === activeTab) {\n        active = 'tab-header-active';\n        tabContent = children[i].props.children;\n      }\n      \n      tabHeaders.push(\n        <li className={`tab-header-item ${active}`} key={i} onClick={() => this.handleTabClick(title)}>{title}</li>\n      );\n    }\n\n    return (\n      <div className=\"tab-container\">\n        <ul className=\"tab-header\">\n          {tabHeaders}\n        </ul>\n        <div className=\"tab-content\">\n          {tabContent}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Select extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    options: PropTypes.array.isRequired,\n    optionDisplay: PropTypes.string,\n    optionValue: PropTypes.string\n  };\n\n  handleOptionChange = (event) => {\n    const name = this.props.name;\n    const value = event.target.value;\n    this.props.onChange(name, value);\n  }\n  \n  render() {\n    const {\n      value,\n      options = [],\n      optionValue,\n      optionDisplay\n    } = this.props;\n\n    const optionList = [];\n    optionList.push(\n      <option value=\"\" key=\"\"></option>\n    );\n    options.forEach((option, index) => {\n      let value;\n      let display;\n      if (optionValue && optionDisplay) {\n        // The options contain objects.\n        value = option[optionValue];\n        display = option[optionDisplay];\n      } else {\n        // The options contain string or number.\n        value = option;\n        display = option;\n      }\n      \n      optionList.push(\n        <option value={value} key={index}>{display}</option>\n      )\n    });\n\n    return (\n      <select value={value} onChange={this.handleOptionChange}>\n        {optionList}\n      </select>\n    )\n  };\n}\n\nexport default Select;","\nimport React from 'react';\n\nimport AceEditor from 'react-ace';\n\nimport 'brace/mode/mysql';\nimport 'brace/theme/xcode';\n\nimport TableWidget from './TableWidget';\n\nimport axios from 'axios';\n\nimport * as webApi from '../api/WebApi';\nimport * as Util from '../api/Util';\nimport * as EchartsApi from '../api/EchartsApi';\nimport * as Constants from '../api/Constants';\n\nimport ReactEcharts from 'echarts-for-react';\n\nimport './WidgetEditPanel.css';\n\nimport Checkbox from './Checkbox';\nimport Tabs from '../components/Tabs';\nimport Select from '../components/Select';\n\nclass WidgetEditPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {\n      jdbcDataSources: [],\n      widgetId: null,\n      title: '',\n      sqlQuery: '',\n      jdbcDataSourceId: '',\n      queryResult: {},\n      chartType: Constants.TABLE,\n      style: {\n        showBorder: false\n      },\n      pieKey: '',\n      pieValue: '',\n      chartOption: {},\n      drills: [],\n      drillDashboards: [],\n      drillColumnName: '',\n      drillDashboardId: ''\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  fetchWidget = async (widgetId, dashboardId) => {\n    this.setState(this.initialState);\n\n    const jdbcDataSources = await webApi.fetchDataSources();\n    this.setState({ \n      jdbcDataSources: jdbcDataSources \n    });\n\n    axios.get('/ws/dashboard')\n      .then(res => {\n        const dashboards = res.data;\n        this.setState({ \n          drillDashboards: dashboards \n        });\n      });\n\n    if (widgetId === null) {\n      this.setState({\n        widgetId: null\n      })\n    } else {\n      this.setState({\n        widgetId: widgetId\n      })\n      axios.get('/ws/widget/' + widgetId)\n        .then(res => {\n          const result = res.data;\n          const { chartType } = result;\n          if (chartType === Constants.PIE) {\n            const {\n              pieKey,\n              pieValue\n            } = result.data;\n            this.setState({\n              pieKey: pieKey,\n              pieValue: pieValue\n            });\n          }\n\n          this.setState({\n            widgetId: widgetId,\n            title: result.title,\n            x: result.x,\n            y: result.y,\n            width: result.width,\n            height: result.height,\n            sqlQuery: result.sqlQuery,\n            chartType: result.chartType,\n            jdbcDataSourceId: result.jdbcDataSourceId,\n            drills: result.drillThrough,\n            style: result.style\n          }, () => {\n            this.runQuery();\n          });\n\n        });\n    }\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleCheckBoxChange = (name, isChecked) => {\n    if (name === 'showBorder') {\n      const style = {...this.state.style};\n      style.showBorder = isChecked;\n      this.setState({\n        style: style\n      });\n    }\n  }\n\n  handleAceEditorChange = (newValue) => {\n    this.setState({\n      sqlQuery: newValue\n    });\n  }\n\n  handleIntegerOptionChange = (name, value) => {\n    const intValue = parseInt(value, 10) || 0;\n    this.setState({ \n      [name]: intValue\n    });\n  }\n\n  handleOptionChange = (name, value) => {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  save = () => {\n    const {\n      widgetId,\n      title,\n      jdbcDataSourceId,\n      sqlQuery,\n      chartType,\n      drills,\n      style\n    } = this.state;\n\n    const widget = {\n      title: title,\n      dashboardId: this.props.dashboardId,\n      chartType: chartType,\n      jdbcDataSourceId: jdbcDataSourceId,\n      sqlQuery: sqlQuery,\n      drillThrough: drills,\n      style: style\n    }\n\n    if (chartType === Constants.TABLE) {\n\n    } else if (chartType === Constants.PIE) {\n      const {\n        pieKey,\n        pieValue\n      } = this.state;\n      widget.data = {\n        pieKey: pieKey,\n        pieValue: pieValue\n      }\n    }\n\n    if (widgetId === null) {\n      axios.post('/ws/widget', widget)\n        .then(res => {\n          this.props.onSave();\n        });\n    } else {\n      widget.id = widgetId;\n      axios.put('/ws/widget', widget)\n        .then(res => {\n          this.props.onSave();\n        });\n    }\n  }\n\n  runQuery = () => {\n    const queryRequest ={\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\n      sqlQuery: this.state.sqlQuery\n    };\n\n    axios.post('/ws/jdbcquery/query', queryRequest)\n      .then(res => {\n        const result = res.data;\n        this.setState({\n          queryResult: result\n        });\n      });\n  }\n\n  addDrillThrough = () => {\n    const { \n      drills,\n      drillColumnName,\n      drillDashboardId\n    } = this.state;\n    const filterId = this.state.filterId;\n    const index = drills.findIndex(d => d.columnName === drillColumnName);\n    if (index === -1) {\n      const newDrills = [...drills];\n      newDrills.push({\n        columnName: drillColumnName,\n        dashboardId: drillDashboardId\n      });\n      this.setState({\n        drills: newDrills\n      });\n    } \n  }\n\n  removeDrillThrough = (drill) => {\n    const { drills } = this.state;\n    const index = drills.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\n    if (index !== -1) {\n      const newDrills = [...drills];\n      newDrills.splice(index, 1);\n      this.setState({\n        drills: newDrills\n      });\n    } \n  }\n\n  generateChart = () => {\n    if (this.state.chartType === Constants.PIE) {\n      const { \n        pieKey, \n        pieValue, \n        queryResult = {}\n      } = this.state;\n      console.log(\"generateChart\", pieKey, pieValue);\n      const data = Util.jsonToArray(queryResult.data);\n      const chartOption = EchartsApi.getPieOption(data, pieKey, pieValue);\n      this.setState({\n        chartOption: chartOption\n      });\n    }\n  }\n\n  renderChartPreview = () => {\n    const { \n      chartType,\n      queryResult = {},\n    } = this.state;\n    const columns = queryResult.columns || [];\n\n    let chartPreview = (<div>NOT SUPPORTED</div>);\n    if (chartType === Constants.TABLE) {\n\n    } else if (chartType === Constants.PIE) {\n      const { \n        chartOption,\n        pieKey,\n        pieValue\n      } = this.state;\n\n      chartPreview = (\n        <div>\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\n          <div>Count \"value\" by \"key\"</div>\n          <label>Aggr Key (string)</label>\n          <Select\n            name={'pieKey'}\n            value={pieKey}\n            onChange={this.handleOptionChange}\n            options={columns}\n            optionDisplay={'name'}\n            optionValue={'name'}\n            />\n\n\n          <label>By Aggr Value (number)</label>\n          <Select\n            name={'pieValue'}\n            value={pieValue}\n            onChange={this.handleOptionChange}\n            options={columns}\n            optionDisplay={'name'}\n            optionValue={'name'}\n            />\n          <button onClick={this.generateChart}>Generete Chart</button>\n          <ReactEcharts \n            option={chartOption} \n            style={{height: '350px', width: '100%'}}  \n            className='react_for_echarts' />\n        </div>\n      );\n    }\n    return chartPreview;\n  }\n\n  render() {\n    const { \n      queryResult,\n      jdbcDataSources = [],\n      drills,\n      drillDashboards = []\n    } = this.state;\n\n    const data = Util.jsonToArray(queryResult.data);\n    const columns = queryResult.columns || [];\n    const error = queryResult.error;\n\n    const drillItems = (drills || []).map(drill =>\n      <div key={drill.columnName}>\n        <div>Column: {drill.columnName}</div>\n        <div>Dashboard: {drill.dashboardId}</div>\n        <button onClick={() => this.removeDrillThrough(drill)}>delete</button>\n      </div>\n    );\n\n    const columnItems = columns.map(col =>\n      <div key={col.name}>{col.name} {col.dataType}</div>\n    );\n\n    return (\n      <div>\n        <button className=\"button\" onClick={this.save}>Save</button>\n        \n        <div className=\"form-panel\">\n          <Tabs activeTab=\"basic\">\n            <div title=\"basic\">\n              <label>Title</label>\n              <input \n                type=\"text\" \n                name=\"title\" \n                value={this.state.title}\n                onChange={this.handleInputChange} \n              />\n\n              <Checkbox name=\"showBorder\" value=\"Show border\" checked={this.state.style.showBorder} onChange={this.handleCheckBoxChange} />\n            </div>\n\n            <div title=\"Query\">\n              <label>DataSource</label>\n              <Select\n                name={'jdbcDataSourceId'}\n                value={this.state.jdbcDataSourceId}\n                onChange={this.handleIntegerOptionChange}\n                options={jdbcDataSources}\n                optionDisplay={'name'}\n                optionValue={'id'}\n                />\n            \n              <label>SQL Query</label>\n              <AceEditor\n                style={{ marginTop: '8px' }}\n                value={this.state.sqlQuery}\n                mode=\"mysql\"\n                theme=\"xcode\"\n                name=\"blah2\"\n                onChange={this.handleAceEditorChange}\n                height={'300px'}\n                width={'100%'}\n                fontSize={15}\n                showPrintMargin={false}\n                showGutter={true}\n                highlightActiveLine={true}\n                setOptions={{\n                  showLineNumbers: true,\n                  tabSize: 2\n                }}\n              />\n\n              <div className=\"mt-3\">\n                <button className=\"button\" onClick={this.runQuery}>Run Query</button>\n              </div>\n\n              <label>Result</label>\n              <TableWidget\n                data={data}\n                columns={columns}\n                error={error}\n              />\n\n              <label>Columns Mapping</label>\n              <div>\n                {columnItems}\n              </div>\n            </div>\n\n            <div title=\"Chart\">\n              <label>Chart Options</label>\n              <Select\n                name={'chartType'}\n                value={this.state.chartType}\n                onChange={this.handleOptionChange}\n                options={Constants.CHART_TYPES}\n              />\n              <label>Preview</label>\n              {this.renderChartPreview()}  \n            </div>\n\n            <div title=\"Drill through\">\n              <label>Drill through</label>\n              <label>Column</label>\n              <Select\n                name={'drillColumnName'}\n                value={this.state.drillColumnName}\n                options={columns}\n                onChange={this.handleOptionChange}\n                optionDisplay={'name'}\n                optionValue={'name'}\n              />\n\n              <label>Dashboard</label>\n              <Select\n                name={'drillDashboardId'}\n                value={this.state.drillDashboardId}\n                options={drillDashboards}\n                onChange={this.handleIntegerOptionChange}\n                optionDisplay={'name'}\n                optionValue={'id'}\n              />\n              <div>\n                {drillItems}\n              </div>\n              <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\n            </div>\n          </Tabs>\n\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default WidgetEditPanel;","import React from 'react';\nimport AceEditor from 'react-ace';\n\nimport 'brace/mode/mysql';\nimport 'brace/theme/xcode';\n\nimport axios from 'axios';\n\nimport * as webApi from '../api/WebApi';\nimport * as Util from '../api/Util';\nimport * as Constants from '../api/Constants';\nimport TableWidget from './TableWidget';\nimport Select from './Select';\n\n\nimport './FilterEditPanel.css';\n\nclass FilterEditPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {\n      jdbcDataSources: [],\n      filterId: null,\n      title: '',\n      type: Constants.SLICER,\n      data: {},\n      sqlQuery: '',\n      jdbcDataSourceId: '',\n      queryResult: {},\n      param: '',\n    };\n  }\n\n  fetchFilter = async (filterId) => {\n    this.setState(this.initialState);\n\n    const jdbcDataSources = await webApi.fetchDataSources();\n    this.setState({ \n      jdbcDataSources: jdbcDataSources \n    });\n\n    if (filterId === null) {\n      this.setState({\n        filterId: null\n      })\n    } else {\n      axios.get('/ws/filter/' + filterId)\n        .then(res => {\n          const result = res.data;\n          const { \n            data,\n            type\n          } = result;\n          this.setState({\n            filterId: filterId,\n            title: result.title,\n            type: result.type,\n            jdbcDataSourceId: result.jdbcDataSourceId,\n            data: data\n          });\n\n          if (type === Constants.SLICER) {\n            this.setState({\n              sqlQuery: data.sqlQuery,\n              param: data.param\n            });\n          } else if (type === Constants.SINGLE_VALUE) {\n            this.setState({\n              sqlQuery: data.sqlQuery,\n              param: data.param\n            });\n          }\n        });\n      \n    }\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleAceEditorChange = (newValue) => {\n    this.setState({\n      sqlQuery: newValue\n    });\n  }\n\n  handleOptionChange = (name, value) => {\n    this.setState({ \n      [name]: value\n    });\n  }\n\n  handleIntegerOptionChange = (name, value) => {\n    const intValue = parseInt(value, 10) || 0;\n    this.setState({ \n      [name]: intValue\n    });\n  }\n\n  save = () => {\n    const {\n      filterId,\n      title,\n      type,\n      jdbcDataSourceId,\n      sqlQuery,\n      param\n    } = this.state;\n\n    const filter = {\n      title: title,\n      type: type,\n      dashboardId: this.props.dashboardId,\n      jdbcDataSourceId: jdbcDataSourceId\n    };\n\n    if (type === Constants.SLICER) {\n      filter.data = {\n        sqlQuery: sqlQuery,\n        param: param\n      }\n    } else if (type === Constants.SINGLE_VALUE) {\n      filter.data = {\n        useQuery: false,\n        sqlQuery: sqlQuery,\n        param: param,\n      }\n    }\n\n    if (filterId === null) {\n      axios.post('/ws/filter', filter)\n        .then(res => {\n          this.props.onSave();\n        });\n    } else {\n      filter.id = filterId;\n      axios.put('/ws/filter', filter)\n        .then(res => {\n          this.props.onSave();\n        });\n    }\n  }\n\n  runQuery = () => {\n    const queryRequest ={\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\n      sqlQuery: this.state.sqlQuery\n    };\n\n    axios.post('/ws/jdbcquery/query', queryRequest)\n      .then(res => {\n        const result = res.data;\n        const queryResult = result;\n        this.setState({\n          queryResult: queryResult\n        });\n      });\n  }\n\n  render() {\n\n    const { \n      queryResult = {},\n      jdbcDataSources = [],\n      type\n    } = this.state;\n\n    const data = Util.jsonToArray(queryResult.data);\n    const columns = queryResult.columns || [];\n    const error = queryResult.error;\n\n    const requireSql = type === Constants.SLICER;\n\n    return (\n      <div>\n        <button className=\"button\" onClick={this.save}>Save</button>\n        <button className=\"button\" onClick={this.runQuery}>Run</button>\n\n        <div className=\"form-panel\">\n          <label>Title</label>\n          <input \n            type=\"text\" \n            name=\"title\" \n            value={this.state.title}\n            onChange={this.handleInputChange} \n          />\n\n          <label>Type</label>\n          <Select\n            name={'type'} \n            value={this.state.type} \n            onChange={this.handleOptionChange}\n            options={Constants.FILTER_TYPES}\n          />\n\n          {\n            requireSql ?\n            (\n              <React.Fragment>\n                <label>DataSource</label>\n                <Select\n                  name={'jdbcDataSourceId'} \n                  value={this.state.jdbcDataSourceId} \n                  onChange={this.handleIntegerOptionChange}\n                  options={jdbcDataSources}\n                  optionDisplay={'name'}\n                  optionValue={'id'}\n                />\n    \n                <label>SQL Query</label>\n                <AceEditor\n                  style={{marginTop: '8px'}}\n                  value={this.state.sqlQuery}\n                  mode=\"mysql\"\n                  theme=\"xcode\"\n                  name=\"blah2\"\n                  onChange={this.handleAceEditorChange}\n                  height={'300px'}\n                  width={'100%'}\n                  fontSize={15}\n                  showPrintMargin={false}\n                  showGutter={true}\n                  highlightActiveLine={true}\n                  setOptions={{\n                    showLineNumbers: true,\n                    tabSize: 2\n                  }}\n                />\n\n                <label>Result</label>\n                <TableWidget\n                  data={data}\n                  columns={columns}\n                  error={error}\n                />\n              </React.Fragment>\n            ) : null\n          }\n\n          <label>Param</label>\n          <input \n            type=\"text\" \n            name=\"param\" \n            value={this.state.param}\n            onChange={this.handleInputChange} \n          />\n\n        </div>\n\n      </div>\n    )\n  };\n}\n\nexport default FilterEditPanel;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { withRouter } from 'react-router-dom';\n\nimport FilterViewPanel from '../components/FilterViewPanel';\nimport WidgetViewPanel from '../components/WidgetViewPanel';\nimport WidgetEditPanel from '../components/WidgetEditPanel';\nimport FilterEditPanel from '../components/FilterEditPanel';\n\nimport Modal from '../components/Modal';\n\nimport * as Constants from '../api/Constants';\n\nimport './Dashboard.css';\n\nimport * as webApi from '../api/WebApi';\nimport axios from 'axios';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass DashboardEditView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      showWidgetEditPanel: false,\n      showFilterEditPanel: false,\n      showFilterViewPanel: true,\n      showConfirmDeletionPanel: false,\n      objectToDelete: {},\n      isEditMode: false,\n      isReadOnly: false,\n      autoRefreshTimerId: '',\n      lastRefreshed: '',\n      refreshInterval: 15,\n      jdbcDataSourceOptions: [],\n      dashboardId: 0,\n      name: '',\n      style: {},\n      widgetViewWidth: 1000\n    }\n\n    this.filterViewPanel = React.createRef();\n    this.filterEditPanel = React.createRef();\n    this.widgetViewPanel = React.createRef();\n    this.widgetEditPanel = React.createRef();\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    const dashboardId = id !== undefined ? id : null;\n    console.log('DashboardEditView', dashboardId);\n\n    const url = this.props.location.search;\n    console.log('url', url);\n    const params = new URLSearchParams(url);\n    console.log('params', params);\n    for(let pair of params.entries()) {\n      console.log(pair[0]+ ', '+ pair[1]); \n    } \n\n    const pageWidth = this.getPageWidth();\n    const widgetViewWidth = this.state.showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\n    console.log('componentDidMount', pageWidth, widgetViewWidth);\n    this.setState({\n      pageWidth: pageWidth,\n      widgetViewWidth: widgetViewWidth\n    }, () => {\n      if (dashboardId === null) {\n        this.setState({\n          dashboardId: null\n        });\n      } else {\n        axios.get(`/ws/dashboard/${dashboardId}`)\n          .then(res => {\n            const result = res.data;\n            this.setState({\n              dashboardId: result.id,\n              name: result.name,\n              style: result.style\n            }, () => {\n              this.refresh();\n            });\n          });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    const { autoRefreshTimerId } = this.state;\n    if (autoRefreshTimerId) {\n      clearInterval(autoRefreshTimerId);\n    }\n  }\n\n  loadViewByDashboardName = () => {\n    const url = this.props.location.search;\n    const params = new URLSearchParams(url);\n    const dashboardName = params.get('name');\n    const showFilter = params.get('showFilter');\n\n    const showFilterViewPanel = showFilter == 'true';\n\n    const pageWidth = this.getPageWidth();\n    const widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\n    \n    this.setState({\n      pageWidth: pageWidth,\n      widgetViewWidth: widgetViewWidth,\n      isReadOnly: true,\n      name: dashboardName,\n      showFilterViewPanel: showFilterViewPanel\n    }, () => {\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\n        .then(res => {\n          const result = res.data;\n          this.setState({\n            dashboardId: result.id,\n            name: result.name,\n            style: result.style\n          }, () => {\n            this.refresh();\n          });\n        });\n    });\n  }\n\n  getPageWidth = () => {\n    const thisNode = ReactDOM.findDOMNode(this);\n    return thisNode.clientWidth - 40;\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  toggleAutoRefresh = () => {\n    const { autoRefreshTimerId } = this.state;\n    if (autoRefreshTimerId) {\n      clearInterval(autoRefreshTimerId);\n      this.setState({\n        autoRefreshTimerId: ''\n      });\n    } else {\n      const { refreshInterval } = this.state;\n      let interval = parseInt(refreshInterval, 10) || 15;\n      interval = interval < 1 ? 1 : interval;\n      const timerId = setInterval(() => {\n        this.filterViewPanel.current.applyFilters();\n        this.updateLastRefreshed();\n      }, interval * 1000);\n      this.setState({\n        autoRefreshTimerId: timerId\n      });\n    }\n  }\n\n  refresh = () => {\n    this.refreshWidgetView();\n    this.refreshFilterView();\n    this.updateLastRefreshed();\n  }\n\n  refreshFilterView = () => {\n    const { \n      dashboardId\n    } = this.state;\n    this.filterViewPanel.current.fetchFilters(dashboardId);\n  }\n\n  refreshWidgetView = () => {\n    const { \n      dashboardId,\n      widgetViewWidth\n    } = this.state;\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\n  } \n\n  updateLastRefreshed = () => {\n    const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\n    this.setState({\n      lastRefreshed: now\n    });\n  }\n\n  save = () => {\n    console.log('save');\n    const {\n      dashboardId,\n      name,\n      style\n    } = this.state;\n\n    const dashboard = {\n      id: dashboardId, \n      name: name,\n      style: style\n    };\n\n    axios.put('/ws/dashboard/', dashboard)\n      .then(res => {\n      });\n\n    this.widgetViewPanel.current.saveWidgets();\n\n    this.props.onDashboardSave(dashboardId);\n\n    this.setState({\n      isEditMode: false\n    });\n  }\n\n  edit = () => {\n    this.setState({\n      isEditMode: true\n    });\n  }\n\n  cancelEdit = () => {\n    this.setState({\n      isEditMode: false\n    });\n  }\n\n  onSaveWidget = () => {\n    this.setState({ \n      showWidgetEditPanel: false \n    });\n    // FIXME: not need to refresh. Just add to state.widgets\n    this.refreshWidgetView();\n  }\n\n  onSaveFilter = () => {\n    this.setState({ \n      showFilterEditPanel: false \n    });\n    // FIXME: not need to refresh. Just add to state.widgets\n    this.refreshFilterView();\n  }\n\n  toggleFilterViewPanel = () => {\n    const { \n      showFilterViewPanel\n    } = this.state;\n    this.resizePageLayout(!showFilterViewPanel);\n  }\n\n  resizePageLayout = (showFilterViewPanel) => {\n    const pageWidth = this.getPageWidth();;\n    let widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\n    this.widgetViewPanel.current.resizeGrid(widgetViewWidth, true);\n\n    this.setState({\n      showFilterViewPanel: showFilterViewPanel,\n      widgetViewWidth: widgetViewWidth\n    }); \n  }\n\n  openFilterEditPanel = (filterId) => {\n    this.filterEditPanel.current.fetchFilter(filterId);\n    this.setState({\n      showFilterEditPanel: true\n    });\n  }\n\n  openWidgetEditPanel = (widgetId) => {\n    const { dashboardId } = this.state;\n    this.widgetEditPanel.current.fetchWidget(widgetId, dashboardId);\n    this.setState({\n      showWidgetEditPanel: true\n    });\n  }\n\n  applyFilters = (filterParams) => {\n    this.widgetViewPanel.current.queryWidgets(filterParams);\n  }\n\n  fullScreen = () => {\n    const { name } = this.state;\n    const url = `/workspace/dashboard/view?name=${name}`;\n    window.open(url, '_blank');\n  }\n\n  onTableCellClick = () => {\n    this.props.history.push(`/workspace/dashboard/drill?name=&`);\n  }\n\n  onHeightChange = (height) => {\n    const style = {...this.state.style};\n    style.height = height;\n    this.setState({\n      style: style\n    });\n  }\n\n  onBackgroundColorChange = (color) => {\n    const style = {...this.state.style};\n    style.backgroundColor = color;\n    this.setState({\n      style: style\n    });\n  }\n\n  confirmDelete = () => {\n    const { \n      objectToDelete = {},\n    } = this.state;\n    const dashboardId = objectToDelete.id;\n    axios.delete(`/ws/dashboard/${dashboardId}`)\n      .then(res => {\n        this.props.onDashboardDelete(dashboardId);\n        this.closeConfirmDeletionPanel();\n      });\n  }\n\n  deleteDashboard = () => {\n    const { \n      dashboardId,\n      name\n    } = this.state;\n    const dashboard = {\n      id: dashboardId,\n      name: name\n    }\n    this.openConfirmDeletionPanel(dashboard);\n  }\n\n  openConfirmDeletionPanel = (dashboard) => {\n    this.setState({\n      objectToDelete: dashboard,\n      showConfirmDeletionPanel: true\n    });\n  }\n\n  closeConfirmDeletionPanel = () => {\n    this.setState({\n      objectToDelete: {},\n      showConfirmDeletionPanel: false\n    });\n  }\n\n  render() {\n    const {\n      autoRefreshTimerId,\n      lastRefreshed,\n      isEditMode,\n      isReadOnly\n    } = this.state;\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\n\n    let editButtonPanel;\n    let fullScreenButtonPanel = null;\n    const controlButtons = (\n      <React.Fragment>\n        <span className=\"mr-3\">Last refreshed: {lastRefreshed}</span>\n        {\n          autoRefreshStatus === 'OFF' ? \n          (\n            <input \n              type=\"text\" \n              name=\"refreshInterval\" \n              value={this.state.refreshInterval}\n              onChange={this.handleInputChange}\n              className=\"inline-block\" \n              style={{width: '50px'}}\n            />\n          ) : null\n        }\n        <button className=\"button square-button mr-3\" onClick={this.toggleAutoRefresh}>\n          {\n            autoRefreshStatus === 'ON' ? \n            (\n              <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\n            ) : \n            (\n              <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\n            )\n          }\n        </button>\n        \n        <button className=\"button mr-3\" onClick={this.toggleFilterViewPanel}>Show Filters</button>\n        <button className=\"button square-button\" onClick={this.refresh}>\n          <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\n        </button>\n      </React.Fragment>\n    );\n\n    if (!isReadOnly) {\n      if (isEditMode) {\n        editButtonPanel = (\n          <React.Fragment>\n            <button className=\"button mr-3\" onClick={this.cancelEdit}>Cancel</button>\n            <button className=\"button mr-3\" onClick={this.save}>Save</button>\n            <button className=\"button mr-3\" onClick={this.deleteDashboard}>Delete</button>\n            <button className=\"button mr-3\" onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\n          </React.Fragment>\n        );\n      } else {\n        editButtonPanel = (\n          <React.Fragment>\n            <button className=\"button square-button mr-3\" onClick={this.fullScreen}>\n              <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\n            </button>\n            <button className=\"button\" onClick={this.edit}>Edit</button>\n            {controlButtons}\n          </React.Fragment>\n        );\n      }\n    } else {\n      fullScreenButtonPanel = controlButtons;\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"dashboard-menu-panel row\">\n          <div className=\"float-left\">\n            {\n              isReadOnly || !isEditMode ?\n              (\n                <div className=\"dashboard-name\">\n                  {this.state.name}\n                </div>\n              ) :(\n                <input \n                  type=\"text\" \n                  name=\"name\" \n                  value={this.state.name}\n                  onChange={this.handleInputChange} \n                  className=\"dashboard-name\"\n                  />\n              )\n            }\n            \n          </div>\n          <div className=\"float-right\">\n            {fullScreenButtonPanel}\n            {editButtonPanel}\n          </div>\n        </div>\n\n        <WidgetViewPanel \n          ref={this.widgetViewPanel} \n          isEditMode={this.state.isEditMode}\n          widgetViewWidth={this.state.widgetViewWidth}\n          onWidgetEdit={this.openWidgetEditPanel}\n          onHeightChange={this.onHeightChange}\n          onBackgroundColorChange={this.onBackgroundColorChange}\n          {...this.state.style}\n        />\n        <FilterViewPanel \n          ref={this.filterViewPanel} \n          onEdit={this.openFilterEditPanel}\n          onApplyFilters={this.applyFilters}\n          isEditMode={this.state.isEditMode}\n          show={this.state.showFilterViewPanel}\n        />\n\n        <Modal \n          show={this.state.showWidgetEditPanel}\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\n          modalClass={'dashboard-edit-widget-dialog'} \n          title={'Widget Edit'} >\n          <WidgetEditPanel \n            ref={this.widgetEditPanel} \n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\n            dashboardId={this.state.dashboardId}\n            onSave={this.onSaveWidget}\n          />\n        </Modal>\n\n        <Modal \n          show={this.state.showFilterEditPanel}\n          onClose={() => this.setState({ showFilterEditPanel: false })}\n          modalClass={'dashboard-edit-filter-dialog'} \n          title={'Filter Edit'}>\n          <FilterEditPanel\n            ref={this.filterEditPanel}\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\n            dashboardId={this.state.dashboardId}\n            onSave={this.onSaveFilter}\n          />\n        </Modal>\n\n        <Modal \n          show={this.state.showConfirmDeletionPanel}\n          onClose={this.closeConfirmDeletionPanel}\n          modalClass={'small-modal-panel'}\n          title={'Confirm Deletion'} >\n          <div className=\"confirm-deletion-panel\">\n            Are you sure you want to delete {this.state.objectToDelete.name}?\n          </div>\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\n        </Modal>\n\n      </React.Fragment>\n    )\n  };\n}\n\nexport default withRouter(DashboardEditView);\n","\nimport React, { Component } from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport DashboardEditView from './DashboardEditView';\nimport Modal from '../components/Modal';\nimport './Dashboard.css';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as Constants from '../api/Constants';\n\nclass Dashboard extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchValue: '',\n      dashboards: [],\n      showEditPanel: false,\n      activeDashboardId: 0,\n      name: ''\n    }\n  }\n\n  componentDidMount() {\n    this.fetchBoards();\n  }\n\n  fetchBoards = () => {\n    axios.get('/ws/dashboard')\n      .then(res => {\n        const dashboards = res.data;\n        this.setState({ \n          dashboards: dashboards \n        });\n      });\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  closeEditPanel = () => {\n    this.setState({\n      showEditPanel: false,\n      name: ''\n    });\n  }\n\n  save = () => {\n    const {\n      name\n    } = this.state;\n\n    const dashboard = {\n      name: name,\n      style: {\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\n        backgroundColor: 'rgba(233, 235, 238, 1)'\n      }\n    };\n\n    axios.post('/ws/dashboard', dashboard)\n      .then(res => {\n        const dashboardId = res.data;\n        this.closeEditPanel();\n        this.fetchBoards();\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  view = (dashboardId) => {\n    this.setState({\n      activeDashboardId: dashboardId\n    });\n    this.props.history.push(`/workspace/dashboard/${dashboardId}`);\n  }\n\n  onDashboardSave = (dashboardId) => {\n    this.fetchBoards();\n  }\n\n  onDashboardDelete = (dashboardId) => {\n    this.fetchBoards();\n    this.setState({\n      activeDashboardId: 0\n    });\n    this.props.history.push('/workspace/dashboard');\n  }\n\n  render() {\n    const {\n      dashboards = [],\n      activeDashboardId,\n      searchValue\n    } = this.state;\n\n    \n    const dashboardRows = [];\n    for (let i = 0; i < dashboards.length; i++) {\n      const dashboard = dashboards[i];\n      const name = dashboard.name;\n      const menuActive = activeDashboardId === dashboard.id ? 'dashboard-menu-item-active' : '';\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\n        dashboardRows.push(\n          (\n            <div key={i} className={`dashboard-menu-item ellipsis ${menuActive}`} onClick={() => this.view(dashboard.id)}>\n              {name}\n            </div>\n          )\n        )\n      }\n    }\n\n    return (\n      <div>\n        <div className=\"dashboard-sidebar\">\n          <div style={{margin: '5px'}}>\n            <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\n              <FontAwesomeIcon icon=\"plus\" /> New\n            </button>\n            <input \n              type=\"text\" \n              name=\"searchValue\" \n              value={this.state.searchValue}\n              placeholder=\"Search...\"\n              onChange={this.handleInputChange} />\n          </div>\n          <div>\n            {dashboardRows}\n          </div>\n        </div>\n        <div className=\"dashboard-content\">\n          <Route \n            path=\"/workspace/dashboard/:id\" \n            render={(props) => <DashboardEditView key={props.match.params.id} onDashboardSave={this.onDashboardSave} onDashboardDelete={this.onDashboardDelete} />} \n            />\n        </div>\n\n        <Modal \n          show={this.state.showEditPanel}\n          onClose={() => this.setState({ showEditPanel: false })}\n          modalClass={'small-modal-panel'} \n          title={'New'} >\n          <div>\n            <label>Name</label>\n            <input \n              type=\"text\" \n              name=\"name\" \n              value={this.state.name}\n              onChange={this.handleInputChange} \n              />\n            <button className=\"button\" onClick={this.save}>Save</button>\n          </div>\n        </Modal>\n\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Dashboard);\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport DashboardEditView from './DashboardEditView';\n\nclass DashboardFullScreenView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  componentDidMount() {\n    this.dashboardEditView.loadViewByDashboardName();\n  }\n\n  render() {\n    return (\n      <div className=\"full-screen-view\">\n        <DashboardEditView wrappedComponentRef={comp => (this.dashboardEditView = comp)} />\n      </div>\n    )\n  };\n}\n\nexport default DashboardFullScreenView;\n","\nimport React from 'react';\nimport axios from 'axios';\nimport Modal from '../components/Modal';\nimport Select from '../components/Select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst SYS_ROLES = ['developer', 'viewer'];\n\nclass User extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      groups: [],\n      searchValue: '',\n      showUpdatePassword: false,\n      showEditPanel: false,\n      id: null,\n      username: '',\n      name: '',\n      tempPassword: '',\n      sysRole: '',\n      userGroupId: '',\n      userGroups: []\n    };\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleOptionChange = (name, value) => {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleIntegerOptionChange = (name, value) => {\n    const intValue = parseInt(value, 10) || 0;\n    this.setState({ \n      [name]: intValue\n    });\n  }\n\n  get initialEditPanelState() {\n    return {\n      id: null,\n      username: '',\n      name: '',\n      tempPassword: '',\n      sysRole: '',\n      userGroupId: '',\n      userGroups: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n    this.fetchGroups();\n  }\n\n  fetchUsers = () => {\n    axios.get('/ws/user')\n      .then(res => {\n        const users = res.data;\n        this.setState({ \n          users: users \n        });\n      });\n  }\n\n  fetchGroups = () => {\n    axios.get('/ws/group')\n      .then(res => {\n        const groups = res.data;\n        this.setState({ \n          groups: groups \n        });\n      });\n  }\n\n  openEditPanel = (user) => {\n    if (user !== null) {\n      this.setState({\n        id: user.id,\n        username: user.username,\n        name: user.name,\n        tempPassword: '',\n        sysRole: user.sysRole,\n        userGroups: user.userGroups\n      });\n    } else {\n      this.clearEditPanel();\n    }\n\n    this.setState({\n      userGroupId: '',\n      showEditPanel: true\n    }); \n  }\n\n  closeEditPanel = () => {\n    this.setState({\n      showEditPanel: false\n    });\n  }\n\n  clearEditPanel = () => {\n    this.setState(this.initialEditPanelState);\n  }\n\n  toggleUpdatePassword = () => {\n    this.setState(prevState => ({\n      showUpdatePassword: !prevState.showUpdatePassword\n    })); \n  }\n\n  save = () => {\n    const {\n      showUpdatePassword,\n      id,\n      username,\n      name,\n      tempPassword,\n      sysRole,\n      userGroups\n    } = this.state;\n\n    let user = {\n      username: username,\n      name: name,\n      sysRole: sysRole,\n      userGroups: userGroups\n    };\n\n    if (id !== null) {\n      user.id = id;\n      if (showUpdatePassword && tempPassword) {\n        user.tempPassword = tempPassword;\n      }\n      \n      axios.put('/ws/user', user)\n        .then(res => {\n          this.clearEditPanel();\n          this.closeEditPanel();\n          this.fetchUsers();\n        });\n    } else {\n      axios.post('/ws/user', user)\n        .then(res => {\n          this.clearEditPanel();\n          this.closeEditPanel();\n          this.fetchUsers();\n        });\n    } \n  }\n\n  delete = (id) => {\n    axios.delete('/ws/user/' + id)\n      .then(res => {\n        this.fetchUsers();\n      });\n  }\n\n  addUserGroup = () => {\n    const { \n      userGroupId,\n      userGroups = []\n    } = this.state;\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\n    if (index === -1) {\n      const newUserGroups = [...userGroups];\n      newUserGroups.push(userGroupId);\n      this.setState({\n        userGroups: newUserGroups\n      });\n    }\n  }\n\n  removeUserGroup = (groupId) => {\n    const { \n      userGroups = [] \n    } = this.state;\n    const index = userGroups.findIndex(id => id === groupId);\n    if (index !== -1) {\n      const newUserGroups = [...userGroups];\n      newUserGroups.splice(index, 1);\n      this.setState({\n        userGroups: newUserGroups\n      });\n    } \n  }\n\n  render() {\n    const { \n      id,\n      showUpdatePassword,\n      users = [],\n      groups = [],\n      userGroups = []\n    } = this.state;\n\n    const mode = id === null ? 'New' : 'Edit';\n\n    const userItems = users.map(user => \n      <div key={user.id} className=\"user-card\">\n        <p>\n          {user.username}\n          {user.name}\n          {user.sysRole}\n          <button className=\"button\" onClick={() => this.openEditPanel(user)}>update</button>\n          <button className=\"button\" onClick={() => this.delete(user.id)}>delete</button>\n        </p>\n      </div>\n    );\n\n    const userGroupItems = [];\n    for (let i = 0; i < userGroups.length; i++) {\n      const groupId = userGroups[i];\n      for (let j = 0; j < groups.length; j++) {\n        if (groupId === groups[j].id) {\n          userGroupItems.push(\n            (\n              <div key={groupId}>\n                <div>Group: {groups[j].name}</div>\n                <button className=\"button\" onClick={() => this.removeUserGroup(groupId)}>delete</button>\n              </div>\n            )\n          );\n          break;\n        }\n      }\n    }\n\n    return (\n      <div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"searchValue\"\n            value={this.state.searchValue}\n            onChange={this.handleInputChange}\n            placeholder=\"Search...\"\n            style={{width: '200px'}}\n          />\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\n            <FontAwesomeIcon icon=\"plus\" /> New User\n          </button>\n        </div>\n        <div className=\"row\">\n          {userItems}\n        </div>\n\n        <Modal \n          show={this.state.showEditPanel}\n          onClose={this.closeEditPanel}\n          modalClass={'small-modal-panel'} \n          title={mode} >\n\n          <div className=\"form-panel\">\n            <label>Username</label>\n            <input \n              type=\"text\" \n              name=\"username\" \n              value={this.state.username}\n              onChange={this.handleInputChange} />\n\n            <label>Name</label>\n            <input \n              type=\"text\" \n              name=\"name\" \n              value={this.state.name}\n              onChange={this.handleInputChange} />\n\n            { mode === 'Edit' ? \n              (\n                <div style={{margin: '3px 0px 8px 0px'}}>\n                  <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\n                </div>\n              ) : null\n            }\n            { mode === 'New' || showUpdatePassword ? \n              (\n                <div>\n                  <label>Password</label>\n                  <input \n                    type=\"password\" \n                    name=\"tempPassword\" \n                    value={this.state.tempPassword}\n                    onChange={this.handleInputChange} />\n                </div>\n              ) : null\n            }\n            \n            <label>System Role</label>\n            <Select\n              name={'sysRole'}\n              value={this.state.sysRole}\n              onChange={this.handleOptionChange}\n              options={SYS_ROLES}\n            />\n            \n            <br/>\n            \n            <label>Groups</label>\n            <Select\n              name={'userGroupId'}\n              value={this.state.userGroupId}\n              onChange={this.handleIntegerOptionChange}\n              options={groups}\n              optionDisplay={'name'}\n              optionValue={'id'}\n            />\n            <button className=\"button\" onClick={this.addUserGroup}>Add</button>\n            <div>\n              {userGroupItems}\n            </div>\n\n            <button className=\"button\" onClick={this.save}>Save</button>\n          </div>\n        </Modal>\n        \n      </div>\n    )\n  }\n}\n\nexport default User;","\nimport React from 'react';\nimport axios from 'axios';\nimport Modal from '../components/Modal';\nimport Select from '../components/Select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass Group extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      groups: [],\n      dashboards: [],\n      showEditPanel: false,\n      searchValue: '',\n      id: null,\n      name: '',\n      groupDashboardId: '',\n      groupDashboards: []\n    };\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleIntegerOptionChange = (name, value) => {\n    const intValue = parseInt(value, 10) || 0;\n    this.setState({ \n      [name]: intValue\n    });\n  }\n\n  get initialEditPanelState() {\n    return {\n      id: null,\n      name: '',\n      groupDashboardId: '',\n      groupDashboards: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchGroups();\n    this.fetchDashboards();\n  }\n\n  fetchGroups = () => {\n    axios.get('/ws/group')\n      .then(res => {\n        const groups = res.data;\n        this.setState({ \n          groups: groups \n        });\n      });\n  }\n\n  fetchDashboards = () => {\n    axios.get('/ws/dashboard')\n      .then(res => {\n        const dashboards = res.data;\n        this.setState({ \n          dashboards: dashboards \n        });\n      });\n  }\n\n  openEditPanel = (group) => {\n    if (group !== null) {\n      this.setState({\n        id: group.id,\n        name: group.name,\n        groupDashboards: group.groupDashboards\n      });\n    } else {\n      this.clearEditPanel();\n    }\n    this.setState({\n      groupDashboardId: '',\n      showEditPanel: true\n    }); \n  }\n\n  closeEditPanel = () => {\n    this.setState({\n      showEditPanel: false\n    });\n  }\n\n  clearEditPanel = () => {\n    this.setState(this.initialEditPanelState);\n  }\n\n  save = () => {\n    const {\n      id,\n      name,\n      groupDashboards\n    } = this.state;\n\n    let group = {\n      name: name,\n      groupDashboards: groupDashboards\n    };\n\n    if (id !== null) {\n      group.id = id;\n      axios.put('/ws/group', group)\n        .then(res => {\n          this.clearEditPanel();\n          this.fetchGroups();\n          this.closeEditPanel();\n        });\n    } else {\n      axios.post('/ws/group', group)\n        .then(res => {\n          this.clearEditPanel();\n          this.fetchGroups();\n          this.closeEditPanel();\n        });\n    } \n  }\n\n  delete = (id) => {\n    axios.delete('/ws/group/' + id)\n      .then(res => {\n        this.fetchGroups();\n      });\n  }\n\n  addGroupDashboard= () => {\n    const { \n      groupDashboardId,\n      groupDashboards = []\n    } = this.state;\n\n    console.log('addGroupDashboard', groupDashboardId);\n    console.log('addGroupDashboard', groupDashboards);\n\n    if (groupDashboardId) {\n      const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\n      if (index === -1) {\n        const newGroupDashboards = [...groupDashboards];\n        newGroupDashboards.push(groupDashboardId);\n        this.setState({\n          groupDashboards: newGroupDashboards\n        });\n      }\n    }\n  }\n\n  removeGroupDashboard = (dashboardId) => {\n    const { \n      groupDashboards = [] \n    } = this.state;\n    const index = groupDashboards.findIndex(id => id === dashboardId);\n    if (index !== -1) {\n      const newGroupDashboards = [...groupDashboards];\n      newGroupDashboards.splice(index, 1);\n      this.setState({\n        groupDashboards: newGroupDashboards\n      });\n    } \n  }\n\n  render() {\n    const { \n      id,\n      groups = [],\n      dashboards = [],\n      groupDashboards = []\n    } = this.state;\n\n    const mode = id === null ? 'New' : 'Edit';\n\n    const groupItems = groups.map(group => \n      <div key={group.id} className=\"group-card\">\n        <p>\n          {group.name}\n          <button className=\"button\" onClick={() => this.openEditPanel(group)}>update</button>\n          <button className=\"button\" onClick={() => this.delete(group.id)}>delete</button>\n        </p>\n      </div>\n    );\n\n    const groupDashboardItems = [];\n    for (let i = 0; i < groupDashboards.length; i++) {\n      const dashboardId = groupDashboards[i];\n      for (let j = 0; j < dashboards.length; j++) {\n        if (dashboardId === dashboards[j].id) {\n          groupDashboardItems.push(\n            (\n              <div key={dashboardId}>\n                <div>Name: {dashboards[j].name}</div>\n                <button className=\"button\" onClick={() => this.removeGroupDashboard(dashboardId)}>delete</button>\n              </div>\n            )\n          );\n          break;\n        }\n      }\n    }\n\n    return (\n      <div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"searchValue\"\n            value={this.state.searchValue}\n            onChange={this.handleInputChange}\n            placeholder=\"Search...\"\n            style={{width: '200px'}}\n            />\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\n            <FontAwesomeIcon icon=\"plus\" /> New Group\n          </button>\n        </div>\n        <div className=\"row\">\n          {groupItems}\n        </div>\n\n        <Modal \n          show={this.state.showEditPanel}\n          onClose={this.closeEditPanel}\n          modalClass={'small-modal-panel'} \n          title={mode} >\n\n          <div className=\"form-panel\">\n            <label>Name</label>\n            <input \n              type=\"text\" \n              name=\"name\" \n              value={this.state.name}\n              onChange={this.handleInputChange} />\n            \n            <label>Dashboards</label>\n            <Select\n              name={'groupDashboardId'}\n              value={this.state.groupDashboardId}\n              onChange={this.handleIntegerOptionChange}\n              options={dashboards}\n              optionDisplay={'name'}\n              optionValue={'id'}\n            />\n            <button className=\"button\" onClick={this.addGroupDashboard}>Add</button>\n            <div>\n              {groupDashboardItems}\n            </div>\n            \n            <button className=\"button\" onClick={this.save}>Save</button>\n          </div>\n        </Modal>\n        \n      </div>\n    )\n  }\n}\n\nexport default Group;","\nimport React from 'react';\n\nimport User from './User';\nimport Group from './Group';\nimport Tabs from '../components/Tabs';\n\nclass UserManagement extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Tabs activeTab=\"Group\">\n          <div title=\"Group\">\n            <Group />\n          </div>\n          <div title=\"User\">\n            <User />\n          </div>\n        </Tabs>\n      </React.Fragment>\n    )\n  };\n}\n\nexport default UserManagement;","\nimport React from 'react';\nimport axios from 'axios';\n\nclass Account extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showUpdatePassword: false,\n      id: null,\n      username: '',\n      name: '',\n      sysRole: '',\n      apiKey: '',\n      password: '',\n      confirmedPassword: ''\n    };\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  fetchUser = () => {\n    axios.get('/ws/user/account')\n      .then(res => {\n        const user = res.data;\n        this.setState({\n          id: user.id,\n          username: user.username,\n          name: user.name,\n          sysRole: user.sysRole,\n          apiKey: user.apiKey\n        });\n      });\n  }\n\n  generateApiKey = () => {\n  }\n\n  save = () => {\n    const {\n      showUpdatePassword,\n      name,\n      password,\n      confirmedPassword\n    } = this.state;\n\n    const user = {\n      name: name\n    }\n\n    if (showUpdatePassword) {\n      if (password !== confirmedPassword) {\n        alert('confirm password');\n        return;\n      }\n      \n      user.password = password;\n    }\n  }\n\n  toggleUpdatePassword = () => {\n    this.setState(prevState => ({\n      showUpdatePassword: !prevState.showUpdatePassword\n    })); \n  }\n\n  render() {\n    const {\n      showUpdatePassword,\n      username,\n      sysRole,\n      apiKey\n    } = this.state;\n\n    return (\n      <div>\n        <div>Account</div>\n        <div className=\"form-panel\">   \n          <label>Username</label>\n          <div>{username}</div>\n\n          <label>Name</label>\n          <input \n            type=\"text\" \n            name=\"name\" \n            value={this.state.name}\n            onChange={this.handleInputChange} />\n\n          <label>System Role</label>\n          <div>{sysRole}</div>\n\n          <label>API Key</label>\n          <div>{apiKey}</div>\n          <button className=\"button\" onClick={this.generateApiKey}>Generate new API Key</button>\n          <br/>\n\n          <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\n          {\n            showUpdatePassword ?\n            (\n              <React.Fragment>\n                <br/>\n                <label>Password</label>\n                <input \n                  type=\"password\" \n                  name=\"password\" \n                  value={this.state.password}\n                  onChange={this.handleInputChange} />\n                <label>Confirm Password</label>\n                <input \n                  type=\"password\" \n                  name=\"confirmedPassword\" \n                  value={this.state.confirmedPassword}\n                  onChange={this.handleInputChange} />\n              </React.Fragment>\n            ) : null\n          }\n\n          <br/>\n          <button className=\"button\" onClick={this.save}>Save</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Account;","import React from 'react';\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\nimport axios from 'axios';\nimport DataSource from './DataSource';\nimport Dashboard from './Dashboard';\nimport DashboardFullScreenView from './DashboardFullScreenView';\nimport UserManagement from './UserManagement';\nimport Account from './Account';\n\nimport Toast from '../components/Toast';\n\nimport * as Constants from '../api/Constants';\nimport './Workspace.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst MENU_ITEMS = [\n  {\n    link: '/workspace/dashboard',\n    value: 'Dashboard',\n    icon: 'chalkboard',\n  }, \n  {\n    link: '/workspace/datasource',\n    value: 'Data source',\n    icon: 'database'\n  }, \n  {\n    link: '/workspace/usermanagement',\n    value: 'User Management',\n    icon: 'users-cog'\n  }\n];\n\nconst ACCOUNT_MENU_LINK = '/workspace/account';\n\nclass Workspace extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentMenuLink: '/workspace/dashboard'\n    }\n  }\n\n  componentDidMount() {\n    const pathname = this.props.location.pathname;\n    this.setState({\n      currentMenuLink: pathname,\n    });\n  }\n\n  handleMenuClick = (menuLink) => {\n    this.setState({\n      currentMenuLink: menuLink\n    });\n  }\n\n  logout = () => {\n    axios.get('/auth/logout')\n      .then(res => {\n        this.props.history.push('/login');\n      });\n  }\n\n  render() {\n    const {\n      currentMenuLink,\n    } = this.state;\n\n    const {\n      username,\n      sysRole\n    } = this.props;\n\n    let menuItems = [];\n    let menuList = [];\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\n      menuList = MENU_ITEMS.filter(m => m.link === '/workspace/dashboard');\n    } else {\n      menuList = MENU_ITEMS;\n    }\n    for (let i = 0; i < menuList.length; i++) {\n      const menu = menuList[i];\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\n      menuItems.push(\n        (\n          <li key={menu.link} className={active}>\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\n            </Link>\n          </li>\n        )\n      );\n    }\n\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\n\n    return (\n      <React.Fragment>\n        <div className=\"workspace-nav\">  \n          <div className=\"workspace-name\">Poli</div>\n          <ul className=\"workspace-nav-menu\">\n            {menuItems}\n          </ul>\n          <div className=\"workspace-account-menu\">\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\n                <span className=\"workspace-nav-menu-text\">{username}</span>\n              </Link>\n            </div>\n            <div className=\"workspace-logout-button inline-block\" onClick={this.logout}>\n              <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\n            </div>\n          </div>\n        </div>\n        <div className=\"workspace-content\">\n          <Switch>\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\n            <Route exact path=\"/workspace/dashboard/view\" component={DashboardFullScreenView} />\n            <Route exact path=\"/workspace/account\" component={Account} />\n            <Route exact path=\"/workspace/usermanagement\" component={UserManagement} />\n            <Route path=\"/workspace/dashboard\" component={Dashboard} />\n          </Switch>\n        </div>\n        <Toast />\n      </React.Fragment>\n    );\n  }\n}\nexport default withRouter(Workspace);\n","\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass PageNotFound extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <h1>PageNotFound</h1>\n        <Link to=\"/login\">Login</Link>\n      </React.Fragment>\n    )\n  };\n}\n\nexport default PageNotFound;","import React from 'react';\nimport { Route, Switch, Redirect, withRouter, Component } from \"react-router-dom\";\nimport axios from 'axios';\nimport './App.css';\n\nimport Login from './views/Login';\nimport ChangeTempPassword from './views/ChangeTempPassword';\nimport Workspace from './views/Workspace';\nimport PageNotFound from './views/PageNotFound';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { \n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\n  faFileExport, faFileCsv, faCircleNotch\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\n  faFileExport, faFileCsv, faCircleNotch\n);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      sysRole: '',\n      isAuthorizing: false\n    }\n  }\n\n  componentDidMount() {\n    const {\n      sysRole = ''\n    } = this.state;\n\n    let isAuthenticated = false;\n    if (sysRole) {\n      isAuthenticated = true;\n    }\n\n    console.log('App - componentDidMount',isAuthenticated);\n\n    if (!isAuthenticated) {\n      console.log('App - componentDidMount', 'cookie');\n      this.setState({\n        isAuthorizing: true\n      }, () => {\n        axios.post('/auth/login/cookie')\n          .then(res => {\n            const loginResponse = res.data;\n            if (loginResponse.error) {\n              this.setState({\n                sysRole: '',\n                isAuthorizing: false\n              }, () => {\n                this.props.history.push('/login');\n              });\n            } else {\n              this.onLoginSuccess(loginResponse);\n            }\n          });\n      });\n      \n    }\n  }\n\n  onLoginSuccess = (loginResponse = {}) => {\n    if (loginResponse.tempPassword) {\n      this.props.history.push('/changepassword');\n    } else {\n      this.setState({\n        username: loginResponse.username,\n        sysRole: loginResponse.sysRole,\n        isAuthorizing: false\n      }, () => {\n        this.props.history.push('/workspace/dashboard');\n      });\n    }\n  }\n   \n  render() {\n    const {\n      username,\n      sysRole,\n      isAuthorizing\n    } = this.state;\n\n    let isAuthenticated = false;\n    if (sysRole) {\n      isAuthenticated = true;\n    }\n    console.log('App - render', sysRole, isAuthenticated);\n\n    if (isAuthorizing) {\n      return (\n        <FontAwesomeIcon icon='cicle-north' spin={true} size=\"3x\" />\n      )\n    }\n    \n    return (\n      <div className=\"app\">\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/login\" render={() => <Login onLoginSuccess={this.onLoginSuccess} />} />\n          <Route path=\"/changepassword\" component={ChangeTempPassword} />\n          <PrivateRoute \n            authenticated={isAuthenticated} \n            path='/workspace' \n            component={Workspace} \n            username={username}\n            sysRole={sysRole} \n          />\n          <Route component={PageNotFound} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\n  return (\n    <Route\n      {...rest}\n      render={\n        (props) => authenticated === true\n        ? <Component {...props} {...rest}/>\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\n      }\n    />\n  )\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/poli\">\n    <App />\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}