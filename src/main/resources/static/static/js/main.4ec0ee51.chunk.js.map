{"version":3,"sources":["views/Login.js","views/ChangeTempPassword.js","api/WebApi.js","components/Modal.js","components/Toast.js","components/SearchInput.js","views/DataSource.js","api/Constants.js","components/ColorPicker.js","components/Checkbox.js","api/Util.js","api/EchartsApi.js","components/GridDraggable.js","components/GridResizable.js","components/TableWidget.js","components/filters/Slicer.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/Tabs.js","components/Select.js","components/WidgetEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/DashboardFullScreenView.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","handleKeyPress","keyCode","login","_this$state","state","username","password","user","axios","post","then","res","loginResponse","data","error","errorMsg","onLoginSuccess","_this2","isAuthenticated","sysRole","react_default","a","createElement","className","type","onChange","onKeyDown","onClick","React","Component","withRouter","ChangeTempPassword","changePassword","confirmedPassword","length","history","push","style","fontSize","textAlign","fontWeight","marginBottom","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","concat","onClose","react_fontawesome_index_es","icon","size","COLOR_RED","Toast","message","bgColor","timeoutId","clearTimeout","showToast","backgroundColor","setTimeout","hide","_toastRef","assertThisInitialized","clearInterval","toastStatus","showSuccess","showError","SearchInput","reset","inputWidth","inputStyle","width","margin","placeholder","DataSource","handleNameInputChange","save","showUpdatePassword","id","connectionUrl","driverClassName","ping","ds","put","closeEditPanel","catch","result","clearEditPanel","initialState","openEditPanel","showEditPanel","confirmDelete","_this$state$objectToD","objectToDelete","delete","closeConfirmDeletionPanel","openConfirmDeletionPanel","datasource","showConfirmDeletionPanel","toggleUpdatePassword","prevState","jdbcDataSources","searchValue","webApi","_this$state2","_this$state2$jdbcData","_this$state2$objectTo","mode","jdbcDataSourceItems","_loop","i","includes","key","class","marginRight","src_components_SearchInput","src_components_Modal","rows","CHART","FILTER","WIDGET_TYPES","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","SYS_ROLE_ADMIN","SYS_ROLE_VIEWER","DEFAULT_DASHBOARD_HEIGHT","ColorPicker","handleClick","showPalette","handleClose","handleChange","color","rgb","rgba","r","g","b","height","borderRadius","background","lib","Checkbox","toggle","checked","_this$props2","checkmarkBoxStyle","jsonToArray","json","array","JSON","parse","e","getReadableDiffTime","d1","d2","seconds","Math","abs","floor","minutes","hours","CHART_COLORS","getPieOption","queryResultData","pieKey","pieValue","legend","series","row","tooltip","orient","right","top","bottom","center","radius","getPieOptionTemplate","WIDGET_BORDER","GridDraggable","onMouseDown","preventDefault","gridItemNode","ReactDOM","findDOMNode","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","left","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","fixedWidth","TableWidget","handleTdClick","dashboardId","columnName","columnValue","onTableTdClick","_this$props$data","_this$props$columns","columns","_this$props$drillThro","drillThrough","columnHeaders","forEach","column","header","Header","accessor","index","findIndex","d","Cell","es","defaultPageSize","previousText","nextText","Slicer","toggleSelectAll","newIsSelectAll","isSelectAll","newCheckBoxes","toConsumableArray","checkBoxes","isChecked","handleSearchValueChange","handleCheckBoxChange","x","_this$props$checkBoxe","checkBoxItems","checkBox","src_components_Checkbox","selectText","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","instance","handleOriginal","console","log","drills","widgetDrillThrough","onChartClick","param","echarts","onChartLegendselectchanged","echart","widgetClickEvent","onWidgetContentClick","onSlicerChange","onWidgetFilterInputChange","onSingleValueChange","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","filterType","_this$props$queryResu","queryResult","Util","widgetItem","Constants","src_components_TableWidget","chartOption","EchartsApi","echarts_for_react_lib_default","option","onEvents","components_filters_Slicer","isEditMode","_this$props2$style","_style$showBorder","showBorder","_style$showTitle","showTitle","borderColor","titleFontColor","titleBackgroundColor","contentBackgroundColor","zIndex","borderStyle","gridBoxStyle","border","titleStyle","Array","isArray","contentStyle","components_GridDraggable","components_GridResizable","GridLayout","_this$props$widgets","widgets","showGridlines","backgroundSize","backgroundImage","boxItems","map","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","viewWidth","newWidgets","gridWidth","resizeWidgetsToActual","resizeWidgetsToBase","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","Number","parseFloat","toFixed","fetchWidgets","queryFilters","queryCharts","saveWidgets","stringify","w","splice","_this$state$widgets","getFilterParams","_this$state$widgets2","filterParams","filterParam","_widget$checkBoxes","paramValues","j","remark","queryParameter","handleSavedWidget","queryChart","_widgets$i","_widgets$i2","queryFilter","params","_this3","_arr","values","_i","val","_this4","widgetViewWidth","showControl","onStyleValueChange","src_components_ColorPicker","src_components_GridLayout","Tabs","handleTabClick","activeTab","tabHeaders","tabContent","active","Select","handleOptionChange","_this$props$options","options","optionValue","optionDisplay","_this$props$preloadOn","preloadOneEmpty","optionList","display","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","_widget$data","sqlQuery","jdbcDataSourceId","runQuery","_x","objectSpread","handleAceEditorChange","newValue","handleIntegerOptionChange","intValue","_this$state3","_this$state4","onSave","queryRequest","addDrillThrough","_this$state5","drillColumnName","drillDashboardId","newDrillThrough","removeDrillThrough","drill","generateChart","_this$state6","_this$state6$queryRes","renderChartPreview","_this$state7","_this$state7$queryRes","chartPreview","_this$state8","components_Select","_this$state9","_this$state9$jdbcData","_this$state9$drillThr","_this$state9$drillDas","drillItems","columnItems","col","dataType","showQueryTab","src_components_Tabs","Fragment","react_ace_lib_default","theme","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","marginTop","DashboardEditView","loadViewByDashboardName","dashboardName","match","url","location","search","URLSearchParams","fromDashboard","getPageWidth","isFullScreenView","refresh","toggleAutoRefresh","autoRefreshTimerId","refreshInterval","interval","timerId","setInterval","applyFilters","refreshWidgetView","updateLastRefreshed","widgetViewPanel","current","now","Date","lastRefreshed","updateReadableLastRefreshed","readableLastRefreshed","dashboard","onDashboardSave","edit","cancelEdit","onWidgetSave","showWidgetEditPanel","openWidgetEditPanel","widgetEditPanel","fullScreen","window","open","nextDashboard","nextLink","goBackToFromDashboard","goBack","onDashboardDelete","deleteDashboard","lastRefreshLabelTimerId","jdbcDataSourceOptions","createRef","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","editButtonPanel","autoRefreshStatus","fullScreenButtonPanel","controlButtons","src_components_WidgetViewPanel","ref","src_components_WidgetEditPanel","Dashboard","fetchBoards","view","activeDashboardId","pathname","indexOf","substring","_this$state$dashboard","showEdit","dashboardRows","menuActive","Route","path","render","views_DashboardEditView","User","fetchUsers","users","fetchGroups","groups","tempPassword","userGroups","userGroupId","initialEditPanelState","selectedSysRole","addUserGroup","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_this$state3$users","_this$state3$groups","_this$state3$userGrou","_this$state3$objectTo","userItems","userGroupItems","_loop2","Group","fetchDashboards","group","groupDashboards","groupDashboardId","addGroupDashboard","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","UserManagement","views_Group","views_User","Account","fetchUser","apiKey","generateApiKey","DashboardFullScreenView","MENU_ITEMS","link","Workspace","handleMenuClick","menuLink","currentMenuLink","logout","onLogout","startsWith","find","m","menuItems","menuList","filter","menu","Link","to","isAccountMenuActive","Switch","exact","component","views_UserManagement","src_views_Dashboard","src_components_Toast","PageNotFound","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","faCircleNotch","faSearch","faSave","faCalendarPlus","faFilter","faExternalLinkAlt","App","isTempPassword","isAuthorizing","directUrl","interceptors","use","status","Promise","reject","currentPath","spin","src_views_Login","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","BrowserRouter","basename","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.4ec0ee51.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { sysRole } = this.props;\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      axios.post('/auth/login/cookie')\r\n        .then(res => {\r\n          const loginResponse = res.data;\r\n          if (!loginResponse.error) {\r\n            this.props.onLoginSuccess(loginResponse);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.keyCode === 13) {\r\n      this.login();\r\n    }\r\n  }\r\n\r\n  login = () => {\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const loginResponse = res.data;\r\n        if (loginResponse.error) {\r\n          this.setState({\r\n            errorMsg: loginResponse.error\r\n          });\r\n        } else {\r\n          this.props.onLoginSuccess(loginResponse);\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login-view\">\r\n        <div className=\"login-panel\">\r\n          <div className=\"login-app-title\">Poli</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <div className=\"login-panel-body\">\r\n            <div className=\"form-panel\">\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n              <label>Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n              <button className=\"button login-button\" onClick={this.login}>Login</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport './Login.css';\r\n\r\nclass ChangeTempPassword extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  changePassword = () => {\r\n    const {\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    if (password && confirmedPassword\r\n        && password === confirmedPassword) {\r\n      if (password.length < 8) {\r\n        this.setState({\r\n          errorMsg: `Use 8 or more characters.`\r\n        });\r\n        return;\r\n      }\r\n\r\n      const user = {\r\n        password: password\r\n      }\r\n\r\n      axios.post('/auth/login/change-password', user)\r\n        .then(res => {\r\n          const loginResponse = res.data || {};\r\n          if (loginResponse.error) {\r\n            this.setState({\r\n              errorMsg: loginResponse.error\r\n            });\r\n          } else {\r\n            this.props.history.push('/workspace/dashboard');\r\n          }\r\n        });\r\n    } else {\r\n      this.setState({\r\n        errorMsg: `Those passwords didn't match.`\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const titleStyle = {\r\n      fontSize: '22px',\r\n      textAlign: 'center',\r\n      fontWeight: 'bold',\r\n      marginBottom: '15px'\r\n    }\r\n\r\n    const tipStyle = {\r\n      fontWeight: 'bold',\r\n      marginBottom: '5px',\r\n      fontSize: '15px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"login-view\">\r\n        <div className=\"login-panel\">\r\n          <div style={titleStyle}>Change password</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <div className=\"login-panel-body\">\r\n            <div className=\"form-panel\">\r\n              <div style={tipStyle}>* Use 8 or more characters</div>\r\n              <label>New password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n              <label>Confirm password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"confirmedPassword\" \r\n                value={this.state.confirmedPassword}\r\n                onChange={this.handleInputChange} />\r\n              <button className=\"button login-button\" onClick={this.changePassword}>Confirm</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ChangeTempPassword);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      modalClass = '',\r\n      title,\r\n      children\r\n    } = this.props;\r\n\r\n    const modalStatus = show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={`modal-panel ${modalClass}`}>\r\n          <div className=\"model-header row\">\r\n            <div className=\"model-title\">{title}</div>\r\n            <button className=\"model-close-button icon-button\" onClick={() => this.props.onClose()}>\r\n              <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          <div className='modal-body'>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Toast.css';\r\n\r\nconst COLOR_RED = '#FF5630';\r\nconst COLOR_GREEN = '#36B37E';\r\n\r\nclass Toast extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showToast: false,\r\n      message: '',\r\n      backgroundColor: COLOR_RED,\r\n      timeoutId: ''\r\n    };\r\n\r\n    Toast._toastRef = this;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { timeoutId } = this.state;\r\n    if (timeoutId) {\r\n      clearInterval(timeoutId);\r\n    }\r\n  }\r\n\r\n  show = (message, bgColor) => {\r\n    const { timeoutId } = this.state;\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    this.setState({ \r\n      showToast: true,\r\n      message: message,\r\n      backgroundColor: bgColor,\r\n      timeoutId: ''\r\n    }, () => {\r\n      const timeoutId = setTimeout(() => {\r\n        this.hide();\r\n      }, 3000);\r\n      this.setState({\r\n        timeoutId: timeoutId\r\n      });\r\n    });\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({ \r\n      showToast: false,\r\n      message: ''\r\n    });\r\n  }\r\n\r\n  static showSuccess = (message) => {\r\n    Toast._toastRef.show(message, COLOR_GREEN);\r\n  }\r\n\r\n   static showError = (message) => {\r\n    Toast._toastRef.show(message, COLOR_RED);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showToast,\r\n      message,\r\n      backgroundColor\r\n    } = this.state;\r\n\r\n    const toastStatus = showToast ? 'display-block' : 'display-none';\r\n    const style = {\r\n      backgroundColor: backgroundColor\r\n    }\r\n\r\n    return (\r\n      <div className={`toast-container ${toastStatus}`} style={style}>\r\n        {message}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toast;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './SearchInput.css';\r\n\r\nclass SearchInput extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    inputWidth: PropTypes.number\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const { name } = this.props;\r\n    const value = event.target.value;\r\n    this.props.onChange(name, value);\r\n  }\r\n\r\n  reset = () => {\r\n    const { name } = this.props;\r\n    this.props.onChange(name, '');\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      value,\r\n      inputWidth\r\n    } = this.props;\r\n\r\n    let inputStyle = {};\r\n    if (inputWidth) {\r\n      inputStyle.width = inputWidth + 'px';\r\n    }\r\n\r\n    return (\r\n      <div className=\"search-input-container\">\r\n        <div className=\"row\">\r\n          <div className=\"search-input-icon float-left\">\r\n            <FontAwesomeIcon icon=\"search\" style={{margin: '10px'}} />\r\n          </div>\r\n          <div className=\"float-left\">\r\n            <input\r\n              type=\"text\"\r\n              name={name}\r\n              value={value}\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleInputChange}\r\n              className=\"search-input-input\"\r\n              style={inputStyle}\r\n            />\r\n          </div>\r\n          <button className=\"button search-input-reset-button float-right\" onClick={this.reset}>\r\n            <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchInput;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport SearchInput from '../components/SearchInput';\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      showUpdatePassword: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataSources();\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      driverClassName,\r\n      username,\r\n      password,\r\n      name,\r\n      ping,\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      Toast.showError('Enter a name.');\r\n      return;\r\n    }\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      driverClassName: driverClassName,\r\n      username: username,\r\n      name: name,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword && password) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          Toast.showError('The name exists. Try another.');\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          Toast.showError('The name exists. Try another.');\r\n        });\r\n    } \r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        if (result === 'success') {\r\n          Toast.showSuccess('Ping Succeeded');\r\n        } else {\r\n          Toast.showError(result);\r\n        }\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        driverClassName: ds.driverClassName,\r\n        username: ds.username,\r\n        name: ds.name,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/jdbcdatasource/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (datasource) => {\r\n    this.setState({\r\n      objectToDelete: datasource,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      id,\r\n      jdbcDataSources = [],\r\n      searchValue,\r\n      showConfirmDeletionPanel,\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const jdbcDataSourceItems = [];\r\n    for (let i = 0; i < jdbcDataSources.length; i++) {\r\n      const ds = jdbcDataSources[i];\r\n      const name = ds.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        jdbcDataSourceItems.push(\r\n          (\r\n            <div key={i} className=\"card float-left\">\r\n              <div className=\"card-header ellipsis\">\r\n                {name}\r\n              </div>\r\n              <div className=\"card-content\"></div>\r\n              <div className=\"card-footer row\">\r\n                <div className=\"float-right\">\r\n                  <button className=\"icon-button card-icon-button\" onClick={() => this.openEditPanel(ds)}>\r\n                    <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                  </button>\r\n                  <button className=\"icon-button card-icon-button\" onClick={() => this.openConfirmDeletionPanel(ds)}>\r\n                    <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                  </button>\r\n                  <button className=\"icon-button card-icon-button\" onClick={() => this.ping(ds.id)}>\r\n                    <FontAwesomeIcon icon=\"plug\" size=\"lg\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"full-page-content\">\r\n        <div class=\"row\">\r\n          <div className=\"float-left\" style={{marginRight: '5px'}}>\r\n            <SearchInput \r\n              name={'searchValue'} \r\n              value={this.state.searchValue} \r\n              onChange={this.handleNameInputChange} \r\n              inputWidth={200}\r\n            />\r\n          </div>\r\n          <button className=\"button float-left\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New\r\n          </button>\r\n        </div>\r\n        <div className=\"row mt-10\">\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Name <span className=\"required\">*</span></label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n            />\r\n\r\n            <label>Connection Url</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label>Driver Class Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"driverClassName\" \r\n              value={this.state.driverClassName}\r\n              onChange={this.handleInputChange} \r\n            />\r\n\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} \r\n            />\r\n            \r\n            { mode === 'Edit' && (\r\n              <div style={{margin: '3px 0px 8px 0px'}}>\r\n                <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n              </div>\r\n            )}\r\n\r\n            { (mode === 'New' || showUpdatePassword) && ( \r\n              <div>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} \r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <label>Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} \r\n            />\r\n            <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","/**\r\n * Constants\r\n */\r\nexport const CHART = 'chart';\r\nexport const FILTER = 'filter';\r\nexport const WIDGET_TYPES = [CHART, FILTER];\r\n\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\r\n\r\nexport const SYS_ROLE_ADMIN = 'admin';\r\nexport const SYS_ROLE_DEVELOPER = 'developer';\r\nexport const SYS_ROLE_VIEWER = 'viewer';\r\n\r\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;","import React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport './ColorPicker.css'\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPalette: false\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      showPalette: !prevState.showPalette\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      showPalette: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    const { name } = this.props;\r\n    const rgb = color.rgb;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    this.props.onChange(name, rgba);\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: this.props.value\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"colorpicker-select\" onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.showPalette && (\r\n          <div className=\"colorpicker-popover\">\r\n            <div className=\"colorpicker-cover\" onClick={this.handleClose} />\r\n            <ChromePicker color={this.props.value} onChange={this.handleChange} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    const {\r\n      name,\r\n      checked\r\n    } = this.props;\r\n\r\n    this.props.onChange(name, !checked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      checked\r\n    } = this.props;\r\n\r\n    const checkmarkBoxBgColor = checked ? '#000000' : '#FFFFFF';\r\n    const checkmarkBoxStyle = {\r\n      backgroundColor: checkmarkBoxBgColor\r\n    };\r\n\r\n    return (\r\n      <div className=\"checkbox-container\" onClick={this.toggle}>\r\n        <div className=\"checkbox-checkmark\">\r\n          <div className=\"checkbox-checkmark-box\" style={checkmarkBoxStyle}>\r\n          </div>\r\n        </div>\r\n        <div className=\"checkbox-label\">{value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};\r\n\r\nexport const jsonToArray = (json) => {\r\n  let array;\r\n  try {\r\n    array = JSON.parse(json);\r\n  } catch(e) {\r\n    array = [];\r\n  }\r\n  return array;\r\n}\r\n\r\nexport const getReadableDiffTime = (d1, d2) => {\r\n  const seconds = Math.abs(d1 - d2) / 1000;\r\n  if (seconds <= 5) {\r\n    return 'Just now';\r\n  } else if (seconds > 5 && seconds < 60) {\r\n    return Math.floor(seconds) + ' seconds ago';\r\n  }\r\n\r\n  const minutes = Math.floor(seconds / 60);\r\n  if (minutes == 1) {\r\n    return '1 minute ago';\r\n  } else if (minutes > 1 && minutes < 60) {\r\n    return minutes + \" minutes ago\";\r\n  } \r\n\r\n  const hours = Math.floor(seconds / 3600);\r\n  if (hours == 1) {\r\n    return '1 hour ago';\r\n  }\r\n  return hours + \" hours ago\";\r\n}  \r\n","import * as Util from '../api/Util';\r\n\r\nconst CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOptionTemplate = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      type: 'scroll',\r\n      orient: 'vertical',\r\n      data: legend,\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['50%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport const getPieOption = (queryResultData, pieKey, pieValue) => {\r\n  let legend = [];\r\n  let series = [];\r\n  for (let i = 0; i < queryResultData.length; i++) {\r\n    const row = queryResultData[i];\r\n    legend.push(row[pieKey]);\r\n    series.push({\r\n      name: row[pieKey],\r\n      value: row[pieValue]\r\n    });  \r\n  }\r\n  return getPieOptionTemplate(legend, series);\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    /*\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n      boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n    */\r\n   \r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n/**\r\n * <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\r\n */\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport './TableWidget.css';\r\n\r\nclass TableWidget extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  handleTdClick = (dashboardId, columnName, columnValue) => {\r\n    this.props.onTableTdClick(dashboardId, columnName, columnValue);\r\n  }\r\n\r\n  render() {   \r\n    const {\r\n      data = [],\r\n      columns = [],\r\n      drillThrough = [],\r\n      error\r\n    } = this.props;\r\n\r\n    const columnHeaders = [];\r\n    columns.forEach(column => {\r\n      const columnName = column.name;\r\n      const header = {\r\n        Header: columnName,\r\n        accessor: columnName\r\n      };\r\n      if (drillThrough.length > 0) {\r\n        const index = drillThrough.findIndex(d => d.columnName === columnName);\r\n        if (index !== -1) {\r\n          const dashboardId = drillThrough[index].dashboardId;\r\n          header.Cell = (props => \r\n            <span className=\"link-label\" \r\n              onClick={() => this.handleTdClick(dashboardId, columnName, props.value)}>\r\n              {props.value}\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n\r\n      columnHeaders.push(header);\r\n    });\r\n\r\n    if (error) {\r\n      return (\r\n        <div>\r\n          {error}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (data.length === 0 || columns.length === 0) {\r\n      return (\r\n        <div>No data</div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ReactTable\r\n        data={data}\r\n        columns={columnHeaders}\r\n        defaultPageSize={10}\r\n        previousText={'Prev'}\r\n        nextText={'Next'}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableWidget;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Checkbox from '../Checkbox';\r\nimport './Slicer.css';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSelectAll: false,\r\n      searchValue: ''\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    checkBoxes: PropTypes.array.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n  };\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n\r\n    this.props.onChange(this.props.id, newCheckBoxes);\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.id, newCheckBoxes);\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      checkBoxes = [],\r\n    } = this.props;\r\n\r\n    const {\r\n      searchValue,\r\n      isSelectAll\r\n    } = this.state;\r\n\r\n    const checkBoxItems = [];\r\n    for (let i = 0; i < checkBoxes.length; i++) {\r\n      const checkBox = checkBoxes[i];\r\n      const value = checkBox.value;\r\n      if (!searchValue || (searchValue && value.includes(searchValue))) {\r\n        checkBoxItems.push(\r\n          (\r\n            <Checkbox \r\n              key={i} \r\n              name={checkBox.value} \r\n              value={checkBox.value} \r\n              checked={checkBox.isChecked} \r\n              onChange={this.handleCheckBoxChange} \r\n            />\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    const selectText = isSelectAll ? 'Deselect All' : 'Select All'\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" style={{marginBottom: '5px'}} onClick={this.toggleSelectAll}>{selectText}</button>\r\n        <input \r\n          type=\"text\" \r\n          name=\"name\" \r\n          value={this.state.searchValue}\r\n          onChange={this.handleSearchValueChange}\r\n          placeholder=\"Search...\"\r\n        />\r\n        \r\n        <div className=\"slicer-body\">\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\nimport TableWidget from './TableWidget';\r\nimport Slicer from './filters/Slicer';\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough || []; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        const index = drills.findIndex(d => d.columnName === header);\r\n        if (index !== -1) {\r\n          const dashboardId = drills[index].dashboardId;\r\n          // this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  onTableTdClick = (dashboardId, columnName, columnValue) => {\r\n    const widgetClickEvent = {\r\n      type: 'tableTdClick',\r\n      data: {\r\n        dashboardId: dashboardId,\r\n        columnName: columnName,\r\n        columnValue: columnValue\r\n      }\r\n    }\r\n    this.props.onWidgetContentClick(widgetClickEvent);\r\n  }\r\n\r\n  onSlicerChange = (widgetId, checkBoxes) => {\r\n    const data = {\r\n      checkBoxes: checkBoxes\r\n    };\r\n    this.props.onWidgetFilterInputChange(widgetId, data);\r\n  }\r\n\r\n  onSingleValueChange = (widgetId, event) => {\r\n    const value = event.target.value;\r\n    const data = {\r\n      value: value\r\n    };\r\n    this.props.onWidgetFilterInputChange(widgetId, data);\r\n  }\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      id,\r\n      type,\r\n      chartType,\r\n      filterType,\r\n      queryResult = {},\r\n      drillThrough,\r\n      data = {},\r\n      checkBoxes,\r\n      value\r\n    } = this.props;\r\n\r\n    const queryResultData = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    let widgetItem = (<div></div>);\r\n    if (type === Constants.CHART) {\r\n      if (chartType === Constants.TABLE) {\r\n        widgetItem = (\r\n          <TableWidget\r\n            data={queryResultData}\r\n            columns={columns}\r\n            error={error}\r\n            drillThrough={drillThrough}\r\n            onTableTdClick={this.onTableTdClick}\r\n          />\r\n        );\r\n      } else if (chartType === Constants.PIE) {\r\n        const { \r\n          pieKey,\r\n          pieValue\r\n        } = data;\r\n        const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\r\n        widgetItem = (\r\n          <ReactEcharts \r\n            option={chartOption}   \r\n            className=\"echarts\"\r\n            onEvents={onChartEvents}  \r\n          />\r\n        );\r\n      } \r\n    } else if (type === Constants.FILTER) {\r\n      if (filterType === Constants.SLICER) {\r\n        widgetItem = (\r\n          <div className=\"grid-box-content-panel\">\r\n            <Slicer \r\n              id={id} \r\n              checkBoxes={checkBoxes} \r\n              onChange={this.onSlicerChange} \r\n            />\r\n          </div>\r\n        );\r\n      } else if (filterType === Constants.SINGLE_VALUE) {\r\n        widgetItem = (\r\n          <div className=\"grid-box-content-panel\">\r\n            <input \r\n              type=\"text\"  \r\n              value={value}\r\n              onChange={(event) => this.onSingleValueChange(id, event)} \r\n            />\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    \r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      title,\r\n      isEditMode,\r\n      style = {},\r\n      drillThrough\r\n    } = this.props;\r\n\r\n    const { \r\n      showBorder = false,\r\n      showTitle = true,\r\n      borderColor,\r\n      titleFontColor,\r\n      titleBackgroundColor,\r\n      contentBackgroundColor,\r\n      zIndex\r\n    } = style;\r\n\r\n    const borderStyle = showBorder ? `2px solid ${borderColor}` : '2px solid transparent';\r\n\r\n    let gridBoxStyle = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: zIndex,\r\n      border: borderStyle\r\n    };\r\n\r\n    const hasDrillThrough = !Util.isArrayEmpty(drillThrough);\r\n\r\n    const titleStyle = {\r\n      color: titleFontColor,\r\n      backgroundColor: titleBackgroundColor\r\n    };\r\n\r\n    const contentStyle = {\r\n      backgroundColor: contentBackgroundColor\r\n    }\r\n\r\n    /*\r\n    <div className=\"grid-box-file-button-group\">\r\n      <div className=\"inline-block\" onClick={() => this.exportJson(id)}>\r\n        <FontAwesomeIcon icon=\"file-export\" fixedWidth />\r\n      </div>\r\n      \r\n      <div className=\"inline-block\" onClick={() => this.exportCsv(id)}>\r\n        <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\r\n      </div>\r\n      <div className=\"grid-box-file-button-group\">\r\n              <div className=\"inline-block\">\r\n                <FontAwesomeIcon icon=\"external-link-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n    </div>\r\n    */\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={gridBoxStyle}>\r\n        { isEditMode && (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} \r\n          >\r\n            { showTitle && (\r\n              <div className=\"grid-box-title\" style={titleStyle}>\r\n                <div className=\"grid-box-title-value ellipsis\" style={{marginRight: '50px'}}>{title}</div>\r\n              </div>\r\n            )}\r\n          </GridDraggable>\r\n        )}\r\n\r\n        { (!isEditMode && showTitle) && (\r\n          <div className=\"grid-box-title\" style={titleStyle}>\r\n            <div className=\"grid-box-title-value ellipsis\">{title}</div>\r\n          </div>\r\n        )}\r\n\r\n        { isEditMode && (\r\n          <div className=\"grid-edit-panel\">\r\n            <div className=\"grid-box-icon inline-block\" onClick={() => this.editWidget(id)}>\r\n              <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n            </div>\r\n            <div className=\"grid-box-icon inline-block\" onClick={() => this.removeWidget(id)}>\r\n              <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"grid-box-content\" style={contentStyle}>\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { isEditMode && (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} \r\n          />\r\n        )}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridItem;","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      backgroundColor,\r\n      widgets = [],\r\n      showGridlines\r\n    } = this.props;\r\n\r\n    let style = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      backgroundColor: backgroundColor\r\n    };\r\n\r\n    if (showGridlines) {\r\n      style.backgroundSize = '15px 15px';\r\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n        onWidgetFilterInputChange={this.props.onWidgetFilterInputChange}\r\n        onWidgetContentClick={this.props.onWidgetContentClick}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={style} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ColorPicker from './ColorPicker';\r\nimport Checkbox from './Checkbox';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\nimport Modal from '../components/Modal';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './WidgetViewPanel.css';\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      snapToGrid: false,\r\n      showGridlines: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('WidgetViewPanel componentDidMount');\r\n  }\r\n\r\n  resizeGrid = (viewWidth) => {\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n\r\n    const gridWidth = viewWidth - 10;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return num * gridWidth / BASE_WIDTH / 100;\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Number.parseFloat(num * BASE_WIDTH / gridWidth).toFixed(2) * 100;\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, viewWidth) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get(`/ws/widget/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(viewWidth);\r\n          this.queryFilters();\r\n          this.queryCharts();\r\n        });\r\n      });\r\n  }\r\n \r\n  queryCharts() {\r\n    const filterParams = this.getFilterParams();\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const {\r\n        id,\r\n        type,\r\n      } = widgets[i];\r\n      if (type === Constants.CHART) {\r\n        this.queryChart(id, filterParams);\r\n      }\r\n    }\r\n  }\r\n\r\n  queryFilters() {\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const {\r\n        id,\r\n        type,\r\n        filterType\r\n      }  = widgets[i];\r\n      if (type === Constants.FILTER) {\r\n        this.queryFilter(id, filterType);\r\n      }\r\n    }\r\n  }\r\n\r\n  queryChart(widgetId, filterParams) {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    axios.post(`/ws/jdbcquery/widget/${widgetId}`, params)\r\n      .then(res => {\r\n        const queryResult = res.data;\r\n        const index = widgets.findIndex(w => w.id === queryResult.id);\r\n        const newWidgets = [...widgets];\r\n        newWidgets[index].queryResult = queryResult;\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n\r\n  queryFilter(widgetId, filterType) {\r\n    const { widgets } = this.state;\r\n    if (filterType === Constants.SLICER) {\r\n      axios.post(`/ws/jdbcquery/widget/${widgetId}`, [])\r\n        .then(res => {\r\n          const queryResult = res.data;\r\n          const queryResultData = Util.jsonToArray(queryResult.data);\r\n          const checkBoxes = [];\r\n          for (let i = 0; i < queryResultData.length; i++) {\r\n            const values = Object.values(queryResultData[i]);\r\n            for (const val of values) {\r\n              checkBoxes.push({\r\n                value: val,\r\n                isChecked: false\r\n              });\r\n            }\r\n          }\r\n          const index = widgets.findIndex(w => w.id === queryResult.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = queryResult;\r\n          newWidgets[index].checkBoxes = checkBoxes;\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    } else if (filterType === Constants.SINGLE_VALUE) {\r\n      const index = widgets.findIndex(w => w.id === widgetId);\r\n      const newWidgets = [...widgets];\r\n      newWidgets[index].value = '';\r\n      this.setState({\r\n        widgets: newWidgets\r\n      });\r\n    }\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    this.setState({\r\n      [name]: isChecked\r\n    });\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    }, () => {\r\n      // FIXME: only save this widget. Not all.\r\n      this.saveWidgets();\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete\r\n    } = this.state;\r\n    const widgetId = objectToDelete;\r\n    axios.delete(`/ws/widget/${widgetId}`)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (widgetId) => {\r\n    this.setState({\r\n      objectToDelete: widgetId,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  onWidgetFilterInputChange = (widgetId, data) => {\r\n    const { \r\n      widgets = []\r\n    } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widgetId);\r\n    const newWidgets = [...widgets];\r\n    const widget = widgets[index];\r\n    if (widget.filterType === Constants.SLICER) {\r\n      const {\r\n        checkBoxes\r\n      } = data;\r\n      newWidgets[index].checkBoxes = checkBoxes;\r\n    } else if (widget.filterType === Constants.SINGLE_VALUE) {\r\n      const {\r\n        value\r\n      } = data;\r\n      newWidgets[index].value = value;\r\n    }\r\n\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });   \r\n  }\r\n\r\n  /**\r\n   * FIXME: optimize it. No need to calculate this every time.\r\n   */\r\n  getFilterParams = () => {\r\n    const { \r\n      widgets = []\r\n    } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      if (widget.type === Constants.FILTER) {\r\n        const { filterType } = widget;\r\n        const filterParam = {};\r\n        if (filterType === Constants.SLICER) {\r\n          const { \r\n            checkBoxes = []\r\n          } = widget;\r\n          const paramValues = [];\r\n          for (let j = 0; j < checkBoxes.length; j++) {\r\n            const checkBox = checkBoxes[j];\r\n            if (checkBox.isChecked) {\r\n              paramValues.push(checkBox.value);\r\n            }\r\n          }\r\n          filterParam.value = paramValues;\r\n          if (paramValues.length === checkBoxes.length) {\r\n            filterParam.remark = 'select all';\r\n          }\r\n        } else if (filterType === Constants.SINGLE_VALUE) {\r\n          filterParam.value = widget.value;\r\n        }\r\n        filterParam.param = widget.data.queryParameter;\r\n        filterParam.type = widget.filterType;\r\n        filterParams.push(filterParam);\r\n      }\r\n    }\r\n    return filterParams;\r\n  }\r\n\r\n  handleSavedWidget = (widgetId) => {\r\n    axios.get(`/ws/widget/${widgetId}`)\r\n      .then(res => {\r\n        const widget = res.data;\r\n        const { \r\n          widgets, \r\n          gridWidth \r\n        } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widget.id);\r\n        const newWidgets = [...widgets];\r\n        // Resize the widget.\r\n        widget.x = this.scaleToActual(widget.x, gridWidth);\r\n        widget.width = this.scaleToActual(widget.width, gridWidth);\r\n        if (index === -1) {\r\n          // New widget.\r\n          newWidgets.push(widget);\r\n        } else {\r\n          // Existing widget.\r\n          newWidgets[index] = widget;\r\n        }\r\n        this.setState({\r\n          widgets: newWidgets\r\n        }, () => {\r\n          // Query the widget.\r\n          const filterParams = this.getFilterParams();\r\n          const {\r\n            id,\r\n            type,\r\n          } = widget;\r\n          if (type === Constants.CHART) {\r\n            this.queryChart(id, filterParams);\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      widgetViewWidth,\r\n      isEditMode,\r\n      showControl\r\n    } = this.props;\r\n\r\n    const top = showControl ? '50px' : '10px';\r\n    const style = {\r\n      top: top,\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {isEditMode && (\r\n          <div className=\"dashboard-attribute-edit-panel\">\r\n            <div className=\"form-panel\">\r\n              <label>Height:</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"height\" \r\n                value={this.props.height}\r\n                onChange={(event) => this.props.onStyleValueChange('height', event.target.value)} \r\n                style={{width: '200px'}}\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              Background Color\r\n              <ColorPicker name={'backgroundColor'} value={this.props.backgroundColor} onChange={this.props.onStyleValueChange} />\r\n            </div>\r\n\r\n            <Checkbox name=\"snapToGrid\" value=\"Snap to grid\" checked={this.state.snapToGrid} onChange={this.handleCheckBoxChange} />\r\n            <Checkbox name=\"showGridlines\" value=\"Show gridlines\" checked={this.state.showGridlines} onChange={this.handleCheckBoxChange} />\r\n  \r\n          </div>\r\n        )}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          backgroundColor={this.props.backgroundColor}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.openConfirmDeletionPanel} \r\n          onWidgetFilterInputChange={this.onWidgetFilterInputChange}\r\n          onWidgetContentClick={this.props.onWidgetContentClick}\r\n        />\r\n        \r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete this widget?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","import React from 'react';\r\nimport './Tabs.css';\r\n\r\nclass Tabs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const activeTab = this.props.activeTab;\r\n    this.setState({\r\n      activeTab: activeTab\r\n    });\r\n  }\r\n\r\n  handleTabClick = (title) => {\r\n    this.setState({\r\n      activeTab: title\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children\r\n    } = this.props;\r\n\r\n    const {\r\n      activeTab\r\n    } = this.state;\r\n\r\n    const tabHeaders = [];\r\n    let tabContent = null;\r\n    for (let i = 0; i < children.length; i++) {\r\n      if (children[i]) {\r\n        const title = children[i].props.title;\r\n        let active = '';\r\n        if (title === activeTab) {\r\n          active = 'tab-header-active';\r\n          tabContent = children[i].props.children;\r\n        }\r\n        \r\n        tabHeaders.push(\r\n          <li className={`tab-header-item ${active}`} key={i} onClick={() => this.handleTabClick(title)}>{title}</li>\r\n        );\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className=\"tab-container\">\r\n        <ul className=\"tab-header\">\r\n          {tabHeaders}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {tabContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Select extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    optionDisplay: PropTypes.string,\r\n    optionValue: PropTypes.string,\r\n    preloadOneEmpty: PropTypes.bool\r\n  };\r\n\r\n  handleOptionChange = (event) => {\r\n    const name = this.props.name;\r\n    const value = event.target.value;\r\n    this.props.onChange(name, value);\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      value,\r\n      options = [],\r\n      optionValue,\r\n      optionDisplay,\r\n      preloadOneEmpty = true\r\n    } = this.props;\r\n\r\n    const optionList = [];\r\n    if (preloadOneEmpty) {\r\n      optionList.push(\r\n        <option value=\"\" key=\"\"></option>\r\n      );\r\n    }\r\n    \r\n    options.forEach((option, index) => {\r\n      let value;\r\n      let display;\r\n      if (optionValue && optionDisplay) {\r\n        // The options contain objects.\r\n        value = option[optionValue];\r\n        display = option[optionDisplay];\r\n      } else {\r\n        // The options contain string or number.\r\n        value = option;\r\n        display = option;\r\n      }\r\n      \r\n      optionList.push(\r\n        <option value={value} key={index}>{display}</option>\r\n      ) \r\n    });\r\n\r\n    return (\r\n      <select value={value} onChange={this.handleOptionChange}>\r\n        {optionList}\r\n      </select>\r\n    )\r\n  };\r\n}\r\n\r\nexport default Select;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport AceEditor from 'react-ace';\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nimport './WidgetEditPanel.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport Checkbox from './Checkbox';\r\nimport Tabs from './Tabs';\r\nimport Select from './Select';\r\nimport TableWidget from './TableWidget';\r\nimport ColorPicker from './ColorPicker';\r\n\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      title: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: {},\r\n      type: Constants.CHART,\r\n      filterType: Constants.SINGLE_VALUE,\r\n      chartType: Constants.TABLE,\r\n      style: {\r\n        showBorder: false,\r\n        borderColor: 'rgba(9, 30, 66, 1)',\r\n        showTitle: true,\r\n        titleFontColor: 'rgba(9, 30, 66, 1)',\r\n        titleBackgroundColor: 'rgba(255, 255, 255, 1)',\r\n        contentBackgroundColor: 'rgba(255, 255, 255, 1)',\r\n        zIndex: 50\r\n      },\r\n      queryParameter: '',\r\n      drillThrough: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: '',\r\n      pieKey: '',\r\n      pieValue: '',\r\n      chartOption: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const widget = res.data;\r\n          const {\r\n            type,\r\n            chartType,\r\n            filterType,\r\n            drillThrough\r\n          } = widget;\r\n          if (type === Constants.CHART) {\r\n            this.setState({\r\n              chartType: chartType,\r\n              drillThrough: drillThrough\r\n            });\r\n\r\n            if (chartType === Constants.PIE) {\r\n              const {\r\n                pieKey,\r\n                pieValue\r\n              } = widget.data;\r\n              this.setState({\r\n                pieKey: pieKey,\r\n                pieValue: pieValue\r\n              });\r\n            }\r\n          } else if (type === Constants.FILTER) {\r\n            const {\r\n              queryParameter\r\n            } = widget.data;\r\n            this.setState({\r\n              filterType: filterType,\r\n              queryParameter: queryParameter\r\n            });\r\n            if (filterType === Constants.SLICER) {\r\n\r\n            } else if (filterType === Constants.SINGLE_VALUE) {\r\n\r\n            }\r\n          }\r\n          \r\n          this.setState({\r\n            widgetId: widgetId,\r\n            title: widget.title,\r\n            x: widget.x,\r\n            y: widget.y,\r\n            width: widget.width,\r\n            height: widget.height,\r\n            sqlQuery: widget.sqlQuery,\r\n            type: type,\r\n            jdbcDataSourceId: widget.jdbcDataSourceId,\r\n            style: widget.style\r\n          }, () => {\r\n            this.runQuery();\r\n          });\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  onStyleValueChange = (name, value) => {\r\n    const style = {...this.state.style};\r\n    style[[name]] = value;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n\r\n  save = () => {\r\n    const {\r\n      widgetId,\r\n      title,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      type,\r\n      style\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      title: title,\r\n      dashboardId: this.props.dashboardId,\r\n      type: type,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      style: style\r\n    }\r\n\r\n    if (type === Constants.CHART) {\r\n      const {\r\n        chartType,\r\n        drillThrough\r\n      } = this.state;\r\n      widget.drillThrough = drillThrough;\r\n      widget.chartType = chartType;\r\n\r\n      if (chartType === Constants.TABLE) {\r\n\r\n      } else if (chartType === Constants.PIE) {\r\n        const {\r\n          pieKey,\r\n          pieValue\r\n        } = this.state;\r\n        widget.data = {\r\n          pieKey: pieKey,\r\n          pieValue: pieValue\r\n        }\r\n      }\r\n    } else if (type === Constants.FILTER) {\r\n      const  {\r\n        filterType,\r\n        queryParameter\r\n      } = this.state;\r\n      widget.filterType = filterType;\r\n      widget.data = {\r\n        queryParameter: queryParameter\r\n      }\r\n      if (filterType === Constants.SLICER) {\r\n\r\n      } else if (filterType === Constants.SINGLE_VALUE) {\r\n\r\n      }\r\n    }\r\n    \r\n\r\n    if (widgetId === null) {\r\n      widget.style = {\r\n        showBorder: false,\r\n        borderColor: 'rgba(9, 30, 66, 1)',\r\n        showTitle: true,\r\n        titleFontColor: 'rgba(9, 30, 66, 1)',\r\n        titleBackgroundColor: 'rgba(255, 255, 255, 1)',\r\n        contentBackgroundColor: 'rgba(255, 255, 255, 1)',\r\n        zIndex: 50\r\n      }\r\n\r\n      widget.x = 0;\r\n      widget.y = 0;\r\n      widget.width = 200 * 100;\r\n      widget.height = 200;\r\n\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          const widgetId = res.data;\r\n          this.props.onSave(widgetId);\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave(widgetId);\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          queryResult: result\r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = () => {\r\n    const { \r\n      drillThrough,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const index = drillThrough.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrillThrough = [...drillThrough];\r\n      newDrillThrough.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drillThrough: newDrillThrough\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill) => {\r\n    const { drillThrough } = this.state;\r\n    const index = drillThrough.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrillThrough = [...drillThrough];\r\n      newDrillThrough.splice(index, 1);\r\n      this.setState({\r\n        drillThrough: newDrillThrough\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = () => {\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        pieKey, \r\n        pieValue, \r\n        queryResult = {}\r\n      } = this.state;\r\n      const data = Util.jsonToArray(queryResult.data);\r\n      const chartOption = EchartsApi.getPieOption(data, pieKey, pieValue);\r\n      this.setState({\r\n        chartOption: chartOption\r\n      });\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      queryResult = {},\r\n    } = this.state;\r\n    const columns = queryResult.columns || [];\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        chartOption,\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n\r\n      chartPreview = (\r\n        <div>\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label>Aggr Key (string)</label>\r\n          <Select\r\n            name={'pieKey'}\r\n            value={pieKey}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n          />\r\n\r\n\r\n          <label>By Aggr Value (number)</label>\r\n          <Select\r\n            name={'pieValue'}\r\n            value={pieValue}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n          />\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      type,\r\n      queryResult,\r\n      jdbcDataSources = [],\r\n      drillThrough = [],\r\n      drillDashboards = []\r\n    } = this.state;\r\n\r\n    const data = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    const drillItems = drillThrough.map(drill =>\r\n      <div key={drill.columnName} className=\"row table-row\">\r\n        <div className=\"float-left ellipsis\">Column: {drill.columnName}, Dashboard: {drill.dashboardId}</div>\r\n        <button className=\"button table-row-button float-right\"onClick={() => this.removeDrillThrough(drill)}>\r\n          <FontAwesomeIcon icon=\"trash-alt\" />\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    const columnItems = columns.map(col =>\r\n      <div className=\"table-row row\" key={col.name}>\r\n        <div className=\"float-left\">{col.name}</div>\r\n        <div className=\"float-right\">{col.dataType}</div>\r\n      </div>\r\n    );\r\n\r\n    const showQueryTab = type === Constants.CHART || (type === Constants.FILTER && this.state.filterType === Constants.SLICER);\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        <div className=\"row mt-10\">\r\n          <div className=\"float-left\">Type:</div>\r\n          <div className=\"float-left\">\r\n            <Select\r\n              name={'type'}\r\n              value={type}\r\n              onChange={this.handleOptionChange}\r\n              options={Constants.WIDGET_TYPES}\r\n              preloadOneEmpty={false}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mt-10\">\r\n          <Tabs activeTab=\"Basic\">\r\n            <div title=\"Basic\">\r\n              <div className=\"form-panel\">\r\n                <label>Title</label>\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"title\" \r\n                  value={this.state.title}\r\n                  onChange={this.handleInputChange} \r\n                />\r\n                <hr/>\r\n\r\n                <label>Z Index</label>\r\n                <input \r\n                  type=\"number\" \r\n                  name=\"zIndex\" \r\n                  value={this.state.style.zIndex}\r\n                  onChange={(event) => this.onStyleValueChange('zIndex', event.target.value)} \r\n                />\r\n                <hr/>\r\n\r\n                <Checkbox name=\"showBorder\" value=\"Show border\" checked={this.state.style.showBorder} onChange={this.onStyleValueChange} />\r\n                { this.state.style.showBorder && (\r\n                  <div>\r\n                    Border Color\r\n                    <ColorPicker name={'borderColor'} value={this.state.style.borderColor} onChange={this.onStyleValueChange} />\r\n                  </div>\r\n                )}\r\n                <hr/>\r\n\r\n                <Checkbox name=\"showTitle\" value=\"Show title\" checked={this.state.style.showTitle} onChange={this.onStyleValueChange} />\r\n                { this.state.style.showTitle && (\r\n                  <React.Fragment>\r\n                    <div>\r\n                      Title Font Color\r\n                      <ColorPicker name={'titleFontColor'} value={this.state.style.titleFontColor} onChange={this.onStyleValueChange} />\r\n                    </div>\r\n\r\n                    <div>\r\n                      Title Background Color\r\n                      <ColorPicker name={'titleBackgroundColor'} value={this.state.style.titleBackgroundColor} onChange={this.onStyleValueChange} />\r\n                    </div>\r\n                  </React.Fragment>\r\n                )}\r\n                <hr/>\r\n\r\n                <div>\r\n                  Content Background Color\r\n                  <ColorPicker name={'contentBackgroundColor'} value={this.state.style.contentBackgroundColor} onChange={this.onStyleValueChange} />\r\n                </div>\r\n\r\n                \r\n              </div>\r\n            </div>\r\n\r\n            { type === Constants.FILTER && (  \r\n              <div title=\"Filter\">\r\n                <div className=\"form-panel\">\r\n                  <label>Filter Options</label>\r\n                  <Select\r\n                    name={'filterType'}\r\n                    value={this.state.filterType}\r\n                    onChange={this.handleOptionChange}\r\n                    options={Constants.FILTER_TYPES}\r\n                    preloadOneEmpty={false}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { showQueryTab && (\r\n              <div title=\"Query\">\r\n                <div className=\"form-panel\">\r\n                  <label>DataSource</label>\r\n                  <Select\r\n                    name={'jdbcDataSourceId'}\r\n                    value={this.state.jdbcDataSourceId}\r\n                    onChange={this.handleIntegerOptionChange}\r\n                    options={jdbcDataSources}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'id'}\r\n                    />\r\n                \r\n                  <label>SQL Query</label>\r\n                  <AceEditor\r\n                    value={this.state.sqlQuery}\r\n                    mode=\"mysql\"\r\n                    theme=\"xcode\"\r\n                    name=\"blah2\"\r\n                    onChange={this.handleAceEditorChange}\r\n                    height={'300px'}\r\n                    width={'100%'}\r\n                    fontSize={15}\r\n                    showPrintMargin={false}\r\n                    showGutter={true}\r\n                    highlightActiveLine={true}\r\n                    setOptions={{\r\n                      showLineNumbers: true,\r\n                      tabSize: 2\r\n                    }}\r\n                  />\r\n\r\n                  <div style={{margin: '5px 0px 5px 0px'}}>\r\n                    <button className=\"button\" onClick={this.runQuery}>Run Query</button>\r\n                  </div>\r\n\r\n                  <label>Result</label>\r\n                  <TableWidget\r\n                    data={data}\r\n                    columns={columns}\r\n                    error={error}\r\n                  />\r\n\r\n                  <label style={{marginTop: '5px'}}>Columns Mapping</label>\r\n                  <div>\r\n                    {columnItems}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { type === Constants.CHART && (\r\n              <div title=\"Chart\">\r\n                <div className=\"form-panel\">\r\n                  <label>Chart Type</label>\r\n                  <Select\r\n                    name={'chartType'}\r\n                    value={this.state.chartType}\r\n                    onChange={this.handleOptionChange}\r\n                    options={Constants.CHART_TYPES}\r\n                    preloadOneEmpty={false}\r\n                  />\r\n                  <label>Preview</label>\r\n                  {this.renderChartPreview()} \r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            { type === Constants.CHART && (\r\n              <div title=\"Drill Through\">\r\n                <div className=\"form-panel\">\r\n                  <label>Column</label>\r\n                  <Select\r\n                    name={'drillColumnName'}\r\n                    value={this.state.drillColumnName}\r\n                    options={columns}\r\n                    onChange={this.handleOptionChange}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'name'}\r\n                  />\r\n\r\n                  <label>Dashboard</label>\r\n                  <Select\r\n                    name={'drillDashboardId'}\r\n                    value={this.state.drillDashboardId}\r\n                    options={drillDashboards}\r\n                    onChange={this.handleIntegerOptionChange}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'id'}\r\n                  />\r\n                  <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\r\n                  <div class=\"mt-3\">\r\n                    {drillItems}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { type === Constants.FILTER && (\r\n              <div title=\"Query parameter\">\r\n                <div className=\"form-panel\">\r\n                  <label>Parameter</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    name=\"queryParameter\" \r\n                    value={this.state.queryParameter}\r\n                    onChange={this.handleInputChange} \r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\n\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport * as Util from '../api/Util';\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      showControl: true,\r\n      objectToDelete: {},\r\n      isEditMode: false,\r\n      isFullScreenView: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      refreshInterval: 15,\r\n      lastRefreshLabelTimerId: '',\r\n      jdbcDataSourceOptions: [],\r\n      fromDashboard: '',\r\n      dashboardId: 0,\r\n      name: '',\r\n      style: {},\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    if (id === undefined) {\r\n      // If the drill through is triggered from the full-dashboard page already, this component is remounted but not FullScreenView.\r\n      const dashboardName = this.props.match.params.name;\r\n      if (dashboardName !== undefined) {\r\n        this.loadViewByDashboardName();\r\n        return;\r\n      }\r\n    }\r\n    const dashboardId = id !== undefined ? id : null;\r\n\r\n    console.log('DashboardEditView - componentDidMount', dashboardId);\r\n\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    const fromDashboard = params.get('$fromDashboard');\r\n\r\n    for(let pair of params.entries()) {\r\n      console.log(pair[0]+ ', '+ pair[1]); \r\n    } \r\n\r\n    const widgetViewWidth = this.getPageWidth();\r\n    this.setState({\r\n      widgetViewWidth: widgetViewWidth,\r\n      fromDashboard: fromDashboard\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const dashboard = res.data;\r\n            this.setState({\r\n              dashboardId: dashboard.id,\r\n              name: dashboard.name,\r\n              style: dashboard.style\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n\r\n    const lastRefreshLabelTimerId = setInterval(() => {\r\n      this.updateReadableLastRefreshed();\r\n    }, 5000);\r\n    this.setState({\r\n      lastRefreshLabelTimerId: lastRefreshLabelTimerId\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { \r\n      autoRefreshTimerId,\r\n      lastRefreshLabelTimerId\r\n    } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n    if (lastRefreshLabelTimerId) {\r\n      clearInterval(lastRefreshLabelTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = () => {\r\n    const dashboardName = this.props.match.params.name;\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n\r\n    let showControl = params.get('$showControl');\r\n    showControl = showControl == null ? true : (showControl ? true: false);\r\n    const fromDashboard = params.get('$fromDashboard');\r\n\r\n    const widgetViewWidth = this.getPageWidth();\r\n\r\n    this.setState({\r\n      isFullScreenView: true,\r\n      name: dashboardName,\r\n      widgetViewWidth: widgetViewWidth,\r\n      fromDashboard: fromDashboard,\r\n      showControl: showControl\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            style: result.style\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth - 40;\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const { refreshInterval } = this.state;\r\n      let interval = parseInt(refreshInterval, 10) || 15;\r\n      interval = interval < 1 ? 1 : interval;\r\n      const timerId = setInterval(() => {\r\n        this.applyFilters();\r\n      }, interval * 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    this.refreshWidgetView();\r\n    this.updateLastRefreshed();\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n  }\r\n\r\n  updateLastRefreshed = () => {\r\n    const now = new Date();\r\n    this.setState({\r\n      lastRefreshed: now\r\n    }, () => {\r\n      this.updateReadableLastRefreshed();\r\n    });\r\n  }\r\n\r\n  updateReadableLastRefreshed = () => {\r\n    const { lastRefreshed } = this.state;\r\n    if (lastRefreshed instanceof Date) {\r\n      const readableLastRefreshed = Util.getReadableDiffTime(lastRefreshed, new Date());\r\n      this.setState({\r\n        readableLastRefreshed: readableLastRefreshed\r\n      })\r\n    }\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      style\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      style: style\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.props.onDashboardSave(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  onWidgetSave = (widgetId) => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    this.widgetViewPanel.current.handleSavedWidget(widgetId);\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    this.widgetEditPanel.current.fetchWidget(widgetId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = () => {\r\n    this.widgetViewPanel.current.queryCharts();\r\n    this.updateLastRefreshed();\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/workspace/dashboard/full/${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onStyleValueChange = (name, value) => {\r\n    const style = {...this.state.style};\r\n    style[[name]] = value;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  onWidgetContentClick = (widgetClickEvent) => {\r\n    const {\r\n      name,\r\n      isFullScreenView\r\n    } = this.state;\r\n\r\n    const {\r\n      type,\r\n      data\r\n    } = widgetClickEvent;\r\n\r\n    if (type === 'tableTdClick') {\r\n      const {\r\n        dashboardId,\r\n        columnName,\r\n        columnValue\r\n      } = data;\r\n\r\n      if (isFullScreenView) {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const dashboard = res.data;\r\n            const nextDashboard = dashboard.name;\r\n            const nextLink = `/workspace/dashboard/full/${nextDashboard}?$fromDashboard=${name}&${columnName}=${columnValue}`;\r\n            this.props.history.push(nextLink);\r\n          });\r\n      } else {\r\n        const nextLink = `/workspace/dashboard/${dashboardId}?$fromDashboard=${name}&${columnName}=${columnValue}`;\r\n        this.props.history.push(nextLink);\r\n      }\r\n    }\r\n  }\r\n\r\n  goBackToFromDashboard = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {},\r\n    } = this.state;\r\n    const dashboardId = objectToDelete.id;\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        this.props.onDashboardDelete(dashboardId);\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  deleteDashboard = () => {\r\n    const { \r\n      dashboardId,\r\n      name\r\n    } = this.state;\r\n    const dashboard = {\r\n      id: dashboardId,\r\n      name: name\r\n    }\r\n    this.openConfirmDeletionPanel(dashboard);\r\n  }\r\n\r\n  openConfirmDeletionPanel = (dashboard) => {\r\n    this.setState({\r\n      objectToDelete: dashboard,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      readableLastRefreshed,\r\n      isEditMode,\r\n      isFullScreenView,\r\n      fromDashboard,\r\n      showControl\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel = null;\r\n    const controlButtons = (\r\n      <React.Fragment>\r\n        <div className=\"inline-block\">\r\n          <div className=\"inline-block mr-3\">\r\n            Last refreshed: {readableLastRefreshed}\r\n          </div>\r\n          { autoRefreshStatus === 'OFF' && (\r\n            <input \r\n              type=\"text\" \r\n              name=\"refreshInterval\" \r\n              value={this.state.refreshInterval}\r\n              onChange={this.handleInputChange}\r\n              className=\"inline-block\" \r\n              style={{width: '50px'}}\r\n            />\r\n          )}\r\n        </div>\r\n        <button className=\"button square-button mr-3\" onClick={this.toggleAutoRefresh}>\r\n          {\r\n            autoRefreshStatus === 'ON' ? \r\n            (\r\n              <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\r\n            ) : \r\n            (\r\n              <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\r\n            )\r\n          }\r\n        </button>\r\n        <button className=\"button square-button mr-3\" onClick={this.refresh}>\r\n          <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\r\n        </button>\r\n        <button className=\"button mr-3\" onClick={this.applyFilters}>\r\n          <FontAwesomeIcon icon=\"filter\" size=\"lg\" fixedWidth /> Apply Filters\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n\r\n    if (!isFullScreenView) {\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button mr-3\" onClick={this.cancelEdit}>\r\n               <FontAwesomeIcon icon=\"times\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button mr-3\" onClick={this.save}>\r\n              <FontAwesomeIcon icon=\"save\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button mr-3\" onClick={this.deleteDashboard}>\r\n               <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>\r\n              <FontAwesomeIcon icon=\"calendar-plus\" size=\"lg\" fixedWidth /> New Widget\r\n            </button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            {controlButtons}\r\n            <button className=\"button square-button mr-3\" onClick={this.fullScreen}>\r\n              <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={this.edit}>\r\n              <FontAwesomeIcon icon=\"edit\" size=\"lg\" fixedWidth />\r\n            </button>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      fullScreenButtonPanel = controlButtons;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        { showControl && (\r\n          <div className=\"dashboard-menu-panel row\">\r\n            <div className=\"float-left\">\r\n              {fromDashboard && (\r\n                <div className=\"dashboard-drillthrough-name\" onClick={this.goBackToFromDashboard}>\r\n                  <span className=\"link-label\">{fromDashboard}</span> >\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"float-left\">\r\n              {\r\n                isFullScreenView || !isEditMode ?\r\n                (\r\n                  <div className=\"dashboard-name\">\r\n                    {this.state.name}\r\n                  </div>\r\n                ) :(\r\n                  <input \r\n                    type=\"text\" \r\n                    name=\"name\" \r\n                    value={this.state.name}\r\n                    onChange={this.handleInputChange} \r\n                    className=\"dashboard-name-input\"\r\n                  />\r\n                )\r\n              }\r\n              \r\n            </div>\r\n            <div className=\"float-right\">\r\n              {fullScreenButtonPanel}\r\n              {editButtonPanel}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          isEditMode={this.state.isEditMode}\r\n          showControl={this.state.showControl}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          onStyleValueChange={this.onStyleValueChange}\r\n          onWidgetContentClick={this.onWidgetContentClick}\r\n          {...this.state.style}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'dashboard-edit-widget-dialog'} \r\n          title={'Widget Edit'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onWidgetSave}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {this.state.objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './Dashboard.css';\r\nimport * as Constants from '../api/Constants';\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport SearchInput from '../components/SearchInput';\r\n\r\nconst ROUTE_WORKSPACE_DASHBOARD = '/workspace/dashboard/';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      activeDashboardId: 0,\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    const index = pathname.indexOf(ROUTE_WORKSPACE_DASHBOARD);\r\n    if (index !== -1) {\r\n      const activeDashboardId = Number(pathname.substring(index + ROUTE_WORKSPACE_DASHBOARD.length));\r\n      this.setState({\r\n        activeDashboardId: activeDashboardId\r\n      })\r\n    }\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false,\r\n      name: ''\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      Toast.showError('Enter a name.');\r\n      return;\r\n    }\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      style: {\r\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\r\n        backgroundColor: 'rgba(233, 235, 238, 1)'\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.closeEditPanel();\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      })\r\n      .catch(error => {\r\n        Toast.showError('The name exists. Try another.');\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.setState({\r\n      activeDashboardId: dashboardId\r\n    }, () => {\r\n      this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n    });\r\n  }\r\n\r\n  onDashboardSave = (dashboardId) => {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  onDashboardDelete = (dashboardId) => {\r\n    this.fetchBoards();\r\n    this.setState({\r\n      activeDashboardId: 0\r\n    }, () => {\r\n      this.props.history.push('/workspace/dashboard');\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dashboards = [],\r\n      activeDashboardId,\r\n      searchValue\r\n    } = this.state;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.props;\r\n    const showEdit = sysRole === Constants.SYS_ROLE_VIEWER ? false : true;\r\n\r\n    const dashboardRows = [];\r\n    for (let i = 0; i < dashboards.length; i++) {\r\n      const dashboard = dashboards[i];\r\n      const name = dashboard.name;\r\n      const menuActive = activeDashboardId === dashboard.id ? 'dashboard-menu-item-active' : '';\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        dashboardRows.push(\r\n          (\r\n            <div key={i} className={`dashboard-menu-item ellipsis ${menuActive}`} onClick={() => this.view(dashboard.id)}>\r\n              {name}\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-sidebar\">\r\n          <div style={{margin: '5px'}}>\r\n            { showEdit && (\r\n              <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\r\n                <FontAwesomeIcon icon=\"plus\" /> New\r\n              </button>\r\n            )}\r\n\r\n            <div style={{marginTop: '5px'}}>\r\n              <SearchInput \r\n                name={'searchValue'} \r\n                value={this.state.searchValue} \r\n                onChange={this.handleNameInputChange} \r\n                inputWidth={117}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            {dashboardRows}\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route \r\n            path=\"/workspace/dashboard/:id\" \r\n            render={(props) => \r\n              <DashboardEditView \r\n                key={props.match.params.id} \r\n                onDashboardSave={this.onDashboardSave} \r\n                onDashboardDelete={this.onDashboardDelete} \r\n              />\r\n            } \r\n            />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'small-modal-panel'} \r\n          title={'New'} >\r\n          <div className=\"form-panel\">\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n            />\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport SearchInput from '../components/SearchInput';\r\nimport Toast from '../components/Toast';\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      searchValue: '',\r\n      showUpdatePassword: false,\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: Constants.SYS_ROLE_VIEWER,\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      this.setState({\r\n        id: user.id,\r\n        username: user.username,\r\n        name: user.name,\r\n        tempPassword: '',\r\n        sysRole: user.sysRole,\r\n        userGroups: user.userGroups\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      userGroupId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    if (!username) {\r\n      Toast.showError('Enter a username.');\r\n      return;\r\n    }\r\n\r\n    let selectedSysRole = Constants.SYS_ROLE_VIEWER;\r\n    if (Constants.SYS_ROLE_ADMIN === this.props.sysRole) {\r\n      if (sysRole) {\r\n        selectedSysRole = sysRole;\r\n      } else {\r\n        Toast.showError('Select a role.');\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: selectedSysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      if (showUpdatePassword) {\r\n        if (!tempPassword || tempPassword.length < 8) {\r\n          Toast.showError(`Use 8 or more characters for password.`);\r\n          return;\r\n        }\r\n        user.tempPassword = tempPassword;\r\n      }\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      if (!tempPassword || tempPassword.length < 8) {\r\n        Toast.showError(`Use 8 or more characters for password.`);\r\n        return;\r\n      }\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  addUserGroup = () => {\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId) => {\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/user/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (user) => {\r\n    this.setState({\r\n      objectToDelete: user,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      showUpdatePassword,\r\n      users = [],\r\n      groups = [],\r\n      userGroups = [],\r\n      searchValue,\r\n      showConfirmDeletionPanel,\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.props;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const userItems = [];\r\n    for (let i = 0; i < users.length; i++) {\r\n      const user = users[i];\r\n      const name = user.name;\r\n      const username = user.username;\r\n      if (!searchValue || (searchValue && (username.includes(searchValue) || name.includes(searchValue)))) {\r\n        userItems.push(\r\n          (\r\n            <div key={i} className=\"card float-left\">\r\n              <div className=\"card-header ellipsis\">\r\n                {user.username}\r\n              </div>\r\n              <div className=\"card-content\">\r\n                {user.name}\r\n                <br/>\r\n                {user.sysRole}\r\n              </div>\r\n              <div className=\"card-footer row\">\r\n                <div className=\"float-right\">\r\n                  <button className=\"icon-button card-icon-button\" onClick={() => this.openEditPanel(user)}>\r\n                    <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                  </button>\r\n                  <button className=\"icon-button card-icon-button\" onClick={() => this.openConfirmDeletionPanel(user)}>\r\n                    <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups.length; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups.length; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId} className=\"row table-row\">\r\n                <div className=\"float-left ellipsis \">{groups[j].name}</div>\r\n                <button className=\"button table-row-button float-right\" onClick={() => this.removeUserGroup(groupId)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" />\r\n                </button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"row\">\r\n          <div className=\"float-left\" style={{marginRight: '5px'}}>\r\n            <SearchInput \r\n              name={'searchValue'} \r\n              value={this.state.searchValue} \r\n              onChange={this.handleNameInputChange} \r\n              inputWidth={200}\r\n            />\r\n          </div>\r\n          <button className=\"button float-left\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New\r\n          </button>\r\n        </div>\r\n        <div className=\"row mt-10\">\r\n          {userItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'mid-modal-panel'} \r\n          title={mode} >\r\n\r\n          <div className=\"row\">\r\n            <div className=\"form-panel float-left\" style={{width: '240px'}}>\r\n              <label>Username <span className=\"required\">*</span></label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} \r\n              />\r\n\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} \r\n              />\r\n\r\n              { mode === 'Edit' && (\r\n                  <div style={{margin: '3px 0px 8px 0px'}}>\r\n                    <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n                  </div>\r\n              )}\r\n              { (mode === 'New' || showUpdatePassword) && ( \r\n                <div>\r\n                  <label>Password</label>\r\n                  <input \r\n                    type=\"password\" \r\n                    name=\"tempPassword\" \r\n                    value={this.state.tempPassword}\r\n                    onChange={this.handleInputChange} />\r\n                </div>\r\n              )}\r\n              \r\n              <label>System Role</label>\r\n              { Constants.SYS_ROLE_ADMIN === sysRole && (\r\n                <Select\r\n                  name={'sysRole'}\r\n                  value={this.state.sysRole}\r\n                  onChange={this.handleNameInputChange}\r\n                  options={[Constants.SYS_ROLE_VIEWER, Constants.SYS_ROLE_DEVELOPER]}\r\n                />\r\n              )}\r\n\r\n              { Constants.SYS_ROLE_DEVELOPER === sysRole && (\r\n                <div>{Constants.SYS_ROLE_VIEWER}</div>\r\n              )}\r\n              \r\n            </div>\r\n            <div className=\"form-panel float-right\" style={{width: '240px'}}>\r\n            \r\n              <label>Groups</label>\r\n              <Select\r\n                name={'userGroupId'}\r\n                value={this.state.userGroupId}\r\n                onChange={this.handleIntegerOptionChange}\r\n                options={groups}\r\n                optionDisplay={'name'}\r\n                optionValue={'id'}\r\n              />\r\n              <button className=\"button\" onClick={this.addUserGroup}>Add</button>\r\n              <div className=\"mt-3\">\r\n                {userGroupItems}\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport SearchInput from '../components/SearchInput';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      showEditPanel: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      this.setState({\r\n        id: group.id,\r\n        name: group.name,\r\n        groupDashboards: group.groupDashboards\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      groupDashboardId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } \r\n  }\r\n\r\n  addGroupDashboard= () => {\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    if (groupDashboardId) {\r\n      const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n      if (index === -1) {\r\n        const newGroupDashboards = [...groupDashboards];\r\n        newGroupDashboards.push(groupDashboardId);\r\n        this.setState({\r\n          groupDashboards: newGroupDashboards\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId) => {\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/group/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (group) => {\r\n    this.setState({\r\n      objectToDelete: group,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = [],\r\n      searchValue,\r\n      showConfirmDeletionPanel,\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const groupItems = [];\r\n    for (let i = 0; i < groups.length; i++) {\r\n      const group = groups[i];\r\n      const name = group.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        groupItems.push(\r\n          (\r\n            <div key={i} className=\"card float-left\">\r\n              <div className=\"card-header ellipsis\">\r\n                {name}\r\n              </div>\r\n              <div className=\"card-content\"></div>\r\n              <div className=\"card-footer row\">\r\n                <div className=\"float-right\">\r\n                  <button className=\"icon-button card-icon-button\" onClick={() => this.openEditPanel(group)}>\r\n                    <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                  </button>\r\n                  <button className=\"icon-button card-icon-button\" onClick={() => this.openConfirmDeletionPanel(group)}>\r\n                    <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards.length; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards.length; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId} className=\"row table-row\">\r\n                <div className=\"float-left ellipsis\">{dashboards[j].name}</div>\r\n                <button className=\"button table-row-button float-right\" onClick={() => this.removeGroupDashboard(dashboardId)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" />\r\n                </button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"row\">\r\n          <div className=\"float-left\" style={{marginRight: '5px'}}>\r\n            <SearchInput \r\n              name={'searchValue'} \r\n              value={this.state.searchValue} \r\n              onChange={this.handleNameInputChange} \r\n              inputWidth={200}\r\n            />\r\n          </div>\r\n          <button className=\"button float-left\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New\r\n          </button>\r\n        </div>\r\n        <div className=\"row mt-10\">\r\n          {groupItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'mid-modal-panel'} \r\n          title={mode} >\r\n          <div className=\"row\">\r\n            <div className=\"form-panel float-left\" style={{width: '240px'}}>\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n            </div>\r\n            \r\n            <div className=\"form-panel float-right\" style={{width: '240px'}}>\r\n              <label>Dashboards</label>\r\n              <Select\r\n                name={'groupDashboardId'}\r\n                value={this.state.groupDashboardId}\r\n                onChange={this.handleIntegerOptionChange}\r\n                options={dashboards}\r\n                optionDisplay={'name'}\r\n                optionValue={'id'}\r\n              />\r\n              <button className=\"button\" onClick={this.addGroupDashboard}>Add</button>\r\n              <div className=\"mt-3\">\r\n                {groupDashboardItems}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\n\r\nimport User from './User';\r\nimport Group from './Group';\r\nimport Tabs from '../components/Tabs';\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-page-content\">\r\n        <Tabs activeTab=\"Group\">\r\n          <div title=\"Group\">\r\n            <Group />\r\n          </div>\r\n          <div title=\"User\">\r\n            <User {...this.props} />\r\n          </div>\r\n        </Tabs>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Toast from '../components/Toast';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const user = res.data;\r\n        this.setState({\r\n          id: user.id,\r\n          username: user.username,\r\n          name: user.name,\r\n          sysRole: user.sysRole,\r\n          apiKey: user.apiKey\r\n        });\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n    axios.get('/auth/generate-apikey')\r\n      .then(res => {\r\n        const apiKey = res.data;\r\n        this.setState({\r\n          apiKey: apiKey\r\n        });\r\n      });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        Toast.showError(`Those passwords didn't match.`);\r\n        return;\r\n      }  \r\n\r\n      if (password.length < 8) {\r\n        Toast.showError(`Use 8 or more characters for password.`);\r\n        return;\r\n      }\r\n\r\n      user.password = password;\r\n    }\r\n\r\n    axios.put('/ws/user/account', user)\r\n      .then(res => {\r\n        Toast.showSuccess('Saved.');\r\n      });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"full-page-content\">\r\n        <div className=\"form-panel\" style={{width: '500px'}}>   \r\n          <label>Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\"   \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label>System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label>API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button className=\"button mt-10\" onClick={this.generateApiKey}>Generate new API Key</button>\r\n          <br/>\r\n\r\n          <button className=\"button mt-3\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n          {\r\n            showUpdatePassword && (\r\n              <React.Fragment>\r\n                <br/>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label>Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n          )}\r\n\r\n          <br/>\r\n          <button className=\"button mt-10\" onClick={this.save}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","\r\nimport React from 'react';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('DashboardFullScreenView', 'componentDidMount');\r\n  }\r\n\r\n  render() {\r\n    const pathname = this.props.location.pathname;\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView key={pathname} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","import React from 'react';\r\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\n\r\nimport Toast from '../components/Toast';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport './Workspace.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data Source',\r\n    icon: 'database'\r\n  }, \r\n  {\r\n    link: '/workspace/usermanagement',\r\n    value: 'User Management',\r\n    icon: 'users-cog'\r\n  }\r\n];\r\n\r\nconst ACCOUNT_MENU_LINK = '/workspace/account';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    let link;\r\n    if (pathname.startsWith(ACCOUNT_MENU_LINK)) {\r\n      link = ACCOUNT_MENU_LINK;\r\n    } else {\r\n      const menuItem = MENU_ITEMS.find(m => pathname.startsWith(m.link));\r\n      link = menuItem.link;\r\n    }\r\n\r\n    this.setState({\r\n      currentMenuLink: link,\r\n    });\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  logout = () => {\r\n    axios.get('/auth/logout')\r\n      .then(res => {\r\n        this.props.onLogout();\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n    } = this.state;\r\n    \r\n    const {\r\n      username,\r\n      sysRole\r\n    } = this.props;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.link === '/workspace/dashboard');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li key={menu.link} className={active}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"workspace-nav\">  \r\n          <div className=\"workspace-name\">Poli</div>\r\n          <ul className=\"workspace-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div className=\"workspace-account-menu\">\r\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\r\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\r\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\r\n                <span className=\"workspace-nav-menu-text\">{username}</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"workspace-logout-button inline-block\" onClick={this.logout}>\r\n              <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"workspace-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n            <Route exact path=\"/workspace/dashboard/full/:name\" component={DashboardFullScreenView} />\r\n            <Route exact path=\"/workspace/usermanagement\" render={() => <UserManagement {...this.props} />} />\r\n            <Route path=\"/workspace/dashboard\" render={() => <Dashboard {...this.props} />} />\r\n          </Switch>\r\n        </div>\r\n        <Toast />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Workspace);\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch, faSearch, faSave, \r\n  faCalendarPlus, faFilter, faExternalLinkAlt\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport ChangeTempPassword from './views/ChangeTempPassword';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\n\r\n\r\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch, faSearch, faSave, \r\n  faCalendarPlus, faFilter, faExternalLinkAlt\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      sysRole: '',\r\n      isAuthorizing: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.interceptors.response.use((response) => {\r\n        return response;\r\n      }, (error) => {\r\n        if(error.response.status === 401) { \r\n          this.onLogout();\r\n        }\r\n        return Promise.reject(error);\r\n    });\r\n\r\n    const pathname = this.props.location.pathname;\r\n    const search = this.props.location.search;\r\n\r\n    const params = new URLSearchParams(search);\r\n    const apiKey = params.get('$apiKey');\r\n\r\n    let currentPath = pathname + search;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      this.setState({\r\n        isAuthorizing: true\r\n      }, () => {\r\n        axios.post('/auth/login/cookie')\r\n          .then(res => {\r\n            const loginResponse = res.data;\r\n            if (loginResponse.error) {\r\n                this.setState({\r\n                  sysRole: '',\r\n                  isAuthorizing: false\r\n                }, () => {\r\n                  this.props.history.push('/login');\r\n                });\r\n              } else {\r\n                this.onLoginSuccess(loginResponse, currentPath);\r\n              }\r\n          });\r\n      });\r\n    }\r\n  }\r\n\r\n  onLoginSuccess = (loginResponse = {}, pathname = null) => {\r\n    if (loginResponse.isTempPassword) {\r\n      this.props.history.push('/changepassword');\r\n    } else {\r\n      this.setState({\r\n        username: loginResponse.username,\r\n        sysRole: loginResponse.sysRole,\r\n        isAuthorizing: false\r\n      }, () => {\r\n        let directUrl = '/workspace/dashboard';\r\n        if (pathname) {\r\n          directUrl = pathname;\r\n        }\r\n        this.props.history.push(directUrl);\r\n      });\r\n    }\r\n  }\r\n\r\n  onLogout = () => {\r\n    this.setState({\r\n      username: '',\r\n      sysRole: '',\r\n      isAuthorizing: false\r\n    }, () => {\r\n      this.props.history.push('/login');\r\n    });\r\n  }\r\n   \r\n  render() {\r\n    const {\r\n      username,\r\n      sysRole,\r\n      isAuthorizing\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (isAuthorizing) {\r\n      return (\r\n        <div className=\"authenticating-panel\">\r\n          <div className=\"authenticating-panel-title\">Poli</div>\r\n          <FontAwesomeIcon icon=\"circle-notch\" spin={true} size=\"2x\" />\r\n        </div>\r\n      )\r\n    }\r\n    \r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Login sysRole={sysRole} onLoginSuccess={this.onLoginSuccess} />} />\r\n          <Route path=\"/login\" render={() => <Login sysRole={sysRole} onLoginSuccess={this.onLoginSuccess} />} />\r\n          <Route path=\"/changepassword\" component={ChangeTempPassword} />\r\n          <PrivateRoute \r\n            authenticated={isAuthenticated} \r\n            path='/workspace' \r\n            component={Workspace} \r\n            username={username}\r\n            sysRole={sysRole} \r\n            onLogout={this.onLogout}\r\n          />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} {...rest} />\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}