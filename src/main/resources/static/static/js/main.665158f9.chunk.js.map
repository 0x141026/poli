{"version":3,"sources":["api/AuthStore.js","views/Login.js","api/WebApi.js","components/Modal.js","components/Toast.js","views/DataSource.js","components/Checkbox.js","components/Slicer.js","api/Util.js","components/NumberRange.js","api/Constants.js","components/FilterViewPanel.js","components/ColorPicker.js","components/GridDraggable.js","components/GridResizable.js","api/EchartsApi.js","components/TableWidget.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/Tabs.js","components/Select.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/DashboardFullScreenView.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["api_AuthStore","AuthStore","Object","classCallCheck","this","_sysRole","_username","sysRole","username","Login","props","_this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","tryLogin","axios","post","then","res","data","login","preventDefault","_this$state","state","password","user","history","push","errorMsg","react_default","a","createElement","Fragment","className","type","onChange","onClick","React","Component","withRouter","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","concat","onClose","index_es","icon","size","Toast","message","showToast","setTimeout","hide","_toastRef","assertThisInitialized","toastStatus","DataSource","save","showUpdatePassword","id","connectionUrl","driverClassName","ping","ds","put","closeEditPanel","catch","error","console","log","result","clearEditPanel","initialState","openEditPanel","showEditPanel","confirmDelete","_this$state$objectToD","objectToDelete","delete","closeConfirmDeletionPanel","openConfirmDeletionPanel","datasource","showConfirmDeletionPanel","toggleUpdatePassword","prevState","clearSearch","searchValue","jdbcDataSources","webApi","_this2","_this$state2","_this$state2$jdbcData","_this$state2$objectTo","mode","jdbcDataSourceItems","_loop","i","includes","key","length","placeholder","style","width","src_components_Modal","rows","margin","Checkbox","toggle","checked","_this$props2","checkmarkBoxStyle","backgroundColor","Slicer","isSelectAll","toggleSelectAll","newIsSelectAll","newCheckBoxes","toConsumableArray","checkBoxes","isChecked","filterId","handleSearchValueChange","indexOf","handleCheckBoxChange","index","findIndex","x","_this$props$checkBoxe","checkBoxItems","map","box","src_components_Checkbox","jsonToArray","json","array","JSON","parse","e","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","DEFAULT_FILTER_VIEW_WIDTH","DEFAULT_DASHBOARD_HEIGHT","FilterViewPanel","fetchFilters","dashboardId","filters","queryFilters","filter","Constants","queryRequest","queryResult","queryResultData","Util","f","newFilters","_arr","values","_i2","val","_arr2","_i3","renderFilterPanel","filterPanel","filterComponent","src_components_Slicer","onSlicerChange","onSingleValueChange","isEditMode","edit","fixedWidth","onEdit","applyFilters","_this$state$filters","filterParams","filterParam","_filter$checkBoxes","paramValues","j","checkBox","remark","param","onApplyFilters","splice","ColorPicker","handleClick","showPalette","handleClose","handleChange","color","rgb","rgba","r","g","b","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","WIDGET_BORDER","GridDraggable","onMouseDown","gridItemNode","ReactDOM","findDOMNode","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","CHART_COLORS","getPieOption","pieKey","pieValue","legend","series","row","tooltip","orient","center","radius","getPieOptionTemplate","TableWidget","_this$props$data","_this$props$columns","columns","_this$props$drillThro","drillThrough","columnHeaders","forEach","column","columnName","header","Header","accessor","d","Cell","href","es","defaultPageSize","previousText","nextText","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","instance","handleOriginal","drills","widgetDrillThrough","onChartClick","echarts","onChartLegendselectchanged","echart","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","_this$props$queryResu","widgetItem","src_components_TableWidget","chartOption","EchartsApi","echarts_for_react_lib_default","option","onEvents","_this$props2$style","_style$showBorder","showBorder","borderStyle","styles","border","marginRight","components_GridDraggable","components_GridResizable","GridLayout","_this$props$widgets","widgets","showGridlines","backgroundSize","backgroundImage","boxItems","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","isResizeToBase","preGridWidth","gridWidth","newWidgets","resizeWidgetsToBase","resizeWidgetsToActual","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryWidgets","params","w","handleHeightChange","onHeightChange","onBackgroundColorChange","saveWidgets","stringify","widgetViewWidth","components_ColorPicker","src_components_GridLayout","Tabs","handleTabClick","activeTab","_this$props$children","tabHeaders","tabContent","active","Select","handleOptionChange","_this$props$options","options","optionValue","optionDisplay","optionList","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","_result$data","sqlQuery","jdbcDataSourceId","runQuery","_x","_x2","objectSpread","handleAceEditorChange","newValue","handleIntegerOptionChange","intValue","onSave","addDrillThrough","_this$state3","drillColumnName","drillDashboardId","newDrills","removeDrillThrough","drill","generateChart","_this$state4","_this$state4$queryRes","renderChartPreview","_this$state5","_this$state5$queryRes","chartPreview","_this$state6","class","components_Select","_this$state7","_this$state7$jdbcData","_this$state7$drillDas","drillItems","columnItems","col","dataType","src_components_Tabs","react_ace_lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","FilterEditPanel","fetchFilter","useQuery","_this$state2$queryRes","requireSql","DashboardEditView","loadViewByDashboardName","url","location","search","URLSearchParams","dashboardName","showFilterViewPanel","pageWidth","getPageWidth","isReadOnly","refresh","toggleAutoRefresh","autoRefreshTimerId","clearInterval","refreshInterval","interval","timerId","setInterval","filterViewPanel","current","updateLastRefreshed","refreshWidgetView","refreshFilterView","widgetViewPanel","now","Date","toTimeString","replace","lastRefreshed","dashboard","onDashboardSave","cancelEdit","onSaveWidget","showWidgetEditPanel","onSaveFilter","showFilterEditPanel","toggleFilterViewPanel","resizePageLayout","openFilterEditPanel","filterEditPanel","openWidgetEditPanel","widgetEditPanel","fullScreen","window","open","onTableCellClick","onDashboardDelete","deleteDashboard","jdbcDataSourceOptions","createRef","match","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","editButtonPanel","_this3","autoRefreshStatus","fullScreenButtonPanel","controlButtons","components_WidgetViewPanel","ref","src_components_FilterViewPanel","src_components_WidgetEditPanel","src_components_FilterEditPanel","Dashboard","fetchBoards","view","activeDashboardId","_this$state$dashboard","dashboardRows","menuActive","Route","path","render","views_DashboardEditView","DashboardFullScreenView","dashboardEditView","wrappedComponentRef","comp","SYS_ROLES","User","fetchUsers","users","fetchGroups","groups","tempPassword","userGroups","initialEditPanelState","addUserGroup","userGroupId","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_this$state3$users","_this$state3$groups","_this$state3$userGrou","userItems","groupOptions","group","sysRoleOptions","groupName","userGroupItems","Group","fetchDashboards","groupDashboards","addGroupDashboard","groupDashboardId","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","dashboardOptions","dash","groupItems","groupDashboardItems","MENU_ITEMS","link","UserManagement","handleMenuClick","menuLink","currentMenuLink","menuItems","menu","Link","to","Switch","component","Account","fetchUser","generateApiKey","confirmedPassword","alert","apiKey","Workspace","pathname","isAuthenticated","menuList","m","isAccountMenuActive","exact","src_components_Toast","PageNotFound","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","App","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.665158f9.chunk.js","sourcesContent":["\r\nclass AuthStore {\r\n\r\n  constructor() {\r\n    this._sysRole = '';\r\n    this._username = '';\r\n  }\r\n\r\n  set sysRole(sysRole) {\r\n    this._sysRole = sysRole;\r\n  }\r\n\r\n  get sysRole() {\r\n    return this._sysRole;\r\n  }\r\n\r\n  set username(username) {\r\n    this._username = username;\r\n  }\r\n\r\n  get username() {\r\n    return this._username;\r\n  }\r\n\r\n  get isAuthenticated() {\r\n    return true; // this._sysRole !== '';\r\n  }\r\n}\r\n\r\nexport default new AuthStore();","\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AuthStore from '../api/AuthStore';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tryLogin();\r\n  }\r\n\r\n  tryLogin = () => {\r\n    axios.post('/auth/login/cookie')\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  login = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password'\r\n      });\r\n      return;\r\n    }\r\n\r\n    AuthStore.username = 'testuser';\r\n    AuthStore.sysRole = 'developer';\r\n    this.props.history.push('/workspace/dashboard');\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div className=\"login-app-title\">Poli</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n              <label className=\"form-label\">Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} />\r\n            </div>\r\n            <button className=\"button login-button\" onClick={this.login}>Login</button>\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      modalClass = '',\r\n      title,\r\n      children\r\n    } = this.props;\r\n\r\n    const modalStatus = show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={`modal-panel ${modalClass}`}>\r\n          <div className=\"model-header row\">\r\n            <div className=\"model-title\">{title}</div>\r\n            <button className=\"model-close-button icon-button\" onClick={() => this.props.onClose()}>\r\n              <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          <div className='modal-body'>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Toast.css';\r\n\r\nclass Toast extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showToast: false,\r\n      message: ''\r\n    };\r\n\r\n    Toast._toastRef = this;\r\n  }\r\n\r\n  show = (message) => {\r\n    this.setState({ \r\n      showToast: true,\r\n      message: message\r\n    }, () => {\r\n      setTimeout(() => {\r\n        this.hide();\r\n      }, 3500);\r\n    });\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({ \r\n      showToast: false,\r\n      message: ''\r\n    });\r\n  }\r\n\r\n  static show = (message) => {\r\n    Toast._toastRef.show(message);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showToast,\r\n      message\r\n    } = this.state;\r\n\r\n    const toastStatus = showToast ? 'display-block' : 'display-none';\r\n\r\n    return (\r\n      <div className={`toast-container ${toastStatus}`}>\r\n        <button onClick={this.hide}>X</button>\r\n        <div>\r\n          {message}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toast;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport './Datasource.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      showUpdatePassword: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataSources();\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      driverClassName,\r\n      username,\r\n      password,\r\n      name,\r\n      ping,\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      driverClassName: driverClassName,\r\n      username: username,\r\n      name: name,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      // New\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } \r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        Toast.show(result);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        driverClassName: ds.driverClassName,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/jdbcdatasource/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (datasource) => {\r\n    this.setState({\r\n      objectToDelete: datasource,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  clearSearch = () => {\r\n    this.setState({\r\n      searchValue: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      showConfirmDeletionPanel,\r\n      searchValue,\r\n      id,\r\n      jdbcDataSources = [],\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const jdbcDataSourceItems = [];\r\n    for (let i = 0; i < jdbcDataSources.length; i++) {\r\n      const ds = jdbcDataSources[i];\r\n      const name = ds.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        jdbcDataSourceItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {name}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.ping(ds.id)}>\r\n                  <FontAwesomeIcon icon=\"plug\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"searchValue\"\r\n          value={this.state.searchValue}\r\n          onChange={this.handleInputChange}\r\n          placeholder=\"Search...\"\r\n          style={{width: '200px'}}\r\n          />\r\n        <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n        <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n          <FontAwesomeIcon icon=\"plus\" /> New datasource\r\n        </button>\r\n        <div className=\"table-panel\">\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={mode} >\r\n\r\n          <div>\r\n            <label className=\"form-label\">Name <span className=\"required\">*</span></label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label className=\"form-label\">Connection Url</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label className=\"form-label\">Driver class name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"driverClassName\" \r\n              value={this.state.driverClassName}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label className=\"form-label\">Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            { mode === 'Edit' ? \r\n              (\r\n                <div style={{margin: '3px 0px 8px 0px'}}>\r\n                  <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n                </div>\r\n              ) : null\r\n            }\r\n            { mode === 'New' || showUpdatePassword ? \r\n              (\r\n                <div>\r\n                  <label className=\"form-label\">Password</label>\r\n                  <input \r\n                    type=\"password\" \r\n                    name=\"password\" \r\n                    value={this.state.password}\r\n                    onChange={this.handleInputChange} />\r\n                </div>\r\n              ) : null\r\n            }\r\n\r\n            <label className=\"form-label\" className=\"mt-3\">Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} />\r\n            <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    const {\r\n      name,\r\n      checked\r\n    } = this.props;\r\n\r\n    this.props.onChange(name, !checked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      checked\r\n    } = this.props;\r\n\r\n    const checkmarkBoxBgColor = checked ? '#000000' : '#FFFFFF';\r\n    const checkmarkBoxStyle = {\r\n      backgroundColor: checkmarkBoxBgColor\r\n    };\r\n\r\n    return (\r\n      <div className=\"checkbox-container\" onClick={this.toggle}>\r\n        <div className=\"checkbox-checkmark\">\r\n          <div className=\"checkbox-checkmark-box\" style={checkmarkBoxStyle}>\r\n          </div>\r\n        </div>\r\n        <div className=\"checkbox-label\">{value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport Checkbox from './Checkbox';\r\nimport './Slicer.css';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n    searchValue: ''\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    if (searchValue) {\r\n      const result = [];\r\n      const { checkBoxes } = this.props;\r\n      for (let i = 0; i < checkBoxes.length; i++) {\r\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\r\n          result.push(checkBoxes[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n\r\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      checkBoxes = []\r\n    } = this.props;\r\n    const checkBoxItems = checkBoxes.map((box, index) => \r\n      <Checkbox \r\n        key={index} \r\n        name={box.value} \r\n        value={box.value} \r\n        checked={box.isChecked} \r\n        onChange={this.handleCheckBoxChange} \r\n      />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.toggleSelectAll}>Select All {this.state.isSelectAll}</button>\r\n        <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.searchValue}\r\n            onChange={this.handleSearchValueChange}\r\n            placeholder=\"Search...\"\r\n          />\r\n        \r\n        <div className=\"slicer-body\">\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};\r\n\r\nexport const jsonToArray = (json) => {\r\n  let array;\r\n  try {\r\n    array = JSON.parse(json);\r\n  } catch(e) {\r\n    array = [];\r\n  }\r\n  return array;\r\n}\r\n","import React from 'react';\r\n\r\nclass NumberRange extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        min\r\n        <input type=\"number\" name=\"min\" />\r\n        max\r\n        <input type=\"number\" name=\"max\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberRange;","/**\r\n * Constants\r\n */\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\r\n\r\nexport const SYS_ROLE_ADMIN = 'admin';\r\nexport const SYS_ROLE_DEVELOPER = 'developer';\r\nexport const SYS_ROLE_VIEWER = 'viewer';\r\n\r\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;","import React, { Component } from 'react';\r\nimport Slicer from \"./Slicer\";\r\nimport NumberRange from \"./NumberRange\";\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './FilterViewPanel.css';\r\nimport Modal from '../components/Modal';\r\n\r\nclass FilterViewPanel extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      dashboardId: null,\r\n      filters: [],\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {}\r\n    };\r\n  }\r\n\r\n  fetchFilters = (dashboardId) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      dashboardId: dashboardId\r\n    })\r\n\r\n    axios.get('/ws/filter/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          filters: result,\r\n        }, this.queryFilters);\r\n      });\r\n  }\r\n\r\n  queryFilters = () => {\r\n    const { filters } = this.state;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === Constants.SLICER) {\r\n        const queryRequest = filter.data;\r\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\r\n          .then(res => {\r\n            const queryResult = res.data;\r\n            const queryResultData = Util.jsonToArray(queryResult.data);\r\n\r\n            const index = filters.findIndex(f => f.id === queryResult.id);\r\n            const newFilters = [...this.state.filters];\r\n            newFilters[index].queryResult = queryResult;\r\n            const type = newFilters[index].type;\r\n            if (type === Constants.SLICER) {\r\n              const checkBoxes = [];\r\n              for (let i = 0; i < queryResultData.length; i++) {\r\n                const values = Object.values(queryResultData[i]);\r\n                for (const val of values) {\r\n                  checkBoxes.push({\r\n                    value: val,\r\n                    isChecked: false\r\n                  });\r\n                }\r\n              }\r\n\r\n              newFilters[index].checkBoxes = checkBoxes;\r\n            } else if (type === Constants.SINGLE_VALUE) {\r\n              const values = Object.values(queryResultData);\r\n              let value = '';\r\n              for (const val of values) {\r\n                value = val;\r\n                break;\r\n              }\r\n              newFilters[index].value = value;\r\n            }\r\n\r\n            this.setState({\r\n              filters: newFilters\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderFilterPanel = () => {\r\n    const filterPanel = [];\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      let filterComponent = (<div>NONE</div>);\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        filterComponent = (\r\n          <Slicer \r\n            key={i} \r\n            filterId={filter.id} \r\n            checkBoxes={checkBoxes} \r\n            onChange={this.onSlicerChange} \r\n          />\r\n        );\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterComponent = (\r\n          <input \r\n            type=\"text\"  \r\n            value={filter.value}\r\n            onChange={(event) => this.onSingleValueChange(filter.id, event)} \r\n          />\r\n        );\r\n      }\r\n\r\n      filterPanel.push(\r\n        (\r\n          <div className=\"filter-card\">\r\n            <div className=\"filter-card-title\">\r\n              {filter.title}\r\n\r\n              { this.props.isEditMode ? \r\n                (\r\n                  <div className=\"icon-button-group\">\r\n                    <div className=\"inline-block\" onClick={() => this.edit(filter.id)}>\r\n                      <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n                    </div>\r\n                    <div className=\"inline-block\" onClick={() => this.openConfirmDeletionPanel(filter.id)}>\r\n                      <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n                    </div>\r\n                  </div>\r\n                ): null \r\n              }\r\n            </div>\r\n            <div>\r\n              {filterComponent}\r\n            </div>\r\n          </div>\r\n        )\r\n      );\r\n    }\r\n    return filterPanel;\r\n  }\r\n\r\n  edit = (filterId) => {\r\n    this.props.onEdit(filterId);\r\n  }\r\n\r\n  onSlicerChange = (filterId, checkBoxes) => {\r\n    const index = this.state.filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...this.state.filters];\r\n    newFilters[index].checkBoxes = [...checkBoxes];\r\n    this.setState({\r\n      filters: newFilters\r\n    });  \r\n  }\r\n\r\n  onSingleValueChange = (filterId, event) => {\r\n    const { filters } = this.state;\r\n    const value = event.target.value;\r\n    const index = filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...filters];\r\n    newFilters[index].value = value;\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n  }\r\n\r\n  applyFilters = () => {\r\n    const { \r\n      filters = []\r\n    } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      const filterParam = {};\r\n      if (filter.type === Constants.SLICER) {\r\n        const { \r\n          checkBoxes = []\r\n        } = filter;\r\n        const paramValues = [];\r\n        for (let j = 0; j < checkBoxes.length; j++) {\r\n          const checkBox = checkBoxes[j];\r\n          if (checkBox.isChecked) {\r\n            paramValues.push(checkBox.value);\r\n          }\r\n        }\r\n        filterParam.value = paramValues;\r\n        if (paramValues.length === checkBoxes.length) {\r\n          filterParam.remark = 'select all';\r\n        }\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterParam.value = filter.value;\r\n      }\r\n      filterParam.param = filter.data.param;\r\n      filterParam.type = filter.type;\r\n      filterParams.push(filterParam);\r\n    }\r\n\r\n    this.props.onApplyFilters(filterParams);\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete\r\n    } = this.state;\r\n    const filterId = objectToDelete;\r\n    axios.delete(`/ws/filter/${filterId}`)\r\n      .then(res => {\r\n        const index = this.state.filters.findIndex(f => f.id === filterId);\r\n        const newFilters = [...this.state.filters];\r\n        newFilters.splice(index, 1);\r\n        this.setState({\r\n          filters: newFilters\r\n        });\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (filterId) => {\r\n    this.setState({\r\n      objectToDelete: filterId,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n    const style = {};\r\n    if (show) {\r\n      style.width = Constants.DEFAULT_FILTER_VIEW_WIDTH + 'px';\r\n    } else {\r\n      style.width = '0px';\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-filter-panel\" style={style}>\r\n        <div>Filters</div>\r\n        <button className=\"button\" onClick={this.applyFilters}>Run</button>\r\n        <div className=\"filter-view-panel\">\r\n          {this.renderFilterPanel()}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete this filter?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterViewPanel;","import React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPalette: false\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      showPalette: !prevState.showPalette\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      showPalette: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    const rgb = color.rgb;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    this.props.onChange(rgba);\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: this.props.value\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: '2'\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.showPalette ? \r\n          (\r\n            <div style={popover}>\r\n              <div style={cover} onClick={this.handleClose} />\r\n              <ChromePicker color={this.props.value} onChange={this.handleChange} />\r\n            </div>\r\n          ) : null }\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","import * as Util from '../api/Util';\r\n\r\nconst CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOptionTemplate = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      type: 'scroll',\r\n      orient: 'vertical',\r\n      data: legend,\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['40%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport const getPieOption = (queryResultData, pieKey, pieValue) => {\r\n  let legend = [];\r\n  let series = [];\r\n  for (let i = 0; i < queryResultData.length; i++) {\r\n    const row = queryResultData[i];\r\n    legend.push(row[pieKey]);\r\n    series.push({\r\n      name: row[pieKey],\r\n      value: row[pieValue]\r\n    });  \r\n  }\r\n  return getPieOptionTemplate(legend, series);\r\n}\r\n","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport './TableWidget.css';\r\n\r\nclass TableWidget extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  render() {   \r\n    const {\r\n      data = [],\r\n      columns = [],\r\n      drillThrough = [],\r\n      error\r\n    } = this.props;\r\n\r\n    const columnHeaders = [];\r\n    columns.forEach(column => {\r\n      const columnName = column.name;\r\n      const header = {\r\n        Header: columnName,\r\n        accessor: columnName\r\n      };\r\n      if (drillThrough.length > 0) {\r\n        const index = drillThrough.findIndex(d => d.columnName === columnName);\r\n        if (index !== -1) {\r\n          const dashboardId = drillThrough[index].dashboardId;\r\n          header.Cell = (props => <a href={`/poli/workspace/dashboard/${dashboardId}?${columnName}=${props.value}`}>{props.value}</a>);\r\n        }\r\n      }\r\n\r\n      columnHeaders.push(header);\r\n    });\r\n\r\n    if (error) {\r\n      return (\r\n        <div>\r\n          {error}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ReactTable\r\n        data={data}\r\n        columns={columnHeaders}\r\n        defaultPageSize={10}\r\n        previousText={'Prev'}\r\n        nextText={'Next'}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableWidget;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport TableWidget from './TableWidget';\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough || []; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        const index = drills.findIndex(d => d.columnName === header);\r\n        if (index !== -1) {\r\n          const dashboardId = drills[index].dashboardId;\r\n          this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      chartType,\r\n      queryResult = {},\r\n      drillThrough,\r\n      data = {}\r\n    } = this.props;\r\n\r\n    const queryResultData = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    let widgetItem = (<div></div>);\r\n    if (chartType === Constants.TABLE) {\r\n      widgetItem = (\r\n        <TableWidget\r\n          data={queryResultData}\r\n          columns={columns}\r\n          error={error}\r\n          drillThrough={drillThrough}\r\n        />\r\n      );\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        pieKey,\r\n        pieValue\r\n      } = data;\r\n      const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\r\n      widgetItem = (\r\n        <ReactEcharts \r\n          option={chartOption}   \r\n          className=\"echarts\"\r\n          onEvents={onChartEvents}  \r\n        />\r\n      );\r\n    } \r\n\r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      title,\r\n      isEditMode,\r\n      style = {}\r\n    } = this.props;\r\n\r\n    const { \r\n      showBorder = false \r\n    } = style;\r\n\r\n    const borderStyle = showBorder ? '2px solid #4b4f56' : '2px solid #FFFFFF';\r\n\r\n    let styles = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: 1,\r\n      border: borderStyle\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {title}\r\n\r\n          { isEditMode ? (\r\n            <div className=\"float-right\" style={{marginRight: '20px'}}>\r\n              <div className=\"inline-block\" onClick={() => this.editWidget(id)}>\r\n                <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n              </div>\r\n              <div className=\"inline-block\" onClick={() => this.removeWidget(id)}>\r\n                <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid-box-file-button-group\">\r\n              <div className=\"inline-block\" onClick={() => this.exportJson(id)}>\r\n                <FontAwesomeIcon icon=\"file-export\" fixedWidth />\r\n              </div>\r\n              \r\n              <div className=\"inline-block\" onClick={() => this.exportCsv(id)}>\r\n                <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { isEditMode ? (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} />\r\n        ): null}\r\n\r\n        { isEditMode ? (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} />\r\n        ): null}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(GridItem);","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      backgroundColor,\r\n      widgets = [],\r\n      showGridlines\r\n    } = this.props;\r\n\r\n    let style = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      backgroundColor: backgroundColor\r\n    };\r\n\r\n    if (showGridlines) {\r\n      style.backgroundSize = '15px 15px';\r\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={style} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ColorPicker from './ColorPicker';\r\nimport Checkbox from './Checkbox';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\nimport Modal from '../components/Modal';\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      snapToGrid: false,\r\n      showGridlines: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  resizeGrid = (width, isResizeToBase) => {\r\n    const preGridWidth = this.state.gridWidth;\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n    if (isResizeToBase) {\r\n      this.resizeWidgetsToBase(newWidgets, preGridWidth);\r\n    }\r\n\r\n    const gridWidth = width - 10;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return Math.round(num * gridWidth / BASE_WIDTH);\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Math.round(num * BASE_WIDTH / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, width, filterParams) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get('/ws/widget/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(width, false);\r\n          this.queryWidgets(filterParams);\r\n        });\r\n      });\r\n  }\r\n\r\n  queryWidgets = (filterParams) => {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      axios.post('/ws/jdbcquery/widget/' + widget.id, params)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const index = widgets.findIndex(w => w.id === result.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = result;\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    this.setState({\r\n      [name]: isChecked\r\n    });\r\n  }\r\n\r\n  handleHeightChange = (event) => {\r\n    this.props.onHeightChange(event.target.value);\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    this.props.onBackgroundColorChange(color);\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete\r\n    } = this.state;\r\n    const widgetId = objectToDelete;\r\n    axios.delete(`/ws/widget/${widgetId}`)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (widgetId) => {\r\n    this.setState({\r\n      objectToDelete: widgetId,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { widgetViewWidth } = this.props;\r\n    const style = {\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {this.props.isEditMode ?\r\n        (\r\n          <div className=\"dashboard-attribute-edit-panel\">\r\n            <div className=\"inline-block\">Height:</div>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.props.height}\r\n              onChange={this.handleHeightChange} \r\n              className=\"inline-block\" \r\n              style={{width: '200px'}}\r\n              />\r\n\r\n            <div>\r\n              Background Color\r\n              <ColorPicker value={this.props.backgroundColor} onChange={this.onBackgroundColorChange} />\r\n            </div>\r\n\r\n            <Checkbox name=\"snapToGrid\" value=\"Snap to grid\" checked={this.state.snapToGrid} onChange={this.handleCheckBoxChange} />\r\n            <Checkbox name=\"showGridlines\" value=\"Show gridlines\" checked={this.state.showGridlines} onChange={this.handleCheckBoxChange} />\r\n  \r\n          </div>\r\n        ) : null}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          backgroundColor={this.props.backgroundColor}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.openConfirmDeletionPanel} />\r\n        \r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete this widget?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","import React from 'react';\r\nimport './Tabs.css';\r\n\r\nclass Tabs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const activeTab = this.props.activeTab;\r\n    this.setState({\r\n      activeTab: activeTab\r\n    });\r\n  }\r\n\r\n  handleTabClick = (title) => {\r\n    this.setState({\r\n      activeTab: title\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children = []\r\n    } = this.props;\r\n\r\n    const {\r\n      activeTab\r\n    } = this.state;\r\n\r\n    const tabHeaders = [];\r\n    let tabContent = null;\r\n    for (let i = 0; i < children.length; i++) {\r\n      const title = children[i].props.title;\r\n      let active = '';\r\n      if (title === activeTab) {\r\n        active = 'tab-header-active';\r\n        tabContent = children[i].props.children;\r\n      }\r\n      \r\n      tabHeaders.push(\r\n        <li className={`tab-header-item ${active}`} key={i} onClick={() => this.handleTabClick(title)}>{title}</li>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"tab-container\">\r\n        <ul className=\"tab-header\">\r\n          {tabHeaders}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {tabContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Select extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    optionDisplay: PropTypes.string,\r\n    optionValue: PropTypes.string\r\n  };\r\n\r\n  handleOptionChange = (event) => {\r\n    const name = this.props.name;\r\n    const value = event.target.value;\r\n    this.props.onChange(name, value);\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      value,\r\n      options = [],\r\n      optionValue,\r\n      optionDisplay\r\n    } = this.props;\r\n\r\n    const optionList = [];\r\n    optionList.push(\r\n      <option value=\"\" key=\"\"></option>\r\n    );\r\n    options.forEach((option, index) => {\r\n      let value;\r\n      let display;\r\n      if (optionValue && optionDisplay) {\r\n        // The options contain objects.\r\n        value = option[optionValue];\r\n        display = option[optionDisplay];\r\n      } else {\r\n        // The options contain string or number.\r\n        value = option;\r\n        display = option;\r\n      }\r\n      \r\n      optionList.push(\r\n        <option value={value} key={index}>{display}</option>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <select value={value} onChange={this.handleOptionChange}>\r\n        {optionList}\r\n      </select>\r\n    )\r\n  };\r\n}\r\n\r\nexport default Select;","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport TableWidget from './TableWidget';\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nimport './WidgetEditPanel.css';\r\n\r\nimport Checkbox from './Checkbox';\r\nimport Tabs from '../components/Tabs';\r\nimport Select from '../components/Select';\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      title: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: {},\r\n      chartType: Constants.TABLE,\r\n      style: {\r\n        showBorder: false\r\n      },\r\n      pieKey: '',\r\n      pieValue: '',\r\n      chartOption: {},\r\n      drills: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId, dashboardId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { chartType } = result;\r\n          if (chartType === Constants.PIE) {\r\n            const {\r\n              pieKey,\r\n              pieValue\r\n            } = result.data;\r\n            this.setState({\r\n              pieKey: pieKey,\r\n              pieValue: pieValue\r\n            });\r\n          }\r\n\r\n          this.setState({\r\n            widgetId: widgetId,\r\n            title: result.title,\r\n            x: result.x,\r\n            y: result.y,\r\n            width: result.width,\r\n            height: result.height,\r\n            sqlQuery: result.sqlQuery,\r\n            chartType: result.chartType,\r\n            jdbcDataSourceId: result.jdbcDataSourceId,\r\n            drills: result.drillThrough,\r\n            style: result.style\r\n          }, () => {\r\n            this.runQuery();\r\n          });\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    if (name === 'showBorder') {\r\n      const style = {...this.state.style};\r\n      style.showBorder = isChecked;\r\n      this.setState({\r\n        style: style\r\n      });\r\n    }\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      widgetId,\r\n      title,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      chartType,\r\n      drills,\r\n      style\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      title: title,\r\n      dashboardId: this.props.dashboardId,\r\n      chartType: chartType,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      drillThrough: drills,\r\n      style: style\r\n    }\r\n\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const {\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n      widget.data = {\r\n        pieKey: pieKey,\r\n        pieValue: pieValue\r\n      }\r\n    }\r\n\r\n    if (widgetId === null) {\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          queryResult: result\r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = () => {\r\n    const { \r\n      drills,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const filterId = this.state.filterId;\r\n    const index = drills.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill) => {\r\n    const { drills } = this.state;\r\n    const index = drills.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.splice(index, 1);\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = () => {\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        pieKey, \r\n        pieValue, \r\n        queryResult = {}\r\n      } = this.state;\r\n      console.log(\"generateChart\", pieKey, pieValue);\r\n      const data = Util.jsonToArray(queryResult.data);\r\n      const chartOption = EchartsApi.getPieOption(data, pieKey, pieValue);\r\n      this.setState({\r\n        chartOption: chartOption\r\n      });\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      queryResult = {},\r\n    } = this.state;\r\n    const columns = queryResult.columns || [];\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        chartOption,\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n\r\n      chartPreview = (\r\n        <div>\r\n          <label className=\"form-label\"><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label className=\"form-label\">Aggr Key (string)</label>\r\n          <Select\r\n            name={'pieKey'}\r\n            value={pieKey}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n            />\r\n\r\n\r\n          <label className=\"form-label\">By Aggr Value (number)</label>\r\n          <Select\r\n            name={'pieValue'}\r\n            value={pieValue}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n            />\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      queryResult,\r\n      jdbcDataSources = [],\r\n      drills,\r\n      drillDashboards = []\r\n    } = this.state;\r\n\r\n    const data = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    const drillItems = (drills || []).map(drill =>\r\n      <div key={drill.columnName}>\r\n        <div>Column: {drill.columnName}</div>\r\n        <div>Dashboard: {drill.dashboardId}</div>\r\n        <button onClick={() => this.removeDrillThrough(drill)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const columnItems = columns.map(col =>\r\n      <div key={col.name}>{col.name} {col.dataType}</div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        \r\n        <div className=\"form-panel\">\r\n          <Tabs activeTab=\"basic\">\r\n            <div title=\"basic\">\r\n              <label className=\"form-label\">Title</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"title\" \r\n                value={this.state.title}\r\n                onChange={this.handleInputChange} \r\n              />\r\n\r\n              <Checkbox name=\"showBorder\" value=\"Show border\" checked={this.state.style.showBorder} onChange={this.handleCheckBoxChange} />\r\n            </div>\r\n\r\n            <div title=\"Query\">\r\n              <label className=\"form-label\">DataSource</label>\r\n              <Select\r\n                name={'jdbcDataSourceId'}\r\n                value={this.state.jdbcDataSourceId}\r\n                onChange={this.handleIntegerOptionChange}\r\n                options={jdbcDataSources}\r\n                optionDisplay={'name'}\r\n                optionValue={'id'}\r\n                />\r\n            \r\n              <label className=\"form-label\">SQL Query</label>\r\n              <AceEditor\r\n                style={{ marginTop: '8px' }}\r\n                value={this.state.sqlQuery}\r\n                mode=\"mysql\"\r\n                theme=\"xcode\"\r\n                name=\"blah2\"\r\n                onChange={this.handleAceEditorChange}\r\n                height={'300px'}\r\n                width={'100%'}\r\n                fontSize={15}\r\n                showPrintMargin={false}\r\n                showGutter={true}\r\n                highlightActiveLine={true}\r\n                setOptions={{\r\n                  showLineNumbers: true,\r\n                  tabSize: 2\r\n                }}\r\n              />\r\n\r\n              <div className=\"mt-3\">\r\n                <button className=\"button\" onClick={this.runQuery}>Run Query</button>\r\n              </div>\r\n\r\n              <label className=\"form-label\">Result</label>\r\n              <TableWidget\r\n                data={data}\r\n                columns={columns}\r\n                error={error}\r\n              />\r\n\r\n              <label className=\"form-label\">Columns Mapping</label>\r\n              <div>\r\n                {columnItems}\r\n              </div>\r\n            </div>\r\n\r\n            <div title=\"Chart\">\r\n              <label className=\"form-label\">Chart Options</label>\r\n              <Select\r\n                name={'chartType'}\r\n                value={this.state.chartType}\r\n                onChange={this.handleOptionChange}\r\n                options={Constants.CHART_TYPES}\r\n              />\r\n              <label className=\"form-label\">Preview</label>\r\n              {this.renderChartPreview()}  \r\n            </div>\r\n\r\n            <div title=\"Drill through\">\r\n              <label className=\"form-label\">Drill through</label>\r\n              <label className=\"form-label\">Column</label>\r\n              <Select\r\n                name={'drillColumnName'}\r\n                value={this.state.drillColumnName}\r\n                options={columns}\r\n                onChange={this.handleOptionChange}\r\n                optionDisplay={'name'}\r\n                optionValue={'name'}\r\n              />\r\n\r\n              <label className=\"form-label\">Dashboard</label>\r\n              <Select\r\n                name={'drillDashboardId'}\r\n                value={this.state.drillDashboardId}\r\n                options={drillDashboards}\r\n                onChange={this.handleIntegerOptionChange}\r\n                optionDisplay={'name'}\r\n                optionValue={'id'}\r\n              />\r\n              <div>\r\n                {drillItems}\r\n              </div>\r\n              <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\r\n            </div>\r\n          </Tabs>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","import React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\nimport TableWidget from './TableWidget';\r\nimport Select from './Select';\r\n\r\n\r\nimport './FilterEditPanel.css';\r\n\r\nclass FilterEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      filterId: null,\r\n      title: '',\r\n      type: Constants.SLICER,\r\n      data: {},\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: {},\r\n      param: '',\r\n    };\r\n  }\r\n\r\n  fetchFilter = async (filterId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    if (filterId === null) {\r\n      this.setState({\r\n        filterId: null\r\n      })\r\n    } else {\r\n      axios.get('/ws/filter/' + filterId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { \r\n            data,\r\n            type\r\n          } = result;\r\n          this.setState({\r\n            filterId: filterId,\r\n            title: result.title,\r\n            type: result.type,\r\n            jdbcDataSourceId: result.jdbcDataSourceId,\r\n            data: data\r\n          });\r\n\r\n          if (type === Constants.SLICER) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              param: data.param\r\n            });\r\n          } else if (type === Constants.SINGLE_VALUE) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              param: data.param\r\n            });\r\n          }\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({ \r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      filterId,\r\n      title,\r\n      type,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      param\r\n    } = this.state;\r\n\r\n    const filter = {\r\n      title: title,\r\n      type: type,\r\n      dashboardId: this.props.dashboardId,\r\n      jdbcDataSourceId: jdbcDataSourceId\r\n    };\r\n\r\n    if (type === Constants.SLICER) {\r\n      filter.data = {\r\n        sqlQuery: sqlQuery,\r\n        param: param\r\n      }\r\n    } else if (type === Constants.SINGLE_VALUE) {\r\n      filter.data = {\r\n        useQuery: false,\r\n        sqlQuery: sqlQuery,\r\n        param: param,\r\n      }\r\n    }\r\n\r\n    if (filterId === null) {\r\n      axios.post('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      filter.id = filterId;\r\n      axios.put('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { \r\n      queryResult = {},\r\n      jdbcDataSources = [],\r\n      type\r\n    } = this.state;\r\n\r\n    const data = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    const requireSql = type === Constants.SLICER;\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        <button className=\"button\" onClick={this.runQuery}>Run</button>\r\n\r\n        <div className=\"form-panel\">\r\n          <label className=\"form-label\">Title</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"title\" \r\n            value={this.state.title}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label className=\"form-label\">Type</label>\r\n          <Select\r\n            name={'type'} \r\n            value={this.state.type} \r\n            onChange={this.handleOptionChange}\r\n            options={Constants.FILTER_TYPES}\r\n          />\r\n\r\n          {\r\n            requireSql ?\r\n            (\r\n              <React.Fragment>\r\n                <label className=\"form-label\">DataSource</label>\r\n                <Select\r\n                  name={'jdbcDataSourceId'} \r\n                  value={this.state.jdbcDataSourceId} \r\n                  onChange={this.handleIntegerOptionChange}\r\n                  options={jdbcDataSources}\r\n                  optionDisplay={'name'}\r\n                  optionValue={'id'}\r\n                />\r\n    \r\n                <label className=\"form-label\">SQL Query</label>\r\n                <AceEditor\r\n                  style={{marginTop: '8px'}}\r\n                  value={this.state.sqlQuery}\r\n                  mode=\"mysql\"\r\n                  theme=\"xcode\"\r\n                  name=\"blah2\"\r\n                  onChange={this.handleAceEditorChange}\r\n                  height={'300px'}\r\n                  width={'100%'}\r\n                  fontSize={15}\r\n                  showPrintMargin={false}\r\n                  showGutter={true}\r\n                  highlightActiveLine={true}\r\n                  setOptions={{\r\n                    showLineNumbers: true,\r\n                    tabSize: 2\r\n                  }}\r\n                />\r\n\r\n                <label className=\"form-label\">Result</label>\r\n                <TableWidget\r\n                  data={data}\r\n                  columns={columns}\r\n                  error={error}\r\n                />\r\n              </React.Fragment>\r\n            ) : null\r\n          }\r\n\r\n          <label className=\"form-label\">Param</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"param\" \r\n            value={this.state.param}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport FilterViewPanel from '../components/FilterViewPanel';\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\nimport FilterEditPanel from '../components/FilterEditPanel';\r\n\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showFilterEditPanel: false,\r\n      showFilterViewPanel: true,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      isEditMode: false,\r\n      isReadOnly: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      refreshInterval: 15,\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      style: {},\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.filterViewPanel = React.createRef();\r\n    this.filterEditPanel = React.createRef();\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    console.log('DashboardEditView', dashboardId);\r\n\r\n    const url = this.props.location.search;\r\n    console.log('url', url);\r\n    const params = new URLSearchParams(url);\r\n    console.log('params', params);\r\n    for(let pair of params.entries()) {\r\n      console.log(pair[0]+ ', '+ pair[1]); \r\n    } \r\n\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = this.state.showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    console.log('componentDidMount', pageWidth, widgetViewWidth);\r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const result = res.data;\r\n            this.setState({\r\n              dashboardId: result.id,\r\n              name: result.name,\r\n              style: result.style\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = () => {\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    const dashboardName = params.get('name');\r\n    const showFilter = params.get('showFilter');\r\n\r\n    const showFilterViewPanel = showFilter == 'true';\r\n\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    \r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth,\r\n      isReadOnly: true,\r\n      name: dashboardName,\r\n      showFilterViewPanel: showFilterViewPanel\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            style: result.style\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth - 40;\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const { refreshInterval } = this.state;\r\n      let interval = parseInt(refreshInterval, 10) || 15;\r\n      interval = interval < 1 ? 1 : interval;\r\n      const timerId = setInterval(() => {\r\n        this.filterViewPanel.current.applyFilters();\r\n        this.updateLastRefreshed();\r\n      }, interval * 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    this.refreshWidgetView();\r\n    this.refreshFilterView();\r\n    this.updateLastRefreshed();\r\n  }\r\n\r\n  refreshFilterView = () => {\r\n    const { \r\n      dashboardId\r\n    } = this.state;\r\n    this.filterViewPanel.current.fetchFilters(dashboardId);\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n  } \r\n\r\n  updateLastRefreshed = () => {\r\n    const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\r\n    this.setState({\r\n      lastRefreshed: now\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    console.log('save');\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      style\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      style: style\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.widgetViewPanel.current.saveWidgets();\r\n\r\n    this.props.onDashboardSave(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  onSaveFilter = () => {\r\n    this.setState({ \r\n      showFilterEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  toggleFilterViewPanel = () => {\r\n    const { \r\n      showFilterViewPanel\r\n    } = this.state;\r\n    this.resizePageLayout(!showFilterViewPanel);\r\n  }\r\n\r\n  resizePageLayout = (showFilterViewPanel) => {\r\n    const pageWidth = this.getPageWidth();;\r\n    let widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    this.widgetViewPanel.current.resizeGrid(widgetViewWidth, true);\r\n\r\n    this.setState({\r\n      showFilterViewPanel: showFilterViewPanel,\r\n      widgetViewWidth: widgetViewWidth\r\n    }); \r\n  }\r\n\r\n  openFilterEditPanel = (filterId) => {\r\n    this.filterEditPanel.current.fetchFilter(filterId);\r\n    this.setState({\r\n      showFilterEditPanel: true\r\n    });\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    const { dashboardId } = this.state;\r\n    this.widgetEditPanel.current.fetchWidget(widgetId, dashboardId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/workspace/dashboard/view?name=${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onTableCellClick = () => {\r\n    this.props.history.push(`/workspace/dashboard/drill?name=&`);\r\n  }\r\n\r\n  onHeightChange = (height) => {\r\n    const style = {...this.state.style};\r\n    style.height = height;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    const style = {...this.state.style};\r\n    style.backgroundColor = color;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {},\r\n    } = this.state;\r\n    const dashboardId = objectToDelete.id;\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        this.props.onDashboardDelete(dashboardId);\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  deleteDashboard = () => {\r\n    const { \r\n      dashboardId,\r\n      name\r\n    } = this.state;\r\n    const dashboard = {\r\n      id: dashboardId,\r\n      name: name\r\n    }\r\n    this.openConfirmDeletionPanel(dashboard);\r\n  }\r\n\r\n  openConfirmDeletionPanel = (dashboard) => {\r\n    this.setState({\r\n      objectToDelete: dashboard,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      lastRefreshed,\r\n      isEditMode,\r\n      isReadOnly\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel = null;\r\n    const controlButtons = (\r\n      <React.Fragment>\r\n        <span className=\"mr-3\">Last refreshed: {lastRefreshed}</span>\r\n        {\r\n          autoRefreshStatus === 'OFF' ? \r\n          (\r\n            <input \r\n              type=\"text\" \r\n              name=\"refreshInterval\" \r\n              value={this.state.refreshInterval}\r\n              onChange={this.handleInputChange}\r\n              className=\"inline-block\" \r\n              style={{width: '50px'}}\r\n            />\r\n          ) : null\r\n        }\r\n        <button className=\"button square-button mr-3\" onClick={this.toggleAutoRefresh}>\r\n          {\r\n            autoRefreshStatus === 'ON' ? \r\n            (\r\n              <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\r\n            ) : \r\n            (\r\n              <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\r\n            )\r\n          }\r\n        </button>\r\n        \r\n        <button className=\"button mr-3\" onClick={this.toggleFilterViewPanel}>Show Filters</button>\r\n        <button className=\"button square-button\" onClick={this.refresh}>\r\n          <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n\r\n    if (!isReadOnly) {\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button mr-3\" onClick={this.cancelEdit}>Cancel</button>\r\n            <button className=\"button mr-3\" onClick={this.save}>Save</button>\r\n            <button className=\"button mr-3\" onClick={this.deleteDashboard}>Delete</button>\r\n            <button className=\"button mr-3\" onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\r\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button square-button mr-3\" onClick={this.fullScreen}>\r\n              <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={this.edit}>Edit</button>\r\n            {controlButtons}\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      fullScreenButtonPanel = controlButtons;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-menu-panel row\">\r\n          <div className=\"float-left\">\r\n            {\r\n              isReadOnly || !isEditMode ?\r\n              (\r\n                <div className=\"dashboard-name\">\r\n                  {this.state.name}\r\n                </div>\r\n              ) :(\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"name\" \r\n                  value={this.state.name}\r\n                  onChange={this.handleInputChange} \r\n                  className=\"dashboard-name\"\r\n                  />\r\n              )\r\n            }\r\n            \r\n          </div>\r\n          <div className=\"float-right\">\r\n            {fullScreenButtonPanel}\r\n            {editButtonPanel}\r\n          </div>\r\n        </div>\r\n\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          isEditMode={this.state.isEditMode}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          onHeightChange={this.onHeightChange}\r\n          onBackgroundColorChange={this.onBackgroundColorChange}\r\n          {...this.state.style}\r\n        />\r\n        <FilterViewPanel \r\n          ref={this.filterViewPanel} \r\n          onEdit={this.openFilterEditPanel}\r\n          onApplyFilters={this.applyFilters}\r\n          isEditMode={this.state.isEditMode}\r\n          show={this.state.showFilterViewPanel}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'dashboard-edit-widget-dialog'} \r\n          title={'Widget Edit'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showFilterEditPanel}\r\n          onClose={() => this.setState({ showFilterEditPanel: false })}\r\n          modalClass={'dashboard-edit-filter-dialog'} \r\n          title={'Filter Edit'}>\r\n          <FilterEditPanel\r\n            ref={this.filterEditPanel}\r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveFilter}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {this.state.objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\nimport './Dashboard.css';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as Constants from '../api/Constants';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      activeDashboardId: 0,\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false,\r\n      name: ''\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      style: {\r\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\r\n        backgroundColor: 'rgba(233, 235, 238, 1)'\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.closeEditPanel();\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.setState({\r\n      activeDashboardId: dashboardId\r\n    });\r\n    this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n  }\r\n\r\n  onDashboardSave = (dashboardId) => {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  onDashboardDelete = (dashboardId) => {\r\n    this.fetchBoards();\r\n    this.setState({\r\n      activeDashboardId: 0\r\n    });\r\n    this.props.history.push('/workspace/dashboard/');\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dashboards = [],\r\n      activeDashboardId,\r\n      searchValue\r\n    } = this.state;\r\n\r\n    \r\n    const dashboardRows = [];\r\n    for (let i = 0; i < dashboards.length; i++) {\r\n      const dashboard = dashboards[i];\r\n      const name = dashboard.name;\r\n      const menuActive = activeDashboardId === dashboard.id ? 'dashboard-menu-item-active' : '';\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        dashboardRows.push(\r\n          (\r\n            <div key={i} className={`dashboard-menu-item ellipsis ${menuActive}`} onClick={() => this.view(dashboard.id)}>\r\n              {name}\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dashboard-sidebar\">\r\n          <div style={{margin: '5px'}}>\r\n            <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\r\n              <FontAwesomeIcon icon=\"plus\" /> New\r\n            </button>\r\n            <input \r\n              type=\"text\" \r\n              name=\"searchValue\" \r\n              value={this.state.searchValue}\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleInputChange} />\r\n          </div>\r\n          <div>\r\n            {dashboardRows}\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route \r\n            path=\"/workspace/dashboard/:id\" \r\n            render={(props) => <DashboardEditView key={props.match.params.id} onDashboardSave={this.onDashboardSave} onDashboardDelete={this.onDashboardDelete} />} \r\n            />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'small-modal-panel'} \r\n          title={'New'} >\r\n          <div>\r\n            <label className=\"form-label\">Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              />\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.dashboardEditView.loadViewByDashboardName();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView wrappedComponentRef={comp => (this.dashboardEditView = comp)} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\n\r\nconst SYS_ROLES = ['developer', 'viewer'];\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      searchValue: '',\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, event) => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      this.setState({\r\n        id: user.id,\r\n        username: user.username,\r\n        name: user.name,\r\n        tempPassword: '',\r\n        sysRole: user.sysRole,\r\n        userGroups: user.userGroups\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  search = () => {\r\n    const { searchValue } = this.state;\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: sysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/user/' + id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n      });\r\n  }\r\n\r\n  addUserGroup = (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId, event) => {\r\n    event.preventDefault();\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      users = [],\r\n      groups = [],\r\n      userGroups = []\r\n    } = this.state;\r\n\r\n    const userItems = users.map(user => \r\n      <div key={user.id} className=\"user-card\">\r\n        <p>\r\n          {user.username}\r\n          {user.name}\r\n          {user.sysRole}\r\n          <button onClick={() => this.openEditPanel(user)}>update</button>\r\n          <button onClick={() => this.delete(user.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupOptions = groups.map(group => \r\n      <option value={group.id} key={group.id}>{group.name}</option>\r\n    );\r\n\r\n    const sysRoleOptions = SYS_ROLES.map(groupName => \r\n      <option value={groupName} key={groupName}>{groupName}</option>\r\n    );\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId}>\r\n                <div>Group: {groups[j].name}</div>\r\n                <button onClick={(event) => this.removeUserGroup(groupId, event)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>User</div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Username...\"\r\n          />\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Group...\"\r\n          />\r\n        <button onClick={this.search}>Search</button>\r\n        <div className=\"row\">\r\n          {userItems}\r\n        </div>\r\n        <button onClick={() => this.openEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'lg-modal-panel'} \r\n          title={'User'} >\r\n\r\n          <div>\r\n            <h3>{'User'}</h3>\r\n            <form>\r\n              <label className=\"form-label\">Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label className=\"form-label\">Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label className=\"form-label\">Temp password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"tempPassword\" \r\n                value={this.state.tempPassword}\r\n                onChange={this.handleInputChange} />\r\n              \r\n              <label className=\"form-label\">System Role</label>\r\n              <select value={this.state.sysRole} onChange={(event) => this.handleOptionChange('sysRole', event)}>\r\n                {sysRoleOptions}\r\n              </select>\r\n              <br/>\r\n              \r\n              <label className=\"form-label\">Groups</label>\r\n              <select value={this.state.userGroupId} onChange={(event) => this.handleOptionChange('userGroupId', event)}>\r\n                {groupOptions}\r\n              </select>\r\n              <button onClick={this.addUserGroup}>Add</button>\r\n              <div>\r\n                {userGroupItems}\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, event) => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      this.setState({\r\n        id: group.id,\r\n        name: group.name,\r\n        groupDashboards: group.groupDashboards\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/group/' + id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n      });\r\n  }\r\n\r\n  addGroupDashboard= (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n    if (index === -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.push(groupDashboardId);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId, event) => {\r\n    event.preventDefault();\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    const dashboardOptions = dashboards.map(dash => \r\n      <option value={dash.id} key={dash.id}>{dash.name}</option>\r\n    );\r\n\r\n    const groupItems = groups.map(group => \r\n      <div key={group.id} className=\"group-card\">\r\n        <p>\r\n          {group.name}\r\n          <button onClick={() => this.openEditPanel(group)}>update</button>\r\n          <button onClick={() => this.delete(group.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId}>\r\n                <div>Name: {dashboards[j].name}</div>\r\n                <button onClick={(event) => this.removeGroupDashboard(dashboardId, event)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Group</h1>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Group...\"\r\n          />\r\n        <button onClick={this.search}>Search</button>\r\n        <div className=\"row\">\r\n          {groupItems}\r\n        </div>\r\n        <button onClick={() => this.openEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'lg-modal-panel'} \r\n          title={'Group'} >\r\n\r\n          <div>\r\n            <h3>{'Group'}</h3>\r\n            <form>\r\n              <label className=\"form-label\">Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n              \r\n              <label className=\"form-label\">Dashboards</label>\r\n              <select value={this.state.groupDashboardId} onChange={(event) => this.handleOptionChange('groupDashboardId', event)}>\r\n                {dashboardOptions}\r\n              </select>\r\n              <button onClick={this.addGroupDashboard}>Add</button>\r\n              <div>\r\n                {groupDashboardItems}\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\nimport { Route, Link, Switch } from \"react-router-dom\";\r\nimport User from './User';\r\nimport Group from './Group';\r\nimport './UserManagement.css';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/user-management/user',\r\n    value: 'User',\r\n    icon: 'fa-users'\r\n  }, \r\n  {\r\n    link: '/workspace/user-management/group',\r\n    value: 'Group',\r\n    icon: 'fa-user-cog',\r\n  }\r\n];\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: 'group',\r\n    }\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let menuItems = [];\r\n    for (let i = 0; i < MENU_ITEMS.length; i++) {\r\n      const menu = MENU_ITEMS[i];\r\n      const active = this.state.currentMenuLink === menu.link ? 'active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li className={active} key={i}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <i className={`fas ${menu.icon} fa-fw`}></i>\r\n              <span className=\"app-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <ul className=\"nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/workspace/user-management/user\" component={User} />\r\n            <Route path=\"/workspace/user-management/group\" component={Group} />\r\n          </Switch>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        alert('confirm password');\r\n        return;\r\n      }\r\n      \r\n      user.password = password;\r\n    }\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>Account</div>\r\n        <div className=\"form-panel\">   \r\n          <label className=\"form-label\">Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label className=\"form-label\">Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label className=\"form-label\">System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label className=\"form-label\">API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button className=\"button\" onClick={this.generateApiKey}>Generate new API Key</button>\r\n          <br/>\r\n\r\n          <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n          {\r\n            showUpdatePassword ?\r\n            (\r\n              <React.Fragment>\r\n                <br/>\r\n                <label className=\"form-label\">Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label className=\"form-label\">Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n            ) : null\r\n          }\r\n\r\n          <br/>\r\n          <button className=\"button\" onClick={this.save}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","import React from 'react';\r\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\n\r\nimport Toast from '../components/Toast';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport AuthStore from '../api/AuthStore';\r\nimport './Workspace.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data source',\r\n    icon: 'database'\r\n  }, \r\n  {\r\n    link: '/workspace/user-management',\r\n    value: 'User Management',\r\n    icon: 'users-cog'\r\n  }\r\n];\r\n\r\nconst ACCOUNT_MENU_LINK = '/workspace/account';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard',\r\n      username: '',\r\n      sysRole: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Workspace - componentDidMount');\r\n    const pathname = this.props.location.pathname;\r\n    // TODO: fetch user information\r\n    this.setState({\r\n      currentMenuLink: pathname,\r\n    });\r\n    if (AuthStore.isAuthenticated) {\r\n      const sysRole = AuthStore.sysRole;\r\n      this.setState({\r\n        sysRole: sysRole\r\n      });\r\n    } else {\r\n      // Try login. If not, redirect\r\n    }\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n      sysRole\r\n    } = this.state;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.name === 'dashboard' || m.name === 'account');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li key={menu.link} className={active}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"workspace-nav\">  \r\n          <div className=\"workspace-name\">Poli</div>\r\n          <ul className=\"workspace-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div className=\"workspace-account-menu\">\r\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\r\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\r\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\r\n                <span className=\"workspace-nav-menu-text\">Account</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"workspace-logout-button inline-block\">\r\n              <Link to=\"/login\">\r\n                <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"workspace-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route exact path=\"/workspace/dashboard/view\" component={DashboardFullScreenView} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n            <Route path=\"/workspace/dashboard\" component={Dashboard} />\r\n            <Route path=\"/workspace/user-management\" component={UserManagement} />\r\n          </Switch>\r\n        </div>\r\n        <Toast />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Workspace);\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, Component } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\n\r\nimport AuthStore from './api/AuthStore';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv\r\n} from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('App - componentDidMount', AuthStore.isAuthenticated);\r\n  }\r\n   \r\n  render() {\r\n    console.log('App - render', AuthStore.isAuthenticated);\r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <PrivateRoute authenticated={AuthStore.isAuthenticated} path='/workspace' component={Workspace} />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} />\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}