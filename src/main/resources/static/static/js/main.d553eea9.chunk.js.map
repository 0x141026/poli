{"version":3,"sources":["views/Overview.js","api/WebApi.js","components/Modal.js","views/DataSources.js","views/Dashboards.js","components/GridDraggable.js","components/GridResizable.js","components/GridItem.js","components/GridLayout.js","views/Test.js","components/QuerySlicer.js","components/NumberRange.js","api/Util.js","components/FilterViewPanel.js","components/WidgetViewPanel.js","api/EchartsApi.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/SingleTest.js","App.js","index.js"],"names":["Overview","react_default","a","createElement","Component","fetchDataSources","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","get","abrupt","sent","stop","this","apply","arguments","fetchFiltersByDashboardId","_ref3","_callee3","dashboardId","_context3","concat","_x2","_ref4","_callee4","url","response","_context4","axios","data","t0","_x3","Modal","state","_this2","modalStatus","props","show","className","modalClass","onClick","onClose","children","React","DataSources","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","target","value","name","setState","defineProperty","save","preventDefault","ds","connectionUrl","username","password","type","ping","post","then","res","initData","update","console","log","put","delete","id","clearEditPanel","initialState","showEditPanel","showDeletePanel","enableUpdatePassword","jdbcDataSources","webApi","jdbcDataSourceItems","map","index","key","mode","components_Modal","onChange","row","Dashboard","dashboards","fetchBoards","dashboard","history","push","jump","panelClass","dashboardRows","d","withRouter","WIDGET_BORDER","GridDraggable","onMouseDown","gridItemNode","ReactDOM","findDOMNode","assertThisInitialized","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","i","length","style","zIndex","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","width","boxHeight","height","Math","floor","left","top","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","GridItem","x","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","removeWidget","onWidgetRemove","onTdPropsChange","rowInfo","column","instance","e","handleOriginal","renderWidgetContent","widgetItem","headers","queryResult","undefined","Array","isArray","obj","keys","_i","Header","accessor","es","columns","minRows","showPagination","getTdProps","styles","marginRight","components_GridDraggable","components_GridResizable","GridLayout","showGridlines","backgroundSize","backgroundImage","boxItems","widgets","components_GridItem","assign","Test","selectedOption","firstName","lastName","newValue","submit","handleChange","src_components_GridLayout","PureComponent","QuerySlicer","isSelectAll","isChecked","checked","newCheckBoxes","toConsumableArray","checkBoxes","findIndex","filterId","toggleSelectAll","newIsSelectAll","prevState","checkBoxItems","box","NumberRange","isArrayEmpty","array","FilterViewPanel","fetchFilters","result","filters","queryFilters","filter","queryRequest","f","newFilters","JSON","parse","util","values","_i2","val","renderFilterPanel","filterPanel","_loop","edit","remove","components_QuerySlicer","onQuerySlicerChange","components_NumberRange","onEdit","splice","applyFilters","filterParams","paramValues","j","checkBox","param","onApplyFilters","WidgetViewPanel","fetchWidgets","queryWidgets","params","w","newWidgets","CHART_COLORS","getPieOption","legend","series","color","tooltip","orient","right","bottom","center","radius","PIE","CHART_TYPES","WidgetEditPanel","fetchWidget","jdbcDataSourceId","sqlQuery","_x","handleAceEditorChange","handleDataSourceChange","handleChartTypeChange","chartType","close","runQuery","addFilterParam","newFilterParams","removeFilterParam","handleFilterChange","generateChart","_this$state","aggrKey","aggrValue","chartOption","echartsApi","queryResultItem","dataSourceOptions","filterOptions","filterParamItems","chartOptionList","o","lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","class","echarts_for_react_lib_default","option","SLICER","SINGLE_VALUE","TYPES","FilterEditPanel","fetchFilter","handleTypeChange","typeOptions","t","DashboardEditView","refresh","filterViewPanel","current","widgetViewPanel","openFilterEditPanel","filterEditPanel","showFilterEditPanel","openWidgetEditPanel","widgetEditPanel","showWidgetEditPanel","showFilterViewPanel","jdbcDataSourceOptions","createRef","match","components_WidgetViewPanel","ref","components_FilterViewPanel","components_WidgetEditPanel","components_FilterEditPanel","SingleTest","getOption","title","text","trigger","toolbox","feature","saveAsImage","grid","containLabel","xAxis","boundaryGap","yAxis","stack","areaStyle","normal","onChartClick","echarts","onChartLegendselectchanged","echart","onEvents","click","legendselectchanged","App","handleClick","toggleMenu","menuMin","appName","Link","to","margin","Route","exact","path","component","Dashboards","render","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.d553eea9.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\n\r\nclass Overview extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Overview</h1>     \r\n        <h5>Number of data sources</h5>\r\n        <h5>Number of dashboards</h5>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Overview;\r\n","import axios from 'axios';\n\nconst JSON_HEADER = {\n  headers: {\n    'Content-Type': 'application/json',\n  }\n};\n\nexport const fetchDataSources = async () => {\n  return await get('/ws/jdbcdatasource');\n};\n\nexport const fetchDashboardById = async (id) => {\n  return await get(`/ws/dashboard/${id}`);\n}\n\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\n}\n\nconst get = async (url) => {\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (e) {\n    return null;\n  }\n} \n\n\n","import React from 'react';\r\n\r\nclass Modal extends React.Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const modalStatus = this.props.show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={this.props.modalClass}>\r\n          <button onClick={() => this.props.onClose()}>Close</button>\r\n          <div className='modal-body'>\r\n            {this.props.children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\n\r\nclass DataSources extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      username: '',\r\n      password: '',\r\n      type: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      username: '',\r\n      password: '',\r\n      type: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Fetch all datasources\r\n    this.initData();\r\n    \r\n  }\r\n\r\n  async initData() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const ds = {\r\n      connectionUrl: this.state.connectionUrl,\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      name: this.state.name,\r\n      type: this.state.password,\r\n      ping: this.state.ping\r\n    };\r\n\r\n    axios.post('/ws/jdbcdatasource', ds)\r\n      .then(res => {\r\n        this.initData();\r\n      });\r\n  }\r\n\r\n  update = (ds) => {\r\n    console.log('update', ds);\r\n\r\n    axios.put('/ws/jdbcdatasource', ds)\r\n      .then(res => {\r\n        this.initData();\r\n      });\r\n  }\r\n\r\n  delete = (id) => {\r\n    console.log('delete', id);\r\n    axios.delete('/ws/jdbcdatasource/' + id)\r\n      .then(res => {\r\n        this.initData();\r\n      });\r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        console.log('ping', res.data);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  showEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        type: ds.type,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  showDeletePanel = () => {\r\n\r\n  }\r\n\r\n  enableUpdatePassword = () => {\r\n    \r\n  }\r\n\r\n  render() {\r\n    const jdbcDataSourceItems = this.state.jdbcDataSources.map((ds, index) => \r\n      <tr key={index}>\r\n        <td>{ds.name}</td>\r\n        <td>{ds.connectionUrl}</td>\r\n        <td>{ds.type}</td>\r\n        <td>{ds.username}</td>\r\n        <td>{ds.ping}</td>\r\n        <td><button onClick={() => this.showEditPanel(ds)}>update</button></td>\r\n        <td><button onClick={() => this.delete(ds.id)}>delete</button></td>\r\n        <td><button onClick={() => this.ping(ds.id)}>ping</button></td>\r\n      </tr>\r\n    );\r\n\r\n    const mode = this.state.id === null ? 'New' : 'Update';\r\n\r\n    return (\r\n      <div>\r\n        <h1>Data Sources</h1>\r\n        <div>\r\n          <h2>Table</h2>\r\n\r\n          <table>\r\n            <thead>\r\n            </thead>\r\n            <tbody>\r\n              {jdbcDataSourceItems}\r\n            </tbody>\r\n          </table>\r\n\r\n        </div>\r\n        <button onClick={() => this.showEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'lg-modal-panel'} >\r\n\r\n          <div>\r\n            <h3>{mode}</h3>\r\n            <form>\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Connection Url</label>\r\n              <textarea\r\n                row=\"3\"\r\n                type=\"text\" \r\n                name=\"connectionUrl\" \r\n                value={this.state.connectionUrl}\r\n                onChange={this.handleInputChange} >\r\n              </textarea>\r\n\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} />\r\n              <button onClick={this.enableUpdatePassword}>Update password</button>\r\n\r\n              <label>Type</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"type\" \r\n                value={this.state.type}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Ping</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"ping\" \r\n                value={this.state.ping}\r\n                onChange={this.handleInputChange} />\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n              <button onClick={this.ping}>Ping</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSources;\r\n","\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n  state = { \r\n    dashboards: [],\r\n    showEditPanel: false,\r\n    name: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const dashboard = {\r\n      name: this.state.name\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.props.history.push(`/dashboard/edit/${dashboardId}`);\r\n      });\r\n  }\r\n\r\n  update = (dashboardId) => {\r\n    this.props.history.push(`/dashboard/edit/${dashboardId}`);\r\n  }\r\n\r\n  delete = (dashboardId) => {\r\n    console.log('delete', dashboardId);\r\n    axios.delete('/ws/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        this.fetchBoards();\r\n      });\r\n  }\r\n\r\n  jump = () => {\r\n    this.props.history.push('/overview');\r\n  }\r\n\r\n  render() {\r\n    const panelClass = this.state.showEditPanel ? 'right-drawer display-block' : 'right-drawer display-none';\r\n\r\n    const dashboardRows = this.state.dashboards.map((d, index) => \r\n      <tr key={index}>\r\n        <td>{d.id}</td>\r\n        <td>{d.name}</td>\r\n        <td><button onClick={() => this.update(d.id)}>update</button></td>\r\n        <td><button onClick={() => this.delete(d.id)}>delete</button></td>\r\n      </tr>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        Board\r\n        <button onClick={this.jump}>Overview</button>\r\n        <button onClick={() => this.setState({ showEditPanel: true })}>Add</button>\r\n\r\n        <table>\r\n          <thead>\r\n          </thead>\r\n          <tbody>\r\n            {dashboardRows}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className={panelClass}>\r\n          <div>New dashboard</div>\r\n          <button onClick={() => this.setState({showEditPanel: false })}>Close</button>\r\n          <button onClick={this.save}>Save</button>\r\n          <form>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    console.log('GridDraggable onMouseMove', event);\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    console.log('onMouseDown', event);\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    console.log('GridResizer onMouseMove', event);\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      x: this.props.x,\r\n      y: this.props.y,\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    console.log('GridItem onMouseMove', event);\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    console.log('editWidget', widgetId);\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n\r\n        // IMPORTANT! React-Table uses onClick internally to trigger\r\n        // events like expanding SubComponents and pivots.\r\n        // By default a custom 'onClick' handler will override this functionality.\r\n        // If you want to fire the original onClick handler, call the\r\n        // 'handleOriginal' function.\r\n        if (handleOriginal) {\r\n          handleOriginal();\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  renderWidgetContent = () => {\r\n    const widget = this.props;\r\n    let widgetItem = (<div>NONE</div>);\r\n    if (widget.type === 'table') {\r\n\r\n      const headers = [];\r\n      const queryResult = widget.queryResult;\r\n      if (queryResult !== undefined \r\n        && queryResult.length !== 0 \r\n        && Array.isArray(queryResult)) {\r\n        const obj = queryResult[0];\r\n        const keys = Object.keys(obj);\r\n        for (const key of keys) {\r\n          headers.push({\r\n            Header: key,\r\n            accessor: key\r\n          })\r\n        }\r\n      }\r\n\r\n      widgetItem = (\r\n        <ReactTable\r\n          data={queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n          getTdProps={this.onTdPropsChange}\r\n        />\r\n      );\r\n    } \r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    let styles = {\r\n      left: this.state.x,\r\n      top: this.state.y,\r\n      width: this.props.width,\r\n      height: this.props.height,\r\n      zIndex: 1\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {this.props.name}\r\n\r\n          <div className=\"icon-button-group\" style={{marginRight: '20px'}}>\r\n            <div className=\"icon-btn\" onClick={() => this.editWidget(this.props.id)}>\r\n              <i className=\"fas fa-edit fa-fw\"></i>\r\n            </div>\r\n            <div className=\"icon-btn\" onClick={() => this.removeWidget(this.props.id)}>\r\n              <i className=\"fas fa-trash-alt fa-fw\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        <GridDraggable \r\n          onMouseUp={this.onMouseUp}\r\n          onMouseDown={this.onMouseDown}\r\n          onMouseMove={this.onMouseMove}\r\n          mode={this.state.mode}\r\n          snapToGrid={this.props.snapToGrid} />\r\n\r\n        <GridResizable \r\n          onMouseUp={this.onMouseUp}\r\n          onMouseDown={this.onMouseDown}\r\n          onMouseMove={this.onMouseMove}\r\n          mode={this.state.mode} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridItem;","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let styles = {\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px'\r\n    };\r\n\r\n    if (this.props.showGridlines) {\r\n      styles.backgroundSize = '15px 15px';\r\n      styles.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = this.props.widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={styles} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport GridLayout from '../components/GridLayout';\r\n\r\nconst options = [\r\n  { value: 'chocolate', label: 'Chocolate' },\r\n  { value: 'strawberry', label: 'Strawberry' },\r\n  { value: 'vanilla', label: 'Vanilla' }\r\n];\r\n\r\nconst widgets = [\r\n   {\r\n    id: 1,\r\n    name: 'title1',\r\n    x: 0,\r\n    y: 0,\r\n    width: 100,\r\n    height: 100\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'title2',\r\n    x: 100,\r\n    y: 100,\r\n    width: 100,\r\n    height: 100\r\n  }\r\n];\r\n\r\nclass Test extends React.PureComponent {\r\n\r\n  state = {\r\n    selectedOption: null,\r\n    data: [\r\n      {firstName: 'a1', lastName: 'b1'},\r\n      {firstName: 'a2', lastName: 'b2'},\r\n      {firstName: 'a3', lastName: 'b3'}\r\n    ]\r\n  }\r\n\r\n  onChange = (newValue) => {\r\n    console.log('change',newValue);\r\n  }\r\n\r\n  submit = () => {\r\n    console.log('submit', );\r\n  }\r\n\r\n  handleChange = (selectedOption) => {\r\n    this.setState({ selectedOption });\r\n    console.log(`Option selected:`, selectedOption);\r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    console.log('editWidget', widgetId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n          <GridLayout \r\n            width={800}\r\n            height={600}\r\n            snapToGrid={false}\r\n            showGridlines={true}\r\n            widgets={widgets} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react';\r\n\r\nclass QuerySlicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const isChecked = target.checked;\r\n\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const checkBoxes = this.props.checkBoxes;\r\n    let checkBoxItems = [];\r\n    if (checkBoxes !== undefined && checkBoxes.length !== 0) {\r\n      checkBoxItems = this.props.checkBoxes.map((box, index) => \r\n        <div key={index}>\r\n          <input \r\n            type=\"checkbox\" \r\n            name={box.value} \r\n            value={box.value} \r\n            checked={box.isChecked} \r\n            onChange={this.handleChange}\r\n            />\r\n            {box.value}\r\n          <br/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button onClick={this.toggleSelectAll}>Toggle Select All {this.state.isSelectAll}</button>\r\n        <div>\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuerySlicer;\r\n","import React from 'react';\n\nclass NumberRange extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        min\n        <input type=\"number\" name=\"min\" />\n        max\n        <input type=\"number\" name=\"max\" />\n      </div>\n    );\n  }\n}\n\nexport default NumberRange;","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};","import React, { Component } from 'react';\r\nimport QuerySlicer from \"./QuerySlicer\";\r\nimport NumberRange from \"./NumberRange\";\r\nimport * as util from '../api/Util';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nclass FilterViewPanel extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      dashboardId: null,\r\n      filters: []\r\n    };\r\n  }\r\n\r\n  fetchFilters = (dashboardId) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      dashboardId: dashboardId\r\n    })\r\n\r\n    axios.get('/ws/filter/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          filters: result,\r\n        }, this.queryFilters);\r\n      });\r\n  }\r\n\r\n  queryFilters = () => {\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === 'slicer') {\r\n        const queryRequest = filter.data;\r\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\r\n          .then(res => {\r\n            const result = res.data;\r\n            const index = filters.findIndex(f => f.id === result.id);\r\n            const newFilters = [...this.state.filters];\r\n            const queryResult = JSON.parse(result.data);\r\n            const checkBoxes = [];\r\n\r\n            if (!util.isArrayEmpty(queryResult)) {\r\n              for (let i = 0; i < queryResult.length; i++) {\r\n                const values = Object.values(queryResult[i]);\r\n                for (const val of values) {\r\n                  checkBoxes.push({\r\n                    value: val,\r\n                    isChecked: false\r\n                  });\r\n                }\r\n              }\r\n            }\r\n\r\n            newFilters[index].queryResult = queryResult;\r\n            newFilters[index].checkBoxes = checkBoxes;\r\n\r\n            this.setState({\r\n              filters: newFilters\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderFilterPanel = () => {\r\n    const filterPanel = [];\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === 'slicer') {\r\n        const checkBoxes = filter.checkBoxes;\r\n        filterPanel.push(\r\n          (\r\n            <div className=\"filter-card\">\r\n              <div className=\"filter-card-title\">\r\n                {filter.name}\r\n                <div className=\"icon-button-group\">\r\n                  <div className=\"icon-btn\" onClick={() => this.edit(filter.id)}>\r\n                    <i className=\"fas fa-edit fa-fw\"></i>\r\n                  </div>\r\n                  <div className=\"icon-btn\" onClick={() => this.remove(filter.id)}>\r\n                    <i className=\"fas fa-trash-alt fa-fw\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <QuerySlicer \r\n                  key={i} \r\n                  filterId={filter.id} \r\n                  checkBoxes={checkBoxes} \r\n                  onChange={this.onQuerySlicerChange} \r\n                />\r\n              </div>\r\n            </div>\r\n          )\r\n        );\r\n      } else if (filter.type === 'number-range') {\r\n        filterPanel.push(<NumberRange key={i} />);\r\n      } else if (filter.type === 'date-range') {\r\n\r\n      }\r\n    }\r\n    return filterPanel;\r\n  }\r\n\r\n  edit = (filterId) => {\r\n    this.props.onEdit(filterId);\r\n  }\r\n\r\n  remove = (filterId) => {\r\n    axios.delete('/ws/filter/' + filterId)\r\n      .then(res => {\r\n        const index = this.state.filters.findIndex(f => f.id === filterId);\r\n        const newFilters = [...this.state.filters];\r\n        newFilters.splice(index, 1);\r\n        this.setState({\r\n          filters: newFilters\r\n        });\r\n      });\r\n  }\r\n\r\n  onQuerySlicerChange = (filterId, checkBoxes) => {\r\n    const index = this.state.filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...this.state.filters];\r\n    newFilters[index].checkBoxes = [...checkBoxes];\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n\r\n    // TODO: select all.\r\n    // const isSelectAll = checked.length === checkBoxes.length;    \r\n  }\r\n\r\n  applyFilters = () => {\r\n    console.log('applyFilters');\r\n    const { filters } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === 'slicer') {\r\n        const checkBoxes = filter.checkBoxes;\r\n        const paramValues = [];\r\n        for (let j = 0; j < checkBoxes.length; j++) {\r\n          const checkBox = checkBoxes[j];\r\n          if (checkBox.isChecked) {\r\n            paramValues.push(checkBox.value);\r\n          }\r\n        }\r\n        filterParams.push({\r\n          param: filter.data.param,\r\n          value: paramValues\r\n        });\r\n      }\r\n    }\r\n\r\n    this.props.onApplyFilters(filterParams);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h5>FilterViewPanel</h5>\r\n        <button onClick={this.applyFilters}>Run</button>\r\n        <div className=\"filterViewPanel\">\r\n          {this.renderFilterPanel()}\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterViewPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as util from '../api/Util';\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      snapToGrid: false,\r\n      showGridlines: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const width = thisNode.clientWidth;\r\n    // const height = parentNode.clientHeight;\r\n    this.setState({\r\n      width: width - 20,\r\n      height: 600\r\n    });\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, filterParams) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n\r\n    axios.get('/ws/widget/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result,\r\n        }, this.queryWidgets(filterParams));\r\n      });\r\n  }\r\n\r\n  queryWidgets = (filterParams) => {\r\n    console.log('queryWidgets', filterParams);\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const widgets = this.state.widgets;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      axios.post('/ws/jdbcquery/widget/' + widget.id, params)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const index = widgets.findIndex(w => w.id === result.id);\r\n          const newWidgets = [...this.state.widgets];\r\n          newWidgets[index].queryResult = JSON.parse(result.data);\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const isChecked = target.checked;\r\n    this.setState({\r\n      [name]: isChecked\r\n    })\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    console.log('onWidgetMove', widget);\r\n    // FIXME: use save button to update position and size of all widgets at the same time.\r\n    axios.post('/ws/widget/position', widget)\r\n      .then(res => {\r\n        const index = this.state.widgets.findIndex(w => w.id === widget.id);\r\n        const newWidgets = [...this.state.widgets];\r\n        newWidgets[index].x = widget.x;\r\n        newWidgets[index].y = widget.y;\r\n        newWidgets[index].width = widget.width;\r\n        newWidgets[index].height = widget.height;\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n      \r\n  }\r\n\r\n  onWidgetRemove = (widgetId) => {\r\n    axios.delete('/ws/widget/' + widgetId)\r\n      .then(res => {\r\n        const index = this.state.widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...this.state.widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const widgetItems = this.state.widgets.map((widget, index) => {\r\n      \r\n      const headers = [];\r\n      const queryResult = widget.queryResult;\r\n      if (!util.isArrayEmpty(queryResult)) {\r\n        const obj = queryResult[0];\r\n        const keys = Object.keys(obj);\r\n        for (const key of keys) {\r\n          headers.push({\r\n            Header: key,\r\n            accessor: key\r\n          })\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div key={index}>\r\n          <ReactTable\r\n            data={queryResult}\r\n            columns={headers}\r\n            minRows={0}\r\n            showPagination={false}\r\n          />\r\n        </div>);\r\n    });\r\n\r\n    return (\r\n      <div className=\"testPanel\">\r\n        <h3>WidgetViewPanel</h3>\r\n        <input \r\n          type=\"checkbox\" \r\n          name=\"snapToGrid\"\r\n          value=\"snapToGrid\"\r\n          checked={this.state.snapToGrid} \r\n          onChange={this.handleChange}\r\n          />\r\n          snapToGrid\r\n        <br/>\r\n        <input \r\n          type=\"checkbox\" \r\n          name=\"showGridlines\"\r\n          value=\"showGridlines\"\r\n          checked={this.state.showGridlines} \r\n          onChange={this.handleChange}\r\n          />\r\n          showGridlines\r\n        <br/>\r\n        \r\n        <GridLayout \r\n          width={this.state.width}\r\n          height={this.state.height}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.onWidgetRemove} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","const CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOption = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      data: legend,\r\n      orient: 'vertical',\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['50%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as util from '../api/Util';\r\nimport * as echartsApi from '../api/EchartsApi';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\n\r\nconst PIE = 'pie';\r\nconst TABLE = 'table';\r\nconst CHART_TYPES = [TABLE, PIE];\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      filters: [],\r\n      widgetId: null,\r\n      name: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: null,\r\n      queryResult: [],\r\n      filterId: null,\r\n      filterParams: [],\r\n      chartType: 'table',\r\n      aggrKey: '',\r\n      aggrValue: '',\r\n      chartOption: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('WidgetEditPanel', 'componentDidMount');\r\n  }\r\n\r\n  fetchWidget = async (widgetId, dashboardId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    const filters = await webApi.fetchFiltersByDashboardId(dashboardId);\r\n    this.setState({ \r\n      filters: filters \r\n    });\r\n\r\n    if (widgetId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n\r\n      if (filters.length !== 0) {\r\n        this.setState({\r\n          filterId: filters[0].id\r\n        });\r\n      }\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            widgetId: widgetId,\r\n            name: result.name,\r\n            x: result.x,\r\n            y: result.y,\r\n            width: result.width,\r\n            height: result.height,\r\n            sqlQuery: result.sqlQuery,\r\n            jdbcDataSourceId: result.jdbcDataSourceId,\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    this.setState({ \r\n      jdbcDataSourceId: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChartTypeChange = (event) => {\r\n    this.setState({ \r\n      chartType: event.target.value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const widget ={\r\n      id: this.state.widgetId,\r\n      name: this.state.name,\r\n      dashboardId: this.props.dashboardId,\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n    \r\n    axios.post('/ws/widget', widget)\r\n      .then(res => {\r\n        \r\n      });\r\n  }\r\n\r\n  close = () => {\r\n    this.props.onClose();\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  addFilterParam = (event) => {\r\n    event.preventDefault();\r\n    const filterId = this.state.filterId;\r\n    const index = this.state.filterParams.findIndex(f => f === filterId);\r\n    if (index === -1) {\r\n      const newFilterParams = [...this.state.filterParams];\r\n      newFilterParams.push(filterId);\r\n      this.setState({\r\n        filterParams: newFilterParams\r\n      });\r\n    } \r\n  }\r\n\r\n  removeFilterParam = (filterId, event) => {\r\n    event.preventDefault();\r\n    const index = this.state.filterParams.findIndex(f => f === filterId);\r\n    if (index !== -1) {\r\n      const newFilterParams = [...this.state.filterParams];\r\n      newFilterParams.splice(index, 1);\r\n      this.setState({\r\n        filterParams: newFilterParams\r\n      });\r\n    } \r\n  }\r\n\r\n  handleFilterChange = (event) => {\r\n    this.setState({ \r\n      filterId: event.target.value\r\n    });\r\n  }\r\n\r\n  generateChart = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.chartType === PIE) {\r\n      const { \r\n        aggrKey, \r\n        aggrValue, \r\n        queryResult \r\n      } = this.state;\r\n      if (!util.isArrayEmpty(queryResult)) {\r\n        let legend = [];\r\n        let series = [];\r\n        for (let i = 0; i < queryResult.length; i++) {\r\n          const row = queryResult[i];\r\n          legend.push(row[aggrKey]);\r\n          series.push({\r\n            name: row[aggrKey],\r\n            value: row[aggrValue]\r\n          });\r\n        }\r\n        const chartOption = echartsApi.getPieOption(legend, series);\r\n        this.setState({\r\n          chartOption: chartOption\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const dataSourceOptions = this.state.jdbcDataSources.map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const filterOptions = this.state.filters.map(f =>\r\n      <option value={f.id} key={f.id}>{f.id}</option>\r\n    );\r\n\r\n    const filterParamItems = this.state.filterParams.map(f =>\r\n      <div key={f}>\r\n        <div>value: {f}</div>\r\n        <button onClick={(event) => this.removeFilterParam(f, event)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const chartOptionList = CHART_TYPES.map(o =>\r\n      <option value={o} key={o}>{o}</option>\r\n    );\r\n\r\n    const headers = [];\r\n    const queryResult = this.state.queryResult;\r\n    let queryResultItem;\r\n    if (!util.isArrayEmpty(queryResult)) {\r\n      const obj = queryResult[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        })\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={this.state.queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResult}</div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>WidgetEditPanel: {this.state.widgetId}</h3>\r\n        <button onClick={this.save}>Save</button>\r\n        <button onClick={this.runQuery}>Run Query</button>\r\n\r\n        <form>\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>DataSource</label>\r\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n            {dataSourceOptions}\r\n          </select>\r\n        \r\n          <label>SQL Query</label>\r\n          <AceEditor\r\n            style={{ marginTop: '8px' }}\r\n            value={this.state.sqlQuery}\r\n            mode=\"mysql\"\r\n            theme=\"xcode\"\r\n            name=\"blah2\"\r\n            onChange={this.handleAceEditorChange}\r\n            height={'300px'}\r\n            width={'100%'}\r\n            fontSize={15}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              enableBasicAutocompletion: true,\r\n              enableLiveAutocompletion: true,\r\n              enableSnippets: false,\r\n              showLineNumbers: true,\r\n              tabSize: 2,\r\n            }}\r\n          />\r\n\r\n          <label>Result</label>\r\n          {queryResultItem}\r\n\r\n          <label>Filter Params</label>\r\n          <div>\r\n            <select value={this.state.filterId} onChange={this.handleFilterChange}>\r\n              {filterOptions}\r\n            </select>\r\n            <div>\r\n              {filterParamItems}\r\n            </div>\r\n            <button onClick={this.addFilterParam}>Add</button>\r\n            <div>\r\n              \r\n            </div>\r\n          </div>\r\n        \r\n\r\n          <label>Columns Mapping</label>\r\n          <div>column name, display name, data type</div>\r\n\r\n          <label>Chart Options</label>\r\n          <select value={this.state.chartType} onChange={this.handleChartTypeChange}>\r\n            {chartOptionList}\r\n          </select>\r\n\r\n          <label><i class=\"fas fa-table\"></i> Table</label>\r\n          <div></div>\r\n\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"users\" by \"last name\"</div>\r\n          <label>Aggr Key</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"aggrKey\" \r\n            value={this.state.aggrKey}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>By Aggr Value</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"aggrValue\" \r\n            value={this.state.aggrValue}\r\n            onChange={this.handleInputChange} \r\n          />\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n\r\n          <ReactEcharts \r\n            option={this.state.chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n\r\n        </form>\r\n        \r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","import React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as util from '../api/Util';\r\n\r\n\r\nconst SLICER = 'slicer';\r\nconst SINGLE_VALUE= 'single';\r\nconst TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nclass FilterEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      filterId: null,\r\n      name: '',\r\n      type: 'slicer',\r\n      data: {},\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: null,\r\n      queryResult: [],\r\n      param: ''\r\n    };\r\n  }\r\n\r\n  fetchFilter = async (filterId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    if (filterId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n      this.setState({\r\n        filterId: null\r\n      })\r\n    } else {\r\n      axios.get('/ws/filter/' + filterId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const data = result.data;\r\n          this.setState({\r\n            filterId: filterId,\r\n            name: result.name,\r\n            type: result.type,\r\n            data: data\r\n          });\r\n\r\n          if (result.type === SLICER) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          }\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    this.setState({ \r\n      jdbcDataSourceId: event.target.value\r\n    });\r\n  }\r\n\r\n  handleTypeChange = (event) => {\r\n    this.setState({ \r\n      type: event.target.value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      type\r\n    } = this.state;\r\n\r\n    let filter = {\r\n      id: this.state.filterId,\r\n      name: this.state.name,\r\n      type: this.state.type,\r\n      dashboardId: this.props.dashboardId\r\n    };\r\n\r\n    if (type === SLICER) {\r\n      filter.data = {\r\n        jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n        sqlQuery: this.state.sqlQuery,\r\n        param: this.state.param\r\n      }\r\n    } else if (type === SINGLE_VALUE) {\r\n    }\r\n\r\n    axios.post('/ws/filter', filter)\r\n      .then(res => {\r\n        \r\n      });\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const dataSourceOptions = this.state.jdbcDataSources.map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const typeOptions = TYPES.map(t =>\r\n      <option value={t} key={t}>{t}</option>\r\n    );\r\n\r\n    const headers = [];\r\n    const { queryResult } = this.state;\r\n    let queryResultItem;\r\n    if (!util.isArrayEmpty(queryResult)) {\r\n      console.log('queryResult', queryResult);\r\n      const obj = queryResult[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        })\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={this.state.queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResult}</div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>FilterEditPanel: {this.state.filterId}</h3>\r\n        <button onClick={this.save}>Save</button>\r\n        <button onClick={this.runQuery}>Run</button>\r\n\r\n        <form>\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>Type</label>\r\n          <select value={this.state.type} onChange={this.handleTypeChange}>\r\n            {typeOptions}\r\n          </select>\r\n\r\n          <label>DataSource</label>\r\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n            {dataSourceOptions}\r\n          </select>\r\n        \r\n          <label>SQL Query</label>\r\n          <AceEditor\r\n            style={{ marginTop: '8px' }}\r\n            value={this.state.sqlQuery}\r\n            mode=\"mysql\"\r\n            theme=\"xcode\"\r\n            name=\"blah2\"\r\n            onChange={this.handleAceEditorChange}\r\n            height={'300px'}\r\n            width={'100%'}\r\n            fontSize={15}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              enableBasicAutocompletion: true,\r\n              enableLiveAutocompletion: true,\r\n              enableSnippets: false,\r\n              showLineNumbers: true,\r\n              tabSize: 2,\r\n            }}\r\n          />\r\n\r\n          <label>Result</label>\r\n          {queryResultItem}\r\n\r\n          <label>Param</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"param\" \r\n            value={this.state.param}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterEditPanel;","\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport FilterViewPanel from '../components/FilterViewPanel';\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\nimport FilterEditPanel from '../components/FilterEditPanel';\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nconst FILTER_TYPES = [\r\n  { value: 'slicer', label: 'Slicer' },\r\n  { value: 'number-range', label: 'Number Range' },\r\n  { value: 'date-range', label: 'Date Range' }\r\n];\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showFilterEditPanel: false,\r\n      showFilterViewPanel: false,\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      widgets: [],\r\n      filters: []\r\n    }\r\n\r\n    this.filterViewPanel = React.createRef();\r\n    this.filterEditPanel = React.createRef();\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    this.setState({\r\n      dashboardId: dashboardId\r\n    })\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  refresh = () => {\r\n    console.log('refresh');\r\n    const { dashboardId } = this.state;\r\n    this.filterViewPanel.current.fetchFilters(dashboardId);\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, null);\r\n  }\r\n\r\n  save = () => {\r\n    console.log('save');\r\n\r\n  }\r\n\r\n  openFilterEditPanel = (filterId) => {\r\n    this.filterEditPanel.current.fetchFilter(filterId);\r\n    this.setState({\r\n      showFilterEditPanel: true\r\n    });\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    const { dashboardId } = this.state;\r\n    this.widgetEditPanel.current.fetchWidget(widgetId, dashboardId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>\r\n          DashboardEditView: \r\n          <input \r\n          type=\"text\" \r\n          name=\"name\" \r\n          value={this.state.name}\r\n          onChange={this.handleInputChange} />\r\n        </h3>\r\n        <button onClick={this.refresh}>Refresh</button>\r\n        <button onClick={this.save}>Save</button>\r\n        <button onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\r\n        <button onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n        <button onClick={() => this.setState({ showFilterViewPanel: true })}>Show Filters: {this.state.showFilterViewPanel}</button>\r\n        \r\n        \r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showFilterViewPanel}\r\n          onClose={() => this.setState({ showFilterViewPanel: false })}\r\n          modalClass={'right-modal-panel'} >\r\n          <FilterViewPanel \r\n            ref={this.filterViewPanel} \r\n            onEdit={this.openFilterEditPanel}\r\n            onApplyFilters={this.applyFilters}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'lg-modal-panel'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showFilterEditPanel} \r\n          onClose={() => this.setState({ showFilterEditPanel: false })}\r\n          modalClass={'lg-modal-panel'} >\r\n          <FilterEditPanel\r\n            ref={this.filterEditPanel}\r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nclass SingleTest extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  getOption = () => {\r\n    return {\r\n      title: {\r\n        text: 'Test'\r\n      },\r\n      tooltip : {\r\n        trigger: 'axis'\r\n      },\r\n      legend: {\r\n        data:['C1','C2','C3']\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          saveAsImage: {}\r\n        }\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      xAxis : [\r\n        {\r\n          type : 'category',\r\n          boundaryGap : false,\r\n          data : ['Mon','Tue','Wed','Thu','Fri','Sat','Sun']\r\n        }\r\n      ],\r\n      yAxis : [\r\n        {\r\n          type : 'value'\r\n        }\r\n      ],\r\n      series : [\r\n        {\r\n          name:'C1',\r\n          type:'line',\r\n          stack: 'Total',\r\n          areaStyle: {normal: {}},\r\n          data:[120, 132, 101, 134, 90, 230, 210]\r\n        },\r\n        {\r\n          name:'C2',\r\n          type:'line',\r\n          stack: 'Total',\r\n          areaStyle: {normal: {}},\r\n          data:[220, 182, 191, 234, 290, 330, 310]\r\n        },\r\n        {\r\n          name:'C3',\r\n          type:'line',\r\n          stack: 'Total',\r\n          areaStyle: {normal: {}},\r\n          data:[150, 232, 201, 154, 190, 330, 410]\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n\r\n  render() {\r\n    let onEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h5>SingleTest</h5>\r\n        <div style={{width: '500px'}}>\r\n          <ReactEcharts \r\n            option={this.getOption()} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts'\r\n            onEvents={onEvents} />\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default SingleTest;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport Overview from './views/Overview';\r\nimport DataSources from './views/DataSources';\r\nimport Dashboards from './views/Dashboards';\r\nimport Test from './views/Test';\r\nimport DashboardEditView from './views/DashboardEditView';\r\n\r\nimport SingleTest from './views/SingleTest';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: 'overview',\r\n      menuMin: '',\r\n      appName: 'Poli'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n  }\r\n\r\n  toggleMenu = () => {\r\n    let menuMin;\r\n    let appName;\r\n    if (this.state.menuMin === '') {\r\n      menuMin = 'menu-min';\r\n      appName = 'P';\r\n    } else {\r\n      menuMin = '';\r\n      appName = 'Poli'\r\n    }\r\n    this.setState({\r\n      menuMin: menuMin,\r\n      appName: appName\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"Nav\">\r\n          <div className=\"Nav_title-bar\">\r\n            <div className=\"Nav_title\">{this.state.appName}</div>\r\n          </div>\r\n          <div className=\"Nav_menu\">\r\n            <ul className=\"menu\">\r\n              <li>\r\n                <Link to=\"/overview\">\r\n                  <i className=\"fas fa-heartbeat fa-fw\"></i>\r\n                  <span className=\"menu-text\">Overview</span>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/datasources\">\r\n                  <i className=\"fas fa-database fa-fw\"></i>\r\n                  <span className=\"menu-text\">Data Sources</span>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/dashboards\">\r\n                  <i className=\"fas fa-chalkboard fa-fw\"></i>\r\n                  <span className=\"menu-text\">Dashboards</span>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/test\">Test</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/single-test\">SingleTest</Link>\r\n              </li>\r\n              \r\n            </ul>\r\n            <div className=\"Nav__toggle-menu\">\r\n              <div style={{margin: '5px 0px 5px 15px', color: 'red'}} onClick={this.toggleMenu}>\r\n                <i class=\"fas fa-arrows-alt-h fa-fw fa-lg\"></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={`Content ${this.state.menuMin}`}>\r\n          <Route exact path=\"/\" component={Overview} />\r\n          <Route exact path=\"/overview\" component={Overview} />\r\n          <Route exact path=\"/datasources\" component={DataSources} />\r\n          <Route exact path=\"/dashboards\" component={Dashboards} />\r\n          <Route exact path=\"/test\" component={Test} />\r\n          <Route exact path=\"/dashboard/new\" component={DashboardEditView} />\r\n          <Route exact path=\"/dashboard/edit/:id\" component={DashboardEditView} />\r\n          <Route exact path=\"/single-test\" component={SingleTest} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/poli\">\n    <App />\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}