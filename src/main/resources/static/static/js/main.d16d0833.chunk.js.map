{"version":3,"sources":["views/Login.js","views/ChangeTempPassword.js","api/WebApi.js","components/Modal.js","components/Toast.js","views/DataSource.js","components/Checkbox.js","components/Slicer.js","api/Util.js","components/NumberRange.js","api/Constants.js","components/FilterViewPanel.js","components/ColorPicker.js","components/GridDraggable.js","components/GridResizable.js","api/EchartsApi.js","components/TableWidget.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/Tabs.js","components/Select.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/DashboardFullScreenView.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","handleKeyPress","keyCode","login","_this$state","state","username","password","user","axios","post","then","res","loginResponse","data","error","errorMsg","onLoginSuccess","_this2","console","log","react_default","a","createElement","Fragment","className","type","onChange","onKeyDown","onClick","React","Component","withRouter","ChangeTempPassword","changePassword","confirmedPassword","history","push","class","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","concat","onClose","index_es","icon","size","Toast","message","showToast","setTimeout","hide","_toastRef","assertThisInitialized","toastStatus","DataSource","save","showUpdatePassword","id","connectionUrl","driverClassName","ping","ds","put","closeEditPanel","catch","result","clearEditPanel","initialState","openEditPanel","showEditPanel","confirmDelete","_this$state$objectToD","objectToDelete","delete","closeConfirmDeletionPanel","openConfirmDeletionPanel","datasource","showConfirmDeletionPanel","toggleUpdatePassword","prevState","clearSearch","searchValue","jdbcDataSources","webApi","_this$state2","_this$state2$jdbcData","_this$state2$objectTo","mode","jdbcDataSourceItems","_loop","i","includes","key","length","placeholder","style","width","src_components_Modal","rows","margin","Checkbox","toggle","checked","_this$props2","checkmarkBoxStyle","backgroundColor","Slicer","isSelectAll","toggleSelectAll","newIsSelectAll","newCheckBoxes","toConsumableArray","checkBoxes","isChecked","filterId","handleSearchValueChange","indexOf","handleCheckBoxChange","index","findIndex","x","_this$props$checkBoxe","checkBoxItems","map","box","src_components_Checkbox","jsonToArray","json","array","JSON","parse","e","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","DEFAULT_FILTER_VIEW_WIDTH","DEFAULT_DASHBOARD_HEIGHT","FilterViewPanel","fetchFilters","dashboardId","filters","queryFilters","filter","Constants","queryRequest","queryResult","queryResultData","Util","f","newFilters","_arr","values","_i2","val","_arr2","_i3","renderFilterPanel","filterPanel","filterComponent","src_components_Slicer","onSlicerChange","onSingleValueChange","isEditMode","edit","fixedWidth","onEdit","applyFilters","_this$state$filters","filterParams","filterParam","_filter$checkBoxes","paramValues","j","checkBox","remark","param","onApplyFilters","splice","ColorPicker","handleClick","showPalette","handleClose","handleChange","color","rgb","rgba","r","g","b","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","WIDGET_BORDER","GridDraggable","onMouseDown","preventDefault","gridItemNode","ReactDOM","findDOMNode","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","CHART_COLORS","getPieOption","pieKey","pieValue","legend","series","row","tooltip","orient","center","radius","getPieOptionTemplate","TableWidget","_this$props$data","_this$props$columns","columns","_this$props$drillThro","drillThrough","columnHeaders","forEach","column","columnName","header","Header","accessor","d","Cell","href","es","defaultPageSize","previousText","nextText","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","instance","handleOriginal","drills","widgetDrillThrough","onChartClick","echarts","onChartLegendselectchanged","echart","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","_this$props$queryResu","widgetItem","src_components_TableWidget","chartOption","EchartsApi","echarts_for_react_lib_default","option","onEvents","_this$props2$style","_style$showBorder","showBorder","borderStyle","styles","border","marginRight","components_GridDraggable","components_GridResizable","GridLayout","_this$props$widgets","widgets","showGridlines","backgroundSize","backgroundImage","boxItems","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","isResizeToBase","preGridWidth","gridWidth","newWidgets","resizeWidgetsToBase","resizeWidgetsToActual","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryWidgets","params","w","handleHeightChange","onHeightChange","onBackgroundColorChange","saveWidgets","stringify","widgetViewWidth","components_ColorPicker","src_components_GridLayout","Tabs","handleTabClick","activeTab","_this$props$children","tabHeaders","tabContent","active","Select","handleOptionChange","_this$props$options","options","optionValue","optionDisplay","_this$props$allowEmpt","allowEmpty","optionList","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","_result$data","sqlQuery","jdbcDataSourceId","runQuery","_x","_x2","objectSpread","handleAceEditorChange","newValue","handleIntegerOptionChange","intValue","onSave","addDrillThrough","_this$state3","drillColumnName","drillDashboardId","newDrills","removeDrillThrough","drill","generateChart","_this$state4","_this$state4$queryRes","renderChartPreview","_this$state5","_this$state5$queryRes","chartPreview","_this$state6","components_Select","_this$state7","_this$state7$jdbcData","_this$state7$drillDas","drillItems","columnItems","col","dataType","src_components_Tabs","react_ace_lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","FilterEditPanel","fetchFilter","useQuery","_this$state2$queryRes","requireSql","DashboardEditView","loadViewByDashboardName","url","location","search","URLSearchParams","dashboardName","showFilterViewPanel","pageWidth","getPageWidth","isReadOnly","refresh","toggleAutoRefresh","autoRefreshTimerId","clearInterval","refreshInterval","interval","timerId","setInterval","filterViewPanel","current","updateLastRefreshed","refreshWidgetView","refreshFilterView","widgetViewPanel","now","Date","toTimeString","replace","lastRefreshed","dashboard","onDashboardSave","cancelEdit","onSaveWidget","showWidgetEditPanel","onSaveFilter","showFilterEditPanel","toggleFilterViewPanel","resizePageLayout","openFilterEditPanel","filterEditPanel","openWidgetEditPanel","widgetEditPanel","fullScreen","window","open","onTableCellClick","onDashboardDelete","deleteDashboard","jdbcDataSourceOptions","createRef","match","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","editButtonPanel","_this3","autoRefreshStatus","fullScreenButtonPanel","controlButtons","components_WidgetViewPanel","ref","src_components_FilterViewPanel","src_components_WidgetEditPanel","src_components_FilterEditPanel","Dashboard","fetchBoards","view","activeDashboardId","_this$state$dashboard","showEdit","sysRole","dashboardRows","menuActive","Route","path","render","views_DashboardEditView","DashboardFullScreenView","dashboardEditView","wrappedComponentRef","comp","SYS_ROLES","User","fetchUsers","users","fetchGroups","groups","tempPassword","userGroups","userGroupId","initialEditPanelState","addUserGroup","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_this$state3$users","_this$state3$groups","_this$state3$userGrou","userItems","userGroupItems","Group","fetchDashboards","group","groupDashboards","groupDashboardId","addGroupDashboard","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","UserManagement","views_Group","views_User","Account","fetchUser","apiKey","generateApiKey","MENU_ITEMS","link","Workspace","handleMenuClick","menuLink","currentMenuLink","logout","pathname","menuItems","menuList","m","menu","Link","to","isAccountMenuActive","Switch","exact","component","src_views_Dashboard","src_components_Toast","PageNotFound","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","faCircleNotch","App","isAuthorizing","_this$state$sysRole","isAuthenticated","spin","src_views_Login","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.d16d0833.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Login - componentDidMount', 'cookie');\r\n    axios.post('/auth/login/cookie')\r\n      .then(res => {\r\n        const loginResponse = res.data || {};\r\n        if (!loginResponse.error) {\r\n          this.props.onLoginSuccess(loginResponse);\r\n        }\r\n      });\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.keyCode === 13) {\r\n      this.login();\r\n    }\r\n  }\r\n\r\n  login = () => {\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password'\r\n      });\r\n      return;\r\n    }\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const loginResponse = res.data || {};\r\n        if (loginResponse.error) {\r\n          this.setState({\r\n            errorMsg: loginResponse.error\r\n          });\r\n        } else {\r\n          this.props.onLoginSuccess(loginResponse);\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div className=\"login-app-title\">Poli</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <div className=\"long-panel-body\">\r\n            <div className=\"form-group\">\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n              <label>Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n            </div>\r\n            <button className=\"button login-button\" onClick={this.login}>Login</button>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ChangeTempPassword extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n      console.log('ChangeTempPassword - componentDidMount');\r\n  }\r\n\r\n  changePassword = () => {\r\n    const {\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    if (password && confirmedPassword\r\n        && password === confirmedPassword) {\r\n      const user = {\r\n        password: password\r\n      }\r\n\r\n      axios.post('/auth/login/changepassword', user)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.props.history.push('/workspace/dashboard');\r\n        });\r\n    } else {\r\n      this.setState({\r\n        errorMsg: `Those passwords didn't match.`\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <label>{this.state.errorMsg}</label>\r\n        <div class=\"form-group\">\r\n          <label>New password</label>\r\n          <input \r\n            type=\"password\" \r\n            name=\"password\" \r\n            value={this.state.username}\r\n            onChange={this.handleInputChange} />\r\n          <label>Confirm password</label>\r\n          <input \r\n            type=\"password\" \r\n            name=\"confirmedPassword\" \r\n            value={this.state.confirmedPassword}\r\n            onChange={this.handleInputChange} />\r\n          <button onClick={this.changePassword}>Change</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ChangeTempPassword);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      modalClass = '',\r\n      title,\r\n      children\r\n    } = this.props;\r\n\r\n    const modalStatus = show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={`modal-panel ${modalClass}`}>\r\n          <div className=\"model-header row\">\r\n            <div className=\"model-title\">{title}</div>\r\n            <button className=\"model-close-button icon-button\" onClick={() => this.props.onClose()}>\r\n              <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          <div className='modal-body'>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Toast.css';\r\n\r\nclass Toast extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showToast: false,\r\n      message: ''\r\n    };\r\n\r\n    Toast._toastRef = this;\r\n  }\r\n\r\n  show = (message) => {\r\n    this.setState({ \r\n      showToast: true,\r\n      message: message\r\n    }, () => {\r\n      setTimeout(() => {\r\n        this.hide();\r\n      }, 3500);\r\n    });\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({ \r\n      showToast: false,\r\n      message: ''\r\n    });\r\n  }\r\n\r\n  static show = (message) => {\r\n    Toast._toastRef.show(message);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showToast,\r\n      message\r\n    } = this.state;\r\n\r\n    const toastStatus = showToast ? 'display-block' : 'display-none';\r\n\r\n    return (\r\n      <div className={`toast-container ${toastStatus}`}>\r\n        <button className=\"button\" onClick={this.hide}>X</button>\r\n        <div>\r\n          {message}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toast;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport './Datasource.css';\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      showUpdatePassword: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataSources();\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      driverClassName,\r\n      username,\r\n      password,\r\n      name,\r\n      ping,\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      driverClassName: driverClassName,\r\n      username: username,\r\n      name: name,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword && password) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } \r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        Toast.show(result);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        driverClassName: ds.driverClassName,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/jdbcdatasource/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (datasource) => {\r\n    this.setState({\r\n      objectToDelete: datasource,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  clearSearch = () => {\r\n    this.setState({\r\n      searchValue: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      showConfirmDeletionPanel,\r\n      searchValue,\r\n      id,\r\n      jdbcDataSources = [],\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const jdbcDataSourceItems = [];\r\n    for (let i = 0; i < jdbcDataSources.length; i++) {\r\n      const ds = jdbcDataSources[i];\r\n      const name = ds.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        jdbcDataSourceItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {name}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.ping(ds.id)}>\r\n                  <FontAwesomeIcon icon=\"plug\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchValue\"\r\n            value={this.state.searchValue}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Search...\"\r\n            style={{width: '200px'}}\r\n            />\r\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New datasource\r\n          </button>\r\n          </div>\r\n        <div className=\"table-panel\">\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Name <span className=\"required\">*</span></label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Connection Url</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label>Driver class name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"driverClassName\" \r\n              value={this.state.driverClassName}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            { mode === 'Edit' ? \r\n              (\r\n                <div style={{margin: '3px 0px 8px 0px'}}>\r\n                  <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n                </div>\r\n              ) : null\r\n            }\r\n            { mode === 'New' || showUpdatePassword ? \r\n              (\r\n                <div>\r\n                  <label>Password</label>\r\n                  <input \r\n                    type=\"password\" \r\n                    name=\"password\" \r\n                    value={this.state.password}\r\n                    onChange={this.handleInputChange} />\r\n                </div>\r\n              ) : null\r\n            }\r\n\r\n            <label>Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} />\r\n            <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    const {\r\n      name,\r\n      checked\r\n    } = this.props;\r\n\r\n    this.props.onChange(name, !checked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      checked\r\n    } = this.props;\r\n\r\n    const checkmarkBoxBgColor = checked ? '#000000' : '#FFFFFF';\r\n    const checkmarkBoxStyle = {\r\n      backgroundColor: checkmarkBoxBgColor\r\n    };\r\n\r\n    return (\r\n      <div className=\"checkbox-container\" onClick={this.toggle}>\r\n        <div className=\"checkbox-checkmark\">\r\n          <div className=\"checkbox-checkmark-box\" style={checkmarkBoxStyle}>\r\n          </div>\r\n        </div>\r\n        <div className=\"checkbox-label\">{value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport Checkbox from './Checkbox';\r\nimport './Slicer.css';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n    searchValue: ''\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    if (searchValue) {\r\n      const result = [];\r\n      const { checkBoxes } = this.props;\r\n      for (let i = 0; i < checkBoxes.length; i++) {\r\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\r\n          result.push(checkBoxes[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n\r\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      checkBoxes = []\r\n    } = this.props;\r\n    const checkBoxItems = checkBoxes.map((box, index) => \r\n      <Checkbox \r\n        key={index} \r\n        name={box.value} \r\n        value={box.value} \r\n        checked={box.isChecked} \r\n        onChange={this.handleCheckBoxChange} \r\n      />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.toggleSelectAll}>Select All {this.state.isSelectAll}</button>\r\n        <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.searchValue}\r\n            onChange={this.handleSearchValueChange}\r\n            placeholder=\"Search...\"\r\n          />\r\n        \r\n        <div className=\"slicer-body\">\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};\r\n\r\nexport const jsonToArray = (json) => {\r\n  let array;\r\n  try {\r\n    array = JSON.parse(json);\r\n  } catch(e) {\r\n    array = [];\r\n  }\r\n  return array;\r\n}\r\n","import React from 'react';\r\n\r\nclass NumberRange extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        min\r\n        <input type=\"number\" name=\"min\" />\r\n        max\r\n        <input type=\"number\" name=\"max\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberRange;","/**\r\n * Constants\r\n */\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\r\n\r\nexport const SYS_ROLE_ADMIN = 'admin';\r\nexport const SYS_ROLE_DEVELOPER = 'developer';\r\nexport const SYS_ROLE_VIEWER = 'viewer';\r\n\r\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;","import React, { Component } from 'react';\r\nimport Slicer from \"./Slicer\";\r\nimport NumberRange from \"./NumberRange\";\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './FilterViewPanel.css';\r\nimport Modal from '../components/Modal';\r\n\r\nclass FilterViewPanel extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      dashboardId: null,\r\n      filters: [],\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {}\r\n    };\r\n  }\r\n\r\n  fetchFilters = (dashboardId) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      dashboardId: dashboardId\r\n    })\r\n\r\n    axios.get('/ws/filter/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          filters: result,\r\n        }, this.queryFilters);\r\n      });\r\n  }\r\n\r\n  queryFilters = () => {\r\n    const { filters } = this.state;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === Constants.SLICER) {\r\n        const queryRequest = filter.data;\r\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\r\n          .then(res => {\r\n            const queryResult = res.data;\r\n            const queryResultData = Util.jsonToArray(queryResult.data);\r\n\r\n            const index = filters.findIndex(f => f.id === queryResult.id);\r\n            const newFilters = [...this.state.filters];\r\n            newFilters[index].queryResult = queryResult;\r\n            const type = newFilters[index].type;\r\n            if (type === Constants.SLICER) {\r\n              const checkBoxes = [];\r\n              for (let i = 0; i < queryResultData.length; i++) {\r\n                const values = Object.values(queryResultData[i]);\r\n                for (const val of values) {\r\n                  checkBoxes.push({\r\n                    value: val,\r\n                    isChecked: false\r\n                  });\r\n                }\r\n              }\r\n\r\n              newFilters[index].checkBoxes = checkBoxes;\r\n            } else if (type === Constants.SINGLE_VALUE) {\r\n              const values = Object.values(queryResultData);\r\n              let value = '';\r\n              for (const val of values) {\r\n                value = val;\r\n                break;\r\n              }\r\n              newFilters[index].value = value;\r\n            }\r\n\r\n            this.setState({\r\n              filters: newFilters\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderFilterPanel = () => {\r\n    const filterPanel = [];\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      let filterComponent = (<div>NONE</div>);\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        filterComponent = (\r\n          <Slicer \r\n            key={i} \r\n            filterId={filter.id} \r\n            checkBoxes={checkBoxes} \r\n            onChange={this.onSlicerChange} \r\n          />\r\n        );\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterComponent = (\r\n          <input \r\n            type=\"text\"  \r\n            value={filter.value}\r\n            onChange={(event) => this.onSingleValueChange(filter.id, event)} \r\n          />\r\n        );\r\n      }\r\n\r\n      filterPanel.push(\r\n        (\r\n          <div className=\"filter-card\">\r\n            <div className=\"filter-card-title\">\r\n              {filter.title}\r\n\r\n              { this.props.isEditMode ? \r\n                (\r\n                  <div className=\"icon-button-group\">\r\n                    <div className=\"inline-block\" onClick={() => this.edit(filter.id)}>\r\n                      <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n                    </div>\r\n                    <div className=\"inline-block\" onClick={() => this.openConfirmDeletionPanel(filter.id)}>\r\n                      <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n                    </div>\r\n                  </div>\r\n                ): null \r\n              }\r\n            </div>\r\n            <div>\r\n              {filterComponent}\r\n            </div>\r\n          </div>\r\n        )\r\n      );\r\n    }\r\n    return filterPanel;\r\n  }\r\n\r\n  edit = (filterId) => {\r\n    this.props.onEdit(filterId);\r\n  }\r\n\r\n  onSlicerChange = (filterId, checkBoxes) => {\r\n    const index = this.state.filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...this.state.filters];\r\n    newFilters[index].checkBoxes = [...checkBoxes];\r\n    this.setState({\r\n      filters: newFilters\r\n    });  \r\n  }\r\n\r\n  onSingleValueChange = (filterId, event) => {\r\n    const { filters } = this.state;\r\n    const value = event.target.value;\r\n    const index = filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...filters];\r\n    newFilters[index].value = value;\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n  }\r\n\r\n  applyFilters = () => {\r\n    const { \r\n      filters = []\r\n    } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      const filterParam = {};\r\n      if (filter.type === Constants.SLICER) {\r\n        const { \r\n          checkBoxes = []\r\n        } = filter;\r\n        const paramValues = [];\r\n        for (let j = 0; j < checkBoxes.length; j++) {\r\n          const checkBox = checkBoxes[j];\r\n          if (checkBox.isChecked) {\r\n            paramValues.push(checkBox.value);\r\n          }\r\n        }\r\n        filterParam.value = paramValues;\r\n        if (paramValues.length === checkBoxes.length) {\r\n          filterParam.remark = 'select all';\r\n        }\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterParam.value = filter.value;\r\n      }\r\n      filterParam.param = filter.data.param;\r\n      filterParam.type = filter.type;\r\n      filterParams.push(filterParam);\r\n    }\r\n\r\n    this.props.onApplyFilters(filterParams);\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete\r\n    } = this.state;\r\n    const filterId = objectToDelete;\r\n    axios.delete(`/ws/filter/${filterId}`)\r\n      .then(res => {\r\n        const index = this.state.filters.findIndex(f => f.id === filterId);\r\n        const newFilters = [...this.state.filters];\r\n        newFilters.splice(index, 1);\r\n        this.setState({\r\n          filters: newFilters\r\n        });\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (filterId) => {\r\n    this.setState({\r\n      objectToDelete: filterId,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n    const style = {};\r\n    if (show) {\r\n      style.width = Constants.DEFAULT_FILTER_VIEW_WIDTH + 'px';\r\n    } else {\r\n      style.width = '0px';\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-filter-panel\" style={style}>\r\n        <div>Filters</div>\r\n        <button className=\"button\" onClick={this.applyFilters}>Run</button>\r\n        <div className=\"filter-view-panel\">\r\n          {this.renderFilterPanel()}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete this filter?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterViewPanel;","import React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPalette: false\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      showPalette: !prevState.showPalette\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      showPalette: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    const rgb = color.rgb;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    this.props.onChange(rgba);\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: this.props.value\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: '2'\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.showPalette ? \r\n          (\r\n            <div style={popover}>\r\n              <div style={cover} onClick={this.handleClose} />\r\n              <ChromePicker color={this.props.value} onChange={this.handleChange} />\r\n            </div>\r\n          ) : null }\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","import * as Util from '../api/Util';\r\n\r\nconst CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOptionTemplate = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      type: 'scroll',\r\n      orient: 'vertical',\r\n      data: legend,\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['40%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport const getPieOption = (queryResultData, pieKey, pieValue) => {\r\n  let legend = [];\r\n  let series = [];\r\n  for (let i = 0; i < queryResultData.length; i++) {\r\n    const row = queryResultData[i];\r\n    legend.push(row[pieKey]);\r\n    series.push({\r\n      name: row[pieKey],\r\n      value: row[pieValue]\r\n    });  \r\n  }\r\n  return getPieOptionTemplate(legend, series);\r\n}\r\n","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport './TableWidget.css';\r\n\r\nclass TableWidget extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  render() {   \r\n    const {\r\n      data = [],\r\n      columns = [],\r\n      drillThrough = [],\r\n      error\r\n    } = this.props;\r\n\r\n    const columnHeaders = [];\r\n    columns.forEach(column => {\r\n      const columnName = column.name;\r\n      const header = {\r\n        Header: columnName,\r\n        accessor: columnName\r\n      };\r\n      if (drillThrough.length > 0) {\r\n        const index = drillThrough.findIndex(d => d.columnName === columnName);\r\n        if (index !== -1) {\r\n          const dashboardId = drillThrough[index].dashboardId;\r\n          header.Cell = (props => <a href={`/poli/workspace/dashboard/${dashboardId}?${columnName}=${props.value}`}>{props.value}</a>);\r\n        }\r\n      }\r\n\r\n      columnHeaders.push(header);\r\n    });\r\n\r\n    if (error) {\r\n      return (\r\n        <div>\r\n          {error}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ReactTable\r\n        data={data}\r\n        columns={columnHeaders}\r\n        defaultPageSize={10}\r\n        previousText={'Prev'}\r\n        nextText={'Next'}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableWidget;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport TableWidget from './TableWidget';\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough || []; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        const index = drills.findIndex(d => d.columnName === header);\r\n        if (index !== -1) {\r\n          const dashboardId = drills[index].dashboardId;\r\n          this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      chartType,\r\n      queryResult = {},\r\n      drillThrough,\r\n      data = {}\r\n    } = this.props;\r\n\r\n    const queryResultData = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    let widgetItem = (<div></div>);\r\n    if (chartType === Constants.TABLE) {\r\n      widgetItem = (\r\n        <TableWidget\r\n          data={queryResultData}\r\n          columns={columns}\r\n          error={error}\r\n          drillThrough={drillThrough}\r\n        />\r\n      );\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        pieKey,\r\n        pieValue\r\n      } = data;\r\n      const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\r\n      widgetItem = (\r\n        <ReactEcharts \r\n          option={chartOption}   \r\n          className=\"echarts\"\r\n          onEvents={onChartEvents}  \r\n        />\r\n      );\r\n    } \r\n\r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      title,\r\n      isEditMode,\r\n      style = {}\r\n    } = this.props;\r\n\r\n    const { \r\n      showBorder = false \r\n    } = style;\r\n\r\n    const borderStyle = showBorder ? '2px solid #4b4f56' : '2px solid #FFFFFF';\r\n\r\n    let styles = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: 1,\r\n      border: borderStyle\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {title}\r\n\r\n          { isEditMode ? (\r\n            <div className=\"float-right\" style={{marginRight: '20px'}}>\r\n              <div className=\"inline-block\" onClick={() => this.editWidget(id)}>\r\n                <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n              </div>\r\n              <div className=\"inline-block\" onClick={() => this.removeWidget(id)}>\r\n                <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid-box-file-button-group\">\r\n              <div className=\"inline-block\" onClick={() => this.exportJson(id)}>\r\n                <FontAwesomeIcon icon=\"file-export\" fixedWidth />\r\n              </div>\r\n              \r\n              <div className=\"inline-block\" onClick={() => this.exportCsv(id)}>\r\n                <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { isEditMode ? (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} />\r\n        ): null}\r\n\r\n        { isEditMode ? (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} />\r\n        ): null}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(GridItem);","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      backgroundColor,\r\n      widgets = [],\r\n      showGridlines\r\n    } = this.props;\r\n\r\n    let style = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      backgroundColor: backgroundColor\r\n    };\r\n\r\n    if (showGridlines) {\r\n      style.backgroundSize = '15px 15px';\r\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={style} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ColorPicker from './ColorPicker';\r\nimport Checkbox from './Checkbox';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\nimport Modal from '../components/Modal';\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      snapToGrid: false,\r\n      showGridlines: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  resizeGrid = (width, isResizeToBase) => {\r\n    const preGridWidth = this.state.gridWidth;\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n    if (isResizeToBase) {\r\n      this.resizeWidgetsToBase(newWidgets, preGridWidth);\r\n    }\r\n\r\n    const gridWidth = width - 10;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return Math.round(num * gridWidth / BASE_WIDTH);\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Math.round(num * BASE_WIDTH / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, width, filterParams) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get('/ws/widget/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(width, false);\r\n          this.queryWidgets(filterParams);\r\n        });\r\n      });\r\n  }\r\n\r\n  queryWidgets = (filterParams) => {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      axios.post('/ws/jdbcquery/widget/' + widget.id, params)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const index = widgets.findIndex(w => w.id === result.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = result;\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    this.setState({\r\n      [name]: isChecked\r\n    });\r\n  }\r\n\r\n  handleHeightChange = (event) => {\r\n    this.props.onHeightChange(event.target.value);\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    this.props.onBackgroundColorChange(color);\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete\r\n    } = this.state;\r\n    const widgetId = objectToDelete;\r\n    axios.delete(`/ws/widget/${widgetId}`)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (widgetId) => {\r\n    this.setState({\r\n      objectToDelete: widgetId,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { widgetViewWidth } = this.props;\r\n    const style = {\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {this.props.isEditMode ?\r\n        (\r\n          <div className=\"dashboard-attribute-edit-panel\">\r\n            <div className=\"inline-block\">Height:</div>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.props.height}\r\n              onChange={this.handleHeightChange} \r\n              className=\"inline-block\" \r\n              style={{width: '200px'}}\r\n              />\r\n\r\n            <div>\r\n              Background Color\r\n              <ColorPicker value={this.props.backgroundColor} onChange={this.onBackgroundColorChange} />\r\n            </div>\r\n\r\n            <Checkbox name=\"snapToGrid\" value=\"Snap to grid\" checked={this.state.snapToGrid} onChange={this.handleCheckBoxChange} />\r\n            <Checkbox name=\"showGridlines\" value=\"Show gridlines\" checked={this.state.showGridlines} onChange={this.handleCheckBoxChange} />\r\n  \r\n          </div>\r\n        ) : null}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          backgroundColor={this.props.backgroundColor}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.openConfirmDeletionPanel} />\r\n        \r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete this widget?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","import React from 'react';\r\nimport './Tabs.css';\r\n\r\nclass Tabs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const activeTab = this.props.activeTab;\r\n    this.setState({\r\n      activeTab: activeTab\r\n    });\r\n  }\r\n\r\n  handleTabClick = (title) => {\r\n    this.setState({\r\n      activeTab: title\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children = []\r\n    } = this.props;\r\n\r\n    const {\r\n      activeTab\r\n    } = this.state;\r\n\r\n    const tabHeaders = [];\r\n    let tabContent = null;\r\n    for (let i = 0; i < children.length; i++) {\r\n      const title = children[i].props.title;\r\n      let active = '';\r\n      if (title === activeTab) {\r\n        active = 'tab-header-active';\r\n        tabContent = children[i].props.children;\r\n      }\r\n      \r\n      tabHeaders.push(\r\n        <li className={`tab-header-item ${active}`} key={i} onClick={() => this.handleTabClick(title)}>{title}</li>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"tab-container\">\r\n        <ul className=\"tab-header\">\r\n          {tabHeaders}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {tabContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Select extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    optionDisplay: PropTypes.string,\r\n    optionValue: PropTypes.string,\r\n    allowEmpty: PropTypes.bool\r\n  };\r\n\r\n  handleOptionChange = (event) => {\r\n    const name = this.props.name;\r\n    const value = event.target.value;\r\n    this.props.onChange(name, value);\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      value,\r\n      options = [],\r\n      optionValue,\r\n      optionDisplay,\r\n      allowEmpty = true\r\n    } = this.props;\r\n\r\n    const optionList = [];\r\n    if (allowEmpty) {\r\n      optionList.push(\r\n        <option value=\"\" key=\"\"></option>\r\n      );\r\n    }\r\n    \r\n    options.forEach((option, index) => {\r\n      let value;\r\n      let display;\r\n      if (optionValue && optionDisplay) {\r\n        // The options contain objects.\r\n        value = option[optionValue];\r\n        display = option[optionDisplay];\r\n      } else {\r\n        // The options contain string or number.\r\n        value = option;\r\n        display = option;\r\n      }\r\n      \r\n      optionList.push(\r\n        <option value={value} key={index}>{display}</option>\r\n      ) \r\n    });\r\n\r\n    return (\r\n      <select value={value} onChange={this.handleOptionChange}>\r\n        {optionList}\r\n      </select>\r\n    )\r\n  };\r\n}\r\n\r\nexport default Select;","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport TableWidget from './TableWidget';\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nimport './WidgetEditPanel.css';\r\n\r\nimport Checkbox from './Checkbox';\r\nimport Tabs from '../components/Tabs';\r\nimport Select from '../components/Select';\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      title: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: {},\r\n      chartType: Constants.TABLE,\r\n      style: {\r\n        showBorder: false\r\n      },\r\n      pieKey: '',\r\n      pieValue: '',\r\n      chartOption: {},\r\n      drills: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId, dashboardId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { chartType } = result;\r\n          if (chartType === Constants.PIE) {\r\n            const {\r\n              pieKey,\r\n              pieValue\r\n            } = result.data;\r\n            this.setState({\r\n              pieKey: pieKey,\r\n              pieValue: pieValue\r\n            });\r\n          }\r\n\r\n          this.setState({\r\n            widgetId: widgetId,\r\n            title: result.title,\r\n            x: result.x,\r\n            y: result.y,\r\n            width: result.width,\r\n            height: result.height,\r\n            sqlQuery: result.sqlQuery,\r\n            chartType: result.chartType,\r\n            jdbcDataSourceId: result.jdbcDataSourceId,\r\n            drills: result.drillThrough,\r\n            style: result.style\r\n          }, () => {\r\n            this.runQuery();\r\n          });\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    if (name === 'showBorder') {\r\n      const style = {...this.state.style};\r\n      style.showBorder = isChecked;\r\n      this.setState({\r\n        style: style\r\n      });\r\n    }\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      widgetId,\r\n      title,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      chartType,\r\n      drills,\r\n      style\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      title: title,\r\n      dashboardId: this.props.dashboardId,\r\n      chartType: chartType,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      drillThrough: drills,\r\n      style: style\r\n    }\r\n\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const {\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n      widget.data = {\r\n        pieKey: pieKey,\r\n        pieValue: pieValue\r\n      }\r\n    }\r\n\r\n    if (widgetId === null) {\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          queryResult: result\r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = () => {\r\n    const { \r\n      drills,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const filterId = this.state.filterId;\r\n    const index = drills.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill) => {\r\n    const { drills } = this.state;\r\n    const index = drills.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.splice(index, 1);\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = () => {\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        pieKey, \r\n        pieValue, \r\n        queryResult = {}\r\n      } = this.state;\r\n      console.log(\"generateChart\", pieKey, pieValue);\r\n      const data = Util.jsonToArray(queryResult.data);\r\n      const chartOption = EchartsApi.getPieOption(data, pieKey, pieValue);\r\n      this.setState({\r\n        chartOption: chartOption\r\n      });\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      queryResult = {},\r\n    } = this.state;\r\n    const columns = queryResult.columns || [];\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        chartOption,\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n\r\n      chartPreview = (\r\n        <div>\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label>Aggr Key (string)</label>\r\n          <Select\r\n            name={'pieKey'}\r\n            value={pieKey}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n            />\r\n\r\n\r\n          <label>By Aggr Value (number)</label>\r\n          <Select\r\n            name={'pieValue'}\r\n            value={pieValue}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n            />\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      queryResult,\r\n      jdbcDataSources = [],\r\n      drills,\r\n      drillDashboards = []\r\n    } = this.state;\r\n\r\n    const data = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    const drillItems = (drills || []).map(drill =>\r\n      <div key={drill.columnName}>\r\n        <div>Column: {drill.columnName}</div>\r\n        <div>Dashboard: {drill.dashboardId}</div>\r\n        <button onClick={() => this.removeDrillThrough(drill)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const columnItems = columns.map(col =>\r\n      <div key={col.name}>{col.name} {col.dataType}</div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        \r\n        <div className=\"form-panel\">\r\n          <Tabs activeTab=\"basic\">\r\n            <div title=\"basic\">\r\n              <label>Title</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"title\" \r\n                value={this.state.title}\r\n                onChange={this.handleInputChange} \r\n              />\r\n\r\n              <Checkbox name=\"showBorder\" value=\"Show border\" checked={this.state.style.showBorder} onChange={this.handleCheckBoxChange} />\r\n            </div>\r\n\r\n            <div title=\"Query\">\r\n              <label>DataSource</label>\r\n              <Select\r\n                name={'jdbcDataSourceId'}\r\n                value={this.state.jdbcDataSourceId}\r\n                onChange={this.handleIntegerOptionChange}\r\n                options={jdbcDataSources}\r\n                optionDisplay={'name'}\r\n                optionValue={'id'}\r\n                />\r\n            \r\n              <label>SQL Query</label>\r\n              <AceEditor\r\n                style={{ marginTop: '8px' }}\r\n                value={this.state.sqlQuery}\r\n                mode=\"mysql\"\r\n                theme=\"xcode\"\r\n                name=\"blah2\"\r\n                onChange={this.handleAceEditorChange}\r\n                height={'300px'}\r\n                width={'100%'}\r\n                fontSize={15}\r\n                showPrintMargin={false}\r\n                showGutter={true}\r\n                highlightActiveLine={true}\r\n                setOptions={{\r\n                  showLineNumbers: true,\r\n                  tabSize: 2\r\n                }}\r\n              />\r\n\r\n              <div className=\"mt-3\">\r\n                <button className=\"button\" onClick={this.runQuery}>Run Query</button>\r\n              </div>\r\n\r\n              <label>Result</label>\r\n              <TableWidget\r\n                data={data}\r\n                columns={columns}\r\n                error={error}\r\n              />\r\n\r\n              <label>Columns Mapping</label>\r\n              <div>\r\n                {columnItems}\r\n              </div>\r\n            </div>\r\n\r\n            <div title=\"Chart\">\r\n              <label>Chart Options</label>\r\n              <Select\r\n                name={'chartType'}\r\n                value={this.state.chartType}\r\n                onChange={this.handleOptionChange}\r\n                options={Constants.CHART_TYPES}\r\n              />\r\n              <label>Preview</label>\r\n              {this.renderChartPreview()}  \r\n            </div>\r\n\r\n            <div title=\"Drill through\">\r\n              <label>Drill through</label>\r\n              <label>Column</label>\r\n              <Select\r\n                name={'drillColumnName'}\r\n                value={this.state.drillColumnName}\r\n                options={columns}\r\n                onChange={this.handleOptionChange}\r\n                optionDisplay={'name'}\r\n                optionValue={'name'}\r\n              />\r\n\r\n              <label>Dashboard</label>\r\n              <Select\r\n                name={'drillDashboardId'}\r\n                value={this.state.drillDashboardId}\r\n                options={drillDashboards}\r\n                onChange={this.handleIntegerOptionChange}\r\n                optionDisplay={'name'}\r\n                optionValue={'id'}\r\n              />\r\n              <div>\r\n                {drillItems}\r\n              </div>\r\n              <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\r\n            </div>\r\n          </Tabs>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","import React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\nimport TableWidget from './TableWidget';\r\nimport Select from './Select';\r\n\r\n\r\nimport './FilterEditPanel.css';\r\n\r\nclass FilterEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      filterId: null,\r\n      title: '',\r\n      type: Constants.SLICER,\r\n      data: {},\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: {},\r\n      param: '',\r\n    };\r\n  }\r\n\r\n  fetchFilter = async (filterId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    if (filterId === null) {\r\n      this.setState({\r\n        filterId: null\r\n      })\r\n    } else {\r\n      axios.get('/ws/filter/' + filterId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { \r\n            data,\r\n            type\r\n          } = result;\r\n          this.setState({\r\n            filterId: filterId,\r\n            title: result.title,\r\n            type: result.type,\r\n            jdbcDataSourceId: result.jdbcDataSourceId,\r\n            data: data\r\n          });\r\n\r\n          if (type === Constants.SLICER) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              param: data.param\r\n            });\r\n          } else if (type === Constants.SINGLE_VALUE) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              param: data.param\r\n            });\r\n          }\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({ \r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      filterId,\r\n      title,\r\n      type,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      param\r\n    } = this.state;\r\n\r\n    const filter = {\r\n      title: title,\r\n      type: type,\r\n      dashboardId: this.props.dashboardId,\r\n      jdbcDataSourceId: jdbcDataSourceId\r\n    };\r\n\r\n    if (type === Constants.SLICER) {\r\n      filter.data = {\r\n        sqlQuery: sqlQuery,\r\n        param: param\r\n      }\r\n    } else if (type === Constants.SINGLE_VALUE) {\r\n      filter.data = {\r\n        useQuery: false,\r\n        sqlQuery: sqlQuery,\r\n        param: param,\r\n      }\r\n    }\r\n\r\n    if (filterId === null) {\r\n      axios.post('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      filter.id = filterId;\r\n      axios.put('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { \r\n      queryResult = {},\r\n      jdbcDataSources = [],\r\n      type\r\n    } = this.state;\r\n\r\n    const data = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    const requireSql = type === Constants.SLICER;\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        <button className=\"button\" onClick={this.runQuery}>Run</button>\r\n\r\n        <div className=\"form-panel\">\r\n          <label>Title</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"title\" \r\n            value={this.state.title}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>Type</label>\r\n          <Select\r\n            name={'type'} \r\n            value={this.state.type} \r\n            onChange={this.handleOptionChange}\r\n            options={Constants.FILTER_TYPES}\r\n          />\r\n\r\n          {\r\n            requireSql ?\r\n            (\r\n              <React.Fragment>\r\n                <label>DataSource</label>\r\n                <Select\r\n                  name={'jdbcDataSourceId'} \r\n                  value={this.state.jdbcDataSourceId} \r\n                  onChange={this.handleIntegerOptionChange}\r\n                  options={jdbcDataSources}\r\n                  optionDisplay={'name'}\r\n                  optionValue={'id'}\r\n                />\r\n    \r\n                <label>SQL Query</label>\r\n                <AceEditor\r\n                  style={{marginTop: '8px'}}\r\n                  value={this.state.sqlQuery}\r\n                  mode=\"mysql\"\r\n                  theme=\"xcode\"\r\n                  name=\"blah2\"\r\n                  onChange={this.handleAceEditorChange}\r\n                  height={'300px'}\r\n                  width={'100%'}\r\n                  fontSize={15}\r\n                  showPrintMargin={false}\r\n                  showGutter={true}\r\n                  highlightActiveLine={true}\r\n                  setOptions={{\r\n                    showLineNumbers: true,\r\n                    tabSize: 2\r\n                  }}\r\n                />\r\n\r\n                <label>Result</label>\r\n                <TableWidget\r\n                  data={data}\r\n                  columns={columns}\r\n                  error={error}\r\n                />\r\n              </React.Fragment>\r\n            ) : null\r\n          }\r\n\r\n          <label>Param</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"param\" \r\n            value={this.state.param}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport FilterViewPanel from '../components/FilterViewPanel';\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\nimport FilterEditPanel from '../components/FilterEditPanel';\r\n\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showFilterEditPanel: false,\r\n      showFilterViewPanel: true,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      isEditMode: false,\r\n      isReadOnly: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      refreshInterval: 15,\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      style: {},\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.filterViewPanel = React.createRef();\r\n    this.filterEditPanel = React.createRef();\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    console.log('DashboardEditView', dashboardId);\r\n\r\n    const url = this.props.location.search;\r\n    console.log('url', url);\r\n    const params = new URLSearchParams(url);\r\n    console.log('params', params);\r\n    for(let pair of params.entries()) {\r\n      console.log(pair[0]+ ', '+ pair[1]); \r\n    } \r\n\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = this.state.showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    console.log('componentDidMount', pageWidth, widgetViewWidth);\r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const result = res.data;\r\n            this.setState({\r\n              dashboardId: result.id,\r\n              name: result.name,\r\n              style: result.style\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = () => {\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    const dashboardName = params.get('name');\r\n    const showFilter = params.get('showFilter');\r\n\r\n    const showFilterViewPanel = showFilter == 'true';\r\n\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    \r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth,\r\n      isReadOnly: true,\r\n      name: dashboardName,\r\n      showFilterViewPanel: showFilterViewPanel\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            style: result.style\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth - 40;\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const { refreshInterval } = this.state;\r\n      let interval = parseInt(refreshInterval, 10) || 15;\r\n      interval = interval < 1 ? 1 : interval;\r\n      const timerId = setInterval(() => {\r\n        this.filterViewPanel.current.applyFilters();\r\n        this.updateLastRefreshed();\r\n      }, interval * 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    this.refreshWidgetView();\r\n    this.refreshFilterView();\r\n    this.updateLastRefreshed();\r\n  }\r\n\r\n  refreshFilterView = () => {\r\n    const { \r\n      dashboardId\r\n    } = this.state;\r\n    this.filterViewPanel.current.fetchFilters(dashboardId);\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n  } \r\n\r\n  updateLastRefreshed = () => {\r\n    const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\r\n    this.setState({\r\n      lastRefreshed: now\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    console.log('save');\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      style\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      style: style\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.widgetViewPanel.current.saveWidgets();\r\n\r\n    this.props.onDashboardSave(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  onSaveFilter = () => {\r\n    this.setState({ \r\n      showFilterEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  toggleFilterViewPanel = () => {\r\n    const { \r\n      showFilterViewPanel\r\n    } = this.state;\r\n    this.resizePageLayout(!showFilterViewPanel);\r\n  }\r\n\r\n  resizePageLayout = (showFilterViewPanel) => {\r\n    const pageWidth = this.getPageWidth();;\r\n    let widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    this.widgetViewPanel.current.resizeGrid(widgetViewWidth, true);\r\n\r\n    this.setState({\r\n      showFilterViewPanel: showFilterViewPanel,\r\n      widgetViewWidth: widgetViewWidth\r\n    }); \r\n  }\r\n\r\n  openFilterEditPanel = (filterId) => {\r\n    this.filterEditPanel.current.fetchFilter(filterId);\r\n    this.setState({\r\n      showFilterEditPanel: true\r\n    });\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    const { dashboardId } = this.state;\r\n    this.widgetEditPanel.current.fetchWidget(widgetId, dashboardId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/workspace/dashboard/view?name=${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onTableCellClick = () => {\r\n    this.props.history.push(`/workspace/dashboard/drill?name=&`);\r\n  }\r\n\r\n  onHeightChange = (height) => {\r\n    const style = {...this.state.style};\r\n    style.height = height;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    const style = {...this.state.style};\r\n    style.backgroundColor = color;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {},\r\n    } = this.state;\r\n    const dashboardId = objectToDelete.id;\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        this.props.onDashboardDelete(dashboardId);\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  deleteDashboard = () => {\r\n    const { \r\n      dashboardId,\r\n      name\r\n    } = this.state;\r\n    const dashboard = {\r\n      id: dashboardId,\r\n      name: name\r\n    }\r\n    this.openConfirmDeletionPanel(dashboard);\r\n  }\r\n\r\n  openConfirmDeletionPanel = (dashboard) => {\r\n    this.setState({\r\n      objectToDelete: dashboard,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      lastRefreshed,\r\n      isEditMode,\r\n      isReadOnly\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel = null;\r\n    const controlButtons = (\r\n      <React.Fragment>\r\n        <span className=\"mr-3\">Last refreshed: {lastRefreshed}</span>\r\n        {\r\n          autoRefreshStatus === 'OFF' ? \r\n          (\r\n            <input \r\n              type=\"text\" \r\n              name=\"refreshInterval\" \r\n              value={this.state.refreshInterval}\r\n              onChange={this.handleInputChange}\r\n              className=\"inline-block\" \r\n              style={{width: '50px'}}\r\n            />\r\n          ) : null\r\n        }\r\n        <button className=\"button square-button mr-3\" onClick={this.toggleAutoRefresh}>\r\n          {\r\n            autoRefreshStatus === 'ON' ? \r\n            (\r\n              <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\r\n            ) : \r\n            (\r\n              <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\r\n            )\r\n          }\r\n        </button>\r\n        \r\n        <button className=\"button mr-3\" onClick={this.toggleFilterViewPanel}>Show Filters</button>\r\n        <button className=\"button square-button\" onClick={this.refresh}>\r\n          <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n\r\n    if (!isReadOnly) {\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button mr-3\" onClick={this.cancelEdit}>Cancel</button>\r\n            <button className=\"button mr-3\" onClick={this.save}>Save</button>\r\n            <button className=\"button mr-3\" onClick={this.deleteDashboard}>Delete</button>\r\n            <button className=\"button mr-3\" onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\r\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button square-button mr-3\" onClick={this.fullScreen}>\r\n              <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={this.edit}>Edit</button>\r\n            {controlButtons}\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      fullScreenButtonPanel = controlButtons;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-menu-panel row\">\r\n          <div className=\"float-left\">\r\n            {\r\n              isReadOnly || !isEditMode ?\r\n              (\r\n                <div className=\"dashboard-name\">\r\n                  {this.state.name}\r\n                </div>\r\n              ) :(\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"name\" \r\n                  value={this.state.name}\r\n                  onChange={this.handleInputChange} \r\n                  className=\"dashboard-name\"\r\n                  />\r\n              )\r\n            }\r\n            \r\n          </div>\r\n          <div className=\"float-right\">\r\n            {fullScreenButtonPanel}\r\n            {editButtonPanel}\r\n          </div>\r\n        </div>\r\n\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          isEditMode={this.state.isEditMode}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          onHeightChange={this.onHeightChange}\r\n          onBackgroundColorChange={this.onBackgroundColorChange}\r\n          {...this.state.style}\r\n        />\r\n        <FilterViewPanel \r\n          ref={this.filterViewPanel} \r\n          onEdit={this.openFilterEditPanel}\r\n          onApplyFilters={this.applyFilters}\r\n          isEditMode={this.state.isEditMode}\r\n          show={this.state.showFilterViewPanel}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'dashboard-edit-widget-dialog'} \r\n          title={'Widget Edit'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showFilterEditPanel}\r\n          onClose={() => this.setState({ showFilterEditPanel: false })}\r\n          modalClass={'dashboard-edit-filter-dialog'} \r\n          title={'Filter Edit'}>\r\n          <FilterEditPanel\r\n            ref={this.filterEditPanel}\r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveFilter}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {this.state.objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\nimport './Dashboard.css';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as Constants from '../api/Constants';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      activeDashboardId: 0,\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false,\r\n      name: ''\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      style: {\r\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\r\n        backgroundColor: 'rgba(233, 235, 238, 1)'\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.closeEditPanel();\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.setState({\r\n      activeDashboardId: dashboardId\r\n    });\r\n    this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n  }\r\n\r\n  onDashboardSave = (dashboardId) => {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  onDashboardDelete = (dashboardId) => {\r\n    this.fetchBoards();\r\n    this.setState({\r\n      activeDashboardId: 0\r\n    });\r\n    this.props.history.push('/workspace/dashboard');\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dashboards = [],\r\n      activeDashboardId,\r\n      searchValue\r\n    } = this.state;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.props;\r\n    const showEdit = sysRole === Constants.SYS_ROLE_VIEWER ? false : true;\r\n\r\n    const dashboardRows = [];\r\n    for (let i = 0; i < dashboards.length; i++) {\r\n      const dashboard = dashboards[i];\r\n      const name = dashboard.name;\r\n      const menuActive = activeDashboardId === dashboard.id ? 'dashboard-menu-item-active' : '';\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        dashboardRows.push(\r\n          (\r\n            <div key={i} className={`dashboard-menu-item ellipsis ${menuActive}`} onClick={() => this.view(dashboard.id)}>\r\n              {name}\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dashboard-sidebar\">\r\n          <div style={{margin: '5px'}}>\r\n            {\r\n              showEdit ? (\r\n                <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\r\n                  <FontAwesomeIcon icon=\"plus\" /> New\r\n                </button>\r\n              ) : null\r\n            }\r\n            <input \r\n              type=\"text\" \r\n              name=\"searchValue\" \r\n              value={this.state.searchValue}\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleInputChange} />\r\n          </div>\r\n          <div>\r\n            {dashboardRows}\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route \r\n            path=\"/workspace/dashboard/:id\" \r\n            render={(props) => <DashboardEditView key={props.match.params.id} onDashboardSave={this.onDashboardSave} onDashboardDelete={this.onDashboardDelete} />} \r\n            />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'small-modal-panel'} \r\n          title={'New'} >\r\n          <div>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              />\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.dashboardEditView.loadViewByDashboardName();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView wrappedComponentRef={comp => (this.dashboardEditView = comp)} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst SYS_ROLES = ['developer', 'viewer'];\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      searchValue: '',\r\n      showUpdatePassword: false,\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      this.setState({\r\n        id: user.id,\r\n        username: user.username,\r\n        name: user.name,\r\n        tempPassword: '',\r\n        sysRole: user.sysRole,\r\n        userGroups: user.userGroups\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      userGroupId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: sysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      if (showUpdatePassword && tempPassword) {\r\n        user.tempPassword = tempPassword;\r\n      }\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/user/' + id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n      });\r\n  }\r\n\r\n  addUserGroup = () => {\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId) => {\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      showUpdatePassword,\r\n      users = [],\r\n      groups = [],\r\n      userGroups = []\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const userItems = users.map(user => \r\n      <div key={user.id} className=\"user-card\">\r\n        <p>\r\n          {user.username}\r\n          {user.name}\r\n          {user.sysRole}\r\n          <button className=\"button\" onClick={() => this.openEditPanel(user)}>update</button>\r\n          <button className=\"button\" onClick={() => this.delete(user.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups.length; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups.length; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId}>\r\n                <div>Group: {groups[j].name}</div>\r\n                <button className=\"button\" onClick={() => this.removeUserGroup(groupId)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchValue\"\r\n            value={this.state.searchValue}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Search...\"\r\n            style={{width: '200px'}}\r\n          />\r\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New User\r\n          </button>\r\n        </div>\r\n        <div className=\"row\">\r\n          {userItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'} \r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            { mode === 'Edit' ? \r\n              (\r\n                <div style={{margin: '3px 0px 8px 0px'}}>\r\n                  <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n                </div>\r\n              ) : null\r\n            }\r\n            { mode === 'New' || showUpdatePassword ? \r\n              (\r\n                <div>\r\n                  <label>Password</label>\r\n                  <input \r\n                    type=\"password\" \r\n                    name=\"tempPassword\" \r\n                    value={this.state.tempPassword}\r\n                    onChange={this.handleInputChange} />\r\n                </div>\r\n              ) : null\r\n            }\r\n            \r\n            <label>System Role</label>\r\n            <Select\r\n              name={'sysRole'}\r\n              value={this.state.sysRole}\r\n              onChange={this.handleOptionChange}\r\n              options={SYS_ROLES}\r\n              allowEmpty={false}\r\n            />\r\n            \r\n            <br/>\r\n            \r\n            <label>Groups</label>\r\n            <Select\r\n              name={'userGroupId'}\r\n              value={this.state.userGroupId}\r\n              onChange={this.handleIntegerOptionChange}\r\n              options={groups}\r\n              optionDisplay={'name'}\r\n              optionValue={'id'}\r\n            />\r\n            <button className=\"button\" onClick={this.addUserGroup}>Add</button>\r\n            <div>\r\n              {userGroupItems}\r\n            </div>\r\n\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      this.setState({\r\n        id: group.id,\r\n        name: group.name,\r\n        groupDashboards: group.groupDashboards\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      groupDashboardId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/group/' + id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n      });\r\n  }\r\n\r\n  addGroupDashboard= () => {\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    console.log('addGroupDashboard', groupDashboardId);\r\n    console.log('addGroupDashboard', groupDashboards);\r\n\r\n    if (groupDashboardId) {\r\n      const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n      if (index === -1) {\r\n        const newGroupDashboards = [...groupDashboards];\r\n        newGroupDashboards.push(groupDashboardId);\r\n        this.setState({\r\n          groupDashboards: newGroupDashboards\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId) => {\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const groupItems = groups.map(group => \r\n      <div key={group.id} className=\"group-card\">\r\n        <p>\r\n          {group.name}\r\n          <button className=\"button\" onClick={() => this.openEditPanel(group)}>update</button>\r\n          <button className=\"button\" onClick={() => this.delete(group.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards.length; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards.length; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId}>\r\n                <div>Name: {dashboards[j].name}</div>\r\n                <button className=\"button\" onClick={() => this.removeGroupDashboard(dashboardId)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchValue\"\r\n            value={this.state.searchValue}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Search...\"\r\n            style={{width: '200px'}}\r\n            />\r\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New Group\r\n          </button>\r\n        </div>\r\n        <div className=\"row\">\r\n          {groupItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'} \r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            <label>Dashboards</label>\r\n            <Select\r\n              name={'groupDashboardId'}\r\n              value={this.state.groupDashboardId}\r\n              onChange={this.handleIntegerOptionChange}\r\n              options={dashboards}\r\n              optionDisplay={'name'}\r\n              optionValue={'id'}\r\n            />\r\n            <button className=\"button\" onClick={this.addGroupDashboard}>Add</button>\r\n            <div>\r\n              {groupDashboardItems}\r\n            </div>\r\n            \r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\n\r\nimport User from './User';\r\nimport Group from './Group';\r\nimport Tabs from '../components/Tabs';\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Tabs activeTab=\"Group\">\r\n          <div title=\"Group\">\r\n            <Group />\r\n          </div>\r\n          <div title=\"User\">\r\n            <User />\r\n          </div>\r\n        </Tabs>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const user = res.data;\r\n        this.setState({\r\n          id: user.id,\r\n          username: user.username,\r\n          name: user.name,\r\n          sysRole: user.sysRole,\r\n          apiKey: user.apiKey\r\n        });\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        return;\r\n      }  \r\n\r\n      user.password = password;\r\n    }\r\n\r\n    axios.put('/ws/user/account', user)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>Account</div>\r\n        <div className=\"form-panel\">   \r\n          <label>Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label>System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label>API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button className=\"button\" onClick={this.generateApiKey}>Generate new API Key</button>\r\n          <br/>\r\n\r\n          <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n          {\r\n            showUpdatePassword ?\r\n            (\r\n              <React.Fragment>\r\n                <br/>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label>Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n            ) : null\r\n          }\r\n\r\n          <br/>\r\n          <button className=\"button\" onClick={this.save}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","import React from 'react';\r\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\n\r\nimport Toast from '../components/Toast';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport './Workspace.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data source',\r\n    icon: 'database'\r\n  }, \r\n  {\r\n    link: '/workspace/usermanagement',\r\n    value: 'User Management',\r\n    icon: 'users-cog'\r\n  }\r\n];\r\n\r\nconst ACCOUNT_MENU_LINK = '/workspace/account';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    this.setState({\r\n      currentMenuLink: pathname,\r\n    });\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  logout = () => {\r\n    axios.get('/auth/logout')\r\n      .then(res => {\r\n        this.props.history.push('/login');\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n    } = this.state;\r\n\r\n    const {\r\n      username,\r\n      sysRole\r\n    } = this.props;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.link === '/workspace/dashboard');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li key={menu.link} className={active}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"workspace-nav\">  \r\n          <div className=\"workspace-name\">Poli</div>\r\n          <ul className=\"workspace-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div className=\"workspace-account-menu\">\r\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\r\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\r\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\r\n                <span className=\"workspace-nav-menu-text\">{username}</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"workspace-logout-button inline-block\" onClick={this.logout}>\r\n              <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"workspace-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route exact path=\"/workspace/dashboard/view\" component={DashboardFullScreenView} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n            <Route exact path=\"/workspace/usermanagement\" component={UserManagement} />\r\n            <Route path=\"/workspace/dashboard\" component={() => <Dashboard {...this.props} />} />\r\n          </Switch>\r\n        </div>\r\n        <Toast />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Workspace);\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, withRouter, Component } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport ChangeTempPassword from './views/ChangeTempPassword';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      sysRole: '',\r\n      isAuthorizing: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      sysRole = ''\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    console.log('App - componentDidMount',isAuthenticated);\r\n\r\n    if (!isAuthenticated) {\r\n      console.log('App - componentDidMount', 'cookie');\r\n      this.setState({\r\n        isAuthorizing: true\r\n      }, () => {\r\n        axios.post('/auth/login/cookie')\r\n          .then(res => {\r\n            const loginResponse = res.data;\r\n            if (loginResponse.error) {\r\n              this.setState({\r\n                sysRole: '',\r\n                isAuthorizing: false\r\n              }, () => {\r\n                this.props.history.push('/login');\r\n              });\r\n            } else {\r\n              this.onLoginSuccess(loginResponse);\r\n            }\r\n          });\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n  onLoginSuccess = (loginResponse = {}) => {\r\n    if (loginResponse.tempPassword) {\r\n      this.props.history.push('/changepassword');\r\n    } else {\r\n      this.setState({\r\n        username: loginResponse.username,\r\n        sysRole: loginResponse.sysRole,\r\n        isAuthorizing: false\r\n      }, () => {\r\n        this.props.history.push('/workspace/dashboard');\r\n      });\r\n    }\r\n  }\r\n   \r\n  render() {\r\n    const {\r\n      username,\r\n      sysRole,\r\n      isAuthorizing\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n    console.log('App - render', sysRole, isAuthenticated);\r\n\r\n    if (isAuthorizing) {\r\n      return (\r\n        <FontAwesomeIcon icon='cicle-north' spin={true} size=\"3x\" />\r\n      )\r\n    }\r\n    \r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/login\" render={() => <Login onLoginSuccess={this.onLoginSuccess} />} />\r\n          <Route path=\"/changepassword\" component={ChangeTempPassword} />\r\n          <PrivateRoute \r\n            authenticated={isAuthenticated} \r\n            path='/workspace' \r\n            component={Workspace} \r\n            username={username}\r\n            sysRole={sysRole} \r\n          />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} {...rest}/>\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}