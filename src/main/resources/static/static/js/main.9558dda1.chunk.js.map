{"version":3,"sources":["api/WebApi.js","components/Modal.js","views/DataSource.js","components/Slicer.js","api/Util.js","components/NumberRange.js","api/Constants.js","components/FilterViewPanel.js","components/ColorPicker.js","components/GridDraggable.js","components/GridResizable.js","api/EchartsApi.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/SingleTest.js","App.js","index.js"],"names":["fetchDataSources","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","t0","stop","this","apply","arguments","fetchFiltersByDashboardId","_ref3","_callee3","dashboardId","_context3","concat","_x2","_ref4","_callee4","url","_context4","_x3","Modal","_this","modalStatus","props","show","react_default","createElement","className","modalClass","onClick","onClose","children","React","Component","DataSource","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","target","value","name","setState","defineProperty","save","preventDefault","_this$state","state","showUpdatePassword","id","connectionUrl","username","password","ds","type","ping","put","then","res","post","closeEditPanel","delete","console","log","clearEditPanel","initialState","openEditPanel","showEditPanel","openDeletePanel","toggleUpdatePassword","prevState","jdbcDataSources","webApi","mode","_this2","_this$state2","jdbcDataSourceItems","map","index","key","passwordInput","onChange","placeholder","components_Modal","row","Slicer","isSelectAll","searchValue","handleChange","isChecked","checked","newCheckBoxes","toConsumableArray","checkBoxes","findIndex","x","filterId","toggleSelectAll","newIsSelectAll","i","length","handleSearchValueChange","result","indexOf","push","checkBoxItems","undefined","box","isArrayEmpty","array","Array","isArray","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","DEFAULT_FILTER_VIEW_WIDTH","FilterViewPanel","fetchFilters","filters","queryFilters","filter","Constants","queryRequest","queryResult","JSON","parse","f","newFilters","Util","values","_i2","val","_i3","renderFilterPanel","filterPanel","_loop","filterComponent","components_Slicer","onSlicerChange","onSingleValueChange","isEditMode","edit","remove","onEdit","splice","applyFilters","filterParams","filterParam","paramValues","j","checkBox","remark","param","onApplyFilters","style","width","ColorPicker","displayColorPicker","color","r","g","b","handleClick","handleClose","rgb","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","WIDGET_BORDER","GridDraggable","onMouseDown","gridItemNode","ReactDOM","findDOMNode","assertThisInitialized","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","class","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","CHART_COLORS","getPieOption","legend","series","tooltip","orient","center","radius","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTdPropsChange","rowInfo","column","instance","e","handleOriginal","renderWidgetContent","_this$props","chartType","widgetItem","headers","obj","keys","_i","Header","accessor","es","columns","minRows","showPagination","getTdProps","_this$props$data","chartOption","EchartsApi","echarts_for_react_lib_default","option","styles","marginRight","components_GridDraggable","components_GridResizable","GridLayout","showGridlines","backgroundSize","backgroundImage","boxItems","widgets","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","isResizeToBase","preGridWidth","gridWidth","newWidgets","resizeWidgetsToBase","resizeWidgetsToActual","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryWidgets","params","w","saveWidgets","stringify","widgetViewWidth","components_ColorPicker","src_components_GridLayout","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","jdbcDataSourceId","sqlQuery","_x","handleAceEditorChange","newValue","handleDataSourceChange","handleChartTypeChange","handleColumnChange","handleDrillColumnChange","drillColumnName","handleDrillDashboardChange","drillDashboardName","aggrKey","aggrValue","onSave","runQuery","queryResultData","addDrillThrough","_this$state3","drills","d","columnName","dashboardName","newDrills","removeDrillThrough","drill","generateChart","_this$state4","renderChartPreview","_this$state5","columnOptions","col","chartPreview","queryResultItem","_this$state6","dataSourceOptions","chartOptionList","o","dashboardOptions","dash","drillItems","columnItems","dataType","react_ace_lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","FilterEditPanel","fetchFilter","handleTypeChange","useQuery","typeOptions","t","DashboardEditView","getPageWidth","toggleAutoRefresh","autoRefreshTimerId","clearInterval","timerId","setInterval","refreshWidgetView","now","Date","toTimeString","replace","lastRefreshed","refresh","refreshFilterView","filterViewPanel","current","widgetViewPanel","dashboard","onSaveDashboard","cancelEdit","onSaveWidget","showWidgetEditPanel","onSaveFilter","showFilterEditPanel","toggleFilterViewPanel","showFilterViewPanel","resizePageLayout","pageWidth","openFilterEditPanel","filterEditPanel","openWidgetEditPanel","widgetEditPanel","fullScreen","window","open","onTableCellClick","history","jdbcDataSourceOptions","createRef","match","statusButtonPanel","_this3","autoRefreshStatus","Fragment","components_WidgetViewPanel","ref","components_FilterViewPanel","components_WidgetEditPanel","components_FilterEditPanel","withRouter","Dashboard","fetchBoards","view","dashboardRows","Route","path","render","views_DashboardEditView","SingleTest","getOption","title","text","trigger","toolbox","feature","saveAsImage","grid","containLabel","xAxis","boundaryGap","yAxis","stack","areaStyle","normal","onChartClick","echarts","onChartLegendselectchanged","echart","onEvents","click","legendselectchanged","App","menuItem","currentMenuItem","Link","to","Switch","exact","component","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.9558dda1.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n} \r\n\r\n\r\n","import React from 'react';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const modalStatus = this.props.show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={this.props.modalClass}>\r\n          <button onClick={() => this.props.onClose()}>Close</button>\r\n          <div className='modal-body'>\r\n            {this.props.children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      username: '',\r\n      password: '',\r\n      type: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      username: '',\r\n      password: '',\r\n      type: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Fetch all datasources\r\n    this.fetchDataSources();\r\n    \r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      username,\r\n      password,\r\n      name,\r\n      type,\r\n      ping,\r\n    } = this.state;\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      username: username,\r\n      name: name,\r\n      type: type,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.fetchDataSources();\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      // New\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    console.log('delete', id);\r\n    axios.delete('/ws/jdbcdatasource/' + id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n      });\r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        console.log('ping', res.data);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        type: ds.type,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  openDeletePanel = () => {\r\n\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      id,\r\n      jdbcDataSources\r\n    } = this.state;\r\n\r\n    const jdbcDataSourceItems = jdbcDataSources.map((ds, index) => \r\n      <div key={index} className=\"datasource-panel\">\r\n        <p>\r\n          {ds.name}\r\n          {ds.connectionUrl}\r\n          {ds.username}\r\n          {ds.ping}\r\n          <button onClick={() => this.openEditPanel(ds)}>update</button>\r\n          <button onClick={() => this.delete(ds.id)}>delete</button>\r\n          <button onClick={() => this.ping(ds.id)}>ping</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    let mode;\r\n    let passwordInput = (\r\n      <div>\r\n        <label>Password</label>\r\n        <input \r\n          type=\"password\" \r\n          name=\"password\" \r\n          value={this.state.password}\r\n          onChange={this.handleInputChange} />\r\n      </div>\r\n    );\r\n    if (id === null) {\r\n      mode = 'New';\r\n    } else {\r\n      mode = 'Update';\r\n      if (!showUpdatePassword) {\r\n        passwordInput = (\r\n          <button onClick={this.toggleUpdatePassword}>Update password</button>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Data Sources</h1>\r\n        <input\r\n          type=\"text\"\r\n          name=\"searchValue\"\r\n          placeholder=\"Data source name...\"\r\n          />\r\n        <div className=\"row\">\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n        <button onClick={() => this.openEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'lg-modal-panel'} >\r\n\r\n          <div>\r\n            <h3>{mode}</h3>\r\n            <form>\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Connection Url</label>\r\n              <textarea\r\n                row=\"3\"\r\n                type=\"text\" \r\n                name=\"connectionUrl\" \r\n                value={this.state.connectionUrl}\r\n                onChange={this.handleInputChange} >\r\n              </textarea>\r\n\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n              \r\n              {passwordInput}\r\n              <br/>\r\n\r\n              <label>Type</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"type\" \r\n                value={this.state.type}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Ping</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"ping\" \r\n                value={this.state.ping}\r\n                onChange={this.handleInputChange} />\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","import React from 'react';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n    searchValue: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const isChecked = target.checked;\r\n\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    if (searchValue) {\r\n      const result = [];\r\n      const { checkBoxes } = this.props;\r\n      for (let i = 0; i < checkBoxes.length; i++) {\r\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\r\n          result.push(checkBoxes[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n\r\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\r\n    // TODO: If value is too long, add.. to the end.\r\n  }\r\n\r\n  render() {\r\n    const checkBoxes = this.props.checkBoxes;\r\n    let checkBoxItems = [];\r\n    if (checkBoxes !== undefined && checkBoxes.length !== 0) {\r\n      checkBoxItems = this.props.checkBoxes.map((box, index) => \r\n        <div key={index}>\r\n          <input \r\n            type=\"checkbox\" \r\n            name={box.value} \r\n            value={box.value} \r\n            checked={box.isChecked} \r\n            onChange={this.handleChange}\r\n            />\r\n            {box.value}\r\n          <br/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button onClick={this.toggleSelectAll}>Toggle Select All {this.state.isSelectAll}</button>\r\n        <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.searchValue}\r\n            onChange={this.handleSearchValueChange} \r\n          />\r\n        \r\n        <div>\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};","import React from 'react';\r\n\r\nclass NumberRange extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        min\r\n        <input type=\"number\" name=\"min\" />\r\n        max\r\n        <input type=\"number\" name=\"max\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberRange;","/**\r\n * Constants\r\n */\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;","import React, { Component } from 'react';\r\nimport Slicer from \"./Slicer\";\r\nimport NumberRange from \"./NumberRange\";\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nclass FilterViewPanel extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      dashboardId: null,\r\n      filters: []\r\n    };\r\n  }\r\n\r\n  fetchFilters = (dashboardId) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      dashboardId: dashboardId\r\n    })\r\n\r\n    axios.get('/ws/filter/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          filters: result,\r\n        }, this.queryFilters);\r\n      });\r\n  }\r\n\r\n  queryFilters = () => {\r\n    const { filters } = this.state;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === Constants.SLICER) {\r\n        const queryRequest = filter.data;\r\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\r\n          .then(res => {\r\n            const result = res.data;\r\n            const queryResult = JSON.parse(result.data);\r\n\r\n            const index = filters.findIndex(f => f.id === result.id);\r\n            const newFilters = [...this.state.filters];\r\n            newFilters[index].queryResult = queryResult;\r\n            const type = newFilters[index].type;\r\n            if (type === Constants.SLICER) {\r\n              const checkBoxes = [];\r\n              if (!Util.isArrayEmpty(queryResult)) {\r\n                for (let i = 0; i < queryResult.length; i++) {\r\n                  const values = Object.values(queryResult[i]);\r\n                  for (const val of values) {\r\n                    checkBoxes.push({\r\n                      value: val,\r\n                      isChecked: false\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n\r\n              newFilters[index].checkBoxes = checkBoxes;\r\n            } else if (type === Constants.SINGLE_VALUE) {\r\n              const values = Object.values(queryResult);\r\n              let value = '';\r\n              for (const val of values) {\r\n                value = val;\r\n                break;\r\n              }\r\n              newFilters[index].value = value;\r\n            }\r\n\r\n            this.setState({\r\n              filters: newFilters\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderFilterPanel = () => {\r\n    const filterPanel = [];\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      let filterComponent = (<div>NONE</div>);\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        filterComponent = (\r\n          <Slicer \r\n            key={i} \r\n            filterId={filter.id} \r\n            checkBoxes={checkBoxes} \r\n            onChange={this.onSlicerChange} \r\n          />\r\n        );\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterComponent = (\r\n          <input \r\n            type=\"text\"  \r\n            value={filter.value}\r\n            onChange={(event) => this.onSingleValueChange(filter.id, event)} \r\n          />\r\n        );\r\n      }\r\n\r\n      filterPanel.push(\r\n          (\r\n            <div className=\"filter-card\">\r\n              <div className=\"filter-card-title\">\r\n                {filter.name}\r\n\r\n                { this.props.isEditMode ? \r\n                  (\r\n                    <div className=\"icon-button-group\">\r\n                      <div className=\"icon-btn\" onClick={() => this.edit(filter.id)}>\r\n                        <i className=\"fas fa-edit fa-fw\"></i>\r\n                      </div>\r\n                      <div className=\"icon-btn\" onClick={() => this.remove(filter.id)}>\r\n                        <i className=\"fas fa-trash-alt fa-fw\"></i>\r\n                      </div>\r\n                    </div>\r\n                  ): null \r\n                }\r\n              </div>\r\n              <div>\r\n                {filterComponent}\r\n              </div>\r\n            </div>\r\n          )\r\n        );\r\n    }\r\n    return filterPanel;\r\n  }\r\n\r\n  edit = (filterId) => {\r\n    this.props.onEdit(filterId);\r\n  }\r\n\r\n  remove = (filterId) => {\r\n    axios.delete('/ws/filter/' + filterId)\r\n      .then(res => {\r\n        const index = this.state.filters.findIndex(f => f.id === filterId);\r\n        const newFilters = [...this.state.filters];\r\n        newFilters.splice(index, 1);\r\n        this.setState({\r\n          filters: newFilters\r\n        });\r\n      });\r\n  }\r\n\r\n  onSlicerChange = (filterId, checkBoxes) => {\r\n    const index = this.state.filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...this.state.filters];\r\n    newFilters[index].checkBoxes = [...checkBoxes];\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n\r\n    // TODO: select all.\r\n    // const isSelectAll = checked.length === checkBoxes.length;    \r\n  }\r\n\r\n  onSingleValueChange = (filterId, event) => {\r\n    const { filters } = this.state;\r\n    const value = event.target.value;\r\n    const index = filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...filters];\r\n    newFilters[index].value = value;\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n  }\r\n\r\n  applyFilters = () => {\r\n    console.log('applyFilters');\r\n    const { filters } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      const filterParam = {};\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        const paramValues = [];\r\n        for (let j = 0; j < checkBoxes.length; j++) {\r\n          const checkBox = checkBoxes[j];\r\n          if (checkBox.isChecked) {\r\n            paramValues.push(checkBox.value);\r\n          }\r\n        }\r\n        filterParam.value = paramValues;\r\n        if (paramValues.length === checkBoxes.length) {\r\n          filterParam.remark = 'select all';\r\n        }\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterParam.value = filter.value;\r\n      }\r\n      filterParam.param = filter.data.param;\r\n      filterParam.type = filter.type;\r\n      filterParams.push(filterParam);\r\n    }\r\n\r\n    this.props.onApplyFilters(filterParams);\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n    const style = {};\r\n    if (show) {\r\n      style.width = Constants.DEFAULT_FILTER_VIEW_WIDTH + 'px';\r\n    } else {\r\n      style.width = '0px';\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-filter-panel\" style={style}>\r\n        <h5>FilterViewPanel</h5>\r\n        <button onClick={this.applyFilters}>Run</button>\r\n        <div className=\"filterViewPanel\">\r\n          {this.renderFilterPanel()}\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterViewPanel;","import React, { Component } from 'react';\r\nimport { ChromePicker  } from 'react-color';\r\n\r\nclass ColorPicker extends Component {\r\n   state = {\r\n    displayColorPicker: false,\r\n    color: {\r\n      r: '241',\r\n      g: '112',\r\n      b: '19',\r\n      a: '1',\r\n    },\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      displayColorPicker: !prevState.displayColorPicker\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      displayColorPicker: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    this.setState({ \r\n      color: color.rgb \r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: `rgba(${ this.state.color.r }, ${ this.state.color.g }, ${ this.state.color.b }, ${ this.state.color.a })`\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: '2'\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.displayColorPicker ? <div style={popover}>\r\n          <div style={cover} onClick={this.handleClose}/>\r\n          <ChromePicker color={this.state.color} onChange={this.handleChange} />\r\n        </div> : null }\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <i class=\"fas fa-expand-arrows-alt fa-fw\"></i>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <i class=\"fas fa-compress fa-fw\"></i>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","const CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOption = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      data: legend,\r\n      orient: 'vertical',\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['50%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n\r\n        // IMPORTANT! React-Table uses onClick internally to trigger\r\n        // events like expanding SubComponents and pivots.\r\n        // By default a custom 'onClick' handler will override this functionality.\r\n        // If you want to fire the original onClick handler, call the\r\n        // 'handleOriginal' function.\r\n        if (handleOriginal) {\r\n          handleOriginal();\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  renderWidgetContent = () => {\r\n    const { \r\n      chartType,\r\n      queryResult \r\n    } = this.props;\r\n    let widgetItem = (<div>NONE</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n      const headers = [];\r\n      if (!Util.isArrayEmpty(queryResult)) {\r\n        const obj = queryResult[0];\r\n        const keys = Object.keys(obj);\r\n        for (const key of keys) {\r\n          headers.push({\r\n            Header: key,\r\n            accessor: key\r\n          })\r\n        }\r\n      }\r\n\r\n      widgetItem = (\r\n        <ReactTable\r\n          data={queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n          getTdProps={this.onTdPropsChange}\r\n        />\r\n      );\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        name,\r\n        value\r\n      } = this.props.data;\r\n      if (!Util.isArrayEmpty(queryResult)) {\r\n        let legend = [];\r\n        let series = [];\r\n        for (let i = 0; i < queryResult.length; i++) {\r\n          const row = queryResult[i];\r\n          legend.push(row[name]);\r\n          series.push({\r\n            name: row[name],\r\n            value: row[value]\r\n          });\r\n        }\r\n        const chartOption = EchartsApi.getPieOption(legend, series);\r\n        widgetItem = (\r\n          <ReactEcharts \r\n            option={chartOption}   \r\n            className=\"echarts\" />\r\n        );\r\n      }\r\n      \r\n    } \r\n\r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    let styles = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: 1\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {this.props.name}\r\n\r\n          { this.props.isEditMode ? (\r\n            <div className=\"icon-button-group\" style={{marginRight: '20px'}}>\r\n              <div className=\"icon-btn\" onClick={() => this.editWidget(this.props.id)}>\r\n                <i className=\"fas fa-edit fa-fw\"></i>\r\n              </div>\r\n              <div className=\"icon-btn\" onClick={() => this.removeWidget(this.props.id)}>\r\n                <i className=\"fas fa-trash-alt fa-fw\"></i>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"icon-button-group\" style={{marginRight: '20px'}}>\r\n              <div className=\"icon-btn\" onClick={() => this.exportJson(this.props.id)}>\r\n                <i class=\"fas fa-file-export fa-fw\"></i>\r\n              </div>\r\n              <div className=\"icon-btn\" onClick={() => this.exportCsv(this.props.id)}>\r\n                <i className=\"fas fa-file-csv fa-fw\"></i>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { this.props.isEditMode ? (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} />\r\n        ): null}\r\n\r\n        { this.props.isEditMode ? (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} />\r\n        ): null}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridItem;","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let styles = {\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px'\r\n    };\r\n\r\n    if (this.props.showGridlines) {\r\n      styles.backgroundSize = '15px 15px';\r\n      styles.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = this.props.widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={styles} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport ColorPicker from './ColorPicker';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\n\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      height: 600,\r\n      snapToGrid: false,\r\n      showGridlines: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  resizeGrid = (width, isResizeToBase) => {\r\n    const preGridWidth = this.state.gridWidth;\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n    if (isResizeToBase) {\r\n      this.resizeWidgetsToBase(newWidgets, preGridWidth);\r\n    }\r\n\r\n    const gridWidth = width - 20;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return Math.round(num * gridWidth / BASE_WIDTH);\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Math.round(num * BASE_WIDTH / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, width, filterParams) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get('/ws/widget/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(width, false);\r\n          this.queryWidgets(filterParams);\r\n        });\r\n      });\r\n  }\r\n\r\n  queryWidgets = (filterParams) => {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      axios.post('/ws/jdbcquery/widget/' + widget.id, params)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const index = widgets.findIndex(w => w.id === result.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = JSON.parse(result.data);\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const isChecked = target.checked;\r\n    this.setState({\r\n      [name]: isChecked\r\n    })\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });\r\n  }\r\n\r\n  onWidgetRemove = (widgetId) => {\r\n    axios.delete('/ws/widget/' + widgetId)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { widgetViewWidth } = this.props;\r\n    const style = {\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {this.props.isEditMode ?\r\n        (\r\n          <div>\r\n            <input \r\n            type=\"checkbox\" \r\n            name=\"snapToGrid\"\r\n            value=\"snapToGrid\"\r\n            checked={this.state.snapToGrid} \r\n            onChange={this.handleChange} />\r\n            snapToGrid\r\n            <br/>\r\n            <input \r\n              type=\"checkbox\" \r\n              name=\"showGridlines\"\r\n              value=\"showGridlines\"\r\n              checked={this.state.showGridlines} \r\n              onChange={this.handleChange} />\r\n              showGridlines\r\n            <br/>\r\n\r\n            <label>Background Color</label>\r\n            \r\n            <ColorPicker />\r\n\r\n          </div>\r\n        ) : null}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.onWidgetRemove} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      name: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: null,\r\n      columns: [],\r\n      queryResultData: [],\r\n      chartType: Constants.TABLE,\r\n      aggrKey: '',\r\n      aggrValue: '',\r\n      chartOption: {},\r\n      drills: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardName: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId, dashboardId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    const filters = await webApi.fetchFiltersByDashboardId(dashboardId);\r\n    this.setState({ \r\n      filters: filters \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n\r\n      if (filters.length !== 0) {\r\n        this.setState({\r\n          filterId: filters[0].id\r\n        });\r\n      }\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            widgetId: widgetId,\r\n            name: result.name,\r\n            x: result.x,\r\n            y: result.y,\r\n            width: result.width,\r\n            height: result.height,\r\n            sqlQuery: result.sqlQuery,\r\n            chartType: result.chartType,\r\n            jdbcDataSourceId: result.jdbcDataSourceId,\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    const jdbcDataSourceId = parseInt(event.target.value, 10);\r\n    this.setState({ \r\n      jdbcDataSourceId: jdbcDataSourceId\r\n    });\r\n  }\r\n\r\n  handleChartTypeChange = (event) => {\r\n    this.setState({ \r\n      chartType: event.target.value\r\n    });\r\n  }\r\n\r\n  handleColumnChange = (name, event) => {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleDrillColumnChange = (event) => {\r\n    this.setState({ \r\n      drillColumnName: event.target.value\r\n    });\r\n  }\r\n\r\n  handleDrillDashboardChange = (event) => {\r\n    this.setState({ \r\n      drillDashboardName: event.target.value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      widgetId,\r\n      name,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      chartType,\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      name: name,\r\n      dashboardId: this.props.dashboardId,\r\n      chartType: chartType,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery\r\n    }\r\n\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const {\r\n        aggrKey,\r\n        aggrValue\r\n      } = this.state;\r\n      widget.data = {\r\n        name: aggrKey,\r\n        value: aggrValue\r\n      }\r\n    }\r\n\r\n    if (widgetId === null) {\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const columns = result.columns;\r\n        const data = JSON.parse(result.data);\r\n        this.setState({\r\n          queryResultData: data,\r\n          columns: columns \r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      drills,\r\n      drillColumnName,\r\n      drillDashboardName\r\n    } = this.state;\r\n    const filterId = this.state.filterId;\r\n    const index = drills.findIndex(d => (d.columnName === drillColumnName) && (d.dashboardName === drillDashboardName));\r\n    if (index === -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.push({\r\n        columnName: drillColumnName,\r\n        dashboardName: drillDashboardName\r\n      });\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill, event) => {\r\n    event.preventDefault();\r\n    const { drills } = this.state;\r\n    const index = drills.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardName === drill.dashboardName));\r\n    if (index !== -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.splice(index, 1);\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        aggrKey, \r\n        aggrValue, \r\n        queryResultData \r\n      } = this.state;\r\n      if (!Util.isArrayEmpty(queryResultData)) {\r\n        let legend = [];\r\n        let series = [];\r\n        for (let i = 0; i < queryResultData.length; i++) {\r\n          const row = queryResultData[i];\r\n          legend.push(row[aggrKey]);\r\n          series.push({\r\n            name: row[aggrKey],\r\n            value: row[aggrValue]\r\n          });\r\n        }\r\n        const chartOption = EchartsApi.getPieOption(legend, series);\r\n        this.setState({\r\n          chartOption: chartOption\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      columns \r\n    } = this.state;\r\n    const columnOptions = (columns || []).map(col =>\r\n      <option value={col.name} key={col.name}>{col.name}</option>\r\n    );\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      chartPreview = (\r\n        <div>\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label>Aggr Key (string)</label>\r\n          <select value={this.state.aggrKey} onChange={(event) => this.handleColumnChange('aggrKey', event)}>\r\n            {columnOptions}\r\n          </select>\r\n\r\n          <label>By Aggr Value (number)</label>\r\n          <select value={this.state.aggrValue} onChange={(event) => this.handleColumnChange('aggrValue', event)}>\r\n            {columnOptions}\r\n          </select>\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={this.state.chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      columns,\r\n      queryResultData,\r\n      jdbcDataSources,\r\n      drills,\r\n      drillDashboards\r\n    } = this.state;\r\n\r\n    const dataSourceOptions = (jdbcDataSources || []).map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const columnOptions = (columns || []).map(col =>\r\n      <option value={col.name} key={col.name}>{col.name}</option>\r\n    );\r\n\r\n    const chartOptionList = Constants.CHART_TYPES.map(o =>\r\n      <option value={o} key={o}>{o}</option>\r\n    );\r\n\r\n    const dashboardOptions = (drillDashboards || []).map(dash =>\r\n      <option value={dash.name} key={dash.name}>{dash.name}</option>\r\n    );\r\n\r\n    const drillItems = (drills || []).map(drill =>\r\n      <div key={drill.columnName}>\r\n        <div>Column: {drill.columnName}</div>\r\n        <div>Dashboard: {drill.dashboardName}</div>\r\n        <button onClick={(event) => this.removeDrillThrough(drill, event)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const headers = [];\r\n    let queryResultItem;\r\n    if (!Util.isArrayEmpty(queryResultData)) {\r\n      const obj = queryResultData[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        });\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={queryResultData}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResultData}</div>\r\n      );\r\n    }\r\n\r\n    const columnItems = (columns || []).map(col =>\r\n      <div key={col.name}>{col.name} {col.dataType}</div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <h3>WidgetEditPanel: {this.state.widgetId}</h3>\r\n        <button onClick={this.save}>Save</button>\r\n        <button onClick={this.runQuery}>Run Query</button>\r\n\r\n        <form>\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>DataSource</label>\r\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n            {dataSourceOptions}\r\n          </select>\r\n        \r\n          <label>SQL Query</label>\r\n          <AceEditor\r\n            style={{ marginTop: '8px' }}\r\n            value={this.state.sqlQuery}\r\n            mode=\"mysql\"\r\n            theme=\"xcode\"\r\n            name=\"blah2\"\r\n            onChange={this.handleAceEditorChange}\r\n            height={'300px'}\r\n            width={'100%'}\r\n            fontSize={15}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              showLineNumbers: true,\r\n              tabSize: 2\r\n            }}\r\n          />\r\n\r\n          <label>Result</label>\r\n          {queryResultItem}\r\n\r\n          <label>Columns Mapping</label>\r\n          <div>\r\n             {columnItems}\r\n          </div>\r\n\r\n          <label>Chart Options</label>\r\n          <select value={this.state.chartType} onChange={this.handleChartTypeChange}>\r\n            {chartOptionList}\r\n          </select>\r\n\r\n          <label>Preview</label>\r\n          {this.renderChartPreview()}  \r\n\r\n          <label>Drill through</label>\r\n          <div>\r\n            <label>Column</label>\r\n            <select value={this.state.drillColumnName} onChange={this.handleDrillColumnChange}>\r\n              {columnOptions}\r\n            </select>\r\n            <label>Dashboard</label>\r\n            <select value={this.state.drillDashboardName} onChange={this.handleDrillDashboardChange}>\r\n              {dashboardOptions}\r\n            </select>\r\n            <div>\r\n              {drillItems}\r\n            </div>\r\n            <button onClick={this.addDrillThrough}>Add</button>\r\n          </div>\r\n\r\n        </form>\r\n        \r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","import React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nclass FilterEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      filterId: null,\r\n      name: '',\r\n      type: Constants.SLICER,\r\n      data: {},\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: null,\r\n      queryResult: [],\r\n      param: '',\r\n    };\r\n  }\r\n\r\n  fetchFilter = async (filterId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    if (filterId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n      this.setState({\r\n        filterId: null\r\n      })\r\n    } else {\r\n      axios.get('/ws/filter/' + filterId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { \r\n            data,\r\n            type\r\n          } = result;\r\n          this.setState({\r\n            filterId: filterId,\r\n            name: result.name,\r\n            type: result.type,\r\n            data: data\r\n          });\r\n\r\n          if (type === Constants.SLICER) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          } else if (type === Constants.SINGLE_VALUE) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          }\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    this.setState({ \r\n      jdbcDataSourceId: event.target.value\r\n    });\r\n  }\r\n\r\n  handleTypeChange = (event) => {\r\n    this.setState({ \r\n      type: event.target.value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      filterId,\r\n      name,\r\n      type,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      param\r\n    } = this.state;\r\n\r\n    const filter = {\r\n      name: name,\r\n      type: type,\r\n      dashboardId: this.props.dashboardId\r\n    };\r\n\r\n    if (type === Constants.SLICER) {\r\n      filter.data = {\r\n        jdbcDataSourceId: jdbcDataSourceId,\r\n        sqlQuery: sqlQuery,\r\n        param: param\r\n      }\r\n    } else if (type === Constants.SINGLE_VALUE) {\r\n      filter.data = {\r\n        useQuery: false,\r\n        jdbcDataSourceId: jdbcDataSourceId,\r\n        sqlQuery: sqlQuery,\r\n        param: param,\r\n      }\r\n    }\r\n\r\n    if (filterId === null) {\r\n      axios.post('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      filter.id = filterId;\r\n      axios.put('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { \r\n      queryResult,\r\n      jdbcDataSources\r\n    } = this.state;\r\n\r\n    const dataSourceOptions = jdbcDataSources.map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const typeOptions = Constants.FILTER_TYPES.map(t =>\r\n      <option value={t} key={t}>{t}</option>\r\n    );\r\n\r\n    const headers = [];\r\n    let queryResultItem;\r\n    if (!Util.isArrayEmpty(queryResult)) {\r\n      console.log('queryResult', queryResult);\r\n      const obj = queryResult[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        })\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={this.state.queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResult}</div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>FilterEditPanel: {this.state.filterId}</h3>\r\n        <button onClick={this.save}>Save</button>\r\n        <button onClick={this.runQuery}>Run</button>\r\n\r\n        <form>\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>Type</label>\r\n          <select value={this.state.type} onChange={this.handleTypeChange}>\r\n            {typeOptions}\r\n          </select>\r\n\r\n          <label>DataSource</label>\r\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n            {dataSourceOptions}\r\n          </select>\r\n        \r\n          <label>SQL Query</label>\r\n          <AceEditor\r\n            style={{ marginTop: '8px' }}\r\n            value={this.state.sqlQuery}\r\n            mode=\"mysql\"\r\n            theme=\"xcode\"\r\n            name=\"blah2\"\r\n            onChange={this.handleAceEditorChange}\r\n            height={'300px'}\r\n            width={'100%'}\r\n            fontSize={15}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              showLineNumbers: true,\r\n              tabSize: 2\r\n            }}\r\n          />\r\n\r\n          <label>Result</label>\r\n          {queryResultItem}\r\n\r\n          <label>Param</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"param\" \r\n            value={this.state.param}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport FilterViewPanel from '../components/FilterViewPanel';\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\nimport FilterEditPanel from '../components/FilterEditPanel';\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showFilterEditPanel: false,\r\n      showFilterViewPanel: true,\r\n      isEditMode: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      height: 0,\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.filterViewPanel = React.createRef();\r\n    this.filterEditPanel = React.createRef();\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    console.log('DashboardEditView', dashboardId);\r\n\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = this.state.showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    console.log('componentDidMount', pageWidth, widgetViewWidth);\r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const result = res.data;\r\n            this.setState({\r\n              dashboardId: result.id,\r\n              name: result.name,\r\n              height: result.height,\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth;\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const timerId = setInterval(() => {\r\n        this.refreshWidgetView();\r\n        const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\r\n        this.setState({\r\n          lastRefreshed: now\r\n        });\r\n      }, 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    console.log('refresh');\r\n    this.refreshWidgetView();\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  refreshFilterView = () => {\r\n    const { \r\n      dashboardId\r\n    } = this.state;\r\n    this.filterViewPanel.current.fetchFilters(dashboardId);\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n  } \r\n\r\n  save = () => {\r\n    console.log('save');\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      height\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      height: height\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.widgetViewPanel.current.saveWidgets();\r\n\r\n    this.props.onSaveDashboard(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  delete = () => {\r\n    const { dashboardId } = this.state;\r\n    console.log('delete', dashboardId);\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        //this.fetchBoards();\r\n      });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  onSaveFilter = () => {\r\n    this.setState({ \r\n      showFilterEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  toggleFilterViewPanel = () => {\r\n    const { \r\n      showFilterViewPanel\r\n    } = this.state;\r\n    this.resizePageLayout(!showFilterViewPanel);\r\n  }\r\n\r\n  resizePageLayout = (showFilterViewPanel) => {\r\n    const pageWidth = this.getPageWidth();;\r\n    let widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    this.widgetViewPanel.current.resizeGrid(widgetViewWidth, true);\r\n\r\n    this.setState({\r\n      showFilterViewPanel: showFilterViewPanel,\r\n      widgetViewWidth: widgetViewWidth\r\n    }); \r\n  }\r\n\r\n  openFilterEditPanel = (filterId) => {\r\n    this.filterEditPanel.current.fetchFilter(filterId);\r\n    this.setState({\r\n      showFilterEditPanel: true\r\n    });\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    const { dashboardId } = this.state;\r\n    this.widgetEditPanel.current.fetchWidget(widgetId, dashboardId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { dashboardId } = this.state;\r\n    const url = `/poli/dashboards/${dashboardId}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onTableCellClick = () => {\r\n    this.props.history.push(`/dashboards/drill?name=&`);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      lastRefreshed,\r\n      isEditMode\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let statusButtonPanel;\r\n    if (isEditMode) {\r\n      statusButtonPanel = (\r\n        <React.Fragment>\r\n          <button onClick={this.cancelEdit}>Cancel</button>\r\n          <button onClick={this.save}>Save</button>\r\n          <button onClick={this.delete}>Delete</button>\r\n          <button onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\r\n          <button onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      statusButtonPanel = (\r\n        <React.Fragment>\r\n          <button onClick={this.edit}>Edit</button>\r\n          <button onClick={this.toggleFilterViewPanel}>Show Filters</button>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n           <div className=\"inline-block\">Name:</div>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n            className=\"inline-block\" \r\n            style={{width: '200px'}}\r\n            />\r\n\r\n          <div className=\"inline-block\">H:</div>\r\n          <input \r\n            type=\"text\" \r\n            name=\"height\" \r\n            value={this.state.height}\r\n            onChange={this.handleInputChange} \r\n            className=\"inline-block\" \r\n            style={{width: '200px'}}\r\n            />\r\n        </div>\r\n        \r\n        <button onClick={this.toggleAutoRefresh}>AUTO: {autoRefreshStatus} - {lastRefreshed}</button>\r\n        <button onClick={this.refresh}>Refresh</button>\r\n        <button onClick={this.fullScreen}>Full Screen</button>\r\n        \r\n        {statusButtonPanel}\r\n        \r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          isEditMode={this.state.isEditMode}\r\n          height={this.state.height}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n        />\r\n        <FilterViewPanel \r\n          ref={this.filterViewPanel} \r\n          onEdit={this.openFilterEditPanel}\r\n          onApplyFilters={this.applyFilters}\r\n          isEditMode={this.state.isEditMode}\r\n          show={this.state.showFilterViewPanel}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'lg-modal-panel'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showFilterEditPanel}\r\n          onClose={() => this.setState({ showFilterEditPanel: false })}\r\n          modalClass={'lg-modal-panel'} >\r\n          <FilterEditPanel\r\n            ref={this.filterEditPanel}\r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveFilter}\r\n          />\r\n        </Modal>\r\n\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\nimport './Dashboard.css';\r\n\r\nimport { Route } from \"react-router-dom\";\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      name: '',\r\n      width: 1200,\r\n      height: 800\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name,\r\n      width,\r\n      height\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      width: width,\r\n      height: height\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.setState({ \r\n          showEditPanel: false \r\n        });\r\n        this.fetchBoards();\r\n        this.props.history.push(`/dashboards/${dashboardId}`);\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.props.history.push(`/dashboards/${dashboardId}`);\r\n  }\r\n\r\n  onSaveDashboard = (dashboardId) => {\r\n    console.log('onSaveDashboard', dashboardId);\r\n    this.fetchBoards();\r\n  }\r\n\r\n  render() {\r\n    const dashboardRows = this.state.dashboards.map((d, index) => \r\n      <div key={index} className=\"dashboard-menu-item\" onClick={() => this.view(d.id)}>\r\n        <div>{d.id} {d.name}</div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dashboard-sidebar\">\r\n          <button onClick={() => this.setState({ showEditPanel: true })}>Add</button>\r\n          <label>Search</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"searchValue\" \r\n            value={this.state.searchValue}\r\n            placeholder=\"Dashboard\"\r\n            onChange={this.handleInputChange} />\r\n          {dashboardRows}\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route path=\"/dashboards/:id\" render={(props) => <DashboardEditView key={props.match.params.id} onSaveDashboard={this.onSaveDashboard} />} />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'lg-modal-panel'} >\r\n          <div>New dashboard</div>\r\n          <button onClick={this.save}>Save</button>\r\n          <form>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              style={{width: '200px'}}\r\n              />\r\n\r\n            <label>Width</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"width\" \r\n              value={this.state.width}\r\n              onChange={this.handleInputChange} \r\n              style={{width: '100px'}}\r\n              />\r\n\r\n            <label>Height</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.state.height}\r\n              onChange={this.handleInputChange} \r\n              style={{width: '100px'}}\r\n              />\r\n            \r\n          </form>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React, { Component } from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nclass SingleTest extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  getOption = () => {\r\n    return {\r\n      color: CHART_COLORS,\r\n      title: {\r\n        text: 'Test'\r\n      },\r\n      tooltip : {\r\n        trigger: 'axis'\r\n      },\r\n      legend: {\r\n        data:['C1','C2','C3']\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          saveAsImage: {}\r\n        }\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      xAxis : [\r\n        {\r\n          type : 'category',\r\n          boundaryGap : false,\r\n          data : ['Mon','Tue','Wed','Thu','Fri','Sat','Sun']\r\n        }\r\n      ],\r\n      yAxis : [\r\n        {\r\n          type : 'value'\r\n        }\r\n      ],\r\n      series : [\r\n        {\r\n          name:'C1',\r\n          type:'line',\r\n          stack: 'Total',\r\n          areaStyle: {normal: {}},\r\n          data:[120, 132, 101, 134, 90, 230, 210]\r\n        },\r\n        {\r\n          name:'C2',\r\n          type:'line',\r\n          stack: 'Total',\r\n          areaStyle: {normal: {}},\r\n          data:[220, 182, 191, 234, 290, 330, 310]\r\n        },\r\n        {\r\n          name:'C3',\r\n          type:'line',\r\n          stack: 'Total',\r\n          areaStyle: {normal: {}},\r\n          data:[150, 232, 201, 154, 190, 330, 410]\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n\r\n  render() {\r\n    let onEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h5>SingleTest</h5>\r\n        <div style={{width: '500px'}}>\r\n          <ReactEcharts \r\n            option={this.getOption()} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts'\r\n            onEvents={onEvents} />\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default SingleTest;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport { Route, Link, Switch } from \"react-router-dom\";\r\nimport DataSource from './views/DataSource';\r\nimport Dashboard from './views/Dashboard';\r\nimport SingleTest from './views/SingleTest';\r\n\r\nconst menuItems = ['datasource', 'dashboard', 'single-test'];\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuItem: 'dashboard'\r\n    }\r\n  }\r\n\r\n  handleClick = (menuItem) => {\r\n    this.setState({\r\n      menuItem: menuItem\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuItem\r\n    } = this.state;\r\n    \r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"app-nav\">\r\n          <div className=\"app-name\">Poli</div>\r\n          <ul className=\"app-nav-menu\">\r\n            <li>\r\n              <Link to=\"/datasources\" onClick={(e) => this.handleClick('datasource')}>\r\n                <i className=\"fas fa-database fa-fw\"></i>\r\n                <span className=\"app-nav-menu-text\">Data Source</span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/dashboards\" onClick={(e) => this.handleClick('dashboard')}>\r\n                <i className=\"fas fa-chalkboard fa-fw\"></i>\r\n                <span className=\"app-nav-menu-text\">Dashboard</span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/single-test\" onClick={(e) => this.handleClick('single-test')}>\r\n                <span className=\"app-nav-menu-text\">Single</span>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"app-content\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Dashboard} />\r\n            <Route exact path=\"/datasources\" component={DataSource} />\r\n            <Route path=\"/dashboards\" component={Dashboard} />\r\n            <Route exact path=\"/single-test\" component={SingleTest} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}