{"version":3,"sources":["api/AuthStore.js","views/Login.js","api/WebApi.js","components/Modal.js","views/DataSource.js","components/Slicer.js","api/Util.js","components/NumberRange.js","api/Constants.js","components/FilterViewPanel.js","components/ColorPicker.js","components/Checkbox.js","components/GridDraggable.js","components/GridResizable.js","api/EchartsApi.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/Tabs.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/DashboardFullScreenView.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["api_AuthStore","AuthStore","Object","classCallCheck","this","_sysRole","_username","sysRole","username","Login","props","_this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","tryLogin","axios","post","then","res","data","login","preventDefault","_this$state","state","password","user","history","push","errorMsg","react_default","a","createElement","Fragment","className","type","onChange","onClick","React","Component","withRouter","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","fetchFiltersByDashboardId","_ref3","_callee3","dashboardId","_context3","concat","_x2","_ref4","_callee4","url","_context4","_x3","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","onClose","index_es","icon","DataSource","save","showUpdatePassword","id","connectionUrl","driverClassName","ds","ping","put","closeEditPanel","delete","console","log","clearEditPanel","initialState","openEditPanel","showEditPanel","openDeletePanel","toggleUpdatePassword","prevState","jdbcDataSources","webApi","mode","_this2","_this$state2","_this$state2$jdbcData","jdbcDataSourceItems","map","index","key","fixedWidth","passwordInput","placeholder","src_components_Modal","rows","Slicer","isSelectAll","searchValue","handleChange","isChecked","checked","newCheckBoxes","toConsumableArray","checkBoxes","findIndex","x","filterId","toggleSelectAll","newIsSelectAll","i","length","handleSearchValueChange","result","indexOf","checkBoxItems","undefined","box","isArrayEmpty","array","Array","isArray","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","DEFAULT_FILTER_VIEW_WIDTH","DEFAULT_DASHBOARD_HEIGHT","FilterViewPanel","fetchFilters","filters","queryFilters","filter","Constants","queryRequest","queryResult","JSON","parse","f","newFilters","Util","_arr","values","_i2","val","_arr2","_i3","renderFilterPanel","filterPanel","_loop","filterComponent","components_Slicer","onSlicerChange","onSingleValueChange","isEditMode","edit","remove","onEdit","splice","applyFilters","filterParams","filterParam","paramValues","j","checkBox","remark","param","onApplyFilters","style","width","ColorPicker","handleClick","showPalette","handleClose","color","rgb","rgba","r","g","b","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","Checkbox","toggle","_this$props2","checkmarkStyle","backgroundColor","WIDGET_BORDER","GridDraggable","onMouseDown","gridItemNode","ReactDOM","findDOMNode","assertThisInitialized","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","CHART_COLORS","getPieOption","legend","series","tooltip","orient","center","radius","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","column","instance","e","handleOriginal","header","Header","row","drills","widgetDrillThrough","d","columnName","onChartClick","echarts","onChartLegendselectchanged","echart","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","drillThrough","widgetItem","headers","obj","keys","_i","accessor","es","columns","minRows","showPagination","getTdProps","_this$props$data","chartOption","EchartsApi","echarts_for_react_lib_default","option","onEvents","styles","marginRight","components_GridDraggable","components_GridResizable","GridLayout","showGridlines","backgroundSize","backgroundImage","boxItems","widgets","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","isResizeToBase","preGridWidth","gridWidth","newWidgets","resizeWidgetsToBase","resizeWidgetsToActual","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryWidgets","params","w","handleCheckBoxChange","handleHeightChange","onHeightChange","onBackgroundColorChange","saveWidgets","stringify","widgetViewWidth","components_ColorPicker","src_components_Checkbox","src_components_GridLayout","Tabs","handleTabClick","activeTab","_this$props$children","tabHeaders","tabContent","active","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","jdbcDataSourceId","sqlQuery","_x","handleAceEditorChange","newValue","handleDataSourceChange","handleChartTypeChange","handleColumnChange","handleDrillColumnChange","drillColumnName","handleDrillDashboardChange","drillDashboardId","aggrKey","aggrValue","onSave","runQuery","queryResultData","addDrillThrough","_this$state3","newDrills","removeDrillThrough","drill","generateChart","_this$state4","renderChartPreview","_this$state5","columnOptions","col","chartPreview","class","queryResultItem","_this$state6","dataSourceOptions","chartOptionList","o","dashboardOptions","dash","drillItems","columnItems","dataType","src_components_Tabs","react_ace_lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","FilterEditPanel","fetchFilter","handleTypeChange","useQuery","typeOptions","t","DashboardEditView","loadViewByDashboardName","dashboardName","pageWidth","getPageWidth","showFilterViewPanel","isReadOnly","refresh","toggleAutoRefresh","autoRefreshTimerId","clearInterval","timerId","setInterval","refreshWidgetView","refreshFilterView","filterViewPanel","current","widgetViewPanel","now","Date","toTimeString","replace","lastRefreshed","dashboard","onSaveDashboard","cancelEdit","onSaveWidget","showWidgetEditPanel","onSaveFilter","showFilterEditPanel","toggleFilterViewPanel","resizePageLayout","openFilterEditPanel","filterEditPanel","openWidgetEditPanel","widgetEditPanel","fullScreen","window","open","onTableCellClick","objectSpread","jdbcDataSourceOptions","createRef","match","location","search","URLSearchParams","editButtonPanel","_this3","autoRefreshStatus","fullScreenButtonPanel","controlButtons","size","readOnly","components_WidgetViewPanel","ref","src_components_FilterViewPanel","src_components_WidgetEditPanel","components_FilterEditPanel","Dashboard","fetchBoards","catch","error","view","_this$state$dashboard","dashboardRows","margin","Route","path","render","views_DashboardEditView","DashboardFullScreenView","dashboardEditView","wrappedComponentRef","comp","SYS_ROLES","User","handleOptionChange","fetchUsers","users","fetchGroups","groups","tempPassword","userGroups","initialEditPanelState","addUserGroup","userGroupId","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_this$state3$users","_this$state3$groups","_this$state3$userGrou","userItems","groupOptions","group","sysRoleOptions","groupName","userGroupItems","Group","fetchDashboards","groupDashboards","addGroupDashboard","groupDashboardId","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","MENU_ITEMS","link","UserManagement","handleMenuClick","menuLink","currentMenuLink","menuItems","menu","Link","to","Switch","component","Account","fetchUser","generateApiKey","confirmedPassword","alert","apiKey","Workspace","pathname","isAuthenticated","menuList","m","isAccountMenuActive","exact","PageNotFound","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","App","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.5768594c.chunk.js","sourcesContent":["\r\nclass AuthStore {\r\n\r\n  constructor() {\r\n    this._sysRole = '';\r\n    this._username = '';\r\n  }\r\n\r\n  set sysRole(sysRole) {\r\n    this._sysRole = sysRole;\r\n  }\r\n\r\n  get sysRole() {\r\n    return this._sysRole;\r\n  }\r\n\r\n  set username(username) {\r\n    this._username = username;\r\n  }\r\n\r\n  get username() {\r\n    return this._username;\r\n  }\r\n\r\n  get isAuthenticated() {\r\n    return true; // this._sysRole !== '';\r\n  }\r\n}\r\n\r\nexport default new AuthStore();","\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AuthStore from '../api/AuthStore';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tryLogin();\r\n  }\r\n\r\n  tryLogin = () => {\r\n    axios.post('/auth/login/cookie')\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  login = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password'\r\n      });\r\n      return;\r\n    }\r\n\r\n    AuthStore.username = 'testuser';\r\n    AuthStore.sysRole = 'developer';\r\n    this.props.history.push('/workspace/dashboard');\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div className=\"login-app-title\">Poli</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n              <label>Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} />\r\n            </div>\r\n            <button className=\"button login-button\" onClick={this.login}>Login</button>\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      modalClass = '',\r\n      title,\r\n      children\r\n    } = this.props;\r\n\r\n    const modalStatus = show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={`modal-panel ${modalClass}`}>\r\n          <div className=\"model-header row\">\r\n            <div className=\"model-title\">{title}</div>\r\n            <button className=\"model-close-btn button icon-button\" onClick={() => this.props.onClose()}>\r\n              <FontAwesomeIcon icon=\"times\" />\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          <div className='modal-body'>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\nimport './Datasource.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Fetch all datasources\r\n    this.fetchDataSources();\r\n    \r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      driverClassName,\r\n      username,\r\n      password,\r\n      name,\r\n      ping,\r\n    } = this.state;\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      driverClassName: driverClassName,\r\n      username: username,\r\n      name: name,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.fetchDataSources();\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      // New\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    console.log('delete', id);\r\n    axios.delete('/ws/jdbcdatasource/' + id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n      });\r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        console.log('ping', res.data);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        driverClassName: ds.driverClassName,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  openDeletePanel = () => {\r\n\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      id,\r\n      jdbcDataSources = []\r\n    } = this.state;\r\n\r\n    const jdbcDataSourceItems = jdbcDataSources.map((ds, index) => \r\n      <div key={index} className=\"datasource-card row\">\r\n        <div className=\"float-left ellipsis\">\r\n          {ds.name}\r\n        </div>\r\n        <div className=\"float-right\">\r\n          <button className=\"button icon-button\" onClick={() => this.openEditPanel(ds)}>\r\n            <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n          </button>\r\n          <button className=\"button icon-button\" onClick={() => this.delete(ds.id)}>\r\n            <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n          </button>\r\n          <button className=\"button icon-button\" onClick={() => this.ping(ds.id)}>\r\n            <FontAwesomeIcon icon=\"plug\" fixedWidth />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    let mode;\r\n    let passwordInput = (\r\n      <div>\r\n        <label>Password</label>\r\n        <input \r\n          type=\"password\" \r\n          name=\"password\" \r\n          value={this.state.password}\r\n          onChange={this.handleInputChange} />\r\n      </div>\r\n    );\r\n    if (id === null) {\r\n      mode = 'New';\r\n    } else {\r\n      mode = 'Update';\r\n      if (!showUpdatePassword) {\r\n        passwordInput = (\r\n          <React.Fragment>\r\n            <br/>\r\n            <button onClick={this.toggleUpdatePassword}>Update password</button>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"searchValue\"\r\n          placeholder=\"Datasource name...\"\r\n          />\r\n        <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n          <FontAwesomeIcon icon=\"plus\" /> New datasource\r\n        </button>\r\n        <div>\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={mode} >\r\n\r\n          <div>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Connection Url</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label>Driver class name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"driverClassName\" \r\n              value={this.state.driverClassName}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            {passwordInput}\r\n\r\n            <label>Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <button className=\"button\"onClick={this.save}>Save</button>\r\n          </div>\r\n\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","import React from 'react';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n    searchValue: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const isChecked = target.checked;\r\n\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    if (searchValue) {\r\n      const result = [];\r\n      const { checkBoxes } = this.props;\r\n      for (let i = 0; i < checkBoxes.length; i++) {\r\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\r\n          result.push(checkBoxes[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n\r\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\r\n    // TODO: If value is too long, add.. to the end.\r\n  }\r\n\r\n  render() {\r\n    const checkBoxes = this.props.checkBoxes;\r\n    let checkBoxItems = [];\r\n    if (checkBoxes !== undefined && checkBoxes.length !== 0) {\r\n      checkBoxItems = this.props.checkBoxes.map((box, index) => \r\n        <div key={index}>\r\n          <input \r\n            type=\"checkbox\" \r\n            name={box.value} \r\n            value={box.value} \r\n            checked={box.isChecked} \r\n            onChange={this.handleChange}\r\n            />\r\n            {box.value}\r\n          <br/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button onClick={this.toggleSelectAll}>Toggle Select All {this.state.isSelectAll}</button>\r\n        <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.searchValue}\r\n            onChange={this.handleSearchValueChange} \r\n          />\r\n        \r\n        <div>\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};","import React from 'react';\r\n\r\nclass NumberRange extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        min\r\n        <input type=\"number\" name=\"min\" />\r\n        max\r\n        <input type=\"number\" name=\"max\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberRange;","/**\r\n * Constants\r\n */\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\r\n\r\nexport const SYS_ROLE_ADMIN = 'admin';\r\nexport const SYS_ROLE_DEVELOPER = 'developer';\r\nexport const SYS_ROLE_VIEWER = 'viewer';\r\n\r\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;","import React, { Component } from 'react';\r\nimport Slicer from \"./Slicer\";\r\nimport NumberRange from \"./NumberRange\";\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './FilterViewPanel.css';\r\n\r\nclass FilterViewPanel extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      dashboardId: null,\r\n      filters: []\r\n    };\r\n  }\r\n\r\n  fetchFilters = (dashboardId) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      dashboardId: dashboardId\r\n    })\r\n\r\n    axios.get('/ws/filter/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          filters: result,\r\n        }, this.queryFilters);\r\n      });\r\n  }\r\n\r\n  queryFilters = () => {\r\n    const { filters } = this.state;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === Constants.SLICER) {\r\n        const queryRequest = filter.data;\r\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\r\n          .then(res => {\r\n            const result = res.data;\r\n            const queryResult = JSON.parse(result.data);\r\n\r\n            const index = filters.findIndex(f => f.id === result.id);\r\n            const newFilters = [...this.state.filters];\r\n            newFilters[index].queryResult = queryResult;\r\n            const type = newFilters[index].type;\r\n            if (type === Constants.SLICER) {\r\n              const checkBoxes = [];\r\n              if (!Util.isArrayEmpty(queryResult)) {\r\n                for (let i = 0; i < queryResult.length; i++) {\r\n                  const values = Object.values(queryResult[i]);\r\n                  for (const val of values) {\r\n                    checkBoxes.push({\r\n                      value: val,\r\n                      isChecked: false\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n\r\n              newFilters[index].checkBoxes = checkBoxes;\r\n            } else if (type === Constants.SINGLE_VALUE) {\r\n              const values = Object.values(queryResult);\r\n              let value = '';\r\n              for (const val of values) {\r\n                value = val;\r\n                break;\r\n              }\r\n              newFilters[index].value = value;\r\n            }\r\n\r\n            this.setState({\r\n              filters: newFilters\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderFilterPanel = () => {\r\n    const filterPanel = [];\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      let filterComponent = (<div>NONE</div>);\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        filterComponent = (\r\n          <Slicer \r\n            key={i} \r\n            filterId={filter.id} \r\n            checkBoxes={checkBoxes} \r\n            onChange={this.onSlicerChange} \r\n          />\r\n        );\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterComponent = (\r\n          <input \r\n            type=\"text\"  \r\n            value={filter.value}\r\n            onChange={(event) => this.onSingleValueChange(filter.id, event)} \r\n          />\r\n        );\r\n      }\r\n\r\n      filterPanel.push(\r\n          (\r\n            <div className=\"filter-card\">\r\n              <div className=\"filter-card-title\">\r\n                {filter.name}\r\n\r\n                { this.props.isEditMode ? \r\n                  (\r\n                    <div className=\"icon-button-group\">\r\n                      <div className=\"icon-btn\" onClick={() => this.edit(filter.id)}>\r\n                        <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n                      </div>\r\n                      <div className=\"icon-btn\" onClick={() => this.remove(filter.id)}>\r\n                        <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n                      </div>\r\n                    </div>\r\n                  ): null \r\n                }\r\n              </div>\r\n              <div>\r\n                {filterComponent}\r\n              </div>\r\n            </div>\r\n          )\r\n        );\r\n    }\r\n    return filterPanel;\r\n  }\r\n\r\n  edit = (filterId) => {\r\n    this.props.onEdit(filterId);\r\n  }\r\n\r\n  remove = (filterId) => {\r\n    axios.delete('/ws/filter/' + filterId)\r\n      .then(res => {\r\n        const index = this.state.filters.findIndex(f => f.id === filterId);\r\n        const newFilters = [...this.state.filters];\r\n        newFilters.splice(index, 1);\r\n        this.setState({\r\n          filters: newFilters\r\n        });\r\n      });\r\n  }\r\n\r\n  onSlicerChange = (filterId, checkBoxes) => {\r\n    const index = this.state.filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...this.state.filters];\r\n    newFilters[index].checkBoxes = [...checkBoxes];\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n\r\n    // TODO: select all.\r\n    // const isSelectAll = checked.length === checkBoxes.length;    \r\n  }\r\n\r\n  onSingleValueChange = (filterId, event) => {\r\n    const { filters } = this.state;\r\n    const value = event.target.value;\r\n    const index = filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...filters];\r\n    newFilters[index].value = value;\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n  }\r\n\r\n  applyFilters = () => {\r\n    console.log('applyFilters');\r\n    const { filters } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      const filterParam = {};\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        const paramValues = [];\r\n        for (let j = 0; j < checkBoxes.length; j++) {\r\n          const checkBox = checkBoxes[j];\r\n          if (checkBox.isChecked) {\r\n            paramValues.push(checkBox.value);\r\n          }\r\n        }\r\n        filterParam.value = paramValues;\r\n        if (paramValues.length === checkBoxes.length) {\r\n          filterParam.remark = 'select all';\r\n        }\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterParam.value = filter.value;\r\n      }\r\n      filterParam.param = filter.data.param;\r\n      filterParam.type = filter.type;\r\n      filterParams.push(filterParam);\r\n    }\r\n\r\n    this.props.onApplyFilters(filterParams);\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n    const style = {};\r\n    if (show) {\r\n      style.width = Constants.DEFAULT_FILTER_VIEW_WIDTH + 'px';\r\n    } else {\r\n      style.width = '0px';\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-filter-panel\" style={style}>\r\n        <div>Filters</div>\r\n        <button onClick={this.applyFilters}>Run</button>\r\n        <div className=\"filterViewPanel\">\r\n          {this.renderFilterPanel()}\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterViewPanel;","import React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPalette: false\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      showPalette: !prevState.showPalette\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      showPalette: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    const rgb = color.rgb;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    this.props.onChange(rgba);\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: this.props.value\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: '2'\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.showPalette ? \r\n          (\r\n            <div style={popover}>\r\n              <div style={cover} onClick={this.handleClose} />\r\n              <ChromePicker color={this.props.value} onChange={this.handleChange} />\r\n            </div>\r\n          ) : null }\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    const {\r\n      name,\r\n      checked\r\n    } = this.props;\r\n\r\n    this.props.onChange(name, !checked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      checked\r\n    } = this.props;\r\n\r\n    const checkmarkBgColor = checked ? '#000000' : '#FFFFFF';\r\n    const checkmarkStyle = {\r\n      backgroundColor: checkmarkBgColor\r\n    }\r\n\r\n    return (\r\n      <div className=\"checkbox-container\" onClick={this.toggle}>\r\n        <div className=\"checkbox-checkmark\" style={checkmarkStyle}></div>\r\n        <div className=\"checkbox-label\">{value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","const CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOption = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      data: legend,\r\n      orient: 'vertical',\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['50%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        if (!Util.isArrayEmpty(drills)) {\r\n          const index = drills.findIndex(d => d.columnName === header);\r\n          if (index !== -1) {\r\n            const dashboardId = drills[index].dashboardId;\r\n            this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      chartType,\r\n      queryResult,\r\n      drillThrough\r\n    } = this.props;\r\n    let widgetItem = (<div></div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n      const headers = [];\r\n      if (!Util.isArrayEmpty(queryResult)) {\r\n        const obj = queryResult[0];\r\n        const keys = Object.keys(obj);\r\n        for (const key of keys) {\r\n          headers.push({\r\n            Header: key,\r\n            accessor: key\r\n          })\r\n        }\r\n      }\r\n\r\n      widgetItem = (\r\n        <ReactTable\r\n          data={queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n          getTdProps={this.onTableTdPropsChange}\r\n          widgetDrillThrough={drillThrough}  \r\n        />\r\n      );\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        name,\r\n        value\r\n      } = this.props.data;\r\n      if (!Util.isArrayEmpty(queryResult)) {\r\n        let legend = [];\r\n        let series = [];\r\n        for (let i = 0; i < queryResult.length; i++) {\r\n          const row = queryResult[i];\r\n          legend.push(row[name]);\r\n          series.push({\r\n            name: row[name],\r\n            value: row[value]\r\n          });\r\n        }\r\n        const chartOption = EchartsApi.getPieOption(legend, series);\r\n        widgetItem = (\r\n          <ReactEcharts \r\n            option={chartOption}   \r\n            className=\"echarts\"\r\n            onEvents={onChartEvents}  />\r\n        );\r\n      }\r\n      \r\n    } \r\n\r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    let styles = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: 1\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {this.props.name}\r\n\r\n          { this.props.isEditMode ? (\r\n            <div className=\"float-right\" style={{marginRight: '20px'}}>\r\n              <div className=\"icon-btn\" onClick={() => this.editWidget(this.props.id)}>\r\n                <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n              </div>\r\n              <div className=\"icon-btn\" onClick={() => this.removeWidget(this.props.id)}>\r\n                <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid-box-file-button-group\">\r\n              <div className=\"icon-btn\" onClick={() => this.exportJson(this.props.id)}>\r\n                <FontAwesomeIcon icon=\"file-export\" fixedWidth />\r\n              </div>\r\n              \r\n              <div className=\"icon-btn\" onClick={() => this.exportCsv(this.props.id)}>\r\n                <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { this.props.isEditMode ? (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} />\r\n        ): null}\r\n\r\n        { this.props.isEditMode ? (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} />\r\n        ): null}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(GridItem);","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      backgroundColor\r\n    } = this.props;\r\n\r\n    let style = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      backgroundColor: backgroundColor\r\n    };\r\n\r\n    if (this.props.showGridlines) {\r\n      style.backgroundSize = '15px 15px';\r\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = this.props.widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={style} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport ColorPicker from '../components/ColorPicker';\r\nimport Checkbox from '../components/Checkbox';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\n\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      snapToGrid: false,\r\n      showGridlines: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  resizeGrid = (width, isResizeToBase) => {\r\n    const preGridWidth = this.state.gridWidth;\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n    if (isResizeToBase) {\r\n      this.resizeWidgetsToBase(newWidgets, preGridWidth);\r\n    }\r\n\r\n    const gridWidth = width;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return Math.round(num * gridWidth / BASE_WIDTH);\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Math.round(num * BASE_WIDTH / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, width, filterParams) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get('/ws/widget/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(width, false);\r\n          this.queryWidgets(filterParams);\r\n        });\r\n      });\r\n  }\r\n\r\n  queryWidgets = (filterParams) => {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      axios.post('/ws/jdbcquery/widget/' + widget.id, params)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const index = widgets.findIndex(w => w.id === result.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = JSON.parse(result.data);\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    this.setState({\r\n      [name]: isChecked\r\n    });\r\n  }\r\n\r\n  handleHeightChange = (event) => {\r\n    this.props.onHeightChange(event.target.value);\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    this.props.onBackgroundColorChange(color);\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });\r\n  }\r\n\r\n  onWidgetRemove = (widgetId) => {\r\n    axios.delete('/ws/widget/' + widgetId)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { widgetViewWidth } = this.props;\r\n    const style = {\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {this.props.isEditMode ?\r\n        (\r\n          <div className=\"dashboard-attribute-edit-panel\">\r\n            <div className=\"inline-block\">Height:</div>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.props.height}\r\n              onChange={this.handleHeightChange} \r\n              className=\"inline-block\" \r\n              style={{width: '200px'}}\r\n              />\r\n\r\n            <div className=\"inline-block\">Background Color</div>\r\n            <ColorPicker value={this.props.backgroundColor} onChange={this.onBackgroundColorChange} />\r\n\r\n            <Checkbox name=\"snapToGrid\" value=\"Snap to grid\" checked={this.state.snapToGrid} onChange={this.handleCheckBoxChange} />\r\n            <Checkbox name=\"showGridlines\" value=\"Show gridlines\" checked={this.state.showGridlines} onChange={this.handleCheckBoxChange} />\r\n  \r\n          </div>\r\n        ) : null}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          backgroundColor={this.props.backgroundColor}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.onWidgetRemove} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","import React from 'react';\r\nimport './Tabs.css';\r\n\r\nclass Tabs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const activeTab = this.props.activeTab;\r\n    this.setState({\r\n      activeTab: activeTab\r\n    });\r\n  }\r\n\r\n  handleTabClick = (title) => {\r\n    this.setState({\r\n      activeTab: title\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children = []\r\n    } = this.props;\r\n\r\n    const {\r\n      activeTab\r\n    } = this.state;\r\n\r\n    const tabHeaders = [];\r\n    let tabContent = null;\r\n    for (let i = 0; i < children.length; i++) {\r\n      const title = children[i].props.title;\r\n      let active = '';\r\n      if (title === activeTab) {\r\n        active = 'tab-header-active';\r\n        tabContent = children[i].props.children;\r\n      }\r\n      \r\n      tabHeaders.push(\r\n        <li className={`tab-header-item ${active}`} key={i} onClick={() => this.handleTabClick(title)}>{title}</li>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"tab-container\">\r\n        <ul className=\"tab-header\">\r\n          {tabHeaders}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {tabContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n\r\n","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nimport './WidgetEditPanel.css';\r\n\r\nimport Tabs from '../components/Tabs';\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      name: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      columns: [],\r\n      queryResultData: [],\r\n      chartType: Constants.TABLE,\r\n      aggrKey: '',\r\n      aggrValue: '',\r\n      chartOption: {},\r\n      drills: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId, dashboardId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    const filters = await webApi.fetchFiltersByDashboardId(dashboardId);\r\n    this.setState({ \r\n      filters: filters \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n\r\n      if (filters.length !== 0) {\r\n        this.setState({\r\n          filterId: filters[0].id\r\n        });\r\n      }\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            widgetId: widgetId,\r\n            name: result.name,\r\n            x: result.x,\r\n            y: result.y,\r\n            width: result.width,\r\n            height: result.height,\r\n            sqlQuery: result.sqlQuery,\r\n            chartType: result.chartType,\r\n            jdbcDataSourceId: result.jdbcDataSourceId,\r\n            drills: result.drillThrough\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    const jdbcDataSourceId = parseInt(event.target.value, 10);\r\n    this.setState({ \r\n      jdbcDataSourceId: jdbcDataSourceId\r\n    });\r\n  }\r\n\r\n  handleChartTypeChange = (event) => {\r\n    this.setState({ \r\n      chartType: event.target.value\r\n    });\r\n  }\r\n\r\n  handleColumnChange = (name, event) => {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleDrillColumnChange = (event) => {\r\n    this.setState({ \r\n      drillColumnName: event.target.value\r\n    });\r\n  }\r\n\r\n  handleDrillDashboardChange = (event) => {\r\n    const drillDashboardId = parseInt(event.target.value, 10);\r\n    this.setState({ \r\n      drillDashboardId: drillDashboardId\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      widgetId,\r\n      name,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      chartType,\r\n      drills\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      name: name,\r\n      dashboardId: this.props.dashboardId,\r\n      chartType: chartType,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      drillThrough: drills\r\n    }\r\n\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const {\r\n        aggrKey,\r\n        aggrValue\r\n      } = this.state;\r\n      widget.data = {\r\n        name: aggrKey,\r\n        value: aggrValue\r\n      }\r\n    }\r\n\r\n    if (widgetId === null) {\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const columns = result.columns;\r\n        const data = JSON.parse(result.data);\r\n        this.setState({\r\n          queryResultData: data,\r\n          columns: columns \r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      drills,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const filterId = this.state.filterId;\r\n    const index = drills.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill, event) => {\r\n    event.preventDefault();\r\n    const { drills } = this.state;\r\n    const index = drills.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.splice(index, 1);\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        aggrKey, \r\n        aggrValue, \r\n        queryResultData \r\n      } = this.state;\r\n      if (!Util.isArrayEmpty(queryResultData)) {\r\n        let legend = [];\r\n        let series = [];\r\n        for (let i = 0; i < queryResultData.length; i++) {\r\n          const row = queryResultData[i];\r\n          legend.push(row[aggrKey]);\r\n          series.push({\r\n            name: row[aggrKey],\r\n            value: row[aggrValue]\r\n          });\r\n        }\r\n        const chartOption = EchartsApi.getPieOption(legend, series);\r\n        this.setState({\r\n          chartOption: chartOption\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      columns \r\n    } = this.state;\r\n    const columnOptions = (columns || []).map(col =>\r\n      <option value={col.name} key={col.name}>{col.name}</option>\r\n    );\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      chartPreview = (\r\n        <div>\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label>Aggr Key (string)</label>\r\n          <select value={this.state.aggrKey} onChange={(event) => this.handleColumnChange('aggrKey', event)}>\r\n            {columnOptions}\r\n          </select>\r\n\r\n          <label>By Aggr Value (number)</label>\r\n          <select value={this.state.aggrValue} onChange={(event) => this.handleColumnChange('aggrValue', event)}>\r\n            {columnOptions}\r\n          </select>\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={this.state.chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      columns,\r\n      queryResultData,\r\n      jdbcDataSources,\r\n      drills,\r\n      drillDashboards\r\n    } = this.state;\r\n\r\n    const dataSourceOptions = (jdbcDataSources || []).map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const columnOptions = (columns || []).map(col =>\r\n      <option value={col.name} key={col.name}>{col.name}</option>\r\n    );\r\n\r\n    const chartOptionList = Constants.CHART_TYPES.map(o =>\r\n      <option value={o} key={o}>{o}</option>\r\n    );\r\n\r\n    const dashboardOptions = (drillDashboards || []).map(dash =>\r\n      <option value={dash.id} key={dash.id}>{dash.name}</option>\r\n    );\r\n\r\n    const drillItems = (drills || []).map(drill =>\r\n      <div key={drill.columnName}>\r\n        <div>Column: {drill.columnName}</div>\r\n        <div>Dashboard: {drill.dashboardId}</div>\r\n        <button onClick={(event) => this.removeDrillThrough(drill, event)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const headers = [];\r\n    let queryResultItem;\r\n    if (!Util.isArrayEmpty(queryResultData)) {\r\n      const obj = queryResultData[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        });\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={queryResultData}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResultData}</div>\r\n      );\r\n    }\r\n\r\n    const columnItems = (columns || []).map(col =>\r\n      <div key={col.name}>{col.name} {col.dataType}</div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        \r\n        <div className=\"form-panel\">\r\n          <Tabs activeTab=\"basic\">\r\n            <div title=\"basic\">\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} \r\n              />\r\n            </div>\r\n\r\n            <div title=\"Query\">\r\n              <label>DataSource</label>\r\n              <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n                {dataSourceOptions}\r\n              </select>\r\n            \r\n              <label>SQL Query</label>\r\n              <AceEditor\r\n                style={{ marginTop: '8px' }}\r\n                value={this.state.sqlQuery}\r\n                mode=\"mysql\"\r\n                theme=\"xcode\"\r\n                name=\"blah2\"\r\n                onChange={this.handleAceEditorChange}\r\n                height={'300px'}\r\n                width={'100%'}\r\n                fontSize={15}\r\n                showPrintMargin={false}\r\n                showGutter={true}\r\n                highlightActiveLine={true}\r\n                setOptions={{\r\n                  showLineNumbers: true,\r\n                  tabSize: 2\r\n                }}\r\n              />\r\n\r\n              <button className=\"button\" onClick={this.runQuery}>Run Query</button>\r\n\r\n              <label>Result</label>\r\n              {queryResultItem}\r\n\r\n              <label>Columns Mapping</label>\r\n              <div>\r\n                {columnItems}\r\n              </div>\r\n            </div>\r\n\r\n            <div title=\"Chart\">\r\n              <label>Chart Options</label>\r\n              <select value={this.state.chartType} onChange={this.handleChartTypeChange}>\r\n                {chartOptionList}\r\n              </select>\r\n\r\n              <label>Preview</label>\r\n              {this.renderChartPreview()}  \r\n            </div>\r\n\r\n            <div title=\"Drill through\">\r\n              <label>Drill through</label>\r\n              <label>Column</label>\r\n              <select value={this.state.drillColumnName} onChange={this.handleDrillColumnChange}>\r\n                {columnOptions}\r\n              </select>\r\n              <label>Dashboard</label>\r\n              <select value={this.state.drillDashboardId} onChange={this.handleDrillDashboardChange}>\r\n                {dashboardOptions}\r\n              </select>\r\n              <div>\r\n                {drillItems}\r\n              </div>\r\n              <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\r\n            </div>\r\n          </Tabs>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","import React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nclass FilterEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      filterId: null,\r\n      name: '',\r\n      type: Constants.SLICER,\r\n      data: {},\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: [],\r\n      param: '',\r\n    };\r\n  }\r\n\r\n  fetchFilter = async (filterId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    if (filterId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n      this.setState({\r\n        filterId: null\r\n      })\r\n    } else {\r\n      axios.get('/ws/filter/' + filterId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { \r\n            data,\r\n            type\r\n          } = result;\r\n          this.setState({\r\n            filterId: filterId,\r\n            name: result.name,\r\n            type: result.type,\r\n            data: data\r\n          });\r\n\r\n          if (type === Constants.SLICER) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          } else if (type === Constants.SINGLE_VALUE) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          }\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    this.setState({ \r\n      jdbcDataSourceId: event.target.value\r\n    });\r\n  }\r\n\r\n  handleTypeChange = (event) => {\r\n    this.setState({ \r\n      type: event.target.value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      filterId,\r\n      name,\r\n      type,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      param\r\n    } = this.state;\r\n\r\n    const filter = {\r\n      name: name,\r\n      type: type,\r\n      dashboardId: this.props.dashboardId\r\n    };\r\n\r\n    if (type === Constants.SLICER) {\r\n      filter.data = {\r\n        jdbcDataSourceId: jdbcDataSourceId,\r\n        sqlQuery: sqlQuery,\r\n        param: param\r\n      }\r\n    } else if (type === Constants.SINGLE_VALUE) {\r\n      filter.data = {\r\n        useQuery: false,\r\n        jdbcDataSourceId: jdbcDataSourceId,\r\n        sqlQuery: sqlQuery,\r\n        param: param,\r\n      }\r\n    }\r\n\r\n    if (filterId === null) {\r\n      axios.post('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      filter.id = filterId;\r\n      axios.put('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { \r\n      queryResult,\r\n      jdbcDataSources\r\n    } = this.state;\r\n\r\n    const dataSourceOptions = jdbcDataSources.map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const typeOptions = Constants.FILTER_TYPES.map(t =>\r\n      <option value={t} key={t}>{t}</option>\r\n    );\r\n\r\n    const headers = [];\r\n    let queryResultItem;\r\n    if (!Util.isArrayEmpty(queryResult)) {\r\n      console.log('queryResult', queryResult);\r\n      const obj = queryResult[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        })\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={this.state.queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResult}</div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        <button className=\"button\" onClick={this.runQuery}>Run</button>\r\n\r\n        <div className=\"form-panel\">\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>Type</label>\r\n          <select value={this.state.type} onChange={this.handleTypeChange}>\r\n            {typeOptions}\r\n          </select>\r\n\r\n          <label>DataSource</label>\r\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n            {dataSourceOptions}\r\n          </select>\r\n        \r\n          <label>SQL Query</label>\r\n          <AceEditor\r\n            style={{ marginTop: '8px' }}\r\n            value={this.state.sqlQuery}\r\n            mode=\"mysql\"\r\n            theme=\"xcode\"\r\n            name=\"blah2\"\r\n            onChange={this.handleAceEditorChange}\r\n            height={'300px'}\r\n            width={'100%'}\r\n            fontSize={15}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              showLineNumbers: true,\r\n              tabSize: 2\r\n            }}\r\n          />\r\n\r\n          <label>Result</label>\r\n          {queryResultItem}\r\n\r\n          <label>Param</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"param\" \r\n            value={this.state.param}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport FilterViewPanel from '../components/FilterViewPanel';\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\nimport FilterEditPanel from '../components/FilterEditPanel';\r\n\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showFilterEditPanel: false,\r\n      showFilterViewPanel: true,\r\n      isEditMode: false,\r\n      isReadOnly: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      style: {},\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.filterViewPanel = React.createRef();\r\n    this.filterEditPanel = React.createRef();\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    console.log('DashboardEditView', dashboardId);\r\n\r\n    const url = this.props.location.search;\r\n    console.log('url', url);\r\n    const params = new URLSearchParams(url);\r\n    console.log('params', params);\r\n\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = this.state.showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    console.log('componentDidMount', pageWidth, widgetViewWidth);\r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const result = res.data;\r\n            this.setState({\r\n              dashboardId: result.id,\r\n              name: result.name,\r\n              style: result.style\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = (dashboardName) => {\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = this.state.showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    console.log('loadViewByDashboardName', pageWidth, widgetViewWidth);\r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth,\r\n      isReadOnly: true\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            style: result.style\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth;\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const timerId = setInterval(() => {\r\n        this.refreshWidgetView();\r\n      }, 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    console.log('refresh');\r\n    this.refreshWidgetView();\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  refreshFilterView = () => {\r\n    const { \r\n      dashboardId\r\n    } = this.state;\r\n    this.filterViewPanel.current.fetchFilters(dashboardId);\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n\r\n    const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\r\n    this.setState({\r\n      lastRefreshed: now\r\n    });\r\n  } \r\n\r\n  save = () => {\r\n    console.log('save');\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      style\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      style: style\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.widgetViewPanel.current.saveWidgets();\r\n\r\n    this.props.onSaveDashboard(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  delete = () => {\r\n    const { dashboardId } = this.state;\r\n    console.log('delete', dashboardId);\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        //this.fetchBoards();\r\n      });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  onSaveFilter = () => {\r\n    this.setState({ \r\n      showFilterEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  toggleFilterViewPanel = () => {\r\n    const { \r\n      showFilterViewPanel\r\n    } = this.state;\r\n    this.resizePageLayout(!showFilterViewPanel);\r\n  }\r\n\r\n  resizePageLayout = (showFilterViewPanel) => {\r\n    const pageWidth = this.getPageWidth();;\r\n    let widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    this.widgetViewPanel.current.resizeGrid(widgetViewWidth, true);\r\n\r\n    this.setState({\r\n      showFilterViewPanel: showFilterViewPanel,\r\n      widgetViewWidth: widgetViewWidth\r\n    }); \r\n  }\r\n\r\n  openFilterEditPanel = (filterId) => {\r\n    this.filterEditPanel.current.fetchFilter(filterId);\r\n    this.setState({\r\n      showFilterEditPanel: true\r\n    });\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    const { dashboardId } = this.state;\r\n    this.widgetEditPanel.current.fetchWidget(widgetId, dashboardId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/workspace/dashboard/view?name=${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onTableCellClick = () => {\r\n    this.props.history.push(`/workspace/dashboard/drill?name=&`);\r\n  }\r\n\r\n  onHeightChange = (height) => {\r\n    const style = {...this.state.style};\r\n    style.height = height;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    const style = {...this.state.style};\r\n    style.backgroundColor = color;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      lastRefreshed,\r\n      isEditMode,\r\n      isReadOnly\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel = null;\r\n    const controlButtons = (\r\n      <React.Fragment>\r\n        <span>Last refreshed: {lastRefreshed}</span>\r\n        <button className=\"button icon-button\" onClick={this.toggleAutoRefresh}>\r\n          {\r\n            autoRefreshStatus === 'ON' ? \r\n            (\r\n              <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\r\n            ) : \r\n            (\r\n              <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\r\n            )\r\n          }\r\n        </button>\r\n        <button className=\"button icon-button\" onClick={this.refresh}>\r\n          <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\r\n        </button>\r\n        <button className=\"button\" onClick={this.toggleFilterViewPanel}>Show Filters</button>\r\n      </React.Fragment>\r\n    );\r\n\r\n    if (!isReadOnly) {\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button\" onClick={this.cancelEdit}>Cancel</button>\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n            <button className=\"button\" onClick={this.delete}>Delete</button>\r\n            <button className=\"button\" onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\r\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            {controlButtons}\r\n            <button className=\"button icon-button\" onClick={this.fullScreen}>\r\n              <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={this.edit}>Edit</button>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      fullScreenButtonPanel = controlButtons;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-menu-panel row\">\r\n          <div className=\"float-left\">\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              style={{width: '200px'}}\r\n              readOnly={isReadOnly || !isEditMode}\r\n              />\r\n          </div>\r\n          <div className=\"float-right\">\r\n            {fullScreenButtonPanel}\r\n            {editButtonPanel}\r\n          </div>\r\n        </div>\r\n\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          isEditMode={this.state.isEditMode}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          onHeightChange={this.onHeightChange}\r\n          onBackgroundColorChange={this.onBackgroundColorChange}\r\n          {...this.state.style}\r\n        />\r\n        <FilterViewPanel \r\n          ref={this.filterViewPanel} \r\n          onEdit={this.openFilterEditPanel}\r\n          onApplyFilters={this.applyFilters}\r\n          isEditMode={this.state.isEditMode}\r\n          show={this.state.showFilterViewPanel}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'dashboard-edit-widget-dialog'} \r\n          title={'Widget Edit'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showFilterEditPanel}\r\n          onClose={() => this.setState({ showFilterEditPanel: false })}\r\n          modalClass={'dashboard-edit-filter-dialog'} \r\n          title={'Filter Edit'}>\r\n          <FilterEditPanel\r\n            ref={this.filterEditPanel}\r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveFilter}\r\n          />\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\nimport './Dashboard.css';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as Constants from '../api/Constants';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false,\r\n      name: ''\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      style: {\r\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\r\n        backgroundColor: 'rgba(255, 255, 255, 1)'\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.closeEditPanel();\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n  }\r\n\r\n  onSaveDashboard = (dashboardId) => {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dashboards = []\r\n    } = this.state;\r\n    \r\n    const dashboardRows = dashboards.map((d, index) => \r\n      <div key={index} className=\"dashboard-menu-item ellipsis\" onClick={() => this.view(d.id)}>\r\n        {d.name}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dashboard-sidebar\">\r\n          <div style={{margin: '5px'}}>\r\n            <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\r\n              <FontAwesomeIcon icon=\"plus\" /> New dashboard\r\n            </button>\r\n            <input \r\n              type=\"text\" \r\n              name=\"searchValue\" \r\n              value={this.state.searchValue}\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleInputChange} />\r\n          </div>\r\n          <div>\r\n            {dashboardRows}\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route \r\n            path=\"/workspace/dashboard/:id\" \r\n            render={(props) => <DashboardEditView key={props.match.params.id} onSaveDashboard={this.onSaveDashboard} />} \r\n            />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'small-modal-panel'} \r\n          title={'New'} >\r\n          <div>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              />\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const url = this.props.location.search;\r\n    console.log('url', url);\r\n    const params = new URLSearchParams(url);\r\n    const dashboardName = params.get('name');\r\n    console.log('name', dashboardName);\r\n    console.log('dashboardEditView', this.dashboardEditView);\r\n\r\n    this.dashboardEditView.loadViewByDashboardName(dashboardName);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView wrappedComponentRef={comp => (this.dashboardEditView = comp)} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\n\r\nconst SYS_ROLES = ['developer', 'viewer'];\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      searchValue: '',\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, event) => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      this.setState({\r\n        id: user.id,\r\n        username: user.username,\r\n        name: user.name,\r\n        tempPassword: '',\r\n        sysRole: user.sysRole,\r\n        userGroups: user.userGroups\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  search = () => {\r\n    const { searchValue } = this.state;\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: sysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/user/' + id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n      });\r\n  }\r\n\r\n  addUserGroup = (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId, event) => {\r\n    event.preventDefault();\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      users = [],\r\n      groups = [],\r\n      userGroups = []\r\n    } = this.state;\r\n\r\n    const userItems = users.map(user => \r\n      <div key={user.id} className=\"user-card\">\r\n        <p>\r\n          {user.username}\r\n          {user.name}\r\n          {user.sysRole}\r\n          <button onClick={() => this.openEditPanel(user)}>update</button>\r\n          <button onClick={() => this.delete(user.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupOptions = groups.map(group => \r\n      <option value={group.id} key={group.id}>{group.name}</option>\r\n    );\r\n\r\n    const sysRoleOptions = SYS_ROLES.map(groupName => \r\n      <option value={groupName} key={groupName}>{groupName}</option>\r\n    );\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId}>\r\n                <div>Group: {groups[j].name}</div>\r\n                <button onClick={(event) => this.removeUserGroup(groupId, event)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>User</div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Username...\"\r\n          />\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Group...\"\r\n          />\r\n        <button onClick={this.search}>Search</button>\r\n        <div className=\"row\">\r\n          {userItems}\r\n        </div>\r\n        <button onClick={() => this.openEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'lg-modal-panel'} \r\n          title={'User'} >\r\n\r\n          <div>\r\n            <h3>{'User'}</h3>\r\n            <form>\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Temp password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"tempPassword\" \r\n                value={this.state.tempPassword}\r\n                onChange={this.handleInputChange} />\r\n              \r\n              <label>System Role</label>\r\n              <select value={this.state.sysRole} onChange={(event) => this.handleOptionChange('sysRole', event)}>\r\n                {sysRoleOptions}\r\n              </select>\r\n              <br/>\r\n              \r\n              <label>Groups</label>\r\n              <select value={this.state.userGroupId} onChange={(event) => this.handleOptionChange('userGroupId', event)}>\r\n                {groupOptions}\r\n              </select>\r\n              <button onClick={this.addUserGroup}>Add</button>\r\n              <div>\r\n                {userGroupItems}\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, event) => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      this.setState({\r\n        id: group.id,\r\n        name: group.name,\r\n        groupDashboards: group.groupDashboards\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/group/' + id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n      });\r\n  }\r\n\r\n  addGroupDashboard= (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n    if (index === -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.push(groupDashboardId);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId, event) => {\r\n    event.preventDefault();\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    const dashboardOptions = dashboards.map(dash => \r\n      <option value={dash.id} key={dash.id}>{dash.name}</option>\r\n    );\r\n\r\n    const groupItems = groups.map(group => \r\n      <div key={group.id} className=\"group-card\">\r\n        <p>\r\n          {group.name}\r\n          <button onClick={() => this.openEditPanel(group)}>update</button>\r\n          <button onClick={() => this.delete(group.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId}>\r\n                <div>Name: {dashboards[j].name}</div>\r\n                <button onClick={(event) => this.removeGroupDashboard(dashboardId, event)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Group</h1>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Group...\"\r\n          />\r\n        <button onClick={this.search}>Search</button>\r\n        <div className=\"row\">\r\n          {groupItems}\r\n        </div>\r\n        <button onClick={() => this.openEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'lg-modal-panel'} \r\n          title={'Group'} >\r\n\r\n          <div>\r\n            <h3>{'Group'}</h3>\r\n            <form>\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n              \r\n              <label>Dashboards</label>\r\n              <select value={this.state.groupDashboardId} onChange={(event) => this.handleOptionChange('groupDashboardId', event)}>\r\n                {dashboardOptions}\r\n              </select>\r\n              <button onClick={this.addGroupDashboard}>Add</button>\r\n              <div>\r\n                {groupDashboardItems}\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\nimport { Route, Link, Switch } from \"react-router-dom\";\r\nimport User from './User';\r\nimport Group from './Group';\r\nimport './UserManagement.css';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/user-management/user',\r\n    value: 'User',\r\n    icon: 'fa-users'\r\n  }, \r\n  {\r\n    link: '/workspace/user-management/group',\r\n    value: 'Group',\r\n    icon: 'fa-user-cog',\r\n  }\r\n];\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: 'group',\r\n    }\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let menuItems = [];\r\n    for (let i = 0; i < MENU_ITEMS.length; i++) {\r\n      const menu = MENU_ITEMS[i];\r\n      const active = this.state.currentMenuLink === menu.link ? 'active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li className={active} key={i}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <i className={`fas ${menu.icon} fa-fw`}></i>\r\n              <span className=\"app-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <ul className=\"nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/workspace/user-management/user\" component={User} />\r\n            <Route path=\"/workspace/user-management/group\" component={Group} />\r\n          </Switch>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        alert('confirm password');\r\n        return;\r\n      }\r\n      \r\n      user.password = password;\r\n    }\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>Account</div>\r\n        <div className=\"form-panel\">   \r\n          <label>Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label>System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label>API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button className=\"button\" onClick={this.generateApiKey}>Generate new API Key</button>\r\n          <br/>\r\n\r\n          {\r\n            showUpdatePassword ?\r\n            (\r\n              <React.Fragment>\r\n                <br/>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label>Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n            ) :\r\n            (\r\n              <React.Fragment>\r\n                <br/>\r\n                <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n              </React.Fragment>\r\n            )\r\n          }\r\n\r\n          <br/>\r\n          <button className=\"button\" onClick={this.save}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","import React from 'react';\r\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\n\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport AuthStore from '../api/AuthStore';\r\nimport './Workspace.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data source',\r\n    icon: 'database'\r\n  }, \r\n  {\r\n    link: '/workspace/user-management',\r\n    value: 'User Management',\r\n    icon: 'users-cog'\r\n  }\r\n];\r\n\r\nconst ACCOUNT_MENU_LINK = '/workspace/account';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard',\r\n      username: '',\r\n      sysRole: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Workspace - componentDidMount');\r\n    const pathname = this.props.location.pathname;\r\n    // TODO: fetch user information\r\n    this.setState({\r\n      currentMenuLink: pathname,\r\n    });\r\n    if (AuthStore.isAuthenticated) {\r\n      const sysRole = AuthStore.sysRole;\r\n      this.setState({\r\n        sysRole: sysRole\r\n      });\r\n    } else {\r\n      // Try login. If not, redirect\r\n    }\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n      sysRole\r\n    } = this.state;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.name === 'dashboard' || m.name === 'account');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li className={active} key={menu.link}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"workspace-nav\">  \r\n          <div className=\"workspace-name\">Poli</div>\r\n          <ul className=\"workspace-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div className=\"workspace-account-menu\">\r\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\r\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\r\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\r\n                <span className=\"workspace-nav-menu-text\">Account</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"workspace-logout-button inline-block\">\r\n              <Link to=\"/login\">\r\n                <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"workspace-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route exact path=\"/workspace/dashboard/view\" component={DashboardFullScreenView} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n            <Route path=\"/workspace/dashboard\" component={Dashboard} />\r\n            <Route path=\"/workspace/user-management\" component={UserManagement} />\r\n          </Switch>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Workspace);\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, Component } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\n\r\nimport AuthStore from './api/AuthStore';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv\r\n} from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('App - componentDidMount', AuthStore.isAuthenticated);\r\n  }\r\n   \r\n  render() {\r\n    console.log('App - render', AuthStore.isAuthenticated);\r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <PrivateRoute authenticated={AuthStore.isAuthenticated} path='/workspace' component={Workspace} />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} />\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}