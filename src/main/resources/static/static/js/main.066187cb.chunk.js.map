{"version":3,"sources":["api/AuthStore.js","views/Login.js","api/WebApi.js","components/Modal.js","components/Toast.js","views/DataSource.js","components/Checkbox.js","components/Slicer.js","api/Util.js","components/NumberRange.js","api/Constants.js","components/FilterViewPanel.js","components/ColorPicker.js","components/GridDraggable.js","components/GridResizable.js","api/EchartsApi.js","components/TableWidget.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/Tabs.js","components/Select.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/DashboardFullScreenView.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["api_AuthStore","AuthStore","Object","classCallCheck","this","_sysRole","_username","sysRole","username","Login","props","_this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","tryLogin","axios","post","then","res","data","login","preventDefault","_this$state","state","password","user","history","push","errorMsg","react_default","a","createElement","Fragment","className","type","onChange","onClick","React","Component","withRouter","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","fetchFiltersByDashboardId","_ref3","_callee3","dashboardId","_context3","concat","_x2","_ref4","_callee4","url","_context4","_x3","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","onClose","index_es","icon","size","Toast","message","showToast","setTimeout","hide","_toastRef","assertThisInitialized","toastStatus","DataSource","save","showUpdatePassword","id","connectionUrl","driverClassName","ping","ds","put","closeEditPanel","catch","error","console","log","confirmDelete","_this$state$datasourc","datasourceToDelete","delete","closeConfirmDeletionPanel","result","clearEditPanel","initialState","openEditPanel","showEditPanel","openConfirmDeletionPanel","datasource","showConfirmDeletionPanel","toggleUpdatePassword","prevState","clearSearch","searchValue","jdbcDataSources","webApi","_this2","_this$state2","_this$state2$jdbcData","_this$state2$datasour","mode","jdbcDataSourceItems","_loop","i","includes","key","length","placeholder","style","width","src_components_Modal","rows","margin","Checkbox","toggle","checked","_this$props2","checkmarkBoxStyle","backgroundColor","Slicer","isSelectAll","toggleSelectAll","newIsSelectAll","newCheckBoxes","toConsumableArray","checkBoxes","isChecked","filterId","handleSearchValueChange","indexOf","handleCheckBoxChange","index","findIndex","x","_this$props$checkBoxe","checkBoxItems","map","box","src_components_Checkbox","jsonToArray","json","array","JSON","parse","e","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","DEFAULT_FILTER_VIEW_WIDTH","DEFAULT_DASHBOARD_HEIGHT","FilterViewPanel","fetchFilters","filters","queryFilters","filter","Constants","queryRequest","queryResult","queryResultData","Util","f","newFilters","_arr","values","_i2","val","_arr2","_i3","renderFilterPanel","filterPanel","filterComponent","src_components_Slicer","onSlicerChange","onSingleValueChange","isEditMode","edit","fixedWidth","remove","onEdit","splice","applyFilters","filterParams","filterParam","paramValues","j","checkBox","remark","param","onApplyFilters","ColorPicker","handleClick","showPalette","handleClose","handleChange","color","rgb","rgba","r","g","b","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","WIDGET_BORDER","GridDraggable","onMouseDown","gridItemNode","ReactDOM","findDOMNode","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","CHART_COLORS","getPieOption","pieKey","pieValue","legend","series","row","tooltip","orient","center","radius","getPieOptionTemplate","TableWidget","_this$props$data","_this$props$columns","columns","_this$props$drillThro","drillThrough","columnHeaders","forEach","column","columnName","header","Header","accessor","d","Cell","href","es","defaultPageSize","previousText","nextText","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","instance","handleOriginal","drills","widgetDrillThrough","onChartClick","echarts","onChartLegendselectchanged","echart","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","_this$props$queryResu","widgetItem","src_components_TableWidget","chartOption","EchartsApi","echarts_for_react_lib_default","option","onEvents","_this$props2$style","_style$showBorder","showBorder","borderStyle","styles","border","marginRight","components_GridDraggable","components_GridResizable","GridLayout","_this$props$widgets","widgets","showGridlines","backgroundSize","backgroundImage","boxItems","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","isResizeToBase","preGridWidth","gridWidth","newWidgets","resizeWidgetsToBase","resizeWidgetsToActual","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryWidgets","params","w","handleHeightChange","onHeightChange","onBackgroundColorChange","saveWidgets","stringify","widgetViewWidth","components_ColorPicker","src_components_GridLayout","Tabs","handleTabClick","activeTab","_this$props$children","tabHeaders","tabContent","active","Select","handleOptionChange","_this$props$options","options","optionValue","optionDisplay","optionList","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","jdbcDataSourceId","_result$data","sqlQuery","runQuery","_x","objectSpread","handleAceEditorChange","newValue","handleIntegerOptionChange","intValue","onSave","addDrillThrough","_this$state3","drillColumnName","drillDashboardId","newDrills","removeDrillThrough","drill","generateChart","_this$state4","_this$state4$queryRes","renderChartPreview","_this$state5","_this$state5$queryRes","chartPreview","_this$state6","class","components_Select","_this$state7","_this$state7$jdbcData","_this$state7$drillDas","drillItems","columnItems","col","dataType","src_components_Tabs","react_ace_lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","FilterEditPanel","fetchFilter","handleDataSourceChange","handleTypeChange","useQuery","_this$state2$queryRes","requireSql","dataSourceOptions","typeOptions","t","DashboardEditView","loadViewByDashboardName","location","search","URLSearchParams","dashboardName","showFilterViewPanel","pageWidth","getPageWidth","isReadOnly","refresh","toggleAutoRefresh","autoRefreshTimerId","clearInterval","refreshInterval","interval","timerId","setInterval","filterViewPanel","current","updateLastRefreshed","refreshWidgetView","refreshFilterView","widgetViewPanel","now","Date","toTimeString","replace","lastRefreshed","dashboard","onSaveDashboard","cancelEdit","_this$state$dashboard","dashboardToDelete","onDeleteDashboard","onSaveWidget","showWidgetEditPanel","onSaveFilter","showFilterEditPanel","toggleFilterViewPanel","resizePageLayout","openFilterEditPanel","filterEditPanel","openWidgetEditPanel","widgetEditPanel","fullScreen","window","open","onTableCellClick","widgetToDelete","jdbcDataSourceOptions","createRef","match","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","editButtonPanel","_this3","autoRefreshStatus","fullScreenButtonPanel","controlButtons","components_WidgetViewPanel","ref","src_components_FilterViewPanel","src_components_WidgetEditPanel","src_components_FilterEditPanel","Dashboard","fetchBoards","view","activeDashboardId","dashboardRows","menuActive","Route","path","render","views_DashboardEditView","DashboardFullScreenView","dashboardEditView","wrappedComponentRef","comp","SYS_ROLES","User","fetchUsers","users","fetchGroups","groups","tempPassword","userGroups","initialEditPanelState","addUserGroup","userGroupId","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_this$state3$users","_this$state3$groups","_this$state3$userGrou","userItems","groupOptions","group","sysRoleOptions","groupName","userGroupItems","Group","fetchDashboards","groupDashboards","addGroupDashboard","groupDashboardId","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","dashboardOptions","dash","groupItems","groupDashboardItems","MENU_ITEMS","link","UserManagement","handleMenuClick","menuLink","currentMenuLink","menuItems","menu","Link","to","Switch","component","Account","fetchUser","generateApiKey","confirmedPassword","alert","apiKey","Workspace","pathname","isAuthenticated","menuList","m","isAccountMenuActive","exact","src_components_Toast","PageNotFound","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","App","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"8nBA6BeA,EAAA,eA1Bb,SAAAC,IAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACbG,KAAKC,SAAW,GAChBD,KAAKE,UAAY,qDAGPC,GACVH,KAAKC,SAAWE,kBAIhB,OAAOH,KAAKC,wCAGDG,GACXJ,KAAKE,UAAYE,kBAIjB,OAAOJ,KAAKE,kDAIZ,OAAO,YClBLG,sBAEJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAK,IACjBE,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAAO,GAAAK,KAAAV,KAAMM,KAQRK,kBAAoB,SAACC,GACnBL,EAAKM,SAALf,OAAAgB,EAAA,EAAAhB,CAAA,GACGc,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAXnBV,EAmBnBW,SAAW,WACTC,IAAMC,KAAK,sBACRC,KAAK,SAAAC,GACWA,EAAIC,QAtBNhB,EA0BnBiB,MAAQ,SAACZ,GACPA,EAAMa,iBADW,IAAAC,EAKbnB,EAAKoB,MAFPvB,EAHesB,EAGftB,SACAwB,EAJeF,EAIfE,SAGIC,EAAO,CACXzB,SAAUA,EACVwB,SAAUA,GAGPxB,EAOAwB,GAOL/B,EAAUO,SAAW,WACrBP,EAAUM,QAAU,YACpBI,EAAKD,MAAMwB,QAAQC,KAAK,wBAExBZ,IAAMC,KAAK,mBAAoBS,GAC5BR,KAAK,SAAAC,GACWA,EAAIC,QAZrBhB,EAAKM,SAAS,CACZmB,SAAU,mBARZzB,EAAKM,SAAS,CACZmB,SAAU,oBAtCdzB,EAAKoB,MAAQ,CACXK,SAAU,GACV5B,SAAU,GACVwB,SAAU,IALKrB,mFAgBjBP,KAAKkB,4CA+CL,OACEe,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAf,QACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAmBrC,KAAK2B,MAAMK,UAC7CC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,YACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,WACLC,MAAOjB,KAAK2B,MAAMvB,SAClBmC,SAAUvC,KAAKW,oBACjBsB,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,YACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACLtB,KAAK,WACLC,MAAOjB,KAAK2B,MAAMC,SAClBW,SAAUvC,KAAKW,qBAEnBsB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,sBAAsBG,QAASxC,KAAKwB,OAAtD,mBArFQiB,IAAMC,YA6FXC,cAAWtC,qCC5FbuC,EAAgB,eAAAC,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAAiD,EAAAb,EAAAc,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAb,EAAAiB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAELnC,IAAMoC,IAAI,sBAFL,cAEtBL,EAFsBE,EAAAI,KAAAJ,EAAAK,OAAA,SAGrBP,EAAS3B,MAAQ,IAHI,cAAA6B,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAAAA,EAAAK,OAAA,SAKrB,IALqB,yBAAAL,EAAAO,SAAAV,EAAA,iBAAH,yBAAAJ,EAAAe,MAAA5D,KAAA6D,YAAA,GAahBC,EAAyB,eAAAC,EAAAjE,OAAAgD,EAAA,EAAAhD,CAAAiD,EAAAb,EAAAc,KAAG,SAAAgB,EAAOC,GAAP,OAAAlB,EAAAb,EAAAiB,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EAC1BC,EAAG,wBAAAY,OAAyBF,IADF,cAAAC,EAAAT,OAAA,SAAAS,EAAAV,MAAA,wBAAAU,EAAAP,SAAAK,MAAH,gBAAAI,GAAA,OAAAL,EAAAH,MAAA5D,KAAA6D,YAAA,GAIhCN,EAAG,eAAAc,EAAAvE,OAAAgD,EAAA,EAAAhD,CAAAiD,EAAAb,EAAAc,KAAG,SAAAsB,EAAOC,GAAP,IAAArB,EAAA,OAAAH,EAAAb,EAAAiB,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAEenC,IAAMoC,IAAIgB,GAFzB,cAEFrB,EAFEsB,EAAAhB,KAAAgB,EAAAf,OAAA,SAGDP,EAAS3B,MAHR,cAAAiD,EAAAnB,KAAA,EAAAmB,EAAAd,GAAAc,EAAA,SAAAA,EAAAf,OAAA,SAKD,IALC,yBAAAe,EAAAb,SAAAW,EAAA,iBAAH,gBAAAG,GAAA,OAAAJ,EAAAT,MAAA5D,KAAA6D,YAAA,oBCSMa,mLA5BJ,IAAAnE,EAAAP,KAAA2E,EAMH3E,KAAKM,MAJPsE,EAFKD,EAELC,KAFKC,EAAAF,EAGLG,kBAHK,IAAAD,EAGQ,GAHRA,EAILE,EAJKJ,EAILI,MACAC,EALKL,EAKLK,SAGIC,EAAcL,EAAO,gBAAkB,eAC7C,OACE3C,EAAAC,EAAAC,cAAA,OAAKE,UAAS,iBAAA8B,OAAmBc,IAC/BhD,EAAAC,EAAAC,cAAA,OAAKE,UAAS,eAAA8B,OAAiBW,IAC7B7C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAe0C,GAC9B9C,EAAAC,EAAAC,cAAA,UAAQE,UAAU,iCAAiCG,QAAS,kBAAMjC,EAAKD,MAAM4E,YAC3EjD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,QAAQC,KAAK,SAGvCpD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACZ2C,YAtBOvC,IAAMC,mBCDpB4C,sBAEJ,SAAAA,EAAYhF,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAsF,IACjB/E,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAAwF,GAAA5E,KAAAV,KAAMM,KASRsE,KAAO,SAACW,GACNhF,EAAKM,SAAS,CACZ2E,WAAW,EACXD,QAASA,GACR,WACDE,WAAW,WACTlF,EAAKmF,QACJ,SAjBYnF,EAqBnBmF,KAAO,WACLnF,EAAKM,SAAS,CACZ2E,WAAW,EACXD,QAAS,MAtBXhF,EAAKoB,MAAQ,CACX6D,WAAW,EACXD,QAAS,IAGXD,EAAMK,UAAN7F,OAAA8F,EAAA,EAAA9F,QAAA8F,EAAA,EAAA9F,CAAAS,IAPiBA,wEAgCV,IAAAmB,EAIH1B,KAAK2B,MAFP6D,EAFK9D,EAEL8D,UACAD,EAHK7D,EAGL6D,QAGIM,EAAcL,EAAY,gBAAkB,eAElD,OACEvD,EAAAC,EAAAC,cAAA,OAAKE,UAAS,mBAAA8B,OAAqB0B,IACjC5D,EAAAC,EAAAC,cAAA,UAAQK,QAASxC,KAAK0F,MAAtB,KACAzD,EAAAC,EAAAC,cAAA,WACGoD,WA9CS9C,IAAMC,YAApB4C,EA8BGV,KAAO,SAACW,GACbD,EAAMK,UAAUf,KAAKW,IAsBVD,QCqRAQ,sBAhUb,SAAAA,EAAYxF,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAA8F,IACjBvF,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAAgG,GAAApF,KAAAV,KAAMM,KAmCRK,kBAAoB,SAACC,GACnBL,EAAKM,SAALf,OAAAgB,EAAA,EAAAhB,CAAA,GACGc,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAtCnBV,EAiDnBwF,KAAO,WAAM,IAAArE,EAUPnB,EAAKoB,MARPqE,EAFStE,EAETsE,mBACAC,EAHSvE,EAGTuE,GACAC,EAJSxE,EAITwE,cACAC,EALSzE,EAKTyE,gBACA/F,EANSsB,EAMTtB,SACAwB,EAPSF,EAOTE,SACAZ,EARSU,EAQTV,KACAoF,EATS1E,EAST0E,KAGF,GAAKpF,EAAL,CAIA,IAAIqF,EAAK,CACPH,cAAeA,EACfC,gBAAiBA,EACjB/F,SAAUA,EACVY,KAAMA,EACNoF,KAAMA,GAGG,OAAPH,GACFI,EAAGJ,GAAKA,EACJD,IACFK,EAAGzE,SAAWA,GAIhBT,IAAMmF,IAAI,qBAAsBD,GAC7BhF,KAAK,SAAAC,GACJf,EAAKgG,iBACLhG,EAAKqC,qBAEN4D,MAAM,SAAAC,GACLC,QAAQC,IAAIF,OAGhBJ,EAAGzE,SAAWA,EAGdT,IAAMC,KAAK,qBAAsBiF,GAC9BhF,KAAK,SAAAC,GACJf,EAAKgG,iBACLhG,EAAKqC,qBAEN4D,MAAM,SAAAC,GACLC,QAAQC,IAAIF,QAlGDlG,EAuGnBqG,cAAgB,WAAM,IAAAC,EAGhBtG,EAAKoB,MADPmF,0BAFkB,IAAAD,EAEG,GAFHA,EAIpB1F,IAAM4F,OAAO,sBAAwBD,EAAmBb,IACrD5E,KAAK,SAAAC,GACJf,EAAKqC,mBACLrC,EAAKyG,+BA9GQzG,EAkHnB6F,KAAO,SAACH,GACN9E,IAAMoC,IAAN,2BAAAY,OAAqC8B,IAClC5E,KAAK,SAAAC,GACJ,IAAM2F,EAAS3F,EAAIC,KACnB+D,EAAMV,KAAKqC,MAtHE1G,EA0HnB2G,eAAiB,WACf3G,EAAKM,SAASN,EAAK4G,eA3HF5G,EA8HnB6G,cAAgB,SAACf,GACJ,OAAPA,EACF9F,EAAKM,SAAS,CACZmF,oBAAoB,EACpBC,GAAII,EAAGJ,GACPC,cAAeG,EAAGH,cAClBC,gBAAiBE,EAAGF,gBACpB/F,SAAUiG,EAAGjG,SACbwB,SAAUyE,EAAGzE,SACbZ,KAAMqF,EAAGrF,KACToF,KAAMC,EAAGD,OAGX7F,EAAK2G,iBAGP3G,EAAKM,SAAS,CACZwG,eAAe,KA/IA9G,EAmJnBgG,eAAiB,WACfhG,EAAKM,SAAS,CACZwG,eAAe,KArJA9G,EAyJnB+G,yBAA2B,SAACC,GAC1BhH,EAAKM,SAAS,CACZiG,mBAAoBS,EACpBC,0BAA0B,KA5JXjH,EAgKnByG,0BAA4B,WAC1BzG,EAAKM,SAAS,CACZiG,mBAAoB,GACpBU,0BAA0B,KAnKXjH,EAuKnBkH,qBAAuB,WACrBlH,EAAKM,SAAS,SAAA6G,GAAS,MAAK,CAC1B1B,oBAAqB0B,EAAU1B,uBAzKhBzF,EA6KnBoH,YAAc,WACZpH,EAAKM,SAAS,CACZ+G,YAAa,MA7KfrH,EAAKoB,MAAQ,CACXkG,gBAAiB,GACjBR,eAAe,EACfG,0BAA0B,EAC1BV,mBAAoB,GACpBd,oBAAoB,EACpB4B,YAAa,GACb3B,GAAI,KACJjF,KAAM,GACNkF,cAAe,GACfC,gBAAiB,GACjB/F,SAAU,GACVwB,SAAU,GACVwE,KAAM,IAfS7F,mFAiCjBP,KAAK4C,4LAUyBkF,WAAxBD,SACN7H,KAAKa,SAAS,CACZgH,gBAAiBA,uIAmJnB,IAbO,IAAAE,EAAA/H,KAAAgI,EAQHhI,KAAK2B,MANPqE,EAFKgC,EAELhC,mBACAwB,EAHKQ,EAGLR,yBACAI,EAJKI,EAILJ,YACA3B,EALK+B,EAKL/B,GALKgC,EAAAD,EAMLH,uBANK,IAAAI,EAMa,GANbA,EAAAC,EAAAF,EAOLlB,0BAPK,IAAAoB,EAOgB,GAPhBA,EAUDC,EAAc,OAAPlC,EAAc,MAAQ,OAE7BmC,EAAsB,GAZrBC,EAAA,SAaEC,GACP,IAAMjC,EAAKwB,EAAgBS,GACrBtH,EAAOqF,EAAGrF,OACX4G,GAAgBA,GAAe5G,EAAKuH,SAASX,KAChDQ,EAAoBrG,KAEhBE,EAAAC,EAAAC,cAAA,OAAKqG,IAAKF,EAAGjG,UAAU,uBACrBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2CACZrB,GAEHiB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qCAAqCG,QAAS,kBAAMuF,EAAKX,cAAcf,KACvFpE,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,OAAOC,KAAK,QAEpCpD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qCAAqCG,QAAS,kBAAMuF,EAAKT,yBAAyBjB,KAClGpE,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,YAAYC,KAAK,QAEzCpD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qCAAqCG,QAAS,kBAAMuF,EAAK3B,KAAKC,EAAGJ,MACjFhE,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,OAAOC,KAAK,YAlBvCiD,EAAI,EAAGA,EAAIT,EAAgBY,OAAQH,IAAKD,EAAxCC,GA2BT,OACErG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,cACLC,MAAOjB,KAAK2B,MAAMiG,YAClBrF,SAAUvC,KAAKW,kBACf+H,YAAY,YACZC,MAAO,CAACC,MAAO,WAEjB3G,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASG,QAASxC,KAAK2H,aAAzC,SACA1F,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASG,QAAS,kBAAMuF,EAAKX,cAAc,QAC3DnF,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,SADxB,mBAGAnD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZ+F,GAGHnG,EAAAC,EAAAC,cAAC0G,EAAD,CACEjE,KAAM5E,KAAK2B,MAAM0F,cACjBnC,QAASlF,KAAKuG,eACdzB,WAAY,oBACZC,MAAOoD,GAEPlG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,QAAmCJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAhB,MACnCJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,OACLC,MAAOjB,KAAK2B,MAAMX,KAClBuB,SAAUvC,KAAKW,oBAEjBsB,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,kBACAJ,EAAAC,EAAAC,cAAA,YACE2G,KAAK,IACLxG,KAAK,OACLtB,KAAK,gBACLC,MAAOjB,KAAK2B,MAAMuE,cAClB3D,SAAUvC,KAAKW,oBAGjBsB,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,qBACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,kBACLC,MAAOjB,KAAK2B,MAAMwE,gBAClB5D,SAAUvC,KAAKW,oBAEjBsB,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,YACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,WACLC,MAAOjB,KAAK2B,MAAMvB,SAClBmC,SAAUvC,KAAKW,oBAEN,SAATwH,EAEElG,EAAAC,EAAAC,cAAA,OAAKwG,MAAO,CAACI,OAAQ,oBACnB9G,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASG,QAASxC,KAAKyH,sBAAzC,oBAEA,KAEK,QAATU,GAAkBnC,EAEhB/D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,YACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACLtB,KAAK,WACLC,MAAOjB,KAAK2B,MAAMC,SAClBW,SAAUvC,KAAKW,qBAEjB,KAGNsB,EAAAC,EAAAC,cAAA,QAAArC,OAAAgB,EAAA,EAAAhB,CAAA,CAAOuC,UAAU,cAAjB,YAAwC,QAAxC,QACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,OACLC,MAAOjB,KAAK2B,MAAMyE,KAClB7D,SAAUvC,KAAKW,oBAEjBsB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcG,QAASxC,KAAK+F,MAA9C,UAIJ9D,EAAAC,EAAAC,cAAC0G,EAAD,CACEjE,KAAM4C,EACNtC,QAASlF,KAAKgH,0BACdlC,WAAY,oBACZC,MAAO,oBACP9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,mCACmCyE,EAAmB9F,KADtD,KAGAiB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASG,QAASxC,KAAK4G,eAAzC,iDArSN,MAAO,CACLZ,oBAAoB,EACpBC,GAAI,KACJjF,KAAM,GACNkF,cAAe,GACfC,gBAAiB,GACjB/F,SAAU,GACVwB,SAAU,GACVwE,KAAM,WA9Ba1D,+BC+BVsG,sBAtCb,SAAAA,EAAY1I,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAgJ,IACjBzI,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAAkJ,GAAAtI,KAAAV,KAAMM,KAKR2I,OAAS,WAAM,IAAAtE,EAITpE,EAAKD,MAFPU,EAFW2D,EAEX3D,KACAkI,EAHWvE,EAGXuE,QAGF3I,EAAKD,MAAMiC,SAASvB,GAAOkI,IAV3B3I,EAAKoB,MAAQ,GAFIpB,wEAeV,IAAA4I,EAIHnJ,KAAKM,MAFPW,EAFKkI,EAELlI,MAKImI,EAAoB,CACxBC,gBARKF,EAGLD,QAGoC,UAAY,WAKlD,OACEjH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBAAqBG,QAASxC,KAAKiJ,QAChDhH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBAAyBsG,MAAOS,KAGjDnH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAkBpB,WAjClBwB,IAAMC,YCgFd4G,qNA7Eb3H,MAAQ,CACN4H,aAAa,EACb3B,YAAa,MAGf4B,gBAAkB,WAGhB,IAFA,IAAMC,GAAkBlJ,EAAKoB,MAAM4H,YAC7BG,EAAa5J,OAAA6J,EAAA,EAAA7J,CAAOS,EAAKD,MAAMsJ,YAC5BtB,EAAI,EAAGA,EAAIoB,EAAcjB,OAAQH,IACxCoB,EAAcpB,GAAGuB,UAAYJ,EAE/BlJ,EAAKD,MAAMiC,SAAShC,EAAKD,MAAMwJ,SAAUJ,GAEzCnJ,EAAKM,SAAS,SAAA6G,GAAS,MAAK,CAC1B6B,aAAc7B,EAAU6B,kBAI5BQ,wBAA0B,SAACnJ,GACzB,IAAMgH,EAAchH,EAAMG,OAAOE,MACjC,GAAI2G,EAGF,IAFA,IAAMX,EAAS,GACP2C,EAAerJ,EAAKD,MAApBsJ,WACCtB,EAAI,EAAGA,EAAIsB,EAAWnB,OAAQH,KACa,IAA9CsB,EAAWtB,GAAGrH,MAAM+I,QAAQpC,IAC9BX,EAAOlF,KAAK6H,EAAWtB,IAK7B/H,EAAKM,SAAS,CACZ+G,YAAaA,OAMjBqC,qBAAuB,SAACjJ,EAAM6I,GAC5B,IAAMH,EAAa5J,OAAA6J,EAAA,EAAA7J,CAAOS,EAAKD,MAAMsJ,YAC/BM,EAAQR,EAAcS,UAAU,SAAAC,GAAC,OAAIA,EAAEnJ,QAAUD,IACvD0I,EAAcQ,GAAOL,UAAYA,EACjCtJ,EAAKD,MAAMiC,SAAShC,EAAKD,MAAMwJ,SAAUJ,4EAGlC,IAAA3B,EAAA/H,KAAAqK,EAGHrK,KAAKM,MADPsJ,WAEIU,QAJC,IAAAD,EAEQ,GAFRA,GAI0BE,IAAI,SAACC,EAAKN,GAAN,OACnCjI,EAAAC,EAAAC,cAACsI,EAAD,CACEjC,IAAK0B,EACLlJ,KAAMwJ,EAAIvJ,MACVA,MAAOuJ,EAAIvJ,MACXiI,QAASsB,EAAIX,UACbtH,SAAUwF,EAAKkC,yBAInB,OACEhI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASG,QAASxC,KAAKwJ,iBAAzC,cAAsExJ,KAAK2B,MAAM4H,aACjFtH,EAAAC,EAAAC,cAAA,SACIG,KAAK,OACLtB,KAAK,OACLC,MAAOjB,KAAK2B,MAAMiG,YAClBrF,SAAUvC,KAAK+J,wBACfrB,YAAY,cAGhBzG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZiI,WAxEU7H,IAAMC,YCCdgI,GCHajI,IAAMC,UDGL,SAACiI,GAC1B,IAAIC,EACJ,IACEA,EAAQC,KAAKC,MAAMH,GACnB,MAAMI,GACNH,EAAQ,GAEV,OAAOA,IETII,EAAS,SACTC,EAAc,SACdC,EAAe,CAACF,EAAQC,GAExBE,EAAM,MACNC,EAAQ,QACRC,EAAc,CAACD,EAAOD,GAEtBG,EAA4B,IAM5BC,EAA2B,ICsNzBC,sBAzNb,SAAAA,EAAYlL,GAAM,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAwL,IAChBjL,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAA0L,GAAA9K,KAAAV,KAAMM,KAORmL,aAAe,SAACxH,GACM,OAAhBA,IAIJ1D,EAAKM,SAAS,CACZoD,YAAaA,IAGf9C,IAAMoC,IAAI,wBAA0BU,GACjC5C,KAAK,SAAAC,GACJ,IAAM2F,EAAS3F,EAAIC,KACnBhB,EAAKM,SAAS,CACZ6K,QAASzE,GACR1G,EAAKoL,kBAtBIpL,EA0BlBoL,aAAe,WAEb,IAFmB,IACXD,EAAYnL,EAAKoB,MAAjB+J,QACCpD,EAAI,EAAGA,EAAIoD,EAAQjD,OAAQH,IAAK,CACvC,IAAMsD,EAASF,EAAQpD,GACvB,GAAIsD,EAAOtJ,OAASuJ,EAAkB,CACpC,IAAMC,EAAeF,EAAOrK,KAC5BJ,IAAMC,KAAK,wBAA0BwK,EAAO3F,GAAI6F,GAC7CzK,KAAK,SAAAC,GACJ,IAAMyK,EAAczK,EAAIC,KAClByK,EAAkBC,EAAiBF,EAAYxK,MAE/C2I,EAAQwB,EAAQvB,UAAU,SAAA+B,GAAC,OAAIA,EAAEjG,KAAO8F,EAAY9F,KACpDkG,EAAUrM,OAAA6J,EAAA,EAAA7J,CAAOS,EAAKoB,MAAM+J,SAClCS,EAAWjC,GAAO6B,YAAcA,EAChC,IAAMzJ,EAAO6J,EAAWjC,GAAO5H,KAC/B,GAAIA,IAASuJ,EAAkB,CAE7B,IADA,IAAMjC,EAAa,GACVtB,EAAI,EAAGA,EAAI0D,EAAgBvD,OAAQH,IAE1C,IADA,IAD+C8D,EAChCtM,OAAOuM,OAAOL,EAAgB1D,IAC7CgE,EAAA,EAAAA,EAAAF,EAAA3D,OAAA6D,IAA0B,CAArB,IAAMC,EAAGH,EAAAE,GACZ1C,EAAW7H,KAAK,CACdd,MAAOsL,EACP1C,WAAW,IAKjBsC,EAAWjC,GAAON,WAAaA,OAC1B,GAAItH,IAASuJ,EAAwB,CAG1C,IAFA,IACI5K,EAAQ,GAF8BuL,EAC3B1M,OAAOuM,OAAOL,GAE7BS,EAAA,EAAAA,EAAAD,EAAA/D,OAAAgE,IAA0B,CACxBxL,EADYuL,EAAAC,GAEZ,MAEFN,EAAWjC,GAAOjJ,MAAQA,EAG5BV,EAAKM,SAAS,CACZ6K,QAASS,SAjEH5L,EAwElBmM,kBAAoB,WAGlB,IAFA,IAAMC,EAAc,GACdjB,EAAUnL,EAAKoB,MAAM+J,QAFHrD,EAAA,SAGfC,GACP,IAAMsD,EAASF,EAAQpD,GACnBsE,EAAmB3K,EAAAC,EAAAC,cAAA,mBACvB,GAAIyJ,EAAOtJ,OAASuJ,EAAkB,CACpC,IAAMjC,EAAagC,EAAOhC,WAC1BgD,EACE3K,EAAAC,EAAAC,cAAC0K,EAAD,CACErE,IAAKF,EACLwB,SAAU8B,EAAO3F,GACjB2D,WAAYA,EACZrH,SAAUhC,EAAKuM,sBAGVlB,EAAOtJ,OAASuJ,IACzBe,EACE3K,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLrB,MAAO2K,EAAO3K,MACdsB,SAAU,SAAC3B,GAAD,OAAWL,EAAKwM,oBAAoBnB,EAAO3F,GAAIrF,OAK/D+L,EAAY5K,KAERE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACZuJ,EAAO5K,KAENT,EAAKD,MAAM0M,WAET/K,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeG,QAAS,kBAAMjC,EAAK0M,KAAKrB,EAAO3F,MAC5DhE,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,OAAO8H,YAAU,KAEzCjL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeG,QAAS,kBAAMjC,EAAK4M,OAAOvB,EAAO3F,MAC9DhE,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,YAAY8H,YAAU,MAG/C,MAGPjL,EAAAC,EAAAC,cAAA,WACGyK,MA3CFtE,EAAI,EAAGA,EAAIoD,EAAQjD,OAAQH,IAAKD,EAAhCC,GAiDT,OAAOqE,GA5HSpM,EA+HlB0M,KAAO,SAACnD,GACNvJ,EAAKD,MAAM8M,OAAOtD,IAhIFvJ,EAmIlB4M,OAAS,SAACrD,GACR3I,IAAM4F,OAAO,cAAgB+C,GAC1BzI,KAAK,SAAAC,GACJ,IAAM4I,EAAQ3J,EAAKoB,MAAM+J,QAAQvB,UAAU,SAAA+B,GAAC,OAAIA,EAAEjG,KAAO6D,IACnDqC,EAAUrM,OAAA6J,EAAA,EAAA7J,CAAOS,EAAKoB,MAAM+J,SAClCS,EAAWkB,OAAOnD,EAAO,GACzB3J,EAAKM,SAAS,CACZ6K,QAASS,OA1IC5L,EA+IlBuM,eAAiB,SAAChD,EAAUF,GAC1B,IAAMM,EAAQ3J,EAAKoB,MAAM+J,QAAQvB,UAAU,SAAA+B,GAAC,OAAIA,EAAEjG,KAAO6D,IACnDqC,EAAUrM,OAAA6J,EAAA,EAAA7J,CAAOS,EAAKoB,MAAM+J,SAClCS,EAAWjC,GAAON,WAAlB9J,OAAA6J,EAAA,EAAA7J,CAAmC8J,GACnCrJ,EAAKM,SAAS,CACZ6K,QAASS,KApJK5L,EA2JlBwM,oBAAsB,SAACjD,EAAUlJ,GAAU,IACjC8K,EAAYnL,EAAKoB,MAAjB+J,QACFzK,EAAQL,EAAMG,OAAOE,MACrBiJ,EAAQwB,EAAQvB,UAAU,SAAA+B,GAAC,OAAIA,EAAEjG,KAAO6D,IACxCqC,EAAUrM,OAAA6J,EAAA,EAAA7J,CAAO4L,GACvBS,EAAWjC,GAAOjJ,MAAQA,EAC1BV,EAAKM,SAAS,CACZ6K,QAASS,KAlKK5L,EAsKlB+M,aAAe,WAGb,IAHmB,IACX5B,EAAYnL,EAAKoB,MAAjB+J,QACF6B,EAAe,GACZjF,EAAI,EAAGA,EAAIoD,EAAQjD,OAAQH,IAAK,CACvC,IAAMsD,EAASF,EAAQpD,GACjBkF,EAAc,GACpB,GAAI5B,EAAOtJ,OAASuJ,EAAkB,CAGpC,IAFA,IAAMjC,EAAagC,EAAOhC,WACpB6D,EAAc,GACXC,EAAI,EAAGA,EAAI9D,EAAWnB,OAAQiF,IAAK,CAC1C,IAAMC,EAAW/D,EAAW8D,GACxBC,EAAS9D,WACX4D,EAAY1L,KAAK4L,EAAS1M,OAG9BuM,EAAYvM,MAAQwM,EAChBA,EAAYhF,SAAWmB,EAAWnB,SACpC+E,EAAYI,OAAS,mBAEdhC,EAAOtJ,OAASuJ,IACzB2B,EAAYvM,MAAQ2K,EAAO3K,OAE7BuM,EAAYK,MAAQjC,EAAOrK,KAAKsM,MAChCL,EAAYlL,KAAOsJ,EAAOtJ,KAC1BiL,EAAaxL,KAAKyL,GAGpBjN,EAAKD,MAAMwN,eAAeP,IA/L1BhN,EAAKoB,MAAQ,CACXsC,YAAa,KACbyH,QAAS,IAJKnL,wEAoMT,IACCqE,EAAS5E,KAAKM,MAAdsE,KACF+D,EAAQ,GAOd,OALEA,EAAMC,MADJhE,EACYiH,EAAsC,KAEtC,MAId5J,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iCAAiCsG,MAAOA,GACrD1G,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASG,QAASxC,KAAKsN,cAAzC,OACArL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACZrC,KAAK0M,6BApNchK,yCCkEfqL,cAzEb,SAAAA,EAAYzN,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAA+N,IACjBxN,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAAiO,GAAArN,KAAAV,KAAMM,KAMR0N,YAAc,WACZzN,EAAKM,SAAS,SAAA6G,GAAS,MAAK,CAC1BuG,aAAcvG,EAAUuG,gBATT1N,EAanB2N,YAAc,WACZ3N,EAAKM,SAAS,CACZoN,aAAa,KAfE1N,EAmBnB4N,aAAe,SAACC,GACd,IAAMC,EAAMD,EAAMC,IACZC,EAAI,QAAAnK,OAAWkK,EAAIE,EAAf,MAAApK,OAAqBkK,EAAIG,EAAzB,MAAArK,OAA+BkK,EAAII,EAAnC,MAAAtK,OAAyCkK,EAAInM,EAA7C,KACV3B,EAAKD,MAAMiC,SAAS+L,IApBpB/N,EAAKoB,MAAQ,CACXsM,aAAa,GAHE1N,wEA2BjB,IAAM6N,EAAQ,CACZxF,MAAO,OACP8F,OAAQ,OACRC,aAAc,MACdC,WAAY5O,KAAKM,MAAMW,OAyBzB,OACEgB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKwG,MAxBM,CACbkG,QAAS,MACTD,WAAY,OACZD,aAAc,MACdG,UAAW,2BACXC,QAAS,eACTC,OAAQ,WAkBcxM,QAASxC,KAAKgO,aAChC/L,EAAAC,EAAAC,cAAA,OAAKwG,MAAOyF,KAEZpO,KAAK2B,MAAMsM,YAEThM,EAAAC,EAAAC,cAAA,OAAKwG,MApBG,CACdsG,SAAU,WACVC,OAAQ,MAmBAjN,EAAAC,EAAAC,cAAA,OAAKwG,MAhBD,CACZsG,SAAU,QACVE,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRC,KAAM,OAWqB9M,QAASxC,KAAKkO,cACjCjM,EAAAC,EAAAC,cAACoN,EAAA,aAAD,CAAcnB,MAAOpO,KAAKM,MAAMW,MAAOsB,SAAUvC,KAAKmO,gBAEtD,aArEY1L,IAAMC,WCC1B8M,EAAgB,EAgHPC,eA5Gb,SAAAA,EAAYnP,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAyP,IACjBlP,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAA2P,GAAA/O,KAAAV,KAAMM,KAiBRoP,YAAc,SAAC9O,GACbA,EAAMa,iBAON,IANA,IACMkO,EADWC,IAASC,YAAT/P,OAAA8F,EAAA,EAAA9F,QAAA8F,EAAA,EAAA9F,CAAAS,KACauP,WACxBC,EAAUnP,EAAMoP,QAAUL,EAAaM,WACvCC,EAAUtP,EAAMuP,QAAUR,EAAaS,UAEzCC,EAAQC,SAASC,uBAAuB,YACnCjI,EAAI,EAAGA,EAAI+H,EAAM5H,OAAQH,IAC9B+H,EAAM/H,GAAGK,MAAMuG,OAAS,GAE5BS,EAAahH,MAAMuG,OAAS,GAXL,IAafsB,EAAkBb,EAAlBa,cACRA,EAAcC,iBAAiB,UAAWlQ,EAAKmQ,WAC/CF,EAAcC,iBAAiB,YAAalQ,EAAKoQ,aACjDpQ,EAAKM,SAAS,CACZkP,QAASA,EACTG,QAASA,IAGX3P,EAAKD,MAAMoP,YAAY,SAvCNnP,EA0CnBmQ,UAAY,SAAC9P,GACXA,EAAMa,iBACN,IAAMmP,EAAWhB,IAASC,YAAT/P,OAAA8F,EAAA,EAAA9F,QAAA8F,EAAA,EAAA9F,CAAAS,KACjB,GAAIqQ,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAatQ,EAAKmP,aACpDc,EAAcK,oBAAoB,UAAWtQ,EAAKmQ,WAClDF,EAAcK,oBAAoB,YAAatQ,EAAKoQ,aAEtDpQ,EAAKD,MAAMoQ,aAnDMnQ,EAsDnBoQ,YAAc,SAAC/P,GAEb,GADAA,EAAMa,iBACkB,SAApBlB,EAAKD,MAAM6H,KAAf,CAIA,IAAI2I,EAAW,EACXvQ,EAAKD,MAAMyQ,aACbD,EAAW,GAGb,IACMnB,EADWC,IAASC,YAAT/P,OAAA8F,EAAA,EAAA9F,QAAA8F,EAAA,EAAA9F,CAAAS,KACauP,WAC1BkB,EAAWpQ,EAAMoP,QAAUzP,EAAKoB,MAAMoO,QACtCkB,EAAWrQ,EAAMuP,QAAU5P,EAAKoB,MAAMuO,QAEpCgB,EAAgBvB,EAAaG,WAC7BqB,EAAiBD,EAAcE,YAC/BC,EAAkBH,EAAcI,aAElCC,EAAWC,SAAS7B,EAAahH,MAAMC,MAAO,IAAsB,EAAhB4G,EACpDiC,EAAYD,SAAS7B,EAAahH,MAAM+F,OAAQ,IAAsB,EAAhBc,EAEtDwB,EAAW,IACbA,EAAW,GAETC,EAAW,IACbA,EAAW,GAETD,EAAWO,EAAWJ,IACxBH,EAAWG,EAAiBI,GAE1BN,EAAWQ,EAAYJ,IACzBJ,EAAWI,EAAkBI,GAG/BT,EAAWU,KAAKC,MAAMX,EAAWF,GAAYA,EAC7CG,EAAWS,KAAKC,MAAMV,EAAWH,GAAYA,EAE7CnB,EAAahH,MAAM2G,KAAO0B,EAAW,KACrCrB,EAAahH,MAAMwG,IAAM8B,EAAW,OA5FpC1Q,EAAKoB,MAAQ,CACXoO,QAAS,EACTG,QAAS,GAJM3P,sFASjB,IAAMqQ,EAAWhB,IAASC,YAAY7P,MACtC,GAAI4Q,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAa7Q,KAAK0P,aACpDc,EAAcK,oBAAoB,UAAW7Q,KAAK0Q,WAClDF,EAAcK,oBAAoB,YAAa7Q,KAAK2Q,+CAoFtD,OACE1O,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbqN,YAAa1P,KAAK0P,YAClBgB,UAAW1Q,KAAK0Q,WAChBzO,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,oBAAoB8H,YAAU,YAxGhCzK,IAAMC,WCF5BkP,GAAY,GACZC,GAAa,GACbrC,GAAgB,EAiHPsC,eA5Gb,SAAAA,EAAYxR,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAA8R,IACjBvR,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAAgS,GAAApR,KAAAV,KAAMM,KAiBRoP,YAAc,SAAC9O,GACbA,EAAMa,iBACN,IAAMmP,EAAWhB,IAASC,YAAT/P,OAAA8F,EAAA,EAAA9F,QAAA8F,EAAA,EAAA9F,CAAAS,KACXyQ,EAAWpQ,EAAMoP,QACjBiB,EAAWrQ,EAAMuP,QAEfK,EAAkBI,EAAlBJ,cACRA,EAAcC,iBAAiB,UAAWlQ,EAAKmQ,WAC/CF,EAAcC,iBAAiB,YAAalQ,EAAKoQ,aACjDpQ,EAAKM,SAAS,CACZmQ,SAAUA,EACVC,SAAUA,IAGZ1Q,EAAKD,MAAMoP,YAAY,WAhCNnP,EAmCnBmQ,UAAY,SAAC9P,GACXA,EAAMa,iBACN,IAAMmP,EAAWhB,IAASC,YAAT/P,OAAA8F,EAAA,EAAA9F,QAAA8F,EAAA,EAAA9F,CAAAS,KACjB,GAAIqQ,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAatQ,EAAKmP,aACpDc,EAAcK,oBAAoB,UAAWtQ,EAAKmQ,WAClDF,EAAcK,oBAAoB,YAAatQ,EAAKoQ,aAEtDpQ,EAAKD,MAAMoQ,aA5CMnQ,EA+CnBoQ,YAAc,SAAC/P,GAEb,GADAA,EAAMa,iBACkB,WAApBlB,EAAKD,MAAM6H,KAAf,CAIA,IAAI4H,EAAUnP,EAAMoP,QAAUzP,EAAKoB,MAAMqP,SACrCd,EAAUtP,EAAMuP,QAAU5P,EAAKoB,MAAMsP,SAGnCtB,EADWC,IAASC,YAAT/P,OAAA8F,EAAA,EAAA9F,QAAA8F,EAAA,EAAA9F,CAAAS,KACauP,WACxBiC,EAAYP,SAAS7B,EAAahH,MAAMC,MAAO,IAC/CoJ,EAAaR,SAAS7B,EAAahH,MAAM+F,OAAQ,IAEjDwC,EAAgBvB,EAAaG,WAC7BqB,EAAiBD,EAAcE,YAC/BC,EAAkBH,EAAcI,aAElCW,EAAWP,KAAKC,MAAMI,EAAYhC,GAClCmC,EAAYR,KAAKC,MAAMK,EAAa9B,GAEpC+B,EAAWL,KACbK,EAAWL,IAGTM,EAAYL,KACdK,EAAYL,IAGd,IAAMvC,EAAOK,EAAaM,WAA6B,EAAhBT,GACjCL,EAAMQ,EAAaS,UAA4B,EAAhBZ,GAEjCyC,EAAY3C,EAAO6B,IACrBc,EAAWd,EAAiB7B,GAG1B4C,EAAY/C,EAAMkC,IACpBa,EAAYb,EAAkBlC,GAGhCQ,EAAahH,MAAMC,MAAQqJ,EAAW,KACtCtC,EAAahH,MAAM+F,OAASwD,EAAY,KAExC3R,EAAKM,SAAS,CACZmQ,SAAUpQ,EAAMoP,QAChBiB,SAAUrQ,EAAMuP,YA1FlB5P,EAAKoB,MAAQ,CACXqP,SAAU,EACVC,SAAU,GAJK1Q,sFASjB,IAAMqQ,EAAWhB,IAASC,YAAY7P,MACtC,GAAI4Q,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAa7Q,KAAK0P,aACpDc,EAAcK,oBAAoB,UAAW7Q,KAAK0Q,WAClDF,EAAcK,oBAAoB,YAAa7Q,KAAK2Q,+CAmFtD,OACE1O,EAAAC,EAAAC,cAAA,OACEE,UAAU,iBACVqN,YAAa1P,KAAK0P,YAClBgB,UAAW1Q,KAAK0Q,WAChBzO,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,WAAW8H,YAAU,YAxGvBzK,IAAMC,gCCP5ByP,GAAe,CACnB,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,WA2BjCC,GAAe,SAACpG,EAAiBqG,EAAQC,GAGpD,IAFA,IAAIC,EAAS,GACTC,EAAS,GACJlK,EAAI,EAAGA,EAAI0D,EAAgBvD,OAAQH,IAAK,CAC/C,IAAMmK,EAAMzG,EAAgB1D,GAC5BiK,EAAOxQ,KAAK0Q,EAAIJ,IAChBG,EAAOzQ,KAAK,CACVf,KAAMyR,EAAIJ,GACVpR,MAAOwR,EAAIH,KAGf,OAnCkC,SAACC,EAAQC,GAC3C,MAAO,CACLpE,MAAO+D,GACPO,QAAS,GAETH,OAAQ,CACNjQ,KAAM,SACNqQ,OAAQ,WACRpR,KAAMgR,EACNnD,MAAO,GACPD,IAAK,GACLE,OAAQ,IAEVmD,OAAQ,CACN,CACElQ,KAAK,MACLsQ,OAAQ,CAAC,MAAO,OAChBC,OAAQ,MACRtR,KAAMiR,KAiBLM,CAAqBP,EAAQC,ICevBO,uBApDb,SAAAA,EAAYzS,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAA+S,IACjBxS,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAAiT,GAAArS,KAAAV,KAAMM,KACDqB,MAAQ,GAFIpB,wEAMV,IAAAoE,EAMH3E,KAAKM,MANF0S,EAAArO,EAELpD,YAFK,IAAAyR,EAEE,GAFFA,EAAAC,EAAAtO,EAGLuO,eAHK,IAAAD,EAGK,GAHLA,EAAAE,EAAAxO,EAILyO,oBAJK,IAAAD,EAIU,GAJVA,EAKL1M,EALK9B,EAKL8B,MAGI4M,EAAgB,GAkBtB,OAjBAH,EAAQI,QAAQ,SAAAC,GACd,IAAMC,EAAaD,EAAOvS,KACpByS,EAAS,CACbC,OAAQF,EACRG,SAAUH,GAEZ,GAAIJ,EAAa3K,OAAS,EAAG,CAC3B,IAAMyB,EAAQkJ,EAAajJ,UAAU,SAAAyJ,GAAC,OAAIA,EAAEJ,aAAeA,IAC3D,IAAe,IAAXtJ,EAAc,CAChB,IAAMjG,EAAcmP,EAAalJ,GAAOjG,YACxCwP,EAAOI,KAAQ,SAAAvT,GAAK,OAAI2B,EAAAC,EAAAC,cAAA,KAAG2R,KAAI,6BAAA3P,OAA+BF,EAA/B,KAAAE,OAA8CqP,EAA9C,KAAArP,OAA4D7D,EAAMW,QAAUX,EAAMW,SAIrHoS,EAActR,KAAK0R,KAGjBhN,EAEAxE,EAAAC,EAAAC,cAAA,WACGsE,GAMLxE,EAAAC,EAAAC,cAAC4R,EAAA,EAAD,CACExS,KAAMA,EACN2R,QAASG,EACTW,gBAAiB,GACjBC,aAAc,OACdC,SAAU,gBAhDQzR,IAAMC,YCY1ByR,eAEJ,SAAAA,EAAY7T,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAmU,IACjB5T,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAAqU,GAAAzT,KAAAV,KAAMM,KAgBRoP,YAAc,SAACvH,GACbzB,QAAQC,IAAI,uBAAwBwB,GACpC5H,EAAKM,SAAS,CACZsH,KAAMA,KApBS5H,EAwBnBmQ,UAAY,WACVhK,QAAQC,IAAI,sBACZpG,EAAKM,SAAS,CACZsH,KAAM,KAGR,IAAMyI,EAAWhB,IAASC,YAAT/P,OAAA8F,EAAA,EAAA9F,QAAA8F,EAAA,EAAA9F,CAAAS,KACX6J,EAAIwG,EAASX,WACbmE,EAAIxD,EAASR,UACbxH,EAAQ4I,SAASZ,EAASjI,MAAMC,MAAO,IACvC8F,EAAS8C,SAASZ,EAASjI,MAAM+F,OAAQ,IAGzC2F,EAAS,CACbpO,GAHe1F,EAAKD,MAAM2F,GAI1BmE,EAAGA,EACHgK,EAAGA,EACHxL,MAAOA,EACP8F,OAAQA,GAGVnO,EAAKD,MAAMgU,aAAaD,IA7CP9T,EAgDnBoQ,YAAc,SAAC/P,EAAOuH,EAAMxG,GAC1Bf,EAAMa,kBAjDWlB,EAoDnBgU,WAAa,SAACC,GACZjU,EAAKD,MAAMmU,aAAaD,IArDPjU,EAwDnBmU,UAAY,SAACF,KAxDMjU,EA4DnBoU,WAAa,SAACH,KA5DKjU,EAgEnBqU,aAAe,SAACJ,GACdjU,EAAKD,MAAMuU,eAAeL,IAjETjU,EAoEnBuU,qBAAuB,SAACnT,EAAOoT,EAASxB,EAAQyB,GAC9C,MAAO,CACLxS,QAAS,SAACuI,EAAGkK,GACXvO,QAAQC,IAAI,6BACZD,QAAQC,IAAI,0BAA2BoE,GACvCrE,QAAQC,IAAI,yBAA0B4M,GACtC7M,QAAQC,IAAI,sBAAuBoO,GACnCrO,QAAQC,IAAI,iCAAkCqO,GAE9C,IAAMvB,EAASF,EAAOG,OAEhBzS,EADM8T,EAAQtC,IACFgB,GACZyB,EAASF,EAAS1U,MAAM6U,oBAAsB,GACpDzO,QAAQC,IAAI,uBAAwB8M,EAAQxS,EAAOiU,GACnD,IAAMhL,EAAQgL,EAAO/K,UAAU,SAAAyJ,GAAC,OAAIA,EAAEJ,aAAeC,IACrD,IAAe,IAAXvJ,EAAc,CAChB,IAAMjG,EAAciR,EAAOhL,GAAOjG,YAClC1D,EAAKD,MAAMwB,QAAQC,KAAnB,wBAAAoC,OAAgDF,EAAhD,KAAAE,OAA+DsP,EAA/D,KAAAtP,OAAyElD,QArF9DV,EA2FnB6U,aAAe,SAACvH,EAAOwH,GACrB3O,QAAQC,IAAI,eAAgBkH,EAAOwH,IA5FlB9U,EA+FnB+U,2BAA6B,SAACzH,EAAO0H,GACnC7O,QAAQC,IAAI,6BAA8BkH,EAAO0H,IAhGhChV,EAmGnBiV,oBAAsB,WACpB,IAAMC,EAAgB,CACpBC,MAASnV,EAAK6U,aACdO,oBAAuBpV,EAAK+U,4BAHJ3Q,EAWtBpE,EAAKD,MAJPsV,EAPwBjR,EAOxBiR,UAPwBC,EAAAlR,EAQxBoH,mBARwB,IAAA8J,EAQV,GARUA,EASxBzC,EATwBzO,EASxByO,aATwBJ,EAAArO,EAUxBpD,YAVwB,IAAAyR,EAUjB,GAViBA,EAapBhH,EAAkBC,EAAiBF,EAAYxK,MAC/C2R,EAAUnH,EAAYmH,SAAW,GACjCzM,EAAQsF,EAAYtF,MAEtBqP,EAAc7T,EAAAC,EAAAC,cAAA,YAClB,GAAIyT,IAAc/J,EAChBiK,EACE7T,EAAAC,EAAAC,cAAC4T,GAAD,CACExU,KAAMyK,EACNkH,QAASA,EACTzM,MAAOA,EACP2M,aAAcA,SAGb,GAAIwC,IAAc/J,EAAe,KAEpCwG,EAEE9Q,EAFF8Q,OACAC,EACE/Q,EADF+Q,SAEI0D,EAAcC,GAAwBjK,EAAiBqG,EAAQC,GACrEwD,EACE7T,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CACEiU,OAAQH,EACR3T,UAAU,UACV+T,SAAUX,IAKhB,OAAOK,GA3IPvV,EAAKoB,MAAQ,CACXwG,KAAM,IAHS5H,sFAQjB,IAAMqQ,EAAWhB,IAASC,YAAY7P,MACtC,GAAI4Q,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAa7Q,KAAK0P,aACpDc,EAAcK,oBAAoB,UAAW7Q,KAAK0Q,WAClDF,EAAcK,oBAAoB,YAAa7Q,KAAK2Q,+CAmI/C,IAAA5I,EAAA/H,KAAAmJ,EAMHnJ,KAAKM,MAJP2F,EAFKkD,EAELlD,GACAjF,EAHKmI,EAGLnI,KACAgM,EAJK7D,EAIL6D,WAJKqJ,EAAAlN,EAKLR,MALK2N,QAAA,IAAAD,EAKG,GALHA,GASLE,WAGIC,OAZC,IAAAF,KAY0B,oBAAsB,oBAEnDG,EAAS,CACXnH,KAAMtP,KAAKM,MAAM8J,EAAI,KACrB+E,IAAKnP,KAAKM,MAAM8T,EAAI,KACpBxL,MAAO5I,KAAKM,MAAMsI,MAAQ,KAC1B8F,OAAQ1O,KAAKM,MAAMoO,OAAS,KAC5BQ,OAAQ,EACRwH,OAAQF,GAGV,OACEvU,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWsG,MAAO8N,GAC/BxU,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACZrB,EAECgM,EACA/K,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcsG,MAAO,CAACgO,YAAa,SAChD1U,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeG,QAAS,kBAAMuF,EAAKwM,WAAWtO,KAC3DhE,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,OAAO8H,YAAU,KAEzCjL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeG,QAAS,kBAAMuF,EAAK6M,aAAa3O,KAC7DhE,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,YAAY8H,YAAU,MAIhDjL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,8BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeG,QAAS,kBAAMuF,EAAK4M,WAAW1O,KAC3DhE,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,cAAc8H,YAAU,KAGhDjL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeG,QAAS,kBAAMuF,EAAK2M,UAAUzO,KAC1DhE,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,WAAW8H,YAAU,OAMnDjL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACZrC,KAAKwV,uBAGNxI,EACA/K,EAAAC,EAAAC,cAACyU,GAAD,CACElG,UAAW1Q,KAAK0Q,UAChBhB,YAAa1P,KAAK0P,YAClBiB,YAAa3Q,KAAK2Q,YAClBxI,KAAMnI,KAAK2B,MAAMwG,KACjB4I,WAAY/Q,KAAKM,MAAMyQ,aACxB,KAED/D,EACA/K,EAAAC,EAAAC,cAAC0U,GAAD,CACEnG,UAAW1Q,KAAK0Q,UAChBhB,YAAa1P,KAAK0P,YAClBiB,YAAa3Q,KAAK2Q,YAClBxI,KAAMnI,KAAK2B,MAAMwG,OAClB,aAvNY1F,IAAMC,WA8NdC,eAAWwR,ICvLX2C,uBAjDb,SAAAA,EAAYxW,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAA8W,IACjBvW,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAAgX,GAAApW,KAAAV,KAAMM,KACDqB,MAAQ,GAFIpB,wEAMV,IAAAwH,EAAA/H,KAAA2E,EAOH3E,KAAKM,MALPsI,EAFKjE,EAELiE,MACA8F,EAHK/J,EAGL+J,OACArF,EAJK1E,EAIL0E,gBAJK0N,EAAApS,EAKLqS,eALK,IAAAD,EAKK,GALLA,EASHpO,EAAQ,CACVC,MAAOA,EAAQ,KACf8F,OAAQA,EAAS,KACjBrF,gBAAiBA,GAZZ1E,EAMLsS,gBAUAtO,EAAMuO,eAAiB,YACvBvO,EAAMwO,gBAAkB,0DAG1B,IAAMC,EAAWJ,EAAQzM,IAAI,SAAC8J,EAAQnK,GAAT,OAC3BjI,EAAAC,EAAAC,cAACkV,GAADvX,OAAAwX,OAAA,CACE9O,IAAK0B,EACL6G,WAAYhJ,EAAKzH,MAAMyQ,WACvB/D,WAAYjF,EAAKzH,MAAM0M,YACnBqH,EAJN,CAKEC,aAAcvM,EAAKzH,MAAMgU,aACzBG,aAAc1M,EAAKzH,MAAMmU,aACzBI,eAAgB9M,EAAKzH,MAAMuU,oBAK/B,OACE5S,EAAAC,EAAAC,cAAA,OACEE,UAAU,cACVsG,MAAOA,GACNyO,UA7CgB3U,IAAMC,YCSzB6U,GAAa,KA+LJC,eA3Lb,SAAAA,EAAYlX,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAwX,IACjBjX,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAA0X,GAAA9W,KAAAV,KAAMM,KAYRmX,WAAa,SAAC7O,EAAO8O,GACnB,IAAMC,EAAepX,EAAKoB,MAAMiW,UACxBZ,EAAYzW,EAAKoB,MAAjBqV,QACFa,EAAU/X,OAAA6J,EAAA,EAAA7J,CAAOkX,GACnBU,GACFnX,EAAKuX,oBAAoBD,EAAYF,GAGvC,IAAMC,EAAYhP,EAAQ,GAC1BrI,EAAKwX,sBAAsBF,EAAYD,GACvCrX,EAAKM,SAAS,CACZmW,QAASa,EACTD,UAAWA,KAzBIrX,EA6BnBuX,oBAAsB,SAACd,EAASY,GAC9B,IAAK,IAAItP,EAAI,EAAGA,EAAI0O,EAAQvO,OAAQH,IAAK,CACvC,IAAM0P,EAAQzX,EAAK0X,YAAYjB,EAAQ1O,GAAG8B,EAAGwN,GACvCM,EAAY3X,EAAK0X,YAAYjB,EAAQ1O,GAAGM,MAAOgP,GACrDZ,EAAQ1O,GAAG8B,EAAI4N,EACfhB,EAAQ1O,GAAGM,MAAQsP,IAlCJ3X,EAsCnBwX,sBAAwB,SAACf,EAASY,GAChC,IAAK,IAAItP,EAAI,EAAGA,EAAI0O,EAAQvO,OAAQH,IAAK,CACvC,IAAM6P,EAAU5X,EAAK6X,cAAcpB,EAAQ1O,GAAG8B,EAAGwN,GAC3CS,EAAe9X,EAAK6X,cAAcpB,EAAQ1O,GAAGM,MAAOgP,GAC1DZ,EAAQ1O,GAAG8B,EAAI+N,EACfnB,EAAQ1O,GAAGM,MAAQyP,IA3CJ9X,EA+CnB6X,cAAgB,SAACE,EAAKV,GACpB,OAAOlG,KAAK6G,MAAMD,EAAMV,EAAYL,KAhDnBhX,EAmDnB0X,YAAc,SAACK,EAAKV,GAClB,OAAOlG,KAAK6G,MAAMD,EAAMf,GAAaK,IApDpBrX,EAuDnBiY,aAAe,SAACvU,EAAa2E,EAAO2E,GACd,OAAhBtJ,GAGJ9C,IAAMoC,IAAI,wBAA0BU,GACjC5C,KAAK,SAAAC,GACJ,IAAM2F,EAAS3F,EAAIC,KACnBhB,EAAKM,SAAS,CACZmW,QAAS/P,GACR,WACD1G,EAAKkX,WAAW7O,GAAO,GACvBrI,EAAKkY,aAAalL,QAlEPhN,EAuEnBkY,aAAe,SAAClL,GAGd,IAFA,IAAMmL,EAA0B,OAAjBnL,EAAwB,GAAKA,EACpCyJ,EAAYzW,EAAKoB,MAAjBqV,QACC1O,EAAI,EAAGA,EAAI0O,EAAQvO,OAAQH,IAAK,CACvC,IAAM+L,EAAS2C,EAAQ1O,GACvBnH,IAAMC,KAAK,wBAA0BiT,EAAOpO,GAAIyS,GAC7CrX,KAAK,SAAAC,GACJ,IAAM2F,EAAS3F,EAAIC,KACb2I,EAAQ8M,EAAQ7M,UAAU,SAAAwO,GAAC,OAAIA,EAAE1S,KAAOgB,EAAOhB,KAC/C4R,EAAU/X,OAAA6J,EAAA,EAAA7J,CAAOkX,GACvBa,EAAW3N,GAAO6B,YAAc9E,EAChC1G,EAAKM,SAAS,CACZmW,QAASa,QAnFAtX,EAyFnB0J,qBAAuB,SAACjJ,EAAM6I,GAC5BtJ,EAAKM,SAALf,OAAAgB,EAAA,EAAAhB,CAAA,GACGkB,EAAO6I,KA3FOtJ,EA+FnBqY,mBAAqB,SAAChY,GACpBL,EAAKD,MAAMuY,eAAejY,EAAMG,OAAOE,QAhGtBV,EAmGnBuY,wBAA0B,SAAC1K,GACzB7N,EAAKD,MAAMwY,wBAAwB1K,IApGlB7N,EAuGnBwY,YAAc,WACZ,IAAMlB,EAAahN,KAAKC,MAAMD,KAAKmO,UAAUzY,EAAKoB,MAAMqV,UAChDY,EAAcrX,EAAKoB,MAAnBiW,UACRrX,EAAKuX,oBAAoBD,EAAYD,GACrCzW,IAAMC,KAAK,sBAAuByW,GAC/BxW,KAAK,SAAAC,OA5GSf,EAgHnB+T,aAAe,SAACD,GAAW,IACjB2C,EAAYzW,EAAKoB,MAAjBqV,QACF9M,EAAQ8M,EAAQ7M,UAAU,SAAAwO,GAAC,OAAIA,EAAE1S,KAAOoO,EAAOpO,KAC/C4R,EAAU/X,OAAA6J,EAAA,EAAA7J,CAAOkX,GACvBa,EAAW3N,GAAOE,EAAIiK,EAAOjK,EAC7ByN,EAAW3N,GAAOkK,EAAIC,EAAOD,EAC7ByD,EAAW3N,GAAOtB,MAAQyL,EAAOzL,MACjCiP,EAAW3N,GAAOwE,OAAS2F,EAAO3F,OAClCnO,EAAKM,SAAS,CACZmW,QAASa,KAzHMtX,EA6HnBsU,eAAiB,SAACL,GAChBrT,IAAM4F,OAAO,cAAgByN,GAC1BnT,KAAK,SAAAC,GAAO,IACH0V,EAAYzW,EAAKoB,MAAjBqV,QACF9M,EAAQ8M,EAAQ7M,UAAU,SAAAwO,GAAC,OAAIA,EAAE1S,KAAOuO,IACxCqD,EAAU/X,OAAA6J,EAAA,EAAA7J,CAAOkX,GACvBa,EAAWxK,OAAOnD,EAAO,GACzB3J,EAAKM,SAAS,CACZmW,QAASa,OAnIftX,EAAKoB,MAAQ,CACXqV,QAAS,GACTY,UAAW,KACX7G,YAAY,EACZkG,eAAe,GANA1W,qHA0IV,IAEDoI,EAAQ,CACZC,MAF0B5I,KAAKM,MAAzB2Y,gBAEmB,MAG3B,OACEhX,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iCAAiCsG,MAAOA,GAEpD3I,KAAKM,MAAM0M,WAEV/K,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kCACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAf,WACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,SACLC,MAAOjB,KAAKM,MAAMoO,OAClBnM,SAAUvC,KAAK4Y,mBACfvW,UAAU,eACVsG,MAAO,CAACC,MAAO,WAGjB3G,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAAC+W,EAAD,CAAajY,MAAOjB,KAAKM,MAAM+I,gBAAiB9G,SAAUvC,KAAK8Y,2BAGjE7W,EAAAC,EAAAC,cAACsI,EAAD,CAAUzJ,KAAK,aAAaC,MAAM,eAAeiI,QAASlJ,KAAK2B,MAAMoP,WAAYxO,SAAUvC,KAAKiK,uBAChGhI,EAAAC,EAAAC,cAACsI,EAAD,CAAUzJ,KAAK,gBAAgBC,MAAM,iBAAiBiI,QAASlJ,KAAK2B,MAAMsV,cAAe1U,SAAUvC,KAAKiK,wBAGxG,KAEJhI,EAAAC,EAAAC,cAACgX,GAAD,CACEvQ,MAAO5I,KAAK2B,MAAMiW,UAClBlJ,OAAQ1O,KAAKM,MAAMoO,OACnBrF,gBAAiBrJ,KAAKM,MAAM+I,gBAC5B0H,WAAY/Q,KAAK2B,MAAMoP,WACvBkG,cAAejX,KAAK2B,MAAMsV,cAC1BD,QAAShX,KAAK2B,MAAMqV,QACpBhK,WAAYhN,KAAKM,MAAM0M,WACvBsH,aAActU,KAAKsU,aACnBG,aAAczU,KAAKM,MAAMmU,aACzBI,eAAgB7U,KAAK6U,yBAvLDpS,IAAMC,gCC4CrB0W,4CAxDb,SAAAA,EAAY9Y,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAoZ,IACjB7Y,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAAsZ,GAAA1Y,KAAAV,KAAMM,KAYR+Y,eAAiB,SAACtU,GAChBxE,EAAKM,SAAS,CACZyY,UAAWvU,KAbbxE,EAAKoB,MAAQ,GAFIpB,mFAOjB,IAAM+Y,EAAYtZ,KAAKM,MAAMgZ,UAC7BtZ,KAAKa,SAAS,CACZyY,UAAWA,qCAqBb,IAXO,IAAAvR,EAAA/H,KAAAuZ,EAGHvZ,KAAKM,MADP0E,gBAFK,IAAAuU,EAEM,GAFNA,EAMLD,EACEtZ,KAAK2B,MADP2X,UAGIE,EAAa,GACfC,EAAa,KAVVpR,EAAA,SAWEC,GACP,IAAMvD,EAAQC,EAASsD,GAAGhI,MAAMyE,MAC5B2U,EAAS,GACT3U,IAAUuU,IACZI,EAAS,oBACTD,EAAazU,EAASsD,GAAGhI,MAAM0E,UAGjCwU,EAAWzX,KACTE,EAAAC,EAAAC,cAAA,MAAIE,UAAS,mBAAA8B,OAAqBuV,GAAUlR,IAAKF,EAAG9F,QAAS,kBAAMuF,EAAKsR,eAAetU,KAASA,KAT3FuD,EAAI,EAAGA,EAAItD,EAASyD,OAAQH,IAAKD,EAAjCC,GAaT,OACErG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cACXmX,GAEHvX,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZoX,WAlDQhX,IAAMC,YC4DViX,eA1Db,SAAAA,EAAYrZ,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAA2Z,IACjBpZ,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAA6Z,GAAAjZ,KAAAV,KAAMM,KAaRsZ,mBAAqB,SAAChZ,GACpB,IAAMI,EAAOT,EAAKD,MAAMU,KAClBC,EAAQL,EAAMG,OAAOE,MAC3BV,EAAKD,MAAMiC,SAASvB,EAAMC,IAf1BV,EAAKoB,MAAQ,GAFIpB,wEAoBV,IAAAoE,EAMH3E,KAAKM,MAJPW,EAFK0D,EAEL1D,MAFK4Y,EAAAlV,EAGLmV,eAHK,IAAAD,EAGK,GAHLA,EAILE,EAJKpV,EAILoV,YACAC,EALKrV,EAKLqV,cAGIC,EAAa,GAsBnB,OArBAA,EAAWlY,KACTE,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,GAAGuH,IAAI,MAEvBsR,EAAQxG,QAAQ,SAAC6C,EAAQjM,GACvB,IAAIjJ,EACA8N,EACAgL,GAAeC,GAEjB/Y,EAAQkV,EAAO4D,GACfhL,EAAUoH,EAAO6D,KAGjB/Y,EAAQkV,EACRpH,EAAUoH,GAGZ8D,EAAWlY,KACTE,EAAAC,EAAAC,cAAA,UAAQlB,MAAOA,EAAOuH,IAAK0B,GAAQ6E,MAKrC9M,EAAAC,EAAAC,cAAA,UAAQlB,MAAOA,EAAOsB,SAAUvC,KAAK4Z,oBAClCK,UAtDYxX,IAAMC,WCmdZwX,eA3bb,SAAAA,EAAY5Z,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAka,IACjB3Z,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAAoa,GAAAxZ,KAAAV,KAAMM,KA6BR6Z,YA9BmB,eAAAtX,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAAiD,EAAAb,EAAAc,KA8BL,SAAAC,EAAOuR,EAAUvQ,GAAjB,IAAA4D,EAAA6D,EAAA,OAAA3I,EAAAb,EAAAiB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZ/C,EAAKM,SAASN,EAAK4G,cADP/D,EAAAE,KAAA,EAGkBwE,IAHlB,cAGND,EAHMzE,EAAAI,KAIZjD,EAAKM,SAAS,CACZgH,gBAAiBA,IALPzE,EAAAE,KAAA,EAQUwE,EAAiC7D,GAR3C,OAQNyH,EARMtI,EAAAI,KASZjD,EAAKM,SAAS,CACZ6K,QAASA,IAGXvK,IAAMoC,IAAI,iBACPlC,KAAK,SAAAC,GACJ,IAAM8Y,EAAa9Y,EAAIC,KACvBhB,EAAKM,SAAS,CACZwZ,gBAAiBD,MAIN,OAAb5F,GAC6B,IAA3B3M,EAAgBY,QAClBlI,EAAKM,SAAS,CACZyZ,iBAAkBzS,EAAgB,GAAG5B,KAIlB,IAAnByF,EAAQjD,QACVlI,EAAKM,SAAS,CACZiJ,SAAU4B,EAAQ,GAAGzF,KAGzB1F,EAAKM,SAAS,CACZ2T,SAAU,SAGZjU,EAAKM,SAAS,CACZ2T,SAAUA,IAEZrT,IAAMoC,IAAI,cAAgBiR,GACvBnT,KAAK,SAAAC,GACJ,IAAM2F,EAAS3F,EAAIC,KAEnB,GADsB0F,EAAd2O,YACU/J,EAAe,KAAA0O,EAI3BtT,EAAO1F,KAFT8Q,EAF6BkI,EAE7BlI,OACAC,EAH6BiI,EAG7BjI,SAEF/R,EAAKM,SAAS,CACZwR,OAAQA,EACRC,SAAUA,IAId/R,EAAKM,SAAS,CACZ2T,SAAUA,EACVxT,KAAMiG,EAAOjG,KACboJ,EAAGnD,EAAOmD,EACVgK,EAAGnN,EAAOmN,EACVxL,MAAO3B,EAAO2B,MACd8F,OAAQzH,EAAOyH,OACf8L,SAAUvT,EAAOuT,SACjB5E,UAAW3O,EAAO2O,UAClB0E,iBAAkBrT,EAAOqT,iBACzBpF,OAAQjO,EAAOmM,aACfzK,MAAO1B,EAAO0B,OACb,WACDpI,EAAKka,gBApED,yBAAArX,EAAAO,SAAAV,MA9BK,gBAAAyX,EAAAtW,GAAA,OAAAvB,EAAAe,MAAA5D,KAAA6D,YAAA,GAAAtD,EAyGnBI,kBAAoB,SAACC,GACnBL,EAAKM,SAALf,OAAAgB,EAAA,EAAAhB,CAAA,GACGc,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SA3GnBV,EA+GnB0J,qBAAuB,SAACjJ,EAAM6I,GAC5B,GAAa,eAAT7I,EAAuB,CACzB,IAAM2H,EAAK7I,OAAA6a,EAAA,EAAA7a,CAAA,GAAOS,EAAKoB,MAAMgH,OAC7BA,EAAM4N,WAAa1M,EACnBtJ,EAAKM,SAAS,CACZ8H,MAAOA,MApHMpI,EAyHnBqa,sBAAwB,SAACC,GACvBta,EAAKM,SAAS,CACZ2Z,SAAUK,KA3HKta,EA+HnBua,0BAA4B,SAAC9Z,EAAMC,GACjC,IAAM8Z,EAAWvJ,SAASvQ,EAAO,KAAO,EACxCV,EAAKM,SAALf,OAAAgB,EAAA,EAAAhB,CAAA,GACGkB,EAAO+Z,KAlIOxa,EAsInBqZ,mBAAqB,SAAC5Y,EAAMC,GAC1BV,EAAKM,SAALf,OAAAgB,EAAA,EAAAhB,CAAA,GACGkB,EAAOC,KAxIOV,EA4InBwF,KAAO,WAAM,IAAArE,EASPnB,EAAKoB,MAPP6S,EAFS9S,EAET8S,SACAxT,EAHSU,EAGTV,KACAsZ,EAJS5Y,EAIT4Y,iBACAE,EALS9Y,EAKT8Y,SACA5E,EANSlU,EAMTkU,UACAV,EAPSxT,EAOTwT,OACAvM,EARSjH,EAQTiH,MAGF,GAAK3H,EAAL,CAIA,IAAMqT,EAAS,CACbrT,KAAMA,EACNiD,YAAa1D,EAAKD,MAAM2D,YACxB2R,UAAWA,EACX0E,iBAAkBA,EAClBE,SAAUA,EACVpH,aAAc8B,EACdvM,MAAOA,GAGT,GAAIiN,IAAc/J,QAEX,GAAI+J,IAAc/J,EAAe,KAAA7D,EAIlCzH,EAAKoB,MAFP0Q,EAFoCrK,EAEpCqK,OACAC,EAHoCtK,EAGpCsK,SAEF+B,EAAO9S,KAAO,CACZ8Q,OAAQA,EACRC,SAAUA,GAIG,OAAbkC,EACFrT,IAAMC,KAAK,aAAciT,GACtBhT,KAAK,SAAAC,GACJf,EAAKD,MAAM0a,YAGf3G,EAAOpO,GAAKuO,EACZrT,IAAMmF,IAAI,aAAc+N,GACrBhT,KAAK,SAAAC,GACJf,EAAKD,MAAM0a,cA3LAza,EAgMnBka,SAAW,WACT,IAAM3O,EAAc,CAClBwO,iBAAkB/Z,EAAKoB,MAAM2Y,iBAC7BE,SAAUja,EAAKoB,MAAM6Y,UAGvBrZ,IAAMC,KAAK,sBAAuB0K,GAC/BzK,KAAK,SAAAC,GACJ,IAAM2F,EAAS3F,EAAIC,KACnBhB,EAAKM,SAAS,CACZkL,YAAa9E,OA1MF1G,EA+MnB0a,gBAAkB,WAAM,IAAAC,EAKlB3a,EAAKoB,MAHPuT,EAFoBgG,EAEpBhG,OACAiG,EAHoBD,EAGpBC,gBACAC,EAJoBF,EAIpBE,iBAEe7a,EAAKoB,MAAMmI,SAE5B,IAAe,IADDoL,EAAO/K,UAAU,SAAAyJ,GAAC,OAAIA,EAAEJ,aAAe2H,IACnC,CAChB,IAAME,EAASvb,OAAA6J,EAAA,EAAA7J,CAAOoV,GACtBmG,EAAUtZ,KAAK,CACbyR,WAAY2H,EACZlX,YAAamX,IAEf7a,EAAKM,SAAS,CACZqU,OAAQmG,MA9NK9a,EAmOnB+a,mBAAqB,SAACC,GAAU,IACtBrG,EAAW3U,EAAKoB,MAAhBuT,OACFhL,EAAQgL,EAAO/K,UAAU,SAAAyJ,GAAC,OAAKA,EAAEJ,aAAe+H,EAAM/H,YAAgBI,EAAE3P,cAAgBsX,EAAMtX,cACpG,IAAe,IAAXiG,EAAc,CAChB,IAAMmR,EAASvb,OAAA6J,EAAA,EAAA7J,CAAOoV,GACtBmG,EAAUhO,OAAOnD,EAAO,GACxB3J,EAAKM,SAAS,CACZqU,OAAQmG,MA1OK9a,EA+OnBib,cAAgB,WACd,GAAIjb,EAAKoB,MAAMiU,YAAc/J,EAAe,KAAA4P,EAKtClb,EAAKoB,MAHP0Q,EAFwCoJ,EAExCpJ,OACAC,EAHwCmJ,EAGxCnJ,SAHwCoJ,EAAAD,EAIxC1P,mBAJwC,IAAA2P,EAI1B,GAJ0BA,EAM1ChV,QAAQC,IAAI,gBAAiB0L,EAAQC,GACrC,IAAM/Q,EAAO0K,EAAiBF,EAAYxK,MACpCyU,EAAcC,GAAwB1U,EAAM8Q,EAAQC,GAC1D/R,EAAKM,SAAS,CACZmV,YAAaA,MA1PAzV,EA+PnBob,mBAAqB,WAAM,IAAAC,EAIrBrb,EAAKoB,MAFPiU,EAFuBgG,EAEvBhG,UAFuBiG,EAAAD,EAGvB7P,YAEImH,QALmB,IAAA2I,EAGT,GAHSA,GAKG3I,SAAW,GAEnC4I,EAAgB7Z,EAAAC,EAAAC,cAAA,4BACpB,GAAIyT,IAAc/J,QAEX,GAAI+J,IAAc/J,EAAe,KAAAkQ,EAKlCxb,EAAKoB,MAHPqU,EAFoC+F,EAEpC/F,YACA3D,EAHoC0J,EAGpC1J,OACAC,EAJoCyJ,EAIpCzJ,SAGFwJ,EACE7Z,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAaJ,EAAAC,EAAAC,cAAA,KAAG6Z,MAAM,qBAAvC,cACA/Z,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,qBACAJ,EAAAC,EAAAC,cAAC8Z,GAAD,CACEjb,KAAM,SACNC,MAAOoR,EACP9P,SAAUhC,EAAKqZ,mBACfE,QAAS5G,EACT8G,cAAe,OACfD,YAAa,SAIf9X,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,0BACAJ,EAAAC,EAAAC,cAAC8Z,GAAD,CACEjb,KAAM,WACNC,MAAOqR,EACP/P,SAAUhC,EAAKqZ,mBACfE,QAAS5G,EACT8G,cAAe,OACfD,YAAa,SAEf9X,EAAAC,EAAAC,cAAA,UAAQK,QAASjC,EAAKib,eAAtB,kBACAvZ,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,CACEiU,OAAQH,EACRrN,MAAO,CAAC+F,OAAQ,QAAS9F,MAAO,QAChCvG,UAAU,uBAIlB,OAAOyZ,GA9SPvb,EAAKoB,MAAQpB,EAAK4G,aAFD5G,qHAmTV,IAAAwH,EAAA/H,KAAAkc,EAMHlc,KAAK2B,MAJPoK,EAFKmQ,EAELnQ,YAFKoQ,EAAAD,EAGLrU,uBAHK,IAAAsU,EAGa,GAHbA,EAILjH,EAJKgH,EAILhH,OAJKkH,EAAAF,EAKL7B,uBALK,IAAA+B,EAKa,GALbA,EAQD7a,EAAO0K,EAAiBF,EAAYxK,MACpC2R,EAAUnH,EAAYmH,SAAW,GACjCzM,EAAQsF,EAAYtF,MAEpB4V,GAAcnH,GAAU,IAAI3K,IAAI,SAAAgR,GAAK,OACzCtZ,EAAAC,EAAAC,cAAA,OAAKqG,IAAK+S,EAAM/H,YACdvR,EAAAC,EAAAC,cAAA,sBAAcoZ,EAAM/H,YACpBvR,EAAAC,EAAAC,cAAA,yBAAiBoZ,EAAMtX,aACvBhC,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMuF,EAAKuT,mBAAmBC,KAA/C,aAIEe,EAAcpJ,EAAQ3I,IAAI,SAAAgS,GAAG,OACjCta,EAAAC,EAAAC,cAAA,OAAKqG,IAAK+T,EAAIvb,MAAOub,EAAIvb,KAAzB,IAAgCub,EAAIC,YAGtC,OACEva,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASG,QAASxC,KAAK+F,MAAzC,QAEA9D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAACsa,GAAD,CAAMnD,UAAU,SACdrX,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,SACT9C,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,QACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,OACLC,MAAOjB,KAAK2B,MAAMX,KAClBuB,SAAUvC,KAAKW,oBAGjBsB,EAAAC,EAAAC,cAACsI,EAAD,CAAUzJ,KAAK,aAAaC,MAAM,cAAciI,QAASlJ,KAAK2B,MAAMgH,MAAM4N,WAAYhU,SAAUvC,KAAKiK,wBAGvGhI,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,SACT9C,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,cACAJ,EAAAC,EAAAC,cAAC8Z,GAAD,CACEjb,KAAM,mBACNC,MAAOjB,KAAK2B,MAAM2Y,iBAClB/X,SAAUvC,KAAK8a,0BACfhB,QAASjS,EACTmS,cAAe,OACfD,YAAa,OAGf9X,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,aACAJ,EAAAC,EAAAC,cAACua,GAAAxa,EAAD,CACEyG,MAAO,CAAEgU,UAAW,OACpB1b,MAAOjB,KAAK2B,MAAM6Y,SAClBrS,KAAK,QACLyU,MAAM,QACN5b,KAAK,QACLuB,SAAUvC,KAAK4a,sBACflM,OAAQ,QACR9F,MAAO,OACPiU,SAAU,GACVC,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBC,WAAY,CACVC,iBAAiB,EACjBC,QAAS,KAIblb,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASG,QAASxC,KAAKya,UAAzC,cAGFxY,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,UACAJ,EAAAC,EAAAC,cAAC4T,GAAD,CACExU,KAAMA,EACN2R,QAASA,EACTzM,MAAOA,IAGTxE,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,mBACAJ,EAAAC,EAAAC,cAAA,WACGma,IAILra,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,SACT9C,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,iBACAJ,EAAAC,EAAAC,cAAC8Z,GAAD,CACEjb,KAAM,YACNC,MAAOjB,KAAK2B,MAAMiU,UAClBrT,SAAUvC,KAAK4Z,mBACfE,QAASjO,IAEX5J,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,WACCrC,KAAK2b,sBAGR1Z,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,iBACT9C,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,iBACAJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,UACAJ,EAAAC,EAAAC,cAAC8Z,GAAD,CACEjb,KAAM,kBACNC,MAAOjB,KAAK2B,MAAMwZ,gBAClBrB,QAAS5G,EACT3Q,SAAUvC,KAAK4Z,mBACfI,cAAe,OACfD,YAAa,SAGf9X,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,aACAJ,EAAAC,EAAAC,cAAC8Z,GAAD,CACEjb,KAAM,mBACNC,MAAOjB,KAAK2B,MAAMyZ,iBAClBtB,QAASO,EACT9X,SAAUvC,KAAK8a,0BACfd,cAAe,OACfD,YAAa,OAEf9X,EAAAC,EAAAC,cAAA,WACGka,GAEHpa,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASG,QAASxC,KAAKib,iBAAzC,gDA3aV,MAAO,CACLpT,gBAAiB,GACjB2M,SAAU,KACVxT,KAAM,GACNwZ,SAAU,GACVF,iBAAkB,GAClBvO,YAAa,GACb6J,UAAW/J,EACXlD,MAAO,CACL4N,YAAY,GAEdlE,OAAQ,GACRC,SAAU,GACV0D,YAAa,GACbd,OAAQ,GACRmF,gBAAiB,GACjBc,gBAAiB,GACjBC,iBAAkB,WAzBM3Y,IAAMC,WCkPrB0a,uBA1Pb,SAAAA,EAAY9c,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAod,IACjB7c,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAAsd,GAAA1c,KAAAV,KAAMM,KAkBR+c,YAnBmB,eAAAxa,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAAiD,EAAAb,EAAAc,KAmBL,SAAAC,EAAO6G,GAAP,IAAAjC,EAAA,OAAA9E,EAAAb,EAAAiB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZ/C,EAAKM,SAASN,EAAK4G,cADP/D,EAAAE,KAAA,EAGkBwE,IAHlB,OAGND,EAHMzE,EAAAI,KAIZjD,EAAKM,SAAS,CACZgH,gBAAiBA,IAGF,OAAbiC,GAC6B,IAA3BjC,EAAgBY,QAClBlI,EAAKM,SAAS,CACZyZ,iBAAkBzS,EAAgB,GAAG5B,KAGzC1F,EAAKM,SAAS,CACZiJ,SAAU,QAGZ3I,IAAMoC,IAAI,cAAgBuG,GACvBzI,KAAK,SAAAC,GACJ,IAAM2F,EAAS3F,EAAIC,KAEjBA,EAEE0F,EAFF1F,KACAe,EACE2E,EADF3E,KAEF/B,EAAKM,SAAS,CACZiJ,SAAUA,EACV9I,KAAMiG,EAAOjG,KACbsB,KAAM2E,EAAO3E,KACbf,KAAMA,IAGJe,IAASuJ,EACXtL,EAAKM,SAAS,CACZ2Z,SAAUjZ,EAAKiZ,SACfF,iBAAkB/Y,EAAK+Y,iBACvBzM,MAAOtM,EAAKsM,QAELvL,IAASuJ,GAClBtL,EAAKM,SAAS,CACZ2Z,SAAUjZ,EAAKiZ,SACfF,iBAAkB/Y,EAAK+Y,iBACvBzM,MAAOtM,EAAKsM,UA1CV,wBAAAzK,EAAAO,SAAAV,MAnBK,gBAAAyX,GAAA,OAAA7X,EAAAe,MAAA5D,KAAA6D,YAAA,GAAAtD,EAqEnBI,kBAAoB,SAACC,GACnBL,EAAKM,SAALf,OAAAgB,EAAA,EAAAhB,CAAA,GACGc,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAvEnBV,EA2EnBqa,sBAAwB,SAACC,GACvBta,EAAKM,SAAS,CACZ2Z,SAAUK,KA7EKta,EAiFnB+c,uBAAyB,SAAC1c,GACxBL,EAAKM,SAAS,CACZyZ,iBAAkB1Z,EAAMG,OAAOE,SAnFhBV,EAuFnBgd,iBAAmB,SAAC3c,GAClBL,EAAKM,SAAS,CACZyB,KAAM1B,EAAMG,OAAOE,SAzFJV,EA6FnBwF,KAAO,SAACnF,GACNA,EAAMa,iBADU,IAAAC,EASZnB,EAAKoB,MANPmI,EAHcpI,EAGdoI,SACA9I,EAJcU,EAIdV,KACAsB,EALcZ,EAKdY,KACAgY,EANc5Y,EAMd4Y,iBACAE,EAPc9Y,EAOd8Y,SACA3M,EARcnM,EAQdmM,MAGIjC,EAAS,CACb5K,KAAMA,EACNsB,KAAMA,EACN2B,YAAa1D,EAAKD,MAAM2D,aAGtB3B,IAASuJ,EACXD,EAAOrK,KAAO,CACZ+Y,iBAAkBA,EAClBE,SAAUA,EACV3M,MAAOA,GAEAvL,IAASuJ,IAClBD,EAAOrK,KAAO,CACZic,UAAU,EACVlD,iBAAkBA,EAClBE,SAAUA,EACV3M,MAAOA,IAIM,OAAb/D,EACF3I,IAAMC,KAAK,aAAcwK,GACtBvK,KAAK,SAAAC,GACJf,EAAKD,MAAM0a,YAGfpP,EAAO3F,GAAK6D,EACZ3I,IAAMmF,IAAI,aAAcsF,GACrBvK,KAAK,SAAAC,GACJf,EAAKD,MAAM0a,aAtIAza,EA2InBka,SAAW,WACT,IAAM3O,EAAc,CAClBwO,iBAAkB/Z,EAAKoB,MAAM2Y,iBAC7BE,SAAUja,EAAKoB,MAAM6Y,UAGvBrZ,IAAMC,KAAK,sBAAuB0K,GAC/BzK,KAAK,SAAAC,GACJ,IACMyK,EADSzK,EAAIC,KAEnBhB,EAAKM,SAAS,CACZkL,YAAaA,OApJnBxL,EAAKoB,MAAQpB,EAAK4G,aAFD5G,wEA2JV,IAAAyH,EAMHhI,KAAK2B,MANF8b,EAAAzV,EAGL+D,mBAHK,IAAA0R,EAGS,GAHTA,EAAAxV,EAAAD,EAILH,uBAJK,IAAAI,EAIa,GAJbA,EAKL3F,EALK0F,EAKL1F,KAGIf,EAAO0K,EAAiBF,EAAYxK,MACpC2R,EAAUnH,EAAYmH,SAAW,GACjCzM,EAAQsF,EAAYtF,MAEpBiX,EAAapb,IAASuJ,EAEtB8R,EAAoB9V,EAAgB0C,IAAI,SAAAlE,GAAE,OAC9CpE,EAAAC,EAAAC,cAAA,UAAQlB,MAAOoF,EAAGJ,GAAIuC,IAAKnC,EAAGJ,IAAKI,EAAGrF,QAGlC4c,EAAc/R,EAAuBtB,IAAI,SAAAsT,GAAC,OAC9C5b,EAAAC,EAAAC,cAAA,UAAQlB,MAAO4c,EAAGrV,IAAKqV,GAAIA,KAG7B,OACE5b,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASG,QAASxC,KAAK+F,MAAzC,QACA9D,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASG,QAASxC,KAAKya,UAAzC,OAEAxY,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,QACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,OACLC,MAAOjB,KAAK2B,MAAMX,KAClBuB,SAAUvC,KAAKW,oBAGjBsB,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,QACAJ,EAAAC,EAAAC,cAAA,UAAQlB,MAAOjB,KAAK2B,MAAMW,KAAMC,SAAUvC,KAAKud,kBAC5CK,GAIDF,EAEEzb,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,cACAJ,EAAAC,EAAAC,cAAA,UAAQlB,MAAOjB,KAAK2B,MAAM2Y,iBAAkB/X,SAAUvC,KAAKsd,wBACxDK,GAGH1b,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,aACAJ,EAAAC,EAAAC,cAACua,GAAAxa,EAAD,CACEyG,MAAO,CAACgU,UAAW,OACnB1b,MAAOjB,KAAK2B,MAAM6Y,SAClBrS,KAAK,QACLyU,MAAM,QACN5b,KAAK,QACLuB,SAAUvC,KAAK4a,sBACflM,OAAQ,QACR9F,MAAO,OACPiU,SAAU,GACVC,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBC,WAAY,CACVC,iBAAiB,EACjBC,QAAS,KAIblb,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,UACAJ,EAAAC,EAAAC,cAAC4T,GAAD,CACExU,KAAMA,EACN2R,QAASA,EACTzM,MAAOA,KAGT,KAGNxE,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,SACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,QACLC,MAAOjB,KAAK2B,MAAMkM,MAClBtL,SAAUvC,KAAKW,2DA1OvB,MAAO,CACLkH,gBAAiB,GACjBiC,SAAU,KACV9I,KAAM,GACNsB,KAAMuJ,EACNtK,KAAM,GACNiZ,SAAU,GACVF,iBAAkB,GAClBvO,YAAa,GACb8B,MAAO,WAjBiBpL,IAAMC,YCO9Bob,uBAEJ,SAAAA,EAAYxd,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAA8d,IACjBvd,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAAge,GAAApd,KAAAV,KAAMM,KAyERyd,wBAA0B,WACxB,IAAMxZ,EAAMhE,EAAKD,MAAM0d,SAASC,OAC1BvF,EAAS,IAAIwF,gBAAgB3Z,GAC7B4Z,EAAgBzF,EAAOnV,IAAI,QAG3B6a,EAAoC,QAFvB1F,EAAOnV,IAAI,cAIxB8a,EAAY9d,EAAK+d,eACjBrF,EAAkBmF,EAAsBC,EAAYxS,EAAsCwS,EAEhG9d,EAAKM,SAAS,CACZwd,UAAWA,EACXpF,gBAAiBA,EACjBsF,YAAY,EACZvd,KAAMmd,EACNC,oBAAqBA,GACpB,WACDjd,IAAMoC,IAAN,sBAAAY,OAAgCga,IAC7B9c,KAAK,SAAAC,GACJ,IAAM2F,EAAS3F,EAAIC,KACnBhB,EAAKM,SAAS,CACZoD,YAAagD,EAAOhB,GACpBjF,KAAMiG,EAAOjG,KACb2H,MAAO1B,EAAO0B,OACb,WACDpI,EAAKie,iBApGIje,EA0GnB+d,aAAe,WAEb,OADiB1O,IAASC,YAAT/P,OAAA8F,EAAA,EAAA9F,QAAA8F,EAAA,EAAA9F,CAAAS,KACD6Q,YAAc,IA5Gb7Q,EA+GnBI,kBAAoB,SAACC,GACnBL,EAAKM,SAALf,OAAAgB,EAAA,EAAAhB,CAAA,GACGc,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAjHnBV,EAqHnBke,kBAAoB,WAAM,IAChBC,EAAuBne,EAAKoB,MAA5B+c,mBACR,GAAIA,EACFC,cAAcD,GACdne,EAAKM,SAAS,CACZ6d,mBAAoB,SAEjB,KACGE,EAAoBre,EAAKoB,MAAzBid,gBACJC,EAAWrN,SAASoN,EAAiB,KAAO,GAChDC,EAAWA,EAAW,EAAI,EAAIA,EAC9B,IAAMC,EAAUC,YAAY,WAC1Bxe,EAAKye,gBAAgBC,QAAQ3R,eAC7B/M,EAAK2e,uBACO,IAAXL,GACHte,EAAKM,SAAS,CACZ6d,mBAAoBI,MArIPve,EA0InBie,QAAU,WACRje,EAAK4e,oBACL5e,EAAK6e,oBACL7e,EAAK2e,uBA7IY3e,EAgJnB6e,kBAAoB,WAAM,IAEtBnb,EACE1D,EAAKoB,MADPsC,YAEF1D,EAAKye,gBAAgBC,QAAQxT,aAAaxH,IApJzB1D,EAuJnB4e,kBAAoB,WAAM,IAAAzd,EAIpBnB,EAAKoB,MAFPsC,EAFsBvC,EAEtBuC,YACAgV,EAHsBvX,EAGtBuX,gBAEF1Y,EAAK8e,gBAAgBJ,QAAQzG,aAAavU,EAAagV,EAAiB,OA5JvD1Y,EA+JnB2e,oBAAsB,WACpB,IAAMI,GAAM,IAAIC,MAAOC,eAAeC,QAAQ,0BAA2B,MACzElf,EAAKM,SAAS,CACZ6e,cAAeJ,KAlKA/e,EAsKnBwF,KAAO,WACLW,QAAQC,IAAI,QADD,IAAAqB,EAMPzH,EAAKoB,MAHPsC,EAHS+D,EAGT/D,YAKI0b,EAAY,CAChB1Z,GAAIhC,EACJjD,KAVSgH,EAIThH,KAOA2H,MAXSX,EAKTW,OASFxH,IAAMmF,IAAI,iBAAkBqZ,GACzBte,KAAK,SAAAC,MAGRf,EAAK8e,gBAAgBJ,QAAQlG,cAE7BxY,EAAKD,MAAMsf,gBAAgB3b,GAE3B1D,EAAKM,SAAS,CACZmM,YAAY,KA7LGzM,EAiMnB0M,KAAO,WACL1M,EAAKM,SAAS,CACZmM,YAAY,KAnMGzM,EAuMnBsf,WAAa,WACXtf,EAAKM,SAAS,CACZmM,YAAY,KAzMGzM,EA6MnBqG,cAAgB,WAAM,IAAAkZ,EAGhBvf,EAAKoB,MADPoe,kBAEI9Z,QAJc,IAAA6Z,EAEE,GAFFA,GAIS7Z,GAC7B9E,IAAM4F,OAAN,iBAAA5C,OAA8B8B,IAC3B5E,KAAK,SAAAC,GACJf,EAAKD,MAAM0f,kBAAkB/Z,GAC7B1F,EAAKyG,+BArNQzG,EAyNnB0f,aAAe,WACb1f,EAAKM,SAAS,CACZqf,qBAAqB,IAGvB3f,EAAK4e,qBA9NY5e,EAiOnB4f,aAAe,WACb5f,EAAKM,SAAS,CACZuf,qBAAqB,IAGvB7f,EAAK6e,qBAtOY7e,EAyOnB8f,sBAAwB,WAAM,IAE1BjC,EACE7d,EAAKoB,MADPyc,oBAEF7d,EAAK+f,kBAAkBlC,IA7ON7d,EAgPnB+f,iBAAmB,SAAClC,GAClB,IAAMC,EAAY9d,EAAK+d,eACnBrF,EAAkBmF,EAAsBC,EAAYxS,EAAsCwS,EAC9F9d,EAAK8e,gBAAgBJ,QAAQxH,WAAWwB,GAAiB,GAEzD1Y,EAAKM,SAAS,CACZud,oBAAqBA,EACrBnF,gBAAiBA,KAvPF1Y,EA2PnBggB,oBAAsB,SAACzW,GACrBvJ,EAAKigB,gBAAgBvB,QAAQ5B,YAAYvT,GACzCvJ,EAAKM,SAAS,CACZuf,qBAAqB,KA9PN7f,EAkQnBkgB,oBAAsB,SAACjM,GAAa,IAC1BvQ,EAAgB1D,EAAKoB,MAArBsC,YACR1D,EAAKmgB,gBAAgBzB,QAAQ9E,YAAY3F,EAAUvQ,GACnD1D,EAAKM,SAAS,CACZqf,qBAAqB,KAtQN3f,EA0QnB+M,aAAe,SAACC,GACdhN,EAAK8e,gBAAgBJ,QAAQxG,aAAalL,IA3QzBhN,EA8QnBogB,WAAa,WAAM,IACT3f,EAAST,EAAKoB,MAAdX,KACFuD,EAAG,kCAAAJ,OAAqCnD,GAC9C4f,OAAOC,KAAKtc,EAAK,WAjRAhE,EAoRnBugB,iBAAmB,WACjBvgB,EAAKD,MAAMwB,QAAQC,KAAnB,sCArRiBxB,EAwRnBsY,eAAiB,SAACnK,GAChB,IAAM/F,EAAK7I,OAAA6a,EAAA,EAAA7a,CAAA,GAAOS,EAAKoB,MAAMgH,OAC7BA,EAAM+F,OAASA,EACfnO,EAAKM,SAAS,CACZ8H,MAAOA,KA5RQpI,EAgSnBuY,wBAA0B,SAAC1K,GACzB,IAAMzF,EAAK7I,OAAA6a,EAAA,EAAA7a,CAAA,GAAOS,EAAKoB,MAAMgH,OAC7BA,EAAMU,gBAAkB+E,EACxB7N,EAAKM,SAAS,CACZ8H,MAAOA,KAjSTpI,EAAKoB,MAAQ,CACXue,qBAAqB,EACrBE,qBAAqB,EACrBhC,qBAAqB,EACrB5W,0BAA0B,EAC1BuZ,eAAgB,GAChB/T,YAAY,EACZuR,YAAY,EACZG,mBAAoB,GACpBgB,cAAe,GACfd,gBAAiB,GACjBoC,sBAAuB,GACvB/c,YAAa,EACbjD,KAAM,GACN2H,MAAO,GACPsQ,gBAAiB,KAGnB1Y,EAAKye,gBAAkBvc,IAAMwe,YAC7B1gB,EAAKigB,gBAAkB/d,IAAMwe,YAC7B1gB,EAAK8e,gBAAkB5c,IAAMwe,YAC7B1gB,EAAKmgB,gBAAkBje,IAAMwe,YAxBZ1gB,mFA2BC,IAAAwH,EAAA/H,KACdiG,EAAKjG,KAAKM,MAAM4gB,MAAMxI,OAAOzS,GAC3BhC,OAAqBkd,IAAPlb,EAAmBA,EAAK,KAC5CS,QAAQC,IAAI,oBAAqB1C,GAEjC,IAAMM,EAAMvE,KAAKM,MAAM0d,SAASC,OAChCvX,QAAQC,IAAI,MAAOpC,GACnB,IAAMmU,EAAS,IAAIwF,gBAAgB3Z,GACnCmC,QAAQC,IAAI,SAAU+R,GARJ,IAAA0I,GAAA,EAAAC,GAAA,EAAAC,OAAAH,EAAA,IASlB,QAAAI,EAAAC,EAAgB9I,EAAO+I,UAAvBC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAle,QAAAse,MAAAR,GAAA,EAAkC,KAA1BS,EAA0BN,EAAAtgB,MAChCyF,QAAQC,IAAIkb,EAAK,GAAI,KAAMA,EAAK,KAVhB,MAAAC,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GAalB,IAAMjD,EAAYre,KAAKse,eACjBrF,EAAkBjZ,KAAK2B,MAAMyc,oBAAsBC,EAAYxS,EAAsCwS,EAC3G3X,QAAQC,IAAI,oBAAqB0X,EAAWpF,GAC5CjZ,KAAKa,SAAS,CACZwd,UAAWA,EACXpF,gBAAiBA,GAChB,WACmB,OAAhBhV,EACF8D,EAAKlH,SAAS,CACZoD,YAAa,OAGf9C,IAAMoC,IAAN,iBAAAY,OAA2BF,IACxB5C,KAAK,SAAAC,GACJ,IAAM2F,EAAS3F,EAAIC,KACnBwG,EAAKlH,SAAS,CACZoD,YAAagD,EAAOhB,GACpBjF,KAAMiG,EAAOjG,KACb2H,MAAO1B,EAAO0B,OACb,WACDZ,EAAKyW,+DAOM,IACbE,EAAuB1e,KAAK2B,MAA5B+c,mBACJA,GACFC,cAAcD,oCAkOT,IASHsD,EATGC,EAAAjiB,KAAAkb,EAMHlb,KAAK2B,MAJP+c,EAFKxD,EAELwD,mBACAgB,EAHKxE,EAGLwE,cACA1S,EAJKkO,EAILlO,WACAuR,EALKrD,EAKLqD,WAEI2D,EAA2C,KAAvBxD,EAA4B,MAAQ,KAG1DyD,EAAwB,KACtBC,EACJngB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAhB,mBAAwCqd,GAEhB,QAAtBwC,EAEEjgB,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,kBACLC,MAAOjB,KAAK2B,MAAMid,gBAClBrc,SAAUvC,KAAKW,kBACf0B,UAAU,eACVsG,MAAO,CAACC,MAAO,UAEf,KAEN3G,EAAAC,EAAAC,cAAA,UAAQE,UAAU,4BAA4BG,QAASxC,KAAKye,mBAElC,OAAtByD,EAEEjgB,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,cAAcC,KAAK,KAAK6H,YAAU,IAGxDjL,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,cAAcC,KAAK,KAAK6H,YAAU,KAK9DjL,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcG,QAASxC,KAAKqgB,uBAA9C,gBACApe,EAAAC,EAAAC,cAAA,UAAQE,UAAU,uBAAuBG,QAASxC,KAAKwe,SACrDvc,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,WAAWC,KAAK,KAAK6H,YAAU,MA+B3D,OA1BKqR,EAuBH4D,EAAwBC,EArBtBJ,EADEhV,EAEA/K,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcG,QAASxC,KAAK6f,YAA9C,UACA5d,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcG,QAASxC,KAAK+F,MAA9C,QACA9D,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcG,QAASxC,KAAK4G,eAA9C,UACA3E,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcG,QAAS,kBAAMyf,EAAK1B,oBAAoB,QAAxE,cACAte,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASG,QAAS,kBAAMyf,EAAKxB,oBAAoB,QAAnE,eAKFxe,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,UAAQE,UAAU,4BAA4BG,QAASxC,KAAK2gB,YAC1D1e,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,KAAKC,KAAK,KAAK6H,YAAU,KAEjDjL,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASG,QAASxC,KAAKiN,MAAzC,QACCmV,GASPngB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAEXkc,IAAevR,EAEb/K,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACZrC,KAAK2B,MAAMX,MAGdiB,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,OACLC,MAAOjB,KAAK2B,MAAMX,KAClBuB,SAAUvC,KAAKW,kBACf0B,UAAU,oBAMlBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZ8f,EACAH,IAIL/f,EAAAC,EAAAC,cAACkgB,GAADviB,OAAAwX,OAAA,CACEgL,IAAKtiB,KAAKqf,gBACVrS,WAAYhN,KAAK2B,MAAMqL,WACvBiM,gBAAiBjZ,KAAK2B,MAAMsX,gBAC5BxE,aAAczU,KAAKygB,oBACnB5H,eAAgB7Y,KAAK6Y,eACrBC,wBAAyB9Y,KAAK8Y,yBAC1B9Y,KAAK2B,MAAMgH,QAEjB1G,EAAAC,EAAAC,cAACogB,EAAD,CACED,IAAKtiB,KAAKgf,gBACV5R,OAAQpN,KAAKugB,oBACbzS,eAAgB9N,KAAKsN,aACrBN,WAAYhN,KAAK2B,MAAMqL,WACvBpI,KAAM5E,KAAK2B,MAAMyc,sBAGnBnc,EAAAC,EAAAC,cAAC0G,EAAD,CACEjE,KAAM5E,KAAK2B,MAAMue,oBACjBhb,QAAS,kBAAM+c,EAAKphB,SAAS,CAAEqf,qBAAqB,KACpDpb,WAAY,+BACZC,MAAO,eACP9C,EAAAC,EAAAC,cAACqgB,GAAD,CACEF,IAAKtiB,KAAK0gB,gBACVM,sBAAuBhhB,KAAK2B,MAAMqf,sBAClC/c,YAAajE,KAAK2B,MAAMsC,YACxB+W,OAAQhb,KAAKigB,gBAIjBhe,EAAAC,EAAAC,cAAC0G,EAAD,CACEjE,KAAM5E,KAAK2B,MAAMye,oBACjBlb,QAAS,kBAAM+c,EAAKphB,SAAS,CAAEuf,qBAAqB,KACpDtb,WAAY,+BACZC,MAAO,eACP9C,EAAAC,EAAAC,cAACsgB,GAAD,CACEH,IAAKtiB,KAAKwgB,gBACVQ,sBAAuBhhB,KAAK2B,MAAMqf,sBAClC/c,YAAajE,KAAK2B,MAAMsC,YACxB+W,OAAQhb,KAAKmgB,wBArbO1d,IAAMC,YA8bvBC,eAAWmb,IC1cpB4E,eAEJ,SAAAA,EAAYpiB,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAA0iB,IACjBniB,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAA4iB,GAAAhiB,KAAAV,KAAMM,KAcRqiB,YAAc,WACZxhB,IAAMoC,IAAI,iBACPlC,KAAK,SAAAC,GACJ,IAAM8Y,EAAa9Y,EAAIC,KACvBhB,EAAKM,SAAS,CACZuZ,WAAYA,OApBD7Z,EAyBnBI,kBAAoB,SAACC,GACnBL,EAAKM,SAALf,OAAAgB,EAAA,EAAAhB,CAAA,GACGc,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SA3BnBV,EA+BnBgG,eAAiB,WACfhG,EAAKM,SAAS,CACZwG,eAAe,EACfrG,KAAM,MAlCST,EAsCnBwF,KAAO,WAAM,IAKL4Z,EAAY,CAChB3e,KAHET,EAAKoB,MADPX,KAKA2H,MAAO,CACL+F,OAAQ7C,EACRxC,gBAAiB,2BAIrBlI,IAAMC,KAAK,gBAAiBue,GACzBte,KAAK,SAAAC,GACJ,IAAM2C,EAAc3C,EAAIC,KACxBhB,EAAKgG,iBACLhG,EAAKoiB,cACLpiB,EAAKD,MAAMwB,QAAQC,KAAnB,wBAAAoC,OAAgDF,MAEjDuC,MAAM,SAAAC,GACLC,QAAQC,IAAIF,MA3DClG,EA+DnBqiB,KAAO,SAAC3e,GACN1D,EAAKM,SAAS,CACZgiB,kBAAmB5e,IAErB1D,EAAKD,MAAMwB,QAAQC,KAAnB,wBAAAoC,OAAgDF,KAnE/B1D,EAsEnBqf,gBAAkB,SAAC3b,GACjB1D,EAAKoiB,eAvEYpiB,EA0EnByf,kBAAoB,SAAC/b,GACnB1D,EAAKoiB,eAzELpiB,EAAKoB,MAAQ,CACXiG,YAAa,GACbwS,WAAY,GACZ/S,eAAe,EACfwb,kBAAmB,EACnB7hB,KAAM,IAPST,mFAYjBP,KAAK2iB,+CA2EL,IATO,IAAA5a,EAAA/H,KAAA0B,EAKH1B,KAAK2B,MALFme,EAAApe,EAEL0Y,kBAFK,IAAA0F,EAEQ,GAFRA,EAGL+C,EAHKnhB,EAGLmhB,kBACAjb,EAJKlG,EAILkG,YAIIkb,EAAgB,GARfza,EAAA,SASEC,GACP,IAAMqX,EAAYvF,EAAW9R,GACvBtH,EAAO2e,EAAU3e,KACjB+hB,EAAaF,IAAsBlD,EAAU1Z,GAAK,6BAA+B,KAClF2B,GAAgBA,GAAe5G,EAAKuH,SAASX,KAChDkb,EAAc/gB,KAEVE,EAAAC,EAAAC,cAAA,OAAKqG,IAAKF,EAAGjG,UAAS,gCAAA8B,OAAkC4e,GAAcvgB,QAAS,kBAAMuF,EAAK6a,KAAKjD,EAAU1Z,MACtGjF,KARFsH,EAAI,EAAGA,EAAI8R,EAAW3R,OAAQH,IAAKD,EAAnCC,GAeT,OACErG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAAA,OAAKwG,MAAO,CAACI,OAAQ,QACnB9G,EAAAC,EAAAC,cAAA,UAAQE,UAAU,0CAA0CG,QAAS,kBAAMuF,EAAKlH,SAAS,CAAEwG,eAAe,MACxGpF,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,SADxB,QAGAnD,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,cACLC,MAAOjB,KAAK2B,MAAMiG,YAClBc,YAAY,YACZnG,SAAUvC,KAAKW,qBAEnBsB,EAAAC,EAAAC,cAAA,WACG2gB,IAGL7gB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAAC6gB,EAAA,EAAD,CACEC,KAAK,2BACLC,OAAQ,SAAC5iB,GAAD,OAAW2B,EAAAC,EAAAC,cAACghB,GAAD,CAAmB3a,IAAKlI,EAAM4gB,MAAMxI,OAAOzS,GAAI2Z,gBAAiB7X,EAAK6X,gBAAiBI,kBAAmBjY,EAAKiY,wBAIrI/d,EAAAC,EAAAC,cAAC0G,EAAD,CACEjE,KAAM5E,KAAK2B,MAAM0F,cACjBnC,QAAS,kBAAM6C,EAAKlH,SAAS,CAAEwG,eAAe,KAC9CvC,WAAY,oBACZC,MAAO,OACP9C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,QACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,OACLC,MAAOjB,KAAK2B,MAAMX,KAClBuB,SAAUvC,KAAKW,oBAEjBsB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASG,QAASxC,KAAK+F,MAAzC,kBA9IYrD,aAuJTC,eAAW+f,ICvIXU,eAnBb,SAAAA,EAAY9iB,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAojB,IACjB7iB,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAAsjB,GAAA1iB,KAAAV,KAAMM,KACDqB,MAAQ,GAFIpB,mFAOjBP,KAAKqjB,kBAAkBtF,2DAGhB,IAAAhW,EAAA/H,KACP,OACEiC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAACghB,GAAD,CAAmBG,oBAAqB,SAAAC,GAAI,OAAKxb,EAAKsb,kBAAoBE,aAf5C9gB,IAAMC,WCAtC8gB,GAAY,CAAC,YAAa,UA+SjBC,eA3Sb,SAAAA,EAAYnjB,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAyjB,IACjBljB,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAA2jB,GAAA/iB,KAAAV,KAAMM,KAgBRK,kBAAoB,SAACC,GACnBL,EAAKM,SAALf,OAAAgB,EAAA,EAAAhB,CAAA,GACGc,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAnBnBV,EAuBnBqZ,mBAAqB,SAAC5Y,EAAMJ,GAC1BL,EAAKM,SAALf,OAAAgB,EAAA,EAAAhB,CAAA,GACGkB,EAAOJ,EAAMG,OAAOE,SAzBNV,EA8CnBmjB,WAAa,WACXviB,IAAMoC,IAAI,YACPlC,KAAK,SAAAC,GACJ,IAAMqiB,EAAQriB,EAAIC,KAClBhB,EAAKM,SAAS,CACZ8iB,MAAOA,OAnDIpjB,EAwDnBqjB,YAAc,WACZziB,IAAMoC,IAAI,aACPlC,KAAK,SAAAC,GACJ,IAAMuiB,EAASviB,EAAIC,KACnBhB,EAAKM,SAAS,CACZgjB,OAAQA,OA7DGtjB,EAkEnB6G,cAAgB,SAACvF,GACF,OAATA,EACFtB,EAAKM,SAAS,CACZoF,GAAIpE,EAAKoE,GACT7F,SAAUyB,EAAKzB,SACfY,KAAMa,EAAKb,KACX8iB,aAAc,GACd3jB,QAAS0B,EAAK1B,QACd4jB,WAAYliB,EAAKkiB,aAGnBxjB,EAAK2G,iBAGP3G,EAAKM,SAAS,CACZwG,eAAe,KAjFA9G,EAqFnBgG,eAAiB,WACfhG,EAAKM,SAAS,CACZwG,eAAe,KAvFA9G,EA2FnB2G,eAAiB,WACf3G,EAAKM,SAASN,EAAKyjB,wBA5FFzjB,EA+FnB0d,OAAS,WACiB1d,EAAKoB,MAArBiG,aAhGSrH,EAmGnBwF,KAAO,SAACnF,GACNA,EAAMa,iBADU,IAAAC,EASZnB,EAAKoB,MANPsE,EAHcvE,EAGduE,GACA7F,EAJcsB,EAIdtB,SACAY,EALcU,EAKdV,KACA8iB,EANcpiB,EAMdoiB,aAKEjiB,EAAO,CACTzB,SAAUA,EACVY,KAAMA,EACNb,QAdcuB,EAOdvB,QAQA4jB,WAfcriB,EAQdqiB,YAUS,OAAP9d,GACFpE,EAAKoE,GAAKA,EAEV9E,IAAMmF,IAAI,WAAYzE,GACnBR,KAAK,SAAAC,GACJf,EAAK2G,iBACL3G,EAAKmjB,iBAGT7hB,EAAKiiB,aAAeA,EAEpB3iB,IAAMC,KAAK,WAAYS,GACpBR,KAAK,SAAAC,GACJf,EAAK2G,iBACL3G,EAAKmjB,iBAnIMnjB,EAwInBwG,OAAS,SAACd,GACR9E,IAAM4F,OAAO,YAAcd,GACxB5E,KAAK,SAAAC,GACJf,EAAKmjB,gBA3IQnjB,EA+InB0jB,aAAe,SAACrjB,GACdA,EAAMa,iBADkB,IAAAuG,EAKpBzH,EAAKoB,MAFPuiB,EAHsBlc,EAGtBkc,YAHsBC,EAAAnc,EAItB+b,kBAJsB,IAAAI,EAIT,GAJSA,EAOxB,IAAe,IADDJ,EAAW5Z,UAAU,SAAAia,GAAO,OAAIA,IAAYF,IACxC,CAChB,IAAMG,EAAavkB,OAAA6J,EAAA,EAAA7J,CAAOikB,GAC1BM,EAActiB,KAAKmiB,GACnB3jB,EAAKM,SAAS,CACZkjB,WAAYM,MA1JC9jB,EA+JnB+jB,gBAAkB,SAACF,EAASxjB,GAC1BA,EAAMa,iBAD8B,IAAA8iB,EAIhChkB,EAAKoB,MADPoiB,kBAHkC,IAAAQ,EAGrB,GAHqBA,EAK9Bra,EAAQ6Z,EAAW5Z,UAAU,SAAAlE,GAAE,OAAIA,IAAOme,IAChD,IAAe,IAAXla,EAAc,CAChB,IAAMma,EAAavkB,OAAA6J,EAAA,EAAA7J,CAAOikB,GAC1BM,EAAchX,OAAOnD,EAAO,GAC5B3J,EAAKM,SAAS,CACZkjB,WAAYM,MAvKhB9jB,EAAKoB,MAAQ,CACXgiB,MAAO,GACPE,OAAQ,GACRjc,YAAa,GACbP,eAAe,EACfpB,GAAI,KACJ7F,SAAU,GACVY,KAAM,GACN8iB,aAAc,GACd3jB,QAAS,GACT+jB,YAAa,GACbH,WAAY,IAbGxjB,mFA0CjBP,KAAK0jB,aACL1jB,KAAK4jB,+CA+JL,IA5BO,IAAA7b,EAAA/H,KAAAkb,EAKHlb,KAAK2B,MALF6iB,EAAAtJ,EAELyI,aAFK,IAAAa,EAEG,GAFHA,EAAAC,EAAAvJ,EAGL2I,cAHK,IAAAY,EAGI,GAHJA,EAAAC,EAAAxJ,EAIL6I,kBAJK,IAAAW,EAIQ,GAJRA,EAODC,EAAYhB,EAAMpZ,IAAI,SAAA1I,GAAI,OAC9BI,EAAAC,EAAAC,cAAA,OAAKqG,IAAK3G,EAAKoE,GAAI5D,UAAU,aAC3BJ,EAAAC,EAAAC,cAAA,SACGN,EAAKzB,SACLyB,EAAKb,KACLa,EAAK1B,QACN8B,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMuF,EAAKX,cAAcvF,KAA1C,UACAI,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMuF,EAAKhB,OAAOlF,EAAKoE,MAAxC,cAKA2e,EAAef,EAAOtZ,IAAI,SAAAsa,GAAK,OACnC5iB,EAAAC,EAAAC,cAAA,UAAQlB,MAAO4jB,EAAM5e,GAAIuC,IAAKqc,EAAM5e,IAAK4e,EAAM7jB,QAG3C8jB,EAAiBtB,GAAUjZ,IAAI,SAAAwa,GAAS,OAC5C9iB,EAAAC,EAAAC,cAAA,UAAQlB,MAAO8jB,EAAWvc,IAAKuc,GAAYA,KAGvCC,EAAiB,GA3BhB3c,EAAA,SA4BEC,GAEP,IADA,IAAM8b,EAAUL,EAAWzb,GAClBoF,EAAI,EAAGA,EAAImW,EAAQnW,IAC1B,GAAI0W,IAAYP,EAAOnW,GAAGzH,GAAI,CAC5B+e,EAAejjB,KAEXE,EAAAC,EAAAC,cAAA,OAAKqG,IAAK4b,GACRniB,EAAAC,EAAAC,cAAA,qBAAa0hB,EAAOnW,GAAG1M,MACvBiB,EAAAC,EAAAC,cAAA,UAAQK,QAAS,SAAC5B,GAAD,OAAWmH,EAAKuc,gBAAgBF,EAASxjB,KAA1D,YAIN,QAZG0H,EAAI,EAAGA,EAAIyb,EAAYzb,IAAKD,EAA5BC,GAiBT,OACErG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,GACL0H,YAAY,mBAEdzG,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,GACL0H,YAAY,gBAEdzG,EAAAC,EAAAC,cAAA,UAAQK,QAASxC,KAAKie,QAAtB,UACAhc,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACZsiB,GAEH1iB,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMuF,EAAKX,cAAc,QAA1C,OAIAnF,EAAAC,EAAAC,cAAC0G,EAAD,CACEjE,KAAM5E,KAAK2B,MAAM0F,cACjBnC,QAASlF,KAAKuG,eACdzB,WAAY,iBACZC,MAAO,QAEP9C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAK,QACLF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,YACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,WACLC,MAAOjB,KAAK2B,MAAMvB,SAClBmC,SAAUvC,KAAKW,oBAEjBsB,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,QACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,OACLC,MAAOjB,KAAK2B,MAAMX,KAClBuB,SAAUvC,KAAKW,oBAEjBsB,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,iBACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACLtB,KAAK,eACLC,MAAOjB,KAAK2B,MAAMmiB,aAClBvhB,SAAUvC,KAAKW,oBAEjBsB,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,eACAJ,EAAAC,EAAAC,cAAA,UAAQlB,MAAOjB,KAAK2B,MAAMxB,QAASoC,SAAU,SAAC3B,GAAD,OAAWmH,EAAK6R,mBAAmB,UAAWhZ,KACxFkkB,GAEH7iB,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,UACAJ,EAAAC,EAAAC,cAAA,UAAQlB,MAAOjB,KAAK2B,MAAMuiB,YAAa3hB,SAAU,SAAC3B,GAAD,OAAWmH,EAAK6R,mBAAmB,cAAehZ,KAChGgkB,GAEH3iB,EAAAC,EAAAC,cAAA,UAAQK,QAASxC,KAAKikB,cAAtB,OACAhiB,EAAAC,EAAAC,cAAA,WACG6iB,IAKL/iB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQK,QAASxC,KAAK+F,MAAtB,0DAlQV,MAAO,CACLE,GAAI,KACJ7F,SAAU,GACVY,KAAM,GACN8iB,aAAc,GACd3jB,QAAS,GACT+jB,YAAa,GACbH,WAAY,WAvCCthB,IAAMC,WCoPVuiB,eApPb,SAAAA,EAAY3kB,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAilB,IACjB1kB,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAAmlB,GAAAvkB,KAAAV,KAAMM,KAYRK,kBAAoB,SAACC,GACnBL,EAAKM,SAALf,OAAAgB,EAAA,EAAAhB,CAAA,GACGc,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAfnBV,EAmBnBqZ,mBAAqB,SAAC5Y,EAAMJ,GAC1BL,EAAKM,SAALf,OAAAgB,EAAA,EAAAhB,CAAA,GACGkB,EAAOJ,EAAMG,OAAOE,SArBNV,EAsCnBqjB,YAAc,WACZziB,IAAMoC,IAAI,aACPlC,KAAK,SAAAC,GACJ,IAAMuiB,EAASviB,EAAIC,KACnBhB,EAAKM,SAAS,CACZgjB,OAAQA,OA3CGtjB,EAgDnB2kB,gBAAkB,WAChB/jB,IAAMoC,IAAI,iBACPlC,KAAK,SAAAC,GACJ,IAAM8Y,EAAa9Y,EAAIC,KACvBhB,EAAKM,SAAS,CACZuZ,WAAYA,OArDD7Z,EA0DnB6G,cAAgB,SAACyd,GACD,OAAVA,EACFtkB,EAAKM,SAAS,CACZoF,GAAI4e,EAAM5e,GACVjF,KAAM6jB,EAAM7jB,KACZmkB,gBAAiBN,EAAMM,kBAGzB5kB,EAAK2G,iBAEP3G,EAAKM,SAAS,CACZwG,eAAe,KArEA9G,EAyEnBgG,eAAiB,WACfhG,EAAKM,SAAS,CACZwG,eAAe,KA3EA9G,EA+EnB2G,eAAiB,WACf3G,EAAKM,SAASN,EAAKyjB,wBAhFFzjB,EAmFnBwF,KAAO,SAACnF,GACNA,EAAMa,iBADU,IAAAC,EAMZnB,EAAKoB,MAHPsE,EAHcvE,EAGduE,GAKE4e,EAAQ,CACV7jB,KATcU,EAIdV,KAMAmkB,gBAVczjB,EAKdyjB,iBAQS,OAAPlf,GACF4e,EAAM5e,GAAKA,EACX9E,IAAMmF,IAAI,YAAaue,GACpBxjB,KAAK,SAAAC,GACJf,EAAK2G,iBACL3G,EAAKqjB,iBAGTziB,IAAMC,KAAK,YAAayjB,GACrBxjB,KAAK,SAAAC,GACJf,EAAK2G,iBACL3G,EAAKqjB,iBA3GMrjB,EAgHnBwG,OAAS,SAACd,GACR9E,IAAM4F,OAAO,aAAed,GACzB5E,KAAK,SAAAC,GACJf,EAAKqjB,iBAnHQrjB,EAuHnB6kB,kBAAmB,SAACxkB,GAClBA,EAAMa,iBADsB,IAAAuG,EAKxBzH,EAAKoB,MAFP0jB,EAH0Brd,EAG1Bqd,iBAH0BC,EAAAtd,EAI1Bmd,uBAJ0B,IAAAG,EAIR,GAJQA,EAO5B,IAAe,IADDH,EAAgBhb,UAAU,SAAAlG,GAAW,OAAIA,IAAgBohB,IACrD,CAChB,IAAME,EAAkBzlB,OAAA6J,EAAA,EAAA7J,CAAOqlB,GAC/BI,EAAmBxjB,KAAKsjB,GACxB9kB,EAAKM,SAAS,CACZskB,gBAAiBI,MAlIJhlB,EAuInBilB,qBAAuB,SAACvhB,EAAarD,GACnCA,EAAMa,iBADuC,IAAAgkB,EAIzCllB,EAAKoB,MADPwjB,uBAH2C,IAAAM,EAGzB,GAHyBA,EAKvCvb,EAAQib,EAAgBhb,UAAU,SAAAlE,GAAE,OAAIA,IAAOhC,IACrD,IAAe,IAAXiG,EAAc,CAChB,IAAMqb,EAAkBzlB,OAAA6J,EAAA,EAAA7J,CAAOqlB,GAC/BI,EAAmBlY,OAAOnD,EAAO,GACjC3J,EAAKM,SAAS,CACZskB,gBAAiBI,MA/IrBhlB,EAAKoB,MAAQ,CACXkiB,OAAQ,GACRzJ,WAAY,GACZ/S,eAAe,EACfpB,GAAI,KACJjF,KAAM,GACNqkB,iBAAkB,GAClBF,gBAAiB,IATF5kB,mFAkCjBP,KAAK4jB,cACL5jB,KAAKklB,mDAyIL,IAtBO,IAAAnd,EAAA/H,KAAAkb,EAKHlb,KAAK2B,MALF8iB,EAAAvJ,EAEL2I,cAFK,IAAAY,EAEI,GAFJA,EAAAiB,EAAAxK,EAGLd,kBAHK,IAAAsL,EAGQ,GAHRA,EAAAC,EAAAzK,EAILiK,uBAJK,IAAAQ,EAIa,GAJbA,EAODC,EAAmBxL,EAAW7P,IAAI,SAAAsb,GAAI,OAC1C5jB,EAAAC,EAAAC,cAAA,UAAQlB,MAAO4kB,EAAK5f,GAAIuC,IAAKqd,EAAK5f,IAAK4f,EAAK7kB,QAGxC8kB,EAAajC,EAAOtZ,IAAI,SAAAsa,GAAK,OACjC5iB,EAAAC,EAAAC,cAAA,OAAKqG,IAAKqc,EAAM5e,GAAI5D,UAAU,cAC5BJ,EAAAC,EAAAC,cAAA,SACG0iB,EAAM7jB,KACPiB,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMuF,EAAKX,cAAcyd,KAA1C,UACA5iB,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMuF,EAAKhB,OAAO8d,EAAM5e,MAAzC,cAKA8f,EAAsB,GArBrB1d,EAAA,SAsBEC,GAEP,IADA,IAAMrE,EAAckhB,EAAgB7c,GAC3BoF,EAAI,EAAGA,EAAI0M,EAAY1M,IAC9B,GAAIzJ,IAAgBmW,EAAW1M,GAAGzH,GAAI,CACpC8f,EAAoBhkB,KAEhBE,EAAAC,EAAAC,cAAA,OAAKqG,IAAKvE,GACRhC,EAAAC,EAAAC,cAAA,oBAAYiY,EAAW1M,GAAG1M,MAC1BiB,EAAAC,EAAAC,cAAA,UAAQK,QAAS,SAAC5B,GAAD,OAAWmH,EAAKyd,qBAAqBvhB,EAAarD,KAAnE,YAIN,QAZG0H,EAAI,EAAGA,EAAI6c,EAAiB7c,IAAKD,EAAjCC,GAiBT,OACErG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,GACL0H,YAAY,gBAEdzG,EAAAC,EAAAC,cAAA,UAAQK,QAASxC,KAAKie,QAAtB,UACAhc,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACZyjB,GAEH7jB,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMuF,EAAKX,cAAc,QAA1C,OAIAnF,EAAAC,EAAAC,cAAC0G,EAAD,CACEjE,KAAM5E,KAAK2B,MAAM0F,cACjBnC,QAASlF,KAAKuG,eACdzB,WAAY,iBACZC,MAAO,SAEP9C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAK,SACLF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,QACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,OACLC,MAAOjB,KAAK2B,MAAMX,KAClBuB,SAAUvC,KAAKW,oBAEjBsB,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,cACAJ,EAAAC,EAAAC,cAAA,UAAQlB,MAAOjB,KAAK2B,MAAM0jB,iBAAkB9iB,SAAU,SAAC3B,GAAD,OAAWmH,EAAK6R,mBAAmB,mBAAoBhZ,KAC1GglB,GAEH3jB,EAAAC,EAAAC,cAAA,UAAQK,QAASxC,KAAKolB,mBAAtB,OACAnjB,EAAAC,EAAAC,cAAA,WACG4jB,IAKL9jB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQK,QAASxC,KAAK+F,MAAtB,0DA/MV,MAAO,CACLE,GAAI,KACJjF,KAAM,GACNmkB,gBAAiB,WA/BH1iB,IAAMC,WCEpBsjB,WAAa,CACjB,CACEC,KAAM,kCACNhlB,MAAO,OACPmE,KAAM,YAER,CACE6gB,KAAM,mCACNhlB,MAAO,QACPmE,KAAM,iBAuDK8gB,eAjDb,SAAAA,EAAY5lB,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAkmB,IACjB3lB,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAAomB,GAAAxlB,KAAAV,KAAMM,KAMR6lB,gBAAkB,SAACC,GACjB7lB,EAAKM,SAAS,CACZwlB,gBAAiBD,KAPnB7lB,EAAKoB,MAAQ,CACX0kB,gBAAiB,SAHF9lB,wEAgBjB,IAHO,IAAAwH,EAAA/H,KAEHsmB,EAAY,GAFTje,EAAA,SAGEC,GACP,IAAMie,EAAOP,GAAW1d,GAClBoR,EAAS3R,EAAKpG,MAAM0kB,kBAAoBE,EAAKN,KAAO,SAAW,GACrEK,EAAUvkB,KAENE,EAAAC,EAAAC,cAAA,MAAIE,UAAWqX,EAAQlR,IAAKF,GAC1BrG,EAAAC,EAAAC,cAACqkB,EAAA,EAAD,CAAMC,GAAIF,EAAKN,KAAMzjB,QAAS,kBAAMuF,EAAKoe,gBAAgBI,EAAKN,QAC5DhkB,EAAAC,EAAAC,cAAA,KAAGE,UAAS,OAAA8B,OAASoiB,EAAKnhB,KAAd,YACZnD,EAAAC,EAAAC,cAAA,QAAME,UAAU,qBAAqBkkB,EAAKtlB,WAR3CqH,EAAI,EAAGA,EAAI0d,GAAWvd,OAAQH,IAAKD,EAAnCC,GAeT,OACErG,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACXikB,IAGLrkB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACukB,EAAA,EAAD,KACEzkB,EAAAC,EAAAC,cAAC6gB,EAAA,EAAD,CAAOC,KAAK,kCAAkC0D,UAAWlD,KACzDxhB,EAAAC,EAAAC,cAAC6gB,EAAA,EAAD,CAAOC,KAAK,mCAAmC0D,UAAW1B,eA3CzCxiB,IAAMC,WC6GpBkkB,eA3Hb,SAAAA,EAAYtmB,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAA4mB,IACjBrmB,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAA8mB,GAAAlmB,KAAAV,KAAMM,KAaRK,kBAAoB,SAACC,GACnBL,EAAKM,SAALf,OAAAgB,EAAA,EAAAhB,CAAA,GACGc,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAhBnBV,EAwBnBsmB,UAAY,WACV1lB,IAAMoC,IAAI,oBACPlC,KAAK,SAAAC,GACWA,EAAIC,QA3BNhB,EA+BnBumB,eAAiB,aA/BEvmB,EAkCnBwF,KAAO,SAACnF,GACNA,EAAMa,iBADU,IAAAC,EAOZnB,EAAKoB,MAJPqE,EAHctE,EAGdsE,mBACAhF,EAJcU,EAIdV,KACAY,EALcF,EAKdE,SACAmlB,EANcrlB,EAMdqlB,kBAGIllB,EAAO,CACXb,KAAMA,GAGR,GAAIgF,EAAoB,CACtB,GAAIpE,IAAamlB,EAEf,YADAC,MAAM,oBAIRnlB,EAAKD,SAAWA,IArDDrB,EAyDnBkH,qBAAuB,WACrBlH,EAAKM,SAAS,SAAA6G,GAAS,MAAK,CAC1B1B,oBAAqB0B,EAAU1B,uBAzDjCzF,EAAKoB,MAAQ,CACXqE,oBAAoB,EACpBC,GAAI,KACJ7F,SAAU,GACVY,KAAM,GACNb,QAAS,GACT8mB,OAAQ,GACRrlB,SAAU,GACVmlB,kBAAmB,IAVJxmB,mFAqBjBP,KAAK6mB,6CA0CE,IAAA7e,EAMHhI,KAAK2B,MAJPqE,EAFKgC,EAELhC,mBACA5F,EAHK4H,EAGL5H,SACAD,EAJK6H,EAIL7H,QACA8mB,EALKjf,EAKLif,OAGF,OACEhlB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,YACAJ,EAAAC,EAAAC,cAAA,WAAM/B,GAEN6B,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,QACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLtB,KAAK,OACLC,MAAOjB,KAAK2B,MAAMX,KAClBuB,SAAUvC,KAAKW,oBAEjBsB,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,eACAJ,EAAAC,EAAAC,cAAA,WAAMhC,GAEN8B,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,WACAJ,EAAAC,EAAAC,cAAA,WAAM8kB,GACNhlB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASG,QAASxC,KAAK8mB,gBAAzC,wBACA7kB,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASG,QAASxC,KAAKyH,sBAAzC,mBAEEzB,EAEE/D,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,YACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACLtB,KAAK,WACLC,MAAOjB,KAAK2B,MAAMC,SAClBW,SAAUvC,KAAKW,oBACjBsB,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAjB,oBACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACLtB,KAAK,oBACLC,MAAOjB,KAAK2B,MAAMolB,kBAClBxkB,SAAUvC,KAAKW,qBAEjB,KAGNsB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASG,QAASxC,KAAK+F,MAAzC,iBAtHYtD,IAAMC,WCYtBsjB,WAAa,CACjB,CACEC,KAAM,uBACNhlB,MAAO,YACPmE,KAAM,cAER,CACE6gB,KAAM,wBACNhlB,MAAO,cACPmE,KAAM,YAER,CACE6gB,KAAM,6BACNhlB,MAAO,kBACPmE,KAAM,eAMJ8hB,eACJ,SAAAA,EAAY5mB,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAknB,IACjB3mB,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAAonB,GAAAxmB,KAAAV,KAAMM,KAyBR6lB,gBAAkB,SAACC,GACjB7lB,EAAKM,SAAS,CACZwlB,gBAAiBD,KA1BnB7lB,EAAKoB,MAAQ,CACX0kB,gBAAiB,uBACjBjmB,SAAU,GACVD,QAAS,IALMI,mFAUjBmG,QAAQC,IAAI,iCACZ,IAAMwgB,EAAWnnB,KAAKM,MAAM0d,SAASmJ,SAKrC,GAHAnnB,KAAKa,SAAS,CACZwlB,gBAAiBc,IAEftnB,EAAUunB,gBAAiB,CAC7B,IAAMjnB,EAAUN,EAAUM,QAC1BH,KAAKa,SAAS,CACZV,QAASA,sCAaN,IAAA4H,EAAA/H,KAAA0B,EAIH1B,KAAK2B,MAFP0kB,EAFK3kB,EAEL2kB,gBACAlmB,EAHKuB,EAGLvB,QAGEmmB,EAAY,GACZe,EAAW,GAEbA,ErB/DyB,WqB8DvBlnB,EACS6lB,GAAWpa,OAAO,SAAA0b,GAAC,MAAe,cAAXA,EAAEtmB,MAAmC,YAAXsmB,EAAEtmB,OAEnDglB,GAEb,IAbO,IAAA3d,EAAA,SAaEC,GACP,IAAMie,EAAOc,EAAS/e,GAChBoR,EAAS2M,IAAoBE,EAAKN,KAAO,mBAAqB,GACpEK,EAAUvkB,KAENE,EAAAC,EAAAC,cAAA,MAAIqG,IAAK+d,EAAKN,KAAM5jB,UAAWqX,GAC7BzX,EAAAC,EAAAC,cAACqkB,EAAA,EAAD,CAAMC,GAAIF,EAAKN,KAAMzjB,QAAS,kBAAMuF,EAAKoe,gBAAgBI,EAAKN,QAC5DhkB,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAMmhB,EAAKnhB,KAAM8H,YAAU,IAC5CjL,EAAAC,EAAAC,cAAA,QAAME,UAAU,2BAA2BkkB,EAAKtlB,WARjDqH,EAAI,EAAGA,EAAI+e,EAAS5e,OAAQH,IAAKD,EAAjCC,GAeT,IAAMif,EA/DgB,uBA+DMlB,EAAwC,mBAAqB,GAEzF,OACEpkB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAf,QACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,sBACXikB,GAEHrkB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAS,yCAAA8B,OAA2CojB,IACvDtlB,EAAAC,EAAAC,cAACqkB,EAAA,EAAD,CAAMC,GAAG,qBAAqBjkB,QAAS,kBAAMuF,EAAKoe,gBA1EtC,wBA2EVlkB,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,OAAO8H,YAAU,IACvCjL,EAAAC,EAAAC,cAAA,QAAME,UAAU,2BAAhB,aAGJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wCACbJ,EAAAC,EAAAC,cAACqkB,EAAA,EAAD,CAAMC,GAAG,UACPxkB,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAiBC,KAAK,eAAe8H,YAAU,QAKvDjL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAACukB,EAAA,EAAD,KACEzkB,EAAAC,EAAAC,cAAC6gB,EAAA,EAAD,CAAOwE,OAAK,EAACvE,KAAK,wBAAwB0D,UAAW7gB,IACrD7D,EAAAC,EAAAC,cAAC6gB,EAAA,EAAD,CAAOwE,OAAK,EAACvE,KAAK,4BAA4B0D,UAAWvD,KACzDnhB,EAAAC,EAAAC,cAAC6gB,EAAA,EAAD,CAAOwE,OAAK,EAACvE,KAAK,qBAAqB0D,UAAWC,KAClD3kB,EAAAC,EAAAC,cAAC6gB,EAAA,EAAD,CAAOC,KAAK,uBAAuB0D,UAAWjE,KAC9CzgB,EAAAC,EAAAC,cAAC6gB,EAAA,EAAD,CAAOC,KAAK,6BAA6B0D,UAAWT,OAGxDjkB,EAAAC,EAAAC,cAACslB,EAAD,cA7FgBhlB,IAAMC,WAkGfC,eAAWukB,ICvHXQ,oLATX,OACEzlB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACqkB,EAAA,EAAD,CAAMC,GAAG,UAAT,iBALmBhkB,IAAMC,8BC6CjC,SAASilB,GAAT9kB,GAAsE,IAApCH,EAAoCG,EAA/C8jB,UAAsBiB,EAAyB/kB,EAAzB+kB,cAAkBC,EAAO/nB,OAAAgoB,EAAA,EAAAhoB,CAAA+C,EAAA,+BACpE,OACEZ,EAAAC,EAAAC,cAAC6gB,EAAA,EAADljB,OAAAwX,OAAA,GACMuQ,EADN,CAEE3E,OACE,SAAC5iB,GAAD,OAA6B,IAAlBsnB,EACT3lB,EAAAC,EAAAC,cAACO,EAAcpC,GACf2B,EAAAC,EAAAC,cAAC4lB,EAAA,EAAD,CAAUtB,GAAI,CAACU,SAAU,SAAUxlB,MAAO,CAACqmB,KAAM1nB,EAAM0d,iBAvCjEiK,KAAQC,IAAIC,KAAcC,KAAYC,KAAYC,KAAQC,KACxDC,KAAQC,KAAYC,KAAcC,KAAcC,KAChDC,KAAMC,KAAQC,KAAQC,KAAcC,KAAYC,KAChDC,KAAcC,MA0CDC,mBAtCb,SAAAA,EAAY/oB,GAAO,IAAAC,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAqpB,IACjB9oB,EAAAT,OAAAU,EAAA,EAAAV,CAAAE,KAAAF,OAAAW,EAAA,EAAAX,CAAAupB,GAAA3oB,KAAAV,KAAMM,KACDqB,MAAQ,GAFIpB,mFAOjBmG,QAAQC,IAAI,0BAA2B9G,EAAUunB,kDAKjD,OADA1gB,QAAQC,IAAI,eAAgB9G,EAAUunB,iBAEpCnlB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACukB,EAAA,EAAD,KACEzkB,EAAAC,EAAAC,cAAC6gB,EAAA,EAAD,CAAOwE,OAAK,EAACvE,KAAK,IAAI0D,UAAWtmB,IACjC4B,EAAAC,EAAAC,cAAC6gB,EAAA,EAAD,CAAOC,KAAK,SAAS0D,UAAWtmB,IAChC4B,EAAAC,EAAAC,cAACwlB,GAAD,CAAcC,cAAe/nB,EAAUunB,gBAAiBnE,KAAK,aAAa0D,UAAWO,KACrFjlB,EAAAC,EAAAC,cAAC6gB,EAAA,EAAD,CAAO2D,UAAWe,cAnBVjlB,IAAMC,qBClBxBkN,IAASsT,OACPjhB,EAAAC,EAAAC,cAACmnB,GAAA,EAAD,CAAeC,SAAS,SACtBtnB,EAAAC,EAAAC,cAACqnB,GAAD,OAEFlZ,SAASmZ,eAAe","file":"static/js/main.066187cb.chunk.js","sourcesContent":["\r\nclass AuthStore {\r\n\r\n  constructor() {\r\n    this._sysRole = '';\r\n    this._username = '';\r\n  }\r\n\r\n  set sysRole(sysRole) {\r\n    this._sysRole = sysRole;\r\n  }\r\n\r\n  get sysRole() {\r\n    return this._sysRole;\r\n  }\r\n\r\n  set username(username) {\r\n    this._username = username;\r\n  }\r\n\r\n  get username() {\r\n    return this._username;\r\n  }\r\n\r\n  get isAuthenticated() {\r\n    return true; // this._sysRole !== '';\r\n  }\r\n}\r\n\r\nexport default new AuthStore();","\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AuthStore from '../api/AuthStore';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tryLogin();\r\n  }\r\n\r\n  tryLogin = () => {\r\n    axios.post('/auth/login/cookie')\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  login = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password'\r\n      });\r\n      return;\r\n    }\r\n\r\n    AuthStore.username = 'testuser';\r\n    AuthStore.sysRole = 'developer';\r\n    this.props.history.push('/workspace/dashboard');\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div className=\"login-app-title\">Poli</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n              <label className=\"form-label\">Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} />\r\n            </div>\r\n            <button className=\"button login-button\" onClick={this.login}>Login</button>\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      modalClass = '',\r\n      title,\r\n      children\r\n    } = this.props;\r\n\r\n    const modalStatus = show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={`modal-panel ${modalClass}`}>\r\n          <div className=\"model-header row\">\r\n            <div className=\"model-title\">{title}</div>\r\n            <button className=\"model-close-button icon-button\" onClick={() => this.props.onClose()}>\r\n              <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          <div className='modal-body'>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Toast.css';\r\n\r\nclass Toast extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showToast: false,\r\n      message: ''\r\n    };\r\n\r\n    Toast._toastRef = this;\r\n  }\r\n\r\n  show = (message) => {\r\n    this.setState({ \r\n      showToast: true,\r\n      message: message\r\n    }, () => {\r\n      setTimeout(() => {\r\n        this.hide();\r\n      }, 3500);\r\n    });\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({ \r\n      showToast: false,\r\n      message: ''\r\n    });\r\n  }\r\n\r\n  static show = (message) => {\r\n    Toast._toastRef.show(message);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showToast,\r\n      message\r\n    } = this.state;\r\n\r\n    const toastStatus = showToast ? 'display-block' : 'display-none';\r\n\r\n    return (\r\n      <div className={`toast-container ${toastStatus}`}>\r\n        <button onClick={this.hide}>X</button>\r\n        <div>\r\n          {message}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toast;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport './Datasource.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      datasourceToDelete: {},\r\n      showUpdatePassword: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataSources();\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      driverClassName,\r\n      username,\r\n      password,\r\n      name,\r\n      ping,\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      driverClassName: driverClassName,\r\n      username: username,\r\n      name: name,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      // New\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } \r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      datasourceToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/jdbcdatasource/' + datasourceToDelete.id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        Toast.show(result);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        driverClassName: ds.driverClassName,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (datasource) => {\r\n    this.setState({\r\n      datasourceToDelete: datasource,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      datasourceToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  clearSearch = () => {\r\n    this.setState({\r\n      searchValue: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      showConfirmDeletionPanel,\r\n      searchValue,\r\n      id,\r\n      jdbcDataSources = [],\r\n      datasourceToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const jdbcDataSourceItems = [];\r\n    for (let i = 0; i < jdbcDataSources.length; i++) {\r\n      const ds = jdbcDataSources[i];\r\n      const name = ds.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        jdbcDataSourceItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {name}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.ping(ds.id)}>\r\n                  <FontAwesomeIcon icon=\"plug\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"searchValue\"\r\n          value={this.state.searchValue}\r\n          onChange={this.handleInputChange}\r\n          placeholder=\"Search...\"\r\n          style={{width: '200px'}}\r\n          />\r\n        <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n        <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n          <FontAwesomeIcon icon=\"plus\" /> New datasource\r\n        </button>\r\n        <div className=\"table-panel\">\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={mode} >\r\n\r\n          <div>\r\n            <label className=\"form-label\">Name <span className=\"required\">*</span></label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label className=\"form-label\">Connection Url</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label className=\"form-label\">Driver class name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"driverClassName\" \r\n              value={this.state.driverClassName}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label className=\"form-label\">Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            { mode === 'Edit' ? \r\n              (\r\n                <div style={{margin: '3px 0px 8px 0px'}}>\r\n                  <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n                </div>\r\n              ) : null\r\n            }\r\n            { mode === 'New' || showUpdatePassword ? \r\n              (\r\n                <div>\r\n                  <label className=\"form-label\">Password</label>\r\n                  <input \r\n                    type=\"password\" \r\n                    name=\"password\" \r\n                    value={this.state.password}\r\n                    onChange={this.handleInputChange} />\r\n                </div>\r\n              ) : null\r\n            }\r\n\r\n            <label className=\"form-label\" className=\"mt-3\">Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {datasourceToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    const {\r\n      name,\r\n      checked\r\n    } = this.props;\r\n\r\n    this.props.onChange(name, !checked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      checked\r\n    } = this.props;\r\n\r\n    const checkmarkBoxBgColor = checked ? '#000000' : '#FFFFFF';\r\n    const checkmarkBoxStyle = {\r\n      backgroundColor: checkmarkBoxBgColor\r\n    };\r\n\r\n    return (\r\n      <div className=\"checkbox-container\" onClick={this.toggle}>\r\n        <div className=\"checkbox-checkmark\">\r\n          <div className=\"checkbox-checkmark-box\" style={checkmarkBoxStyle}>\r\n          </div>\r\n        </div>\r\n        <div className=\"checkbox-label\">{value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport Checkbox from './Checkbox';\r\nimport './Slicer.css';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n    searchValue: ''\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    if (searchValue) {\r\n      const result = [];\r\n      const { checkBoxes } = this.props;\r\n      for (let i = 0; i < checkBoxes.length; i++) {\r\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\r\n          result.push(checkBoxes[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n\r\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      checkBoxes = []\r\n    } = this.props;\r\n    const checkBoxItems = checkBoxes.map((box, index) => \r\n      <Checkbox \r\n        key={index} \r\n        name={box.value} \r\n        value={box.value} \r\n        checked={box.isChecked} \r\n        onChange={this.handleCheckBoxChange} \r\n      />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.toggleSelectAll}>Select All {this.state.isSelectAll}</button>\r\n        <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.searchValue}\r\n            onChange={this.handleSearchValueChange}\r\n            placeholder=\"Search...\"\r\n          />\r\n        \r\n        <div className=\"slicer-body\">\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};\r\n\r\nexport const jsonToArray = (json) => {\r\n  let array;\r\n  try {\r\n    array = JSON.parse(json);\r\n  } catch(e) {\r\n    array = [];\r\n  }\r\n  return array;\r\n}\r\n","import React from 'react';\r\n\r\nclass NumberRange extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        min\r\n        <input type=\"number\" name=\"min\" />\r\n        max\r\n        <input type=\"number\" name=\"max\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberRange;","/**\r\n * Constants\r\n */\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\r\n\r\nexport const SYS_ROLE_ADMIN = 'admin';\r\nexport const SYS_ROLE_DEVELOPER = 'developer';\r\nexport const SYS_ROLE_VIEWER = 'viewer';\r\n\r\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;","import React, { Component } from 'react';\r\nimport Slicer from \"./Slicer\";\r\nimport NumberRange from \"./NumberRange\";\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './FilterViewPanel.css';\r\n\r\nclass FilterViewPanel extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      dashboardId: null,\r\n      filters: []\r\n    };\r\n  }\r\n\r\n  fetchFilters = (dashboardId) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      dashboardId: dashboardId\r\n    })\r\n\r\n    axios.get('/ws/filter/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          filters: result,\r\n        }, this.queryFilters);\r\n      });\r\n  }\r\n\r\n  queryFilters = () => {\r\n    const { filters } = this.state;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === Constants.SLICER) {\r\n        const queryRequest = filter.data;\r\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\r\n          .then(res => {\r\n            const queryResult = res.data;\r\n            const queryResultData = Util.jsonToArray(queryResult.data);\r\n\r\n            const index = filters.findIndex(f => f.id === queryResult.id);\r\n            const newFilters = [...this.state.filters];\r\n            newFilters[index].queryResult = queryResult;\r\n            const type = newFilters[index].type;\r\n            if (type === Constants.SLICER) {\r\n              const checkBoxes = [];\r\n              for (let i = 0; i < queryResultData.length; i++) {\r\n                const values = Object.values(queryResultData[i]);\r\n                for (const val of values) {\r\n                  checkBoxes.push({\r\n                    value: val,\r\n                    isChecked: false\r\n                  });\r\n                }\r\n              }\r\n\r\n              newFilters[index].checkBoxes = checkBoxes;\r\n            } else if (type === Constants.SINGLE_VALUE) {\r\n              const values = Object.values(queryResultData);\r\n              let value = '';\r\n              for (const val of values) {\r\n                value = val;\r\n                break;\r\n              }\r\n              newFilters[index].value = value;\r\n            }\r\n\r\n            this.setState({\r\n              filters: newFilters\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderFilterPanel = () => {\r\n    const filterPanel = [];\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      let filterComponent = (<div>NONE</div>);\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        filterComponent = (\r\n          <Slicer \r\n            key={i} \r\n            filterId={filter.id} \r\n            checkBoxes={checkBoxes} \r\n            onChange={this.onSlicerChange} \r\n          />\r\n        );\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterComponent = (\r\n          <input \r\n            type=\"text\"  \r\n            value={filter.value}\r\n            onChange={(event) => this.onSingleValueChange(filter.id, event)} \r\n          />\r\n        );\r\n      }\r\n\r\n      filterPanel.push(\r\n        (\r\n          <div className=\"filter-card\">\r\n            <div className=\"filter-card-title\">\r\n              {filter.name}\r\n\r\n              { this.props.isEditMode ? \r\n                (\r\n                  <div className=\"icon-button-group\">\r\n                    <div className=\"inline-block\" onClick={() => this.edit(filter.id)}>\r\n                      <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n                    </div>\r\n                    <div className=\"inline-block\" onClick={() => this.remove(filter.id)}>\r\n                      <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n                    </div>\r\n                  </div>\r\n                ): null \r\n              }\r\n            </div>\r\n            <div>\r\n              {filterComponent}\r\n            </div>\r\n          </div>\r\n        )\r\n      );\r\n    }\r\n    return filterPanel;\r\n  }\r\n\r\n  edit = (filterId) => {\r\n    this.props.onEdit(filterId);\r\n  }\r\n\r\n  remove = (filterId) => {\r\n    axios.delete('/ws/filter/' + filterId)\r\n      .then(res => {\r\n        const index = this.state.filters.findIndex(f => f.id === filterId);\r\n        const newFilters = [...this.state.filters];\r\n        newFilters.splice(index, 1);\r\n        this.setState({\r\n          filters: newFilters\r\n        });\r\n      });\r\n  }\r\n\r\n  onSlicerChange = (filterId, checkBoxes) => {\r\n    const index = this.state.filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...this.state.filters];\r\n    newFilters[index].checkBoxes = [...checkBoxes];\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n\r\n    // TODO: select all.\r\n    // const isSelectAll = checked.length === checkBoxes.length;    \r\n  }\r\n\r\n  onSingleValueChange = (filterId, event) => {\r\n    const { filters } = this.state;\r\n    const value = event.target.value;\r\n    const index = filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...filters];\r\n    newFilters[index].value = value;\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n  }\r\n\r\n  applyFilters = () => {\r\n    const { filters } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      const filterParam = {};\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        const paramValues = [];\r\n        for (let j = 0; j < checkBoxes.length; j++) {\r\n          const checkBox = checkBoxes[j];\r\n          if (checkBox.isChecked) {\r\n            paramValues.push(checkBox.value);\r\n          }\r\n        }\r\n        filterParam.value = paramValues;\r\n        if (paramValues.length === checkBoxes.length) {\r\n          filterParam.remark = 'select all';\r\n        }\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterParam.value = filter.value;\r\n      }\r\n      filterParam.param = filter.data.param;\r\n      filterParam.type = filter.type;\r\n      filterParams.push(filterParam);\r\n    }\r\n\r\n    this.props.onApplyFilters(filterParams);\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n    const style = {};\r\n    if (show) {\r\n      style.width = Constants.DEFAULT_FILTER_VIEW_WIDTH + 'px';\r\n    } else {\r\n      style.width = '0px';\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-filter-panel\" style={style}>\r\n        <div>Filters</div>\r\n        <button className=\"button\" onClick={this.applyFilters}>Run</button>\r\n        <div className=\"filter-view-panel\">\r\n          {this.renderFilterPanel()}\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterViewPanel;","import React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPalette: false\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      showPalette: !prevState.showPalette\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      showPalette: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    const rgb = color.rgb;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    this.props.onChange(rgba);\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: this.props.value\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: '2'\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.showPalette ? \r\n          (\r\n            <div style={popover}>\r\n              <div style={cover} onClick={this.handleClose} />\r\n              <ChromePicker color={this.props.value} onChange={this.handleChange} />\r\n            </div>\r\n          ) : null }\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","import * as Util from '../api/Util';\r\n\r\nconst CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOptionTemplate = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      type: 'scroll',\r\n      orient: 'vertical',\r\n      data: legend,\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['40%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport const getPieOption = (queryResultData, pieKey, pieValue) => {\r\n  let legend = [];\r\n  let series = [];\r\n  for (let i = 0; i < queryResultData.length; i++) {\r\n    const row = queryResultData[i];\r\n    legend.push(row[pieKey]);\r\n    series.push({\r\n      name: row[pieKey],\r\n      value: row[pieValue]\r\n    });  \r\n  }\r\n  return getPieOptionTemplate(legend, series);\r\n}\r\n","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport './TableWidget.css';\r\n\r\nclass TableWidget extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  render() {   \r\n    const {\r\n      data = [],\r\n      columns = [],\r\n      drillThrough = [],\r\n      error\r\n    } = this.props;\r\n\r\n    const columnHeaders = [];\r\n    columns.forEach(column => {\r\n      const columnName = column.name;\r\n      const header = {\r\n        Header: columnName,\r\n        accessor: columnName\r\n      };\r\n      if (drillThrough.length > 0) {\r\n        const index = drillThrough.findIndex(d => d.columnName === columnName);\r\n        if (index !== -1) {\r\n          const dashboardId = drillThrough[index].dashboardId;\r\n          header.Cell = (props => <a href={`/poli/workspace/dashboard/${dashboardId}?${columnName}=${props.value}`}>{props.value}</a>);\r\n        }\r\n      }\r\n\r\n      columnHeaders.push(header);\r\n    });\r\n\r\n    if (error) {\r\n      return (\r\n        <div>\r\n          {error}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ReactTable\r\n        data={data}\r\n        columns={columnHeaders}\r\n        defaultPageSize={10}\r\n        previousText={'Prev'}\r\n        nextText={'Next'}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableWidget;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport TableWidget from './TableWidget';\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough || []; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        const index = drills.findIndex(d => d.columnName === header);\r\n        if (index !== -1) {\r\n          const dashboardId = drills[index].dashboardId;\r\n          this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      chartType,\r\n      queryResult = {},\r\n      drillThrough,\r\n      data = {}\r\n    } = this.props;\r\n\r\n    const queryResultData = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    let widgetItem = (<div></div>);\r\n    if (chartType === Constants.TABLE) {\r\n      widgetItem = (\r\n        <TableWidget\r\n          data={queryResultData}\r\n          columns={columns}\r\n          error={error}\r\n          drillThrough={drillThrough}\r\n        />\r\n      );\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        pieKey,\r\n        pieValue\r\n      } = data;\r\n      const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\r\n      widgetItem = (\r\n        <ReactEcharts \r\n          option={chartOption}   \r\n          className=\"echarts\"\r\n          onEvents={onChartEvents}  \r\n        />\r\n      );\r\n    } \r\n\r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      name,\r\n      isEditMode,\r\n      style = {}\r\n    } = this.props;\r\n\r\n    const { \r\n      showBorder = false \r\n    } = style;\r\n\r\n    const borderStyle = showBorder ? '2px solid #4b4f56' : '2px solid #FFFFFF';\r\n\r\n    let styles = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: 1,\r\n      border: borderStyle\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {name}\r\n\r\n          { isEditMode ? (\r\n            <div className=\"float-right\" style={{marginRight: '20px'}}>\r\n              <div className=\"inline-block\" onClick={() => this.editWidget(id)}>\r\n                <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n              </div>\r\n              <div className=\"inline-block\" onClick={() => this.removeWidget(id)}>\r\n                <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid-box-file-button-group\">\r\n              <div className=\"inline-block\" onClick={() => this.exportJson(id)}>\r\n                <FontAwesomeIcon icon=\"file-export\" fixedWidth />\r\n              </div>\r\n              \r\n              <div className=\"inline-block\" onClick={() => this.exportCsv(id)}>\r\n                <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { isEditMode ? (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} />\r\n        ): null}\r\n\r\n        { isEditMode ? (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} />\r\n        ): null}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(GridItem);","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      backgroundColor,\r\n      widgets = [],\r\n      showGridlines\r\n    } = this.props;\r\n\r\n    let style = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      backgroundColor: backgroundColor\r\n    };\r\n\r\n    if (showGridlines) {\r\n      style.backgroundSize = '15px 15px';\r\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={style} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport ColorPicker from './ColorPicker';\r\nimport Checkbox from './Checkbox';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\n\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      snapToGrid: false,\r\n      showGridlines: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  resizeGrid = (width, isResizeToBase) => {\r\n    const preGridWidth = this.state.gridWidth;\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n    if (isResizeToBase) {\r\n      this.resizeWidgetsToBase(newWidgets, preGridWidth);\r\n    }\r\n\r\n    const gridWidth = width - 10;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return Math.round(num * gridWidth / BASE_WIDTH);\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Math.round(num * BASE_WIDTH / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, width, filterParams) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get('/ws/widget/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(width, false);\r\n          this.queryWidgets(filterParams);\r\n        });\r\n      });\r\n  }\r\n\r\n  queryWidgets = (filterParams) => {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      axios.post('/ws/jdbcquery/widget/' + widget.id, params)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const index = widgets.findIndex(w => w.id === result.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = result;\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    this.setState({\r\n      [name]: isChecked\r\n    });\r\n  }\r\n\r\n  handleHeightChange = (event) => {\r\n    this.props.onHeightChange(event.target.value);\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    this.props.onBackgroundColorChange(color);\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });\r\n  }\r\n\r\n  onWidgetRemove = (widgetId) => {\r\n    axios.delete('/ws/widget/' + widgetId)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { widgetViewWidth } = this.props;\r\n    const style = {\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {this.props.isEditMode ?\r\n        (\r\n          <div className=\"dashboard-attribute-edit-panel\">\r\n            <div className=\"inline-block\">Height:</div>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.props.height}\r\n              onChange={this.handleHeightChange} \r\n              className=\"inline-block\" \r\n              style={{width: '200px'}}\r\n              />\r\n\r\n            <div>\r\n              Background Color\r\n              <ColorPicker value={this.props.backgroundColor} onChange={this.onBackgroundColorChange} />\r\n            </div>\r\n\r\n            <Checkbox name=\"snapToGrid\" value=\"Snap to grid\" checked={this.state.snapToGrid} onChange={this.handleCheckBoxChange} />\r\n            <Checkbox name=\"showGridlines\" value=\"Show gridlines\" checked={this.state.showGridlines} onChange={this.handleCheckBoxChange} />\r\n  \r\n          </div>\r\n        ) : null}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          backgroundColor={this.props.backgroundColor}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.onWidgetRemove} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","import React from 'react';\r\nimport './Tabs.css';\r\n\r\nclass Tabs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const activeTab = this.props.activeTab;\r\n    this.setState({\r\n      activeTab: activeTab\r\n    });\r\n  }\r\n\r\n  handleTabClick = (title) => {\r\n    this.setState({\r\n      activeTab: title\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children = []\r\n    } = this.props;\r\n\r\n    const {\r\n      activeTab\r\n    } = this.state;\r\n\r\n    const tabHeaders = [];\r\n    let tabContent = null;\r\n    for (let i = 0; i < children.length; i++) {\r\n      const title = children[i].props.title;\r\n      let active = '';\r\n      if (title === activeTab) {\r\n        active = 'tab-header-active';\r\n        tabContent = children[i].props.children;\r\n      }\r\n      \r\n      tabHeaders.push(\r\n        <li className={`tab-header-item ${active}`} key={i} onClick={() => this.handleTabClick(title)}>{title}</li>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"tab-container\">\r\n        <ul className=\"tab-header\">\r\n          {tabHeaders}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {tabContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Select extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    optionDisplay: PropTypes.string,\r\n    optionValue: PropTypes.string\r\n  };\r\n\r\n  handleOptionChange = (event) => {\r\n    const name = this.props.name;\r\n    const value = event.target.value;\r\n    this.props.onChange(name, value);\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      value,\r\n      options = [],\r\n      optionValue,\r\n      optionDisplay\r\n    } = this.props;\r\n\r\n    const optionList = [];\r\n    optionList.push(\r\n      <option value=\"\" key=\"\"></option>\r\n    );\r\n    options.forEach((option, index) => {\r\n      let value;\r\n      let display;\r\n      if (optionValue && optionDisplay) {\r\n        // The options contain objects.\r\n        value = option[optionValue];\r\n        display = option[optionDisplay];\r\n      } else {\r\n        // The options contain string or number.\r\n        value = option;\r\n        display = option;\r\n      }\r\n      \r\n      optionList.push(\r\n        <option value={value} key={index}>{display}</option>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <select value={value} onChange={this.handleOptionChange}>\r\n        {optionList}\r\n      </select>\r\n    )\r\n  };\r\n}\r\n\r\nexport default Select;","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport TableWidget from './TableWidget';\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nimport './WidgetEditPanel.css';\r\n\r\nimport Checkbox from './Checkbox';\r\nimport Tabs from '../components/Tabs';\r\nimport Select from '../components/Select';\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      name: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: {},\r\n      chartType: Constants.TABLE,\r\n      style: {\r\n        showBorder: false\r\n      },\r\n      pieKey: '',\r\n      pieValue: '',\r\n      chartOption: {},\r\n      drills: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId, dashboardId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    const filters = await webApi.fetchFiltersByDashboardId(dashboardId);\r\n    this.setState({ \r\n      filters: filters \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n\r\n      if (filters.length !== 0) {\r\n        this.setState({\r\n          filterId: filters[0].id\r\n        });\r\n      }\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { chartType } = result;\r\n          if (chartType === Constants.PIE) {\r\n            const {\r\n              pieKey,\r\n              pieValue\r\n            } = result.data;\r\n            this.setState({\r\n              pieKey: pieKey,\r\n              pieValue: pieValue\r\n            });\r\n          }\r\n\r\n          this.setState({\r\n            widgetId: widgetId,\r\n            name: result.name,\r\n            x: result.x,\r\n            y: result.y,\r\n            width: result.width,\r\n            height: result.height,\r\n            sqlQuery: result.sqlQuery,\r\n            chartType: result.chartType,\r\n            jdbcDataSourceId: result.jdbcDataSourceId,\r\n            drills: result.drillThrough,\r\n            style: result.style\r\n          }, () => {\r\n            this.runQuery();\r\n          });\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    if (name === 'showBorder') {\r\n      const style = {...this.state.style};\r\n      style.showBorder = isChecked;\r\n      this.setState({\r\n        style: style\r\n      });\r\n    }\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      widgetId,\r\n      name,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      chartType,\r\n      drills,\r\n      style\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    const widget = {\r\n      name: name,\r\n      dashboardId: this.props.dashboardId,\r\n      chartType: chartType,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      drillThrough: drills,\r\n      style: style\r\n    }\r\n\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const {\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n      widget.data = {\r\n        pieKey: pieKey,\r\n        pieValue: pieValue\r\n      }\r\n    }\r\n\r\n    if (widgetId === null) {\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          queryResult: result\r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = () => {\r\n    const { \r\n      drills,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const filterId = this.state.filterId;\r\n    const index = drills.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill) => {\r\n    const { drills } = this.state;\r\n    const index = drills.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.splice(index, 1);\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = () => {\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        pieKey, \r\n        pieValue, \r\n        queryResult = {}\r\n      } = this.state;\r\n      console.log(\"generateChart\", pieKey, pieValue);\r\n      const data = Util.jsonToArray(queryResult.data);\r\n      const chartOption = EchartsApi.getPieOption(data, pieKey, pieValue);\r\n      this.setState({\r\n        chartOption: chartOption\r\n      });\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      queryResult = {},\r\n    } = this.state;\r\n    const columns = queryResult.columns || [];\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        chartOption,\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n\r\n      chartPreview = (\r\n        <div>\r\n          <label className=\"form-label\"><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label className=\"form-label\">Aggr Key (string)</label>\r\n          <Select\r\n            name={'pieKey'}\r\n            value={pieKey}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n            />\r\n\r\n\r\n          <label className=\"form-label\">By Aggr Value (number)</label>\r\n          <Select\r\n            name={'pieValue'}\r\n            value={pieValue}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n            />\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      queryResult,\r\n      jdbcDataSources = [],\r\n      drills,\r\n      drillDashboards = []\r\n    } = this.state;\r\n\r\n    const data = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    const drillItems = (drills || []).map(drill =>\r\n      <div key={drill.columnName}>\r\n        <div>Column: {drill.columnName}</div>\r\n        <div>Dashboard: {drill.dashboardId}</div>\r\n        <button onClick={() => this.removeDrillThrough(drill)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const columnItems = columns.map(col =>\r\n      <div key={col.name}>{col.name} {col.dataType}</div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        \r\n        <div className=\"form-panel\">\r\n          <Tabs activeTab=\"basic\">\r\n            <div title=\"basic\">\r\n              <label className=\"form-label\">Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} \r\n              />\r\n\r\n              <Checkbox name=\"showBorder\" value=\"Show border\" checked={this.state.style.showBorder} onChange={this.handleCheckBoxChange} />\r\n            </div>\r\n\r\n            <div title=\"Query\">\r\n              <label className=\"form-label\">DataSource</label>\r\n              <Select\r\n                name={'jdbcDataSourceId'}\r\n                value={this.state.jdbcDataSourceId}\r\n                onChange={this.handleIntegerOptionChange}\r\n                options={jdbcDataSources}\r\n                optionDisplay={'name'}\r\n                optionValue={'id'}\r\n                />\r\n            \r\n              <label className=\"form-label\">SQL Query</label>\r\n              <AceEditor\r\n                style={{ marginTop: '8px' }}\r\n                value={this.state.sqlQuery}\r\n                mode=\"mysql\"\r\n                theme=\"xcode\"\r\n                name=\"blah2\"\r\n                onChange={this.handleAceEditorChange}\r\n                height={'300px'}\r\n                width={'100%'}\r\n                fontSize={15}\r\n                showPrintMargin={false}\r\n                showGutter={true}\r\n                highlightActiveLine={true}\r\n                setOptions={{\r\n                  showLineNumbers: true,\r\n                  tabSize: 2\r\n                }}\r\n              />\r\n\r\n              <div className=\"mt-3\">\r\n                <button className=\"button\" onClick={this.runQuery}>Run Query</button>\r\n              </div>\r\n\r\n              <label className=\"form-label\">Result</label>\r\n              <TableWidget\r\n                data={data}\r\n                columns={columns}\r\n                error={error}\r\n              />\r\n\r\n              <label className=\"form-label\">Columns Mapping</label>\r\n              <div>\r\n                {columnItems}\r\n              </div>\r\n            </div>\r\n\r\n            <div title=\"Chart\">\r\n              <label className=\"form-label\">Chart Options</label>\r\n              <Select\r\n                name={'chartType'}\r\n                value={this.state.chartType}\r\n                onChange={this.handleOptionChange}\r\n                options={Constants.CHART_TYPES}\r\n              />\r\n              <label className=\"form-label\">Preview</label>\r\n              {this.renderChartPreview()}  \r\n            </div>\r\n\r\n            <div title=\"Drill through\">\r\n              <label className=\"form-label\">Drill through</label>\r\n              <label className=\"form-label\">Column</label>\r\n              <Select\r\n                name={'drillColumnName'}\r\n                value={this.state.drillColumnName}\r\n                options={columns}\r\n                onChange={this.handleOptionChange}\r\n                optionDisplay={'name'}\r\n                optionValue={'name'}\r\n              />\r\n\r\n              <label className=\"form-label\">Dashboard</label>\r\n              <Select\r\n                name={'drillDashboardId'}\r\n                value={this.state.drillDashboardId}\r\n                options={drillDashboards}\r\n                onChange={this.handleIntegerOptionChange}\r\n                optionDisplay={'name'}\r\n                optionValue={'id'}\r\n              />\r\n              <div>\r\n                {drillItems}\r\n              </div>\r\n              <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\r\n            </div>\r\n          </Tabs>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","import React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\nimport TableWidget from './TableWidget';\r\n\r\nimport './FilterEditPanel.css';\r\n\r\nclass FilterEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      filterId: null,\r\n      name: '',\r\n      type: Constants.SLICER,\r\n      data: {},\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: {},\r\n      param: '',\r\n    };\r\n  }\r\n\r\n  fetchFilter = async (filterId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    if (filterId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n      this.setState({\r\n        filterId: null\r\n      })\r\n    } else {\r\n      axios.get('/ws/filter/' + filterId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { \r\n            data,\r\n            type\r\n          } = result;\r\n          this.setState({\r\n            filterId: filterId,\r\n            name: result.name,\r\n            type: result.type,\r\n            data: data\r\n          });\r\n\r\n          if (type === Constants.SLICER) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          } else if (type === Constants.SINGLE_VALUE) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          }\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    this.setState({ \r\n      jdbcDataSourceId: event.target.value\r\n    });\r\n  }\r\n\r\n  handleTypeChange = (event) => {\r\n    this.setState({ \r\n      type: event.target.value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      filterId,\r\n      name,\r\n      type,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      param\r\n    } = this.state;\r\n\r\n    const filter = {\r\n      name: name,\r\n      type: type,\r\n      dashboardId: this.props.dashboardId\r\n    };\r\n\r\n    if (type === Constants.SLICER) {\r\n      filter.data = {\r\n        jdbcDataSourceId: jdbcDataSourceId,\r\n        sqlQuery: sqlQuery,\r\n        param: param\r\n      }\r\n    } else if (type === Constants.SINGLE_VALUE) {\r\n      filter.data = {\r\n        useQuery: false,\r\n        jdbcDataSourceId: jdbcDataSourceId,\r\n        sqlQuery: sqlQuery,\r\n        param: param,\r\n      }\r\n    }\r\n\r\n    if (filterId === null) {\r\n      axios.post('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      filter.id = filterId;\r\n      axios.put('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { \r\n      queryResult = {},\r\n      jdbcDataSources = [],\r\n      type\r\n    } = this.state;\r\n\r\n    const data = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    const requireSql = type === Constants.SLICER;\r\n\r\n    const dataSourceOptions = jdbcDataSources.map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const typeOptions = Constants.FILTER_TYPES.map(t =>\r\n      <option value={t} key={t}>{t}</option>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        <button className=\"button\" onClick={this.runQuery}>Run</button>\r\n\r\n        <div className=\"form-panel\">\r\n          <label className=\"form-label\">Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label className=\"form-label\">Type</label>\r\n          <select value={this.state.type} onChange={this.handleTypeChange}>\r\n            {typeOptions}\r\n          </select>\r\n\r\n          {\r\n            requireSql ?\r\n            (\r\n              <React.Fragment>\r\n                <label className=\"form-label\">DataSource</label>\r\n                <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n                  {dataSourceOptions}\r\n                </select>\r\n              \r\n                <label className=\"form-label\">SQL Query</label>\r\n                <AceEditor\r\n                  style={{marginTop: '8px'}}\r\n                  value={this.state.sqlQuery}\r\n                  mode=\"mysql\"\r\n                  theme=\"xcode\"\r\n                  name=\"blah2\"\r\n                  onChange={this.handleAceEditorChange}\r\n                  height={'300px'}\r\n                  width={'100%'}\r\n                  fontSize={15}\r\n                  showPrintMargin={false}\r\n                  showGutter={true}\r\n                  highlightActiveLine={true}\r\n                  setOptions={{\r\n                    showLineNumbers: true,\r\n                    tabSize: 2\r\n                  }}\r\n                />\r\n\r\n                <label className=\"form-label\">Result</label>\r\n                <TableWidget\r\n                  data={data}\r\n                  columns={columns}\r\n                  error={error}\r\n                />\r\n              </React.Fragment>\r\n            ) : null\r\n          }\r\n\r\n          <label className=\"form-label\">Param</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"param\" \r\n            value={this.state.param}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport FilterViewPanel from '../components/FilterViewPanel';\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\nimport FilterEditPanel from '../components/FilterEditPanel';\r\n\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showFilterEditPanel: false,\r\n      showFilterViewPanel: true,\r\n      showConfirmDeletionPanel: false,\r\n      widgetToDelete: {},\r\n      isEditMode: false,\r\n      isReadOnly: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      refreshInterval: 15,\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      style: {},\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.filterViewPanel = React.createRef();\r\n    this.filterEditPanel = React.createRef();\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    console.log('DashboardEditView', dashboardId);\r\n\r\n    const url = this.props.location.search;\r\n    console.log('url', url);\r\n    const params = new URLSearchParams(url);\r\n    console.log('params', params);\r\n    for(let pair of params.entries()) {\r\n      console.log(pair[0]+ ', '+ pair[1]); \r\n    } \r\n\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = this.state.showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    console.log('componentDidMount', pageWidth, widgetViewWidth);\r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const result = res.data;\r\n            this.setState({\r\n              dashboardId: result.id,\r\n              name: result.name,\r\n              style: result.style\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = () => {\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    const dashboardName = params.get('name');\r\n    const showFilter = params.get('showFilter');\r\n\r\n    const showFilterViewPanel = showFilter == 'true';\r\n\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    \r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth,\r\n      isReadOnly: true,\r\n      name: dashboardName,\r\n      showFilterViewPanel: showFilterViewPanel\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            style: result.style\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth - 40;\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const { refreshInterval } = this.state;\r\n      let interval = parseInt(refreshInterval, 10) || 15;\r\n      interval = interval < 1 ? 1 : interval;\r\n      const timerId = setInterval(() => {\r\n        this.filterViewPanel.current.applyFilters();\r\n        this.updateLastRefreshed();\r\n      }, interval * 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    this.refreshWidgetView();\r\n    this.refreshFilterView();\r\n    this.updateLastRefreshed();\r\n  }\r\n\r\n  refreshFilterView = () => {\r\n    const { \r\n      dashboardId\r\n    } = this.state;\r\n    this.filterViewPanel.current.fetchFilters(dashboardId);\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n  } \r\n\r\n  updateLastRefreshed = () => {\r\n    const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\r\n    this.setState({\r\n      lastRefreshed: now\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    console.log('save');\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      style\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      style: style\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.widgetViewPanel.current.saveWidgets();\r\n\r\n    this.props.onSaveDashboard(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      dashboardToDelete = {} \r\n    } = this.state;\r\n    const id = dashboardToDelete.id;\r\n    axios.delete(`/ws/dashboard/${id}`)\r\n      .then(res => {\r\n        this.props.onDeleteDashboard(id);\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  onSaveFilter = () => {\r\n    this.setState({ \r\n      showFilterEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  toggleFilterViewPanel = () => {\r\n    const { \r\n      showFilterViewPanel\r\n    } = this.state;\r\n    this.resizePageLayout(!showFilterViewPanel);\r\n  }\r\n\r\n  resizePageLayout = (showFilterViewPanel) => {\r\n    const pageWidth = this.getPageWidth();;\r\n    let widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    this.widgetViewPanel.current.resizeGrid(widgetViewWidth, true);\r\n\r\n    this.setState({\r\n      showFilterViewPanel: showFilterViewPanel,\r\n      widgetViewWidth: widgetViewWidth\r\n    }); \r\n  }\r\n\r\n  openFilterEditPanel = (filterId) => {\r\n    this.filterEditPanel.current.fetchFilter(filterId);\r\n    this.setState({\r\n      showFilterEditPanel: true\r\n    });\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    const { dashboardId } = this.state;\r\n    this.widgetEditPanel.current.fetchWidget(widgetId, dashboardId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/workspace/dashboard/view?name=${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onTableCellClick = () => {\r\n    this.props.history.push(`/workspace/dashboard/drill?name=&`);\r\n  }\r\n\r\n  onHeightChange = (height) => {\r\n    const style = {...this.state.style};\r\n    style.height = height;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    const style = {...this.state.style};\r\n    style.backgroundColor = color;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      lastRefreshed,\r\n      isEditMode,\r\n      isReadOnly\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel = null;\r\n    const controlButtons = (\r\n      <React.Fragment>\r\n        <span className=\"mr-3\">Last refreshed: {lastRefreshed}</span>\r\n        {\r\n          autoRefreshStatus === 'OFF' ? \r\n          (\r\n            <input \r\n              type=\"text\" \r\n              name=\"refreshInterval\" \r\n              value={this.state.refreshInterval}\r\n              onChange={this.handleInputChange}\r\n              className=\"inline-block\" \r\n              style={{width: '50px'}}\r\n            />\r\n          ) : null\r\n        }\r\n        <button className=\"button square-button mr-3\" onClick={this.toggleAutoRefresh}>\r\n          {\r\n            autoRefreshStatus === 'ON' ? \r\n            (\r\n              <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\r\n            ) : \r\n            (\r\n              <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\r\n            )\r\n          }\r\n        </button>\r\n        \r\n        <button className=\"button mr-3\" onClick={this.toggleFilterViewPanel}>Show Filters</button>\r\n        <button className=\"button square-button\" onClick={this.refresh}>\r\n          <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n\r\n    if (!isReadOnly) {\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button mr-3\" onClick={this.cancelEdit}>Cancel</button>\r\n            <button className=\"button mr-3\" onClick={this.save}>Save</button>\r\n            <button className=\"button mr-3\" onClick={this.confirmDelete}>Delete</button>\r\n            <button className=\"button mr-3\" onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\r\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button square-button mr-3\" onClick={this.fullScreen}>\r\n              <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={this.edit}>Edit</button>\r\n            {controlButtons}\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      fullScreenButtonPanel = controlButtons;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-menu-panel row\">\r\n          <div className=\"float-left\">\r\n            {\r\n              isReadOnly || !isEditMode ?\r\n              (\r\n                <div className=\"dashboard-name\">\r\n                  {this.state.name}\r\n                </div>\r\n              ) :(\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"name\" \r\n                  value={this.state.name}\r\n                  onChange={this.handleInputChange} \r\n                  className=\"dashboard-name\"\r\n                  />\r\n              )\r\n            }\r\n            \r\n          </div>\r\n          <div className=\"float-right\">\r\n            {fullScreenButtonPanel}\r\n            {editButtonPanel}\r\n          </div>\r\n        </div>\r\n\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          isEditMode={this.state.isEditMode}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          onHeightChange={this.onHeightChange}\r\n          onBackgroundColorChange={this.onBackgroundColorChange}\r\n          {...this.state.style}\r\n        />\r\n        <FilterViewPanel \r\n          ref={this.filterViewPanel} \r\n          onEdit={this.openFilterEditPanel}\r\n          onApplyFilters={this.applyFilters}\r\n          isEditMode={this.state.isEditMode}\r\n          show={this.state.showFilterViewPanel}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'dashboard-edit-widget-dialog'} \r\n          title={'Widget Edit'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showFilterEditPanel}\r\n          onClose={() => this.setState({ showFilterEditPanel: false })}\r\n          modalClass={'dashboard-edit-filter-dialog'} \r\n          title={'Filter Edit'}>\r\n          <FilterEditPanel\r\n            ref={this.filterEditPanel}\r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveFilter}\r\n          />\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\nimport './Dashboard.css';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as Constants from '../api/Constants';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      activeDashboardId: 0,\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false,\r\n      name: ''\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      style: {\r\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\r\n        backgroundColor: 'rgba(233, 235, 238, 1)'\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.closeEditPanel();\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.setState({\r\n      activeDashboardId: dashboardId\r\n    });\r\n    this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n  }\r\n\r\n  onSaveDashboard = (dashboardId) => {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  onDeleteDashboard = (dashboardId) => {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dashboards = [],\r\n      activeDashboardId,\r\n      searchValue\r\n    } = this.state;\r\n\r\n    \r\n    const dashboardRows = [];\r\n    for (let i = 0; i < dashboards.length; i++) {\r\n      const dashboard = dashboards[i];\r\n      const name = dashboard.name;\r\n      const menuActive = activeDashboardId === dashboard.id ? 'dashboard-menu-item-active' : '';\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        dashboardRows.push(\r\n          (\r\n            <div key={i} className={`dashboard-menu-item ellipsis ${menuActive}`} onClick={() => this.view(dashboard.id)}>\r\n              {name}\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dashboard-sidebar\">\r\n          <div style={{margin: '5px'}}>\r\n            <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\r\n              <FontAwesomeIcon icon=\"plus\" /> New\r\n            </button>\r\n            <input \r\n              type=\"text\" \r\n              name=\"searchValue\" \r\n              value={this.state.searchValue}\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleInputChange} />\r\n          </div>\r\n          <div>\r\n            {dashboardRows}\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route \r\n            path=\"/workspace/dashboard/:id\" \r\n            render={(props) => <DashboardEditView key={props.match.params.id} onSaveDashboard={this.onSaveDashboard} onDeleteDashboard={this.onDeleteDashboard} />} \r\n            />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'small-modal-panel'} \r\n          title={'New'} >\r\n          <div>\r\n            <label className=\"form-label\">Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              />\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.dashboardEditView.loadViewByDashboardName();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView wrappedComponentRef={comp => (this.dashboardEditView = comp)} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\n\r\nconst SYS_ROLES = ['developer', 'viewer'];\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      searchValue: '',\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, event) => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      this.setState({\r\n        id: user.id,\r\n        username: user.username,\r\n        name: user.name,\r\n        tempPassword: '',\r\n        sysRole: user.sysRole,\r\n        userGroups: user.userGroups\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  search = () => {\r\n    const { searchValue } = this.state;\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: sysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/user/' + id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n      });\r\n  }\r\n\r\n  addUserGroup = (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId, event) => {\r\n    event.preventDefault();\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      users = [],\r\n      groups = [],\r\n      userGroups = []\r\n    } = this.state;\r\n\r\n    const userItems = users.map(user => \r\n      <div key={user.id} className=\"user-card\">\r\n        <p>\r\n          {user.username}\r\n          {user.name}\r\n          {user.sysRole}\r\n          <button onClick={() => this.openEditPanel(user)}>update</button>\r\n          <button onClick={() => this.delete(user.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupOptions = groups.map(group => \r\n      <option value={group.id} key={group.id}>{group.name}</option>\r\n    );\r\n\r\n    const sysRoleOptions = SYS_ROLES.map(groupName => \r\n      <option value={groupName} key={groupName}>{groupName}</option>\r\n    );\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId}>\r\n                <div>Group: {groups[j].name}</div>\r\n                <button onClick={(event) => this.removeUserGroup(groupId, event)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>User</div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Username...\"\r\n          />\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Group...\"\r\n          />\r\n        <button onClick={this.search}>Search</button>\r\n        <div className=\"row\">\r\n          {userItems}\r\n        </div>\r\n        <button onClick={() => this.openEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'lg-modal-panel'} \r\n          title={'User'} >\r\n\r\n          <div>\r\n            <h3>{'User'}</h3>\r\n            <form>\r\n              <label className=\"form-label\">Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label className=\"form-label\">Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label className=\"form-label\">Temp password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"tempPassword\" \r\n                value={this.state.tempPassword}\r\n                onChange={this.handleInputChange} />\r\n              \r\n              <label className=\"form-label\">System Role</label>\r\n              <select value={this.state.sysRole} onChange={(event) => this.handleOptionChange('sysRole', event)}>\r\n                {sysRoleOptions}\r\n              </select>\r\n              <br/>\r\n              \r\n              <label className=\"form-label\">Groups</label>\r\n              <select value={this.state.userGroupId} onChange={(event) => this.handleOptionChange('userGroupId', event)}>\r\n                {groupOptions}\r\n              </select>\r\n              <button onClick={this.addUserGroup}>Add</button>\r\n              <div>\r\n                {userGroupItems}\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, event) => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      this.setState({\r\n        id: group.id,\r\n        name: group.name,\r\n        groupDashboards: group.groupDashboards\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/group/' + id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n      });\r\n  }\r\n\r\n  addGroupDashboard= (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n    if (index === -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.push(groupDashboardId);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId, event) => {\r\n    event.preventDefault();\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    const dashboardOptions = dashboards.map(dash => \r\n      <option value={dash.id} key={dash.id}>{dash.name}</option>\r\n    );\r\n\r\n    const groupItems = groups.map(group => \r\n      <div key={group.id} className=\"group-card\">\r\n        <p>\r\n          {group.name}\r\n          <button onClick={() => this.openEditPanel(group)}>update</button>\r\n          <button onClick={() => this.delete(group.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId}>\r\n                <div>Name: {dashboards[j].name}</div>\r\n                <button onClick={(event) => this.removeGroupDashboard(dashboardId, event)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Group</h1>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Group...\"\r\n          />\r\n        <button onClick={this.search}>Search</button>\r\n        <div className=\"row\">\r\n          {groupItems}\r\n        </div>\r\n        <button onClick={() => this.openEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'lg-modal-panel'} \r\n          title={'Group'} >\r\n\r\n          <div>\r\n            <h3>{'Group'}</h3>\r\n            <form>\r\n              <label className=\"form-label\">Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n              \r\n              <label className=\"form-label\">Dashboards</label>\r\n              <select value={this.state.groupDashboardId} onChange={(event) => this.handleOptionChange('groupDashboardId', event)}>\r\n                {dashboardOptions}\r\n              </select>\r\n              <button onClick={this.addGroupDashboard}>Add</button>\r\n              <div>\r\n                {groupDashboardItems}\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\nimport { Route, Link, Switch } from \"react-router-dom\";\r\nimport User from './User';\r\nimport Group from './Group';\r\nimport './UserManagement.css';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/user-management/user',\r\n    value: 'User',\r\n    icon: 'fa-users'\r\n  }, \r\n  {\r\n    link: '/workspace/user-management/group',\r\n    value: 'Group',\r\n    icon: 'fa-user-cog',\r\n  }\r\n];\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: 'group',\r\n    }\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let menuItems = [];\r\n    for (let i = 0; i < MENU_ITEMS.length; i++) {\r\n      const menu = MENU_ITEMS[i];\r\n      const active = this.state.currentMenuLink === menu.link ? 'active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li className={active} key={i}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <i className={`fas ${menu.icon} fa-fw`}></i>\r\n              <span className=\"app-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <ul className=\"nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/workspace/user-management/user\" component={User} />\r\n            <Route path=\"/workspace/user-management/group\" component={Group} />\r\n          </Switch>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        alert('confirm password');\r\n        return;\r\n      }\r\n      \r\n      user.password = password;\r\n    }\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>Account</div>\r\n        <div className=\"form-panel\">   \r\n          <label className=\"form-label\">Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label className=\"form-label\">Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label className=\"form-label\">System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label className=\"form-label\">API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button className=\"button\" onClick={this.generateApiKey}>Generate new API Key</button>\r\n          <br/>\r\n\r\n          <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n          {\r\n            showUpdatePassword ?\r\n            (\r\n              <React.Fragment>\r\n                <br/>\r\n                <label className=\"form-label\">Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label className=\"form-label\">Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n            ) : null\r\n          }\r\n\r\n          <br/>\r\n          <button className=\"button\" onClick={this.save}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","import React from 'react';\r\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\n\r\nimport Toast from '../components/Toast';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport AuthStore from '../api/AuthStore';\r\nimport './Workspace.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data source',\r\n    icon: 'database'\r\n  }, \r\n  {\r\n    link: '/workspace/user-management',\r\n    value: 'User Management',\r\n    icon: 'users-cog'\r\n  }\r\n];\r\n\r\nconst ACCOUNT_MENU_LINK = '/workspace/account';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard',\r\n      username: '',\r\n      sysRole: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Workspace - componentDidMount');\r\n    const pathname = this.props.location.pathname;\r\n    // TODO: fetch user information\r\n    this.setState({\r\n      currentMenuLink: pathname,\r\n    });\r\n    if (AuthStore.isAuthenticated) {\r\n      const sysRole = AuthStore.sysRole;\r\n      this.setState({\r\n        sysRole: sysRole\r\n      });\r\n    } else {\r\n      // Try login. If not, redirect\r\n    }\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n      sysRole\r\n    } = this.state;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.name === 'dashboard' || m.name === 'account');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li key={menu.link} className={active}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"workspace-nav\">  \r\n          <div className=\"workspace-name\">Poli</div>\r\n          <ul className=\"workspace-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div className=\"workspace-account-menu\">\r\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\r\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\r\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\r\n                <span className=\"workspace-nav-menu-text\">Account</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"workspace-logout-button inline-block\">\r\n              <Link to=\"/login\">\r\n                <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"workspace-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route exact path=\"/workspace/dashboard/view\" component={DashboardFullScreenView} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n            <Route path=\"/workspace/dashboard\" component={Dashboard} />\r\n            <Route path=\"/workspace/user-management\" component={UserManagement} />\r\n          </Switch>\r\n        </div>\r\n        <Toast />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Workspace);\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, Component } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\n\r\nimport AuthStore from './api/AuthStore';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv\r\n} from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('App - componentDidMount', AuthStore.isAuthenticated);\r\n  }\r\n   \r\n  render() {\r\n    console.log('App - render', AuthStore.isAuthenticated);\r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <PrivateRoute authenticated={AuthStore.isAuthenticated} path='/workspace' component={Workspace} />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} />\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}