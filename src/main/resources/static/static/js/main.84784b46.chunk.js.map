{"version":3,"sources":["api/AuthStore.js","views/Login.js","api/WebApi.js","components/Modal.js","components/Toast.js","views/DataSource.js","components/Checkbox.js","components/Slicer.js","api/Util.js","components/NumberRange.js","api/Constants.js","components/FilterViewPanel.js","components/ColorPicker.js","components/GridDraggable.js","components/GridResizable.js","api/EchartsApi.js","components/TableWidget.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/Tabs.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/DashboardFullScreenView.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["api_AuthStore","AuthStore","Object","classCallCheck","this","_sysRole","_username","sysRole","username","Login","props","_this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","tryLogin","axios","post","then","res","data","login","preventDefault","_this$state","state","password","user","history","push","errorMsg","react_default","a","createElement","Fragment","className","type","onChange","onClick","React","Component","withRouter","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","fetchFiltersByDashboardId","_ref3","_callee3","dashboardId","_context3","concat","_x2","_ref4","_callee4","url","_context4","_x3","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","onClose","index_es","icon","size","Toast","message","showToast","setTimeout","hide","_toastRef","assertThisInitialized","toastStatus","DataSource","save","showUpdatePassword","id","connectionUrl","driverClassName","ping","ds","put","closeEditPanel","catch","error","console","log","confirmDelete","_this$state$datasourc","datasourceToDelete","delete","closeConfirmDeletionPanel","clearEditPanel","initialState","openEditPanel","showEditPanel","openConfirmDeletionPanel","datasource","showConfirmDeletionPanel","toggleUpdatePassword","prevState","clearSearch","searchValue","jdbcDataSources","webApi","_this2","_this$state2","_this$state2$jdbcData","_this$state2$datasour","mode","jdbcDataSourceItems","_loop","i","includes","key","length","placeholder","style","width","src_components_Modal","rows","margin","Checkbox","toggle","checked","_this$props2","checkmarkBoxStyle","backgroundColor","Slicer","isSelectAll","toggleSelectAll","newIsSelectAll","newCheckBoxes","toConsumableArray","checkBoxes","isChecked","filterId","handleSearchValueChange","result","indexOf","handleCheckBoxChange","index","findIndex","x","_this$props$checkBoxe","checkBoxItems","map","box","src_components_Checkbox","isArrayEmpty","array","Array","isArray","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","DEFAULT_FILTER_VIEW_WIDTH","DEFAULT_DASHBOARD_HEIGHT","FilterViewPanel","fetchFilters","filters","queryFilters","filter","Constants","queryRequest","queryResult","JSON","parse","f","newFilters","Util","_arr","values","_i2","val","_arr2","_i3","renderFilterPanel","filterPanel","filterComponent","src_components_Slicer","onSlicerChange","onSingleValueChange","isEditMode","edit","fixedWidth","remove","onEdit","splice","applyFilters","filterParams","filterParam","paramValues","j","checkBox","remark","param","onApplyFilters","ColorPicker","handleClick","showPalette","handleClose","handleChange","color","rgb","rgba","r","g","b","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","WIDGET_BORDER","GridDraggable","onMouseDown","gridItemNode","ReactDOM","findDOMNode","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","CHART_COLORS","getPieOption","queryResultData","pieKey","pieValue","legend","series","row","tooltip","orient","center","radius","getPieOptionTemplate","getTableHeaders","headers","obj","keys","_i","Header","accessor","TableWidget","_this$props$data","_this$props$drillThro","drillThrough","columns","header","d","columnName","Cell","href","es","defaultPageSize","previousText","nextText","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","column","instance","e","handleOriginal","drills","widgetDrillThrough","onChartClick","echarts","onChartLegendselectchanged","echart","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","widgetItem","EchartsApi","src_components_TableWidget","chartOption","echarts_for_react_lib_default","option","onEvents","styles","marginRight","components_GridDraggable","components_GridResizable","GridLayout","_this$props$widgets","widgets","showGridlines","backgroundSize","backgroundImage","boxItems","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","isResizeToBase","preGridWidth","gridWidth","newWidgets","resizeWidgetsToBase","resizeWidgetsToActual","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryWidgets","params","w","handleHeightChange","onHeightChange","onBackgroundColorChange","saveWidgets","stringify","widgetViewWidth","components_ColorPicker","src_components_GridLayout","Tabs","handleTabClick","activeTab","_this$props$children","tabHeaders","tabContent","active","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","jdbcDataSourceId","_result$data","sqlQuery","runQuery","_x","handleAceEditorChange","newValue","handleDataSourceChange","handleChartTypeChange","handleColumnChange","handleDrillColumnChange","drillColumnName","handleDrillDashboardChange","drillDashboardId","onSave","addDrillThrough","_this$state3","newDrills","removeDrillThrough","drill","generateChart","_this$state4","renderChartPreview","_this$state5","_this$state5$columns","columnOptions","col","chartPreview","class","queryResultItem","_this$state6","dataSourceOptions","chartOptionList","o","dashboardOptions","dash","drillItems","minRows","showPagination","columnItems","dataType","src_components_Tabs","react_ace_lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","FilterEditPanel","fetchFilter","handleTypeChange","useQuery","_this$state2$queryRes","typeOptions","t","DashboardEditView","loadViewByDashboardName","location","search","URLSearchParams","dashboardName","showFilterViewPanel","pageWidth","getPageWidth","isReadOnly","refresh","toggleAutoRefresh","autoRefreshTimerId","clearInterval","timerId","setInterval","refreshWidgetView","refreshFilterView","filterViewPanel","current","widgetViewPanel","now","Date","toTimeString","replace","lastRefreshed","dashboard","onSaveDashboard","cancelEdit","onSaveWidget","showWidgetEditPanel","onSaveFilter","showFilterEditPanel","toggleFilterViewPanel","resizePageLayout","openFilterEditPanel","filterEditPanel","openWidgetEditPanel","widgetEditPanel","fullScreen","window","open","onTableCellClick","objectSpread","jdbcDataSourceOptions","createRef","match","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","editButtonPanel","_this3","autoRefreshStatus","fullScreenButtonPanel","controlButtons","components_WidgetViewPanel","ref","src_components_FilterViewPanel","src_components_WidgetEditPanel","components_FilterEditPanel","Dashboard","fetchBoards","view","_this$state$dashboard","dashboardRows","Route","path","render","views_DashboardEditView","DashboardFullScreenView","dashboardEditView","wrappedComponentRef","comp","SYS_ROLES","User","handleOptionChange","fetchUsers","users","fetchGroups","groups","tempPassword","userGroups","initialEditPanelState","addUserGroup","userGroupId","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_this$state3$users","_this$state3$groups","_this$state3$userGrou","userItems","groupOptions","group","sysRoleOptions","groupName","userGroupItems","Group","fetchDashboards","groupDashboards","addGroupDashboard","groupDashboardId","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","MENU_ITEMS","link","UserManagement","handleMenuClick","menuLink","currentMenuLink","menuItems","menu","Link","to","Switch","component","Account","fetchUser","generateApiKey","confirmedPassword","alert","apiKey","Workspace","pathname","isAuthenticated","menuList","m","isAccountMenuActive","exact","src_components_Toast","PageNotFound","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","App","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.84784b46.chunk.js","sourcesContent":["\r\nclass AuthStore {\r\n\r\n  constructor() {\r\n    this._sysRole = '';\r\n    this._username = '';\r\n  }\r\n\r\n  set sysRole(sysRole) {\r\n    this._sysRole = sysRole;\r\n  }\r\n\r\n  get sysRole() {\r\n    return this._sysRole;\r\n  }\r\n\r\n  set username(username) {\r\n    this._username = username;\r\n  }\r\n\r\n  get username() {\r\n    return this._username;\r\n  }\r\n\r\n  get isAuthenticated() {\r\n    return true; // this._sysRole !== '';\r\n  }\r\n}\r\n\r\nexport default new AuthStore();","\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AuthStore from '../api/AuthStore';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tryLogin();\r\n  }\r\n\r\n  tryLogin = () => {\r\n    axios.post('/auth/login/cookie')\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  login = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password'\r\n      });\r\n      return;\r\n    }\r\n\r\n    AuthStore.username = 'testuser';\r\n    AuthStore.sysRole = 'developer';\r\n    this.props.history.push('/workspace/dashboard');\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div className=\"login-app-title\">Poli</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n              <label>Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} />\r\n            </div>\r\n            <button className=\"button login-button\" onClick={this.login}>Login</button>\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      modalClass = '',\r\n      title,\r\n      children\r\n    } = this.props;\r\n\r\n    const modalStatus = show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={`modal-panel ${modalClass}`}>\r\n          <div className=\"model-header row\">\r\n            <div className=\"model-title\">{title}</div>\r\n            <button className=\"model-close-button icon-button\" onClick={() => this.props.onClose()}>\r\n              <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          <div className='modal-body'>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Toast.css';\r\n\r\nclass Toast extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showToast: false,\r\n      message: ''\r\n    };\r\n\r\n    Toast._toastRef = this;\r\n  }\r\n\r\n  show = (message) => {\r\n    this.setState({ \r\n      showToast: true,\r\n      message: message\r\n    }, () => {\r\n      setTimeout(() => {\r\n        this.hide();\r\n      }, 3000);\r\n    });\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({ \r\n      showToast: false,\r\n      message: ''\r\n    });\r\n  }\r\n\r\n  static show = () => {\r\n    Toast._toastRef.show();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showToast,\r\n      message\r\n    } = this.state;\r\n\r\n    const toastStatus = showToast ? 'display-block' : 'display-none';\r\n\r\n    return (\r\n      <div className={`toast-container ${toastStatus}`}>\r\n        <button onClick={this.hide}>X</button>\r\n        <div>\r\n          {message}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toast;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport './Datasource.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      datasourceToDelete: {},\r\n      showUpdatePassword: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataSources();\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      driverClassName,\r\n      username,\r\n      password,\r\n      name,\r\n      ping,\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      driverClassName: driverClassName,\r\n      username: username,\r\n      name: name,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      // New\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } \r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      datasourceToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/jdbcdatasource/' + datasourceToDelete.id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        Toast.show('ping' + res.data);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        driverClassName: ds.driverClassName,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (datasource) => {\r\n    this.setState({\r\n      datasourceToDelete: datasource,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      datasourceToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  clearSearch = () => {\r\n    this.setState({\r\n      searchValue: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      showConfirmDeletionPanel,\r\n      searchValue,\r\n      id,\r\n      jdbcDataSources = [],\r\n      datasourceToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const jdbcDataSourceItems = [];\r\n    for (let i = 0; i < jdbcDataSources.length; i++) {\r\n      const ds = jdbcDataSources[i];\r\n      const name = ds.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        jdbcDataSourceItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {name}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.ping(ds.id)}>\r\n                  <FontAwesomeIcon icon=\"plug\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"searchValue\"\r\n          value={this.state.searchValue}\r\n          onChange={this.handleInputChange}\r\n          placeholder=\"Search...\"\r\n          style={{width: '200px'}}\r\n          />\r\n        <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n        <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n          <FontAwesomeIcon icon=\"plus\" /> New datasource\r\n        </button>\r\n        <div className=\"table-panel\">\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={mode} >\r\n\r\n          <div>\r\n            <label>Name <span className=\"required\">*</span></label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Connection Url</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label>Driver class name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"driverClassName\" \r\n              value={this.state.driverClassName}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            { mode === 'Edit' ? \r\n              (\r\n                <div style={{margin: '3px 0px 8px 0px'}}>\r\n                  <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n                </div>\r\n              ) : null\r\n            }\r\n            { mode === 'New' || showUpdatePassword ? \r\n              (\r\n                <div>\r\n                  <label>Password</label>\r\n                  <input \r\n                    type=\"password\" \r\n                    name=\"password\" \r\n                    value={this.state.password}\r\n                    onChange={this.handleInputChange} />\r\n                </div>\r\n              ) : null\r\n            }\r\n\r\n            <label className=\"mt-3\">Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {datasourceToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    const {\r\n      name,\r\n      checked\r\n    } = this.props;\r\n\r\n    this.props.onChange(name, !checked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      checked\r\n    } = this.props;\r\n\r\n    const checkmarkBoxBgColor = checked ? '#000000' : '#FFFFFF';\r\n    const checkmarkBoxStyle = {\r\n      backgroundColor: checkmarkBoxBgColor\r\n    };\r\n\r\n    return (\r\n      <div className=\"checkbox-container\" onClick={this.toggle}>\r\n        <div className=\"checkbox-checkmark\">\r\n          <div className=\"checkbox-checkmark-box\" style={checkmarkBoxStyle}>\r\n          </div>\r\n        </div>\r\n        <div className=\"checkbox-label\">{value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport Checkbox from './Checkbox';\r\nimport './Slicer.css';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n    searchValue: ''\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    if (searchValue) {\r\n      const result = [];\r\n      const { checkBoxes } = this.props;\r\n      for (let i = 0; i < checkBoxes.length; i++) {\r\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\r\n          result.push(checkBoxes[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n\r\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      checkBoxes = []\r\n    } = this.props;\r\n    const checkBoxItems = checkBoxes.map((box, index) => \r\n      <Checkbox \r\n        key={index} \r\n        name={box.value} \r\n        value={box.value} \r\n        checked={box.isChecked} \r\n        onChange={this.handleCheckBoxChange} \r\n      />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.toggleSelectAll}>Toggle Select All {this.state.isSelectAll}</button>\r\n        <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.searchValue}\r\n            onChange={this.handleSearchValueChange} \r\n          />\r\n        \r\n        <div className=\"slicer-body\">\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};\r\n","import React from 'react';\r\n\r\nclass NumberRange extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        min\r\n        <input type=\"number\" name=\"min\" />\r\n        max\r\n        <input type=\"number\" name=\"max\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberRange;","/**\r\n * Constants\r\n */\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\r\n\r\nexport const SYS_ROLE_ADMIN = 'admin';\r\nexport const SYS_ROLE_DEVELOPER = 'developer';\r\nexport const SYS_ROLE_VIEWER = 'viewer';\r\n\r\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;","import React, { Component } from 'react';\r\nimport Slicer from \"./Slicer\";\r\nimport NumberRange from \"./NumberRange\";\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './FilterViewPanel.css';\r\n\r\nclass FilterViewPanel extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      dashboardId: null,\r\n      filters: []\r\n    };\r\n  }\r\n\r\n  fetchFilters = (dashboardId) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      dashboardId: dashboardId\r\n    })\r\n\r\n    axios.get('/ws/filter/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          filters: result,\r\n        }, this.queryFilters);\r\n      });\r\n  }\r\n\r\n  queryFilters = () => {\r\n    const { filters } = this.state;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === Constants.SLICER) {\r\n        const queryRequest = filter.data;\r\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\r\n          .then(res => {\r\n            const result = res.data;\r\n            const queryResult = JSON.parse(result.data);\r\n\r\n            const index = filters.findIndex(f => f.id === result.id);\r\n            const newFilters = [...this.state.filters];\r\n            newFilters[index].queryResult = queryResult;\r\n            const type = newFilters[index].type;\r\n            if (type === Constants.SLICER) {\r\n              const checkBoxes = [];\r\n              if (!Util.isArrayEmpty(queryResult)) {\r\n                for (let i = 0; i < queryResult.length; i++) {\r\n                  const values = Object.values(queryResult[i]);\r\n                  for (const val of values) {\r\n                    checkBoxes.push({\r\n                      value: val,\r\n                      isChecked: false\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n\r\n              newFilters[index].checkBoxes = checkBoxes;\r\n            } else if (type === Constants.SINGLE_VALUE) {\r\n              const values = Object.values(queryResult);\r\n              let value = '';\r\n              for (const val of values) {\r\n                value = val;\r\n                break;\r\n              }\r\n              newFilters[index].value = value;\r\n            }\r\n\r\n            this.setState({\r\n              filters: newFilters\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderFilterPanel = () => {\r\n    const filterPanel = [];\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      let filterComponent = (<div>NONE</div>);\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        filterComponent = (\r\n          <Slicer \r\n            key={i} \r\n            filterId={filter.id} \r\n            checkBoxes={checkBoxes} \r\n            onChange={this.onSlicerChange} \r\n          />\r\n        );\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterComponent = (\r\n          <input \r\n            type=\"text\"  \r\n            value={filter.value}\r\n            onChange={(event) => this.onSingleValueChange(filter.id, event)} \r\n          />\r\n        );\r\n      }\r\n\r\n      filterPanel.push(\r\n          (\r\n            <div className=\"filter-card\">\r\n              <div className=\"filter-card-title\">\r\n                {filter.name}\r\n\r\n                { this.props.isEditMode ? \r\n                  (\r\n                    <div className=\"icon-button-group\">\r\n                      <div className=\"inline-block\" onClick={() => this.edit(filter.id)}>\r\n                        <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n                      </div>\r\n                      <div className=\"inline-block\" onClick={() => this.remove(filter.id)}>\r\n                        <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n                      </div>\r\n                    </div>\r\n                  ): null \r\n                }\r\n              </div>\r\n              <div>\r\n                {filterComponent}\r\n              </div>\r\n            </div>\r\n          )\r\n        );\r\n    }\r\n    return filterPanel;\r\n  }\r\n\r\n  edit = (filterId) => {\r\n    this.props.onEdit(filterId);\r\n  }\r\n\r\n  remove = (filterId) => {\r\n    axios.delete('/ws/filter/' + filterId)\r\n      .then(res => {\r\n        const index = this.state.filters.findIndex(f => f.id === filterId);\r\n        const newFilters = [...this.state.filters];\r\n        newFilters.splice(index, 1);\r\n        this.setState({\r\n          filters: newFilters\r\n        });\r\n      });\r\n  }\r\n\r\n  onSlicerChange = (filterId, checkBoxes) => {\r\n    const index = this.state.filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...this.state.filters];\r\n    newFilters[index].checkBoxes = [...checkBoxes];\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n\r\n    // TODO: select all.\r\n    // const isSelectAll = checked.length === checkBoxes.length;    \r\n  }\r\n\r\n  onSingleValueChange = (filterId, event) => {\r\n    const { filters } = this.state;\r\n    const value = event.target.value;\r\n    const index = filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...filters];\r\n    newFilters[index].value = value;\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n  }\r\n\r\n  applyFilters = () => {\r\n    const { filters } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      const filterParam = {};\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        const paramValues = [];\r\n        for (let j = 0; j < checkBoxes.length; j++) {\r\n          const checkBox = checkBoxes[j];\r\n          if (checkBox.isChecked) {\r\n            paramValues.push(checkBox.value);\r\n          }\r\n        }\r\n        filterParam.value = paramValues;\r\n        if (paramValues.length === checkBoxes.length) {\r\n          filterParam.remark = 'select all';\r\n        }\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterParam.value = filter.value;\r\n      }\r\n      filterParam.param = filter.data.param;\r\n      filterParam.type = filter.type;\r\n      filterParams.push(filterParam);\r\n    }\r\n\r\n    this.props.onApplyFilters(filterParams);\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n    const style = {};\r\n    if (show) {\r\n      style.width = Constants.DEFAULT_FILTER_VIEW_WIDTH + 'px';\r\n    } else {\r\n      style.width = '0px';\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-filter-panel\" style={style}>\r\n        <div>Filters</div>\r\n        <button className=\"button\" onClick={this.applyFilters}>Run</button>\r\n        <div className=\"filterViewPanel\">\r\n          {this.renderFilterPanel()}\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterViewPanel;","import React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPalette: false\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      showPalette: !prevState.showPalette\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      showPalette: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    const rgb = color.rgb;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    this.props.onChange(rgba);\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: this.props.value\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: '2'\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.showPalette ? \r\n          (\r\n            <div style={popover}>\r\n              <div style={cover} onClick={this.handleClose} />\r\n              <ChromePicker color={this.props.value} onChange={this.handleChange} />\r\n            </div>\r\n          ) : null }\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","import * as Util from '../api/Util';\r\n\r\nconst CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOptionTemplate = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      type: 'scroll',\r\n      orient: 'vertical',\r\n      data: legend,\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['40%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport const getPieOption = (queryResultData, pieKey, pieValue) => {\r\n  let legend = [];\r\n  let series = [];\r\n  for (let i = 0; i < queryResultData.length; i++) {\r\n    const row = queryResultData[i];\r\n    legend.push(row[pieKey]);\r\n    series.push({\r\n      name: row[pieKey],\r\n      value: row[pieValue]\r\n    });  \r\n  }\r\n  return getPieOptionTemplate(legend, series);\r\n}\r\n\r\nexport const getTableHeaders = (queryResultData) => {\r\n  const headers = [];\r\n  if (!Util.isArrayEmpty(queryResultData)) {\r\n    const obj = queryResultData[0];\r\n    const keys = Object.keys(obj);\r\n    for (const key of keys) {\r\n      headers.push({\r\n        Header: key,\r\n        accessor: key\r\n      })\r\n    }\r\n  }\r\n  return headers;\r\n}\r\n","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport './TableWidget.css';\r\n\r\nclass TableWidget extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  render() {   \r\n    const {\r\n      data = [],\r\n      drillThrough = []\r\n    } = this.props;\r\n\r\n    const columns = [];\r\n    if (data.length > 0) {\r\n      const obj = data[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        const header = {\r\n          Header: key,\r\n          accessor: key\r\n        };\r\n        \r\n        if (drillThrough.length > 0) {\r\n          const index = drillThrough.findIndex(d => d.columnName === key);\r\n          if (index !== -1) {\r\n            const dashboardId = drillThrough[index].dashboardId;\r\n            header.Cell = (props => <a href={`/poli/workspace/dashboard/${dashboardId}?${key}=${props.value}`}>{props.value}</a>);\r\n          }\r\n        }\r\n\r\n        columns.push(header);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <ReactTable\r\n        data={data}\r\n        columns={columns}\r\n        defaultPageSize={10}\r\n        previousText={'Prev'}\r\n        nextText={'Next'}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableWidget;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport TableWidget from './TableWidget';\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        if (!Util.isArrayEmpty(drills)) {\r\n          const index = drills.findIndex(d => d.columnName === header);\r\n          if (index !== -1) {\r\n            const dashboardId = drills[index].dashboardId;\r\n            this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      chartType,\r\n      queryResultData,\r\n      drillThrough\r\n    } = this.props;\r\n    let widgetItem = (<div></div>);\r\n    if (chartType === Constants.TABLE) {\r\n      const headers = EchartsApi.getTableHeaders(queryResultData);\r\n      widgetItem = (\r\n        <TableWidget\r\n          data={queryResultData}\r\n          drillThrough={drillThrough}\r\n        />\r\n      );\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        pieKey,\r\n        pieValue\r\n      } = this.props.data;\r\n      if (!Util.isArrayEmpty(queryResultData)) {\r\n        const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\r\n        widgetItem = (\r\n          <ReactEcharts \r\n            option={chartOption}   \r\n            className=\"echarts\"\r\n            onEvents={onChartEvents}  />\r\n        );\r\n      }\r\n      \r\n    } \r\n\r\n    /*\r\n    <ReactTable\r\n          data={queryResultData}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n          getTdProps={this.onTableTdPropsChange}\r\n          widgetDrillThrough={drillThrough}  \r\n        />\r\n        */\r\n\r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    let styles = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: 1\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {this.props.name}\r\n\r\n          { this.props.isEditMode ? (\r\n            <div className=\"float-right\" style={{marginRight: '20px'}}>\r\n              <div className=\"inline-block\" onClick={() => this.editWidget(this.props.id)}>\r\n                <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n              </div>\r\n              <div className=\"inline-block\" onClick={() => this.removeWidget(this.props.id)}>\r\n                <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid-box-file-button-group\">\r\n              <div className=\"inline-block\" onClick={() => this.exportJson(this.props.id)}>\r\n                <FontAwesomeIcon icon=\"file-export\" fixedWidth />\r\n              </div>\r\n              \r\n              <div className=\"inline-block\" onClick={() => this.exportCsv(this.props.id)}>\r\n                <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { this.props.isEditMode ? (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} />\r\n        ): null}\r\n\r\n        { this.props.isEditMode ? (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} />\r\n        ): null}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(GridItem);","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      backgroundColor,\r\n      widgets = [],\r\n      showGridlines\r\n    } = this.props;\r\n\r\n    let style = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      backgroundColor: backgroundColor\r\n    };\r\n\r\n    if (showGridlines) {\r\n      style.backgroundSize = '15px 15px';\r\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={style} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport ColorPicker from './ColorPicker';\r\nimport Checkbox from './Checkbox';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\n\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      snapToGrid: false,\r\n      showGridlines: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  resizeGrid = (width, isResizeToBase) => {\r\n    const preGridWidth = this.state.gridWidth;\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n    if (isResizeToBase) {\r\n      this.resizeWidgetsToBase(newWidgets, preGridWidth);\r\n    }\r\n\r\n    const gridWidth = width - 10;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return Math.round(num * gridWidth / BASE_WIDTH);\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Math.round(num * BASE_WIDTH / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, width, filterParams) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get('/ws/widget/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(width, false);\r\n          this.queryWidgets(filterParams);\r\n        });\r\n      });\r\n  }\r\n\r\n  queryWidgets = (filterParams) => {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      axios.post('/ws/jdbcquery/widget/' + widget.id, params)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const index = widgets.findIndex(w => w.id === result.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResultData = JSON.parse(result.data);\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    this.setState({\r\n      [name]: isChecked\r\n    });\r\n  }\r\n\r\n  handleHeightChange = (event) => {\r\n    this.props.onHeightChange(event.target.value);\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    this.props.onBackgroundColorChange(color);\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });\r\n  }\r\n\r\n  onWidgetRemove = (widgetId) => {\r\n    axios.delete('/ws/widget/' + widgetId)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { widgetViewWidth } = this.props;\r\n    const style = {\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {this.props.isEditMode ?\r\n        (\r\n          <div className=\"dashboard-attribute-edit-panel\">\r\n            <div className=\"inline-block\">Height:</div>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.props.height}\r\n              onChange={this.handleHeightChange} \r\n              className=\"inline-block\" \r\n              style={{width: '200px'}}\r\n              />\r\n\r\n            <div className=\"inline-block\">Background Color</div>\r\n            <ColorPicker value={this.props.backgroundColor} onChange={this.onBackgroundColorChange} />\r\n\r\n            <Checkbox name=\"snapToGrid\" value=\"Snap to grid\" checked={this.state.snapToGrid} onChange={this.handleCheckBoxChange} />\r\n            <Checkbox name=\"showGridlines\" value=\"Show gridlines\" checked={this.state.showGridlines} onChange={this.handleCheckBoxChange} />\r\n  \r\n          </div>\r\n        ) : null}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          backgroundColor={this.props.backgroundColor}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.onWidgetRemove} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","import React from 'react';\r\nimport './Tabs.css';\r\n\r\nclass Tabs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const activeTab = this.props.activeTab;\r\n    this.setState({\r\n      activeTab: activeTab\r\n    });\r\n  }\r\n\r\n  handleTabClick = (title) => {\r\n    this.setState({\r\n      activeTab: title\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children = []\r\n    } = this.props;\r\n\r\n    const {\r\n      activeTab\r\n    } = this.state;\r\n\r\n    const tabHeaders = [];\r\n    let tabContent = null;\r\n    for (let i = 0; i < children.length; i++) {\r\n      const title = children[i].props.title;\r\n      let active = '';\r\n      if (title === activeTab) {\r\n        active = 'tab-header-active';\r\n        tabContent = children[i].props.children;\r\n      }\r\n      \r\n      tabHeaders.push(\r\n        <li className={`tab-header-item ${active}`} key={i} onClick={() => this.handleTabClick(title)}>{title}</li>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"tab-container\">\r\n        <ul className=\"tab-header\">\r\n          {tabHeaders}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {tabContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n\r\n","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nimport './WidgetEditPanel.css';\r\n\r\nimport Tabs from '../components/Tabs';\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      name: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      columns: [],\r\n      queryResultData: [],\r\n      chartType: Constants.TABLE,\r\n      pieKey: '',\r\n      pieValue: '',\r\n      chartOption: {},\r\n      drills: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId, dashboardId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    const filters = await webApi.fetchFiltersByDashboardId(dashboardId);\r\n    this.setState({ \r\n      filters: filters \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n\r\n      if (filters.length !== 0) {\r\n        this.setState({\r\n          filterId: filters[0].id\r\n        });\r\n      }\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { chartType } = result;\r\n          if (chartType === Constants.PIE) {\r\n            const {\r\n              pieKey,\r\n              pieValue\r\n            } = result.data;\r\n            this.setState({\r\n              pieKey: pieKey,\r\n              pieValue: pieValue\r\n            });\r\n          }\r\n\r\n          this.setState({\r\n            widgetId: widgetId,\r\n            name: result.name,\r\n            x: result.x,\r\n            y: result.y,\r\n            width: result.width,\r\n            height: result.height,\r\n            sqlQuery: result.sqlQuery,\r\n            chartType: result.chartType,\r\n            jdbcDataSourceId: result.jdbcDataSourceId,\r\n            drills: result.drillThrough\r\n          }, () => {\r\n            this.runQuery();\r\n          });\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    const jdbcDataSourceId = parseInt(event.target.value, 10);\r\n    this.setState({ \r\n      jdbcDataSourceId: jdbcDataSourceId\r\n    });\r\n  }\r\n\r\n  handleChartTypeChange = (event) => {\r\n    this.setState({ \r\n      chartType: event.target.value\r\n    });\r\n  }\r\n\r\n  handleColumnChange = (name, event) => {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleDrillColumnChange = (event) => {\r\n    this.setState({ \r\n      drillColumnName: event.target.value\r\n    });\r\n  }\r\n\r\n  handleDrillDashboardChange = (event) => {\r\n    const drillDashboardId = parseInt(event.target.value, 10);\r\n    this.setState({ \r\n      drillDashboardId: drillDashboardId\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      widgetId,\r\n      name,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      chartType,\r\n      drills\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    const widget = {\r\n      name: name,\r\n      dashboardId: this.props.dashboardId,\r\n      chartType: chartType,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      drillThrough: drills\r\n    }\r\n\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const {\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n      widget.data = {\r\n        pieKey: pieKey,\r\n        pieValue: pieValue\r\n      }\r\n    }\r\n\r\n    if (widgetId === null) {\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const columns = result.columns;\r\n        const data = JSON.parse(result.data);\r\n        this.setState({\r\n          queryResultData: data,\r\n          columns: columns \r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = () => {\r\n    const { \r\n      drills,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const filterId = this.state.filterId;\r\n    const index = drills.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill) => {\r\n    const { drills } = this.state;\r\n    const index = drills.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.splice(index, 1);\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = () => {\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        pieKey, \r\n        pieValue, \r\n        queryResultData \r\n      } = this.state;\r\n      if (!Util.isArrayEmpty(queryResultData)) {\r\n        const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\r\n        this.setState({\r\n          chartOption: chartOption\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      columns = [],\r\n    } = this.state;\r\n    const columnOptions = columns.map(col =>\r\n      <option value={col.name} key={col.name}>{col.name}</option>\r\n    );\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      chartPreview = (\r\n        <div>\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label>Aggr Key (string)</label>\r\n          <select value={this.state.pieKey} onChange={(event) => this.handleColumnChange('pieKey', event)}>\r\n            {columnOptions}\r\n          </select>\r\n\r\n          <label>By Aggr Value (number)</label>\r\n          <select value={this.state.pieValue} onChange={(event) => this.handleColumnChange('pieValue', event)}>\r\n            {columnOptions}\r\n          </select>\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={this.state.chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      columns,\r\n      queryResultData,\r\n      jdbcDataSources,\r\n      drills,\r\n      drillDashboards\r\n    } = this.state;\r\n\r\n    const dataSourceOptions = (jdbcDataSources || []).map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const columnOptions = (columns || []).map(col =>\r\n      <option value={col.name} key={col.name}>{col.name}</option>\r\n    );\r\n\r\n    const chartOptionList = Constants.CHART_TYPES.map(o =>\r\n      <option value={o} key={o}>{o}</option>\r\n    );\r\n\r\n    const dashboardOptions = (drillDashboards || []).map(dash =>\r\n      <option value={dash.id} key={dash.id}>{dash.name}</option>\r\n    );\r\n\r\n    const drillItems = (drills || []).map(drill =>\r\n      <div key={drill.columnName}>\r\n        <div>Column: {drill.columnName}</div>\r\n        <div>Dashboard: {drill.dashboardId}</div>\r\n        <button onClick={() => this.removeDrillThrough(drill)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const headers = [];\r\n    let queryResultItem;\r\n    if (!Util.isArrayEmpty(queryResultData)) {\r\n      const obj = queryResultData[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        });\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={queryResultData}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResultData}</div>\r\n      );\r\n    }\r\n\r\n    const columnItems = (columns || []).map(col =>\r\n      <div key={col.name}>{col.name} {col.dataType}</div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        \r\n        <div className=\"form-panel\">\r\n          <Tabs activeTab=\"basic\">\r\n            <div title=\"basic\">\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} \r\n              />\r\n            </div>\r\n\r\n            <div title=\"Query\">\r\n              <label>DataSource</label>\r\n              <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n                {dataSourceOptions}\r\n              </select>\r\n            \r\n              <label>SQL Query</label>\r\n              <AceEditor\r\n                style={{ marginTop: '8px' }}\r\n                value={this.state.sqlQuery}\r\n                mode=\"mysql\"\r\n                theme=\"xcode\"\r\n                name=\"blah2\"\r\n                onChange={this.handleAceEditorChange}\r\n                height={'300px'}\r\n                width={'100%'}\r\n                fontSize={15}\r\n                showPrintMargin={false}\r\n                showGutter={true}\r\n                highlightActiveLine={true}\r\n                setOptions={{\r\n                  showLineNumbers: true,\r\n                  tabSize: 2\r\n                }}\r\n              />\r\n\r\n              <button className=\"button\" onClick={this.runQuery}>Run Query</button>\r\n\r\n              <label>Result</label>\r\n              {queryResultItem}\r\n\r\n              <label>Columns Mapping</label>\r\n              <div>\r\n                {columnItems}\r\n              </div>\r\n            </div>\r\n\r\n            <div title=\"Chart\">\r\n              <label>Chart Options</label>\r\n              <select value={this.state.chartType} onChange={this.handleChartTypeChange}>\r\n                {chartOptionList}\r\n              </select>\r\n\r\n              <label>Preview</label>\r\n              {this.renderChartPreview()}  \r\n            </div>\r\n\r\n            <div title=\"Drill through\">\r\n              <label>Drill through</label>\r\n              <label>Column</label>\r\n              <select value={this.state.drillColumnName} onChange={this.handleDrillColumnChange}>\r\n                {columnOptions}\r\n              </select>\r\n              <label>Dashboard</label>\r\n              <select value={this.state.drillDashboardId} onChange={this.handleDrillDashboardChange}>\r\n                {dashboardOptions}\r\n              </select>\r\n              <div>\r\n                {drillItems}\r\n              </div>\r\n              <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\r\n            </div>\r\n          </Tabs>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","import React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nclass FilterEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      filterId: null,\r\n      name: '',\r\n      type: Constants.SLICER,\r\n      data: {},\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: [],\r\n      param: '',\r\n    };\r\n  }\r\n\r\n  fetchFilter = async (filterId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    if (filterId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n      this.setState({\r\n        filterId: null\r\n      })\r\n    } else {\r\n      axios.get('/ws/filter/' + filterId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { \r\n            data,\r\n            type\r\n          } = result;\r\n          this.setState({\r\n            filterId: filterId,\r\n            name: result.name,\r\n            type: result.type,\r\n            data: data\r\n          });\r\n\r\n          if (type === Constants.SLICER) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          } else if (type === Constants.SINGLE_VALUE) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          }\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    this.setState({ \r\n      jdbcDataSourceId: event.target.value\r\n    });\r\n  }\r\n\r\n  handleTypeChange = (event) => {\r\n    this.setState({ \r\n      type: event.target.value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      filterId,\r\n      name,\r\n      type,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      param\r\n    } = this.state;\r\n\r\n    const filter = {\r\n      name: name,\r\n      type: type,\r\n      dashboardId: this.props.dashboardId\r\n    };\r\n\r\n    if (type === Constants.SLICER) {\r\n      filter.data = {\r\n        jdbcDataSourceId: jdbcDataSourceId,\r\n        sqlQuery: sqlQuery,\r\n        param: param\r\n      }\r\n    } else if (type === Constants.SINGLE_VALUE) {\r\n      filter.data = {\r\n        useQuery: false,\r\n        jdbcDataSourceId: jdbcDataSourceId,\r\n        sqlQuery: sqlQuery,\r\n        param: param,\r\n      }\r\n    }\r\n\r\n    if (filterId === null) {\r\n      axios.post('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      filter.id = filterId;\r\n      axios.put('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { \r\n      queryResult = [],\r\n      jdbcDataSources = [],\r\n    } = this.state;\r\n\r\n    const dataSourceOptions = jdbcDataSources.map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const typeOptions = Constants.FILTER_TYPES.map(t =>\r\n      <option value={t} key={t}>{t}</option>\r\n    );\r\n\r\n    const headers = [];\r\n    let queryResultItem;\r\n    if (!Util.isArrayEmpty(queryResult)) {\r\n      console.log('queryResult', queryResult);\r\n      const obj = queryResult[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        })\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={this.state.queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResult}</div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        <button className=\"button\" onClick={this.runQuery}>Run</button>\r\n\r\n        <div className=\"form-panel\">\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>Type</label>\r\n          <select value={this.state.type} onChange={this.handleTypeChange}>\r\n            {typeOptions}\r\n          </select>\r\n\r\n          <label>DataSource</label>\r\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n            {dataSourceOptions}\r\n          </select>\r\n        \r\n          <label>SQL Query</label>\r\n          <AceEditor\r\n            style={{ marginTop: '8px' }}\r\n            value={this.state.sqlQuery}\r\n            mode=\"mysql\"\r\n            theme=\"xcode\"\r\n            name=\"blah2\"\r\n            onChange={this.handleAceEditorChange}\r\n            height={'300px'}\r\n            width={'100%'}\r\n            fontSize={15}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              showLineNumbers: true,\r\n              tabSize: 2\r\n            }}\r\n          />\r\n\r\n          <label>Result</label>\r\n          {queryResultItem}\r\n\r\n          <label>Param</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"param\" \r\n            value={this.state.param}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport FilterViewPanel from '../components/FilterViewPanel';\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\nimport FilterEditPanel from '../components/FilterEditPanel';\r\n\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showFilterEditPanel: false,\r\n      showFilterViewPanel: true,\r\n      isEditMode: false,\r\n      isReadOnly: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      style: {},\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.filterViewPanel = React.createRef();\r\n    this.filterEditPanel = React.createRef();\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    console.log('DashboardEditView', dashboardId);\r\n\r\n    const url = this.props.location.search;\r\n    console.log('url', url);\r\n    const params = new URLSearchParams(url);\r\n    console.log('params', params);\r\n    for(let pair of params.entries()) {\r\n      console.log(pair[0]+ ', '+ pair[1]); \r\n    } \r\n\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = this.state.showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    console.log('componentDidMount', pageWidth, widgetViewWidth);\r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const result = res.data;\r\n            this.setState({\r\n              dashboardId: result.id,\r\n              name: result.name,\r\n              style: result.style\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = () => {\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    const dashboardName = params.get('name');\r\n    const showFilter = params.get('showFilter');\r\n\r\n    const showFilterViewPanel = showFilter == 'true';\r\n\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    \r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth,\r\n      isReadOnly: true,\r\n      name: dashboardName,\r\n      showFilterViewPanel: showFilterViewPanel\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            style: result.style\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth - 40;\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const timerId = setInterval(() => {\r\n        this.refreshWidgetView();\r\n      }, 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    console.log('refresh');\r\n    this.refreshWidgetView();\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  refreshFilterView = () => {\r\n    const { \r\n      dashboardId\r\n    } = this.state;\r\n    this.filterViewPanel.current.fetchFilters(dashboardId);\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n\r\n    const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\r\n    this.setState({\r\n      lastRefreshed: now\r\n    });\r\n  } \r\n\r\n  save = () => {\r\n    console.log('save');\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      style\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      style: style\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.widgetViewPanel.current.saveWidgets();\r\n\r\n    this.props.onSaveDashboard(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  delete = () => {\r\n    const { dashboardId } = this.state;\r\n    console.log('delete', dashboardId);\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        //this.fetchBoards();\r\n      });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  onSaveFilter = () => {\r\n    this.setState({ \r\n      showFilterEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  toggleFilterViewPanel = () => {\r\n    const { \r\n      showFilterViewPanel\r\n    } = this.state;\r\n    this.resizePageLayout(!showFilterViewPanel);\r\n  }\r\n\r\n  resizePageLayout = (showFilterViewPanel) => {\r\n    const pageWidth = this.getPageWidth();;\r\n    let widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    this.widgetViewPanel.current.resizeGrid(widgetViewWidth, true);\r\n\r\n    this.setState({\r\n      showFilterViewPanel: showFilterViewPanel,\r\n      widgetViewWidth: widgetViewWidth\r\n    }); \r\n  }\r\n\r\n  openFilterEditPanel = (filterId) => {\r\n    this.filterEditPanel.current.fetchFilter(filterId);\r\n    this.setState({\r\n      showFilterEditPanel: true\r\n    });\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    const { dashboardId } = this.state;\r\n    this.widgetEditPanel.current.fetchWidget(widgetId, dashboardId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/workspace/dashboard/view?name=${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onTableCellClick = () => {\r\n    this.props.history.push(`/workspace/dashboard/drill?name=&`);\r\n  }\r\n\r\n  onHeightChange = (height) => {\r\n    const style = {...this.state.style};\r\n    style.height = height;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    const style = {...this.state.style};\r\n    style.backgroundColor = color;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      lastRefreshed,\r\n      isEditMode,\r\n      isReadOnly\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel = null;\r\n    const controlButtons = (\r\n      <React.Fragment>\r\n        <span className=\"mr-3\">Last refreshed: {lastRefreshed}</span>\r\n        <button className=\"button square-button mr-3\" onClick={this.toggleAutoRefresh}>\r\n          {\r\n            autoRefreshStatus === 'ON' ? \r\n            (\r\n              <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\r\n            ) : \r\n            (\r\n              <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\r\n            )\r\n          }\r\n        </button>\r\n        <button className=\"button square-button mr-3\" onClick={this.refresh}>\r\n          <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\r\n        </button>\r\n        <button className=\"button mr-3\" onClick={this.toggleFilterViewPanel}>Show Filters</button>\r\n      </React.Fragment>\r\n    );\r\n\r\n    if (!isReadOnly) {\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button mr-3\" onClick={this.cancelEdit}>Cancel</button>\r\n            <button className=\"button mr-3\" onClick={this.save}>Save</button>\r\n            <button className=\"button mr-3\" onClick={this.delete}>Delete</button>\r\n            <button className=\"button mr-3\" onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\r\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            {controlButtons}\r\n            <button className=\"button square-button mr-3\" onClick={this.fullScreen}>\r\n              <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={this.edit}>Edit</button>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      fullScreenButtonPanel = controlButtons;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-menu-panel row\">\r\n          <div className=\"float-left\">\r\n            {\r\n              isReadOnly || !isEditMode ?\r\n              (\r\n                <div className=\"dashboard-name\">\r\n                  {this.state.name}\r\n                </div>\r\n              ) :(\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"name\" \r\n                  value={this.state.name}\r\n                  onChange={this.handleInputChange} \r\n                  className=\"dashboard-name\"\r\n                  />\r\n              )\r\n            }\r\n            \r\n          </div>\r\n          <div className=\"float-right\">\r\n            {fullScreenButtonPanel}\r\n            {editButtonPanel}\r\n          </div>\r\n        </div>\r\n\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          isEditMode={this.state.isEditMode}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          onHeightChange={this.onHeightChange}\r\n          onBackgroundColorChange={this.onBackgroundColorChange}\r\n          {...this.state.style}\r\n        />\r\n        <FilterViewPanel \r\n          ref={this.filterViewPanel} \r\n          onEdit={this.openFilterEditPanel}\r\n          onApplyFilters={this.applyFilters}\r\n          isEditMode={this.state.isEditMode}\r\n          show={this.state.showFilterViewPanel}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'dashboard-edit-widget-dialog'} \r\n          title={'Widget Edit'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showFilterEditPanel}\r\n          onClose={() => this.setState({ showFilterEditPanel: false })}\r\n          modalClass={'dashboard-edit-filter-dialog'} \r\n          title={'Filter Edit'}>\r\n          <FilterEditPanel\r\n            ref={this.filterEditPanel}\r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveFilter}\r\n          />\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\nimport './Dashboard.css';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as Constants from '../api/Constants';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false,\r\n      name: ''\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      style: {\r\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\r\n        backgroundColor: 'rgba(233, 235, 238, 1)'\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.closeEditPanel();\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n  }\r\n\r\n  onSaveDashboard = (dashboardId) => {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dashboards = []\r\n    } = this.state;\r\n    \r\n    const dashboardRows = dashboards.map((d, index) => \r\n      <div key={index} className=\"dashboard-menu-item ellipsis\" onClick={() => this.view(d.id)}>\r\n        {d.name}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dashboard-sidebar\">\r\n          <div style={{margin: '5px'}}>\r\n            <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\r\n              <FontAwesomeIcon icon=\"plus\" /> New dashboard\r\n            </button>\r\n            <input \r\n              type=\"text\" \r\n              name=\"searchValue\" \r\n              value={this.state.searchValue}\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleInputChange} />\r\n          </div>\r\n          <div>\r\n            {dashboardRows}\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route \r\n            path=\"/workspace/dashboard/:id\" \r\n            render={(props) => <DashboardEditView key={props.match.params.id} onSaveDashboard={this.onSaveDashboard} />} \r\n            />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'small-modal-panel'} \r\n          title={'New'} >\r\n          <div>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              />\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.dashboardEditView.loadViewByDashboardName();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView wrappedComponentRef={comp => (this.dashboardEditView = comp)} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\n\r\nconst SYS_ROLES = ['developer', 'viewer'];\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      searchValue: '',\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, event) => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      this.setState({\r\n        id: user.id,\r\n        username: user.username,\r\n        name: user.name,\r\n        tempPassword: '',\r\n        sysRole: user.sysRole,\r\n        userGroups: user.userGroups\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  search = () => {\r\n    const { searchValue } = this.state;\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: sysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/user/' + id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n      });\r\n  }\r\n\r\n  addUserGroup = (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId, event) => {\r\n    event.preventDefault();\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      users = [],\r\n      groups = [],\r\n      userGroups = []\r\n    } = this.state;\r\n\r\n    const userItems = users.map(user => \r\n      <div key={user.id} className=\"user-card\">\r\n        <p>\r\n          {user.username}\r\n          {user.name}\r\n          {user.sysRole}\r\n          <button onClick={() => this.openEditPanel(user)}>update</button>\r\n          <button onClick={() => this.delete(user.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupOptions = groups.map(group => \r\n      <option value={group.id} key={group.id}>{group.name}</option>\r\n    );\r\n\r\n    const sysRoleOptions = SYS_ROLES.map(groupName => \r\n      <option value={groupName} key={groupName}>{groupName}</option>\r\n    );\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId}>\r\n                <div>Group: {groups[j].name}</div>\r\n                <button onClick={(event) => this.removeUserGroup(groupId, event)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>User</div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Username...\"\r\n          />\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Group...\"\r\n          />\r\n        <button onClick={this.search}>Search</button>\r\n        <div className=\"row\">\r\n          {userItems}\r\n        </div>\r\n        <button onClick={() => this.openEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'lg-modal-panel'} \r\n          title={'User'} >\r\n\r\n          <div>\r\n            <h3>{'User'}</h3>\r\n            <form>\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Temp password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"tempPassword\" \r\n                value={this.state.tempPassword}\r\n                onChange={this.handleInputChange} />\r\n              \r\n              <label>System Role</label>\r\n              <select value={this.state.sysRole} onChange={(event) => this.handleOptionChange('sysRole', event)}>\r\n                {sysRoleOptions}\r\n              </select>\r\n              <br/>\r\n              \r\n              <label>Groups</label>\r\n              <select value={this.state.userGroupId} onChange={(event) => this.handleOptionChange('userGroupId', event)}>\r\n                {groupOptions}\r\n              </select>\r\n              <button onClick={this.addUserGroup}>Add</button>\r\n              <div>\r\n                {userGroupItems}\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, event) => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      this.setState({\r\n        id: group.id,\r\n        name: group.name,\r\n        groupDashboards: group.groupDashboards\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/group/' + id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n      });\r\n  }\r\n\r\n  addGroupDashboard= (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n    if (index === -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.push(groupDashboardId);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId, event) => {\r\n    event.preventDefault();\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    const dashboardOptions = dashboards.map(dash => \r\n      <option value={dash.id} key={dash.id}>{dash.name}</option>\r\n    );\r\n\r\n    const groupItems = groups.map(group => \r\n      <div key={group.id} className=\"group-card\">\r\n        <p>\r\n          {group.name}\r\n          <button onClick={() => this.openEditPanel(group)}>update</button>\r\n          <button onClick={() => this.delete(group.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId}>\r\n                <div>Name: {dashboards[j].name}</div>\r\n                <button onClick={(event) => this.removeGroupDashboard(dashboardId, event)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Group</h1>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Group...\"\r\n          />\r\n        <button onClick={this.search}>Search</button>\r\n        <div className=\"row\">\r\n          {groupItems}\r\n        </div>\r\n        <button onClick={() => this.openEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'lg-modal-panel'} \r\n          title={'Group'} >\r\n\r\n          <div>\r\n            <h3>{'Group'}</h3>\r\n            <form>\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n              \r\n              <label>Dashboards</label>\r\n              <select value={this.state.groupDashboardId} onChange={(event) => this.handleOptionChange('groupDashboardId', event)}>\r\n                {dashboardOptions}\r\n              </select>\r\n              <button onClick={this.addGroupDashboard}>Add</button>\r\n              <div>\r\n                {groupDashboardItems}\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\nimport { Route, Link, Switch } from \"react-router-dom\";\r\nimport User from './User';\r\nimport Group from './Group';\r\nimport './UserManagement.css';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/user-management/user',\r\n    value: 'User',\r\n    icon: 'fa-users'\r\n  }, \r\n  {\r\n    link: '/workspace/user-management/group',\r\n    value: 'Group',\r\n    icon: 'fa-user-cog',\r\n  }\r\n];\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: 'group',\r\n    }\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let menuItems = [];\r\n    for (let i = 0; i < MENU_ITEMS.length; i++) {\r\n      const menu = MENU_ITEMS[i];\r\n      const active = this.state.currentMenuLink === menu.link ? 'active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li className={active} key={i}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <i className={`fas ${menu.icon} fa-fw`}></i>\r\n              <span className=\"app-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <ul className=\"nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/workspace/user-management/user\" component={User} />\r\n            <Route path=\"/workspace/user-management/group\" component={Group} />\r\n          </Switch>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        alert('confirm password');\r\n        return;\r\n      }\r\n      \r\n      user.password = password;\r\n    }\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>Account</div>\r\n        <div className=\"form-panel\">   \r\n          <label>Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label>System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label>API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button className=\"button\" onClick={this.generateApiKey}>Generate new API Key</button>\r\n          <br/>\r\n\r\n          <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n          {\r\n            showUpdatePassword ?\r\n            (\r\n              <React.Fragment>\r\n                <br/>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label>Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n            ) : null\r\n          }\r\n\r\n          <br/>\r\n          <button className=\"button\" onClick={this.save}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","import React from 'react';\r\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\n\r\nimport Toast from '../components/Toast';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport AuthStore from '../api/AuthStore';\r\nimport './Workspace.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data source',\r\n    icon: 'database'\r\n  }, \r\n  {\r\n    link: '/workspace/user-management',\r\n    value: 'User Management',\r\n    icon: 'users-cog'\r\n  }\r\n];\r\n\r\nconst ACCOUNT_MENU_LINK = '/workspace/account';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard',\r\n      username: '',\r\n      sysRole: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Workspace - componentDidMount');\r\n    const pathname = this.props.location.pathname;\r\n    // TODO: fetch user information\r\n    this.setState({\r\n      currentMenuLink: pathname,\r\n    });\r\n    if (AuthStore.isAuthenticated) {\r\n      const sysRole = AuthStore.sysRole;\r\n      this.setState({\r\n        sysRole: sysRole\r\n      });\r\n    } else {\r\n      // Try login. If not, redirect\r\n    }\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n      sysRole\r\n    } = this.state;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.name === 'dashboard' || m.name === 'account');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li key={menu.link} className={active}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"workspace-nav\">  \r\n          <div className=\"workspace-name\">Poli</div>\r\n          <ul className=\"workspace-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div className=\"workspace-account-menu\">\r\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\r\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\r\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\r\n                <span className=\"workspace-nav-menu-text\">Account</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"workspace-logout-button inline-block\">\r\n              <Link to=\"/login\">\r\n                <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"workspace-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route exact path=\"/workspace/dashboard/view\" component={DashboardFullScreenView} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n            <Route path=\"/workspace/dashboard\" component={Dashboard} />\r\n            <Route path=\"/workspace/user-management\" component={UserManagement} />\r\n          </Switch>\r\n        </div>\r\n        <Toast />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Workspace);\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, Component } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\n\r\nimport AuthStore from './api/AuthStore';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv\r\n} from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('App - componentDidMount', AuthStore.isAuthenticated);\r\n  }\r\n   \r\n  render() {\r\n    console.log('App - render', AuthStore.isAuthenticated);\r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <PrivateRoute authenticated={AuthStore.isAuthenticated} path='/workspace' component={Workspace} />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} />\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}