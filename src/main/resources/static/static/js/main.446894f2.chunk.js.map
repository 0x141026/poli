{"version":3,"sources":["api/AuthStore.js","views/Login.js","api/WebApi.js","components/Modal.js","views/DataSource.js","components/Slicer.js","api/Util.js","components/NumberRange.js","api/Constants.js","components/FilterViewPanel.js","components/ColorPicker.js","components/GridDraggable.js","components/Checkbox.js","components/GridResizable.js","api/EchartsApi.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/DashboardFullScreenView.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["api_AuthStore","AuthStore","Object","classCallCheck","this","_sysRole","_username","sysRole","username","Login","props","_this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","tryLogin","axios","post","then","res","data","login","preventDefault","_this$state","state","password","user","history","push","errorMsg","react_default","a","createElement","Fragment","className","type","onChange","onClick","React","Component","withRouter","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","fetchFiltersByDashboardId","_ref3","_callee3","dashboardId","_context3","concat","_x2","_ref4","_callee4","url","_context4","_x3","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","onClose","index_es","icon","DataSource","save","showUpdatePassword","id","connectionUrl","ds","ping","put","closeEditPanel","delete","console","log","clearEditPanel","initialState","openEditPanel","showEditPanel","openDeletePanel","toggleUpdatePassword","prevState","jdbcDataSources","webApi","mode","_this2","_this$state2","_this$state2$jdbcData","jdbcDataSourceItems","map","index","key","fixedWidth","passwordInput","placeholder","src_components_Modal","rows","Slicer","isSelectAll","searchValue","handleChange","isChecked","checked","newCheckBoxes","toConsumableArray","checkBoxes","findIndex","x","filterId","toggleSelectAll","newIsSelectAll","i","length","handleSearchValueChange","result","indexOf","checkBoxItems","undefined","box","isArrayEmpty","array","Array","isArray","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","DEFAULT_FILTER_VIEW_WIDTH","DEFAULT_DASHBOARD_HEIGHT","FilterViewPanel","fetchFilters","filters","queryFilters","filter","Constants","queryRequest","queryResult","JSON","parse","f","newFilters","Util","_arr","values","_i2","val","_arr2","_i3","renderFilterPanel","filterPanel","_loop","filterComponent","components_Slicer","onSlicerChange","onSingleValueChange","isEditMode","edit","remove","onEdit","splice","applyFilters","filterParams","filterParam","paramValues","j","checkBox","remark","param","onApplyFilters","style","width","ColorPicker","handleClick","showPalette","handleClose","color","rgb","rgba","r","g","b","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","WIDGET_BORDER","GridDraggable","onMouseDown","gridItemNode","ReactDOM","findDOMNode","assertThisInitialized","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","CHART_COLORS","getPieOption","legend","series","tooltip","orient","center","radius","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","column","instance","e","handleOriginal","header","Header","row","drills","widgetDrillThrough","d","columnName","onChartClick","echarts","onChartLegendselectchanged","echart","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","drillThrough","widgetItem","headers","obj","keys","_i","accessor","es","columns","minRows","showPagination","getTdProps","_this$props$data","chartOption","EchartsApi","echarts_for_react_lib_default","option","onEvents","styles","marginRight","components_GridDraggable","components_GridResizable","GridLayout","backgroundColor","showGridlines","backgroundSize","backgroundImage","boxItems","widgets","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","isResizeToBase","preGridWidth","gridWidth","newWidgets","resizeWidgetsToBase","resizeWidgetsToActual","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryWidgets","params","w","handleCheckBoxChange","handleHeightChange","onHeightChange","onBackgroundColorChange","saveWidgets","stringify","widgetViewWidth","components_ColorPicker","src_components_GridLayout","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","jdbcDataSourceId","sqlQuery","_x","handleAceEditorChange","newValue","handleDataSourceChange","handleChartTypeChange","handleColumnChange","handleDrillColumnChange","drillColumnName","handleDrillDashboardChange","drillDashboardId","aggrKey","aggrValue","onSave","runQuery","queryResultData","addDrillThrough","_this$state3","newDrills","removeDrillThrough","drill","generateChart","_this$state4","renderChartPreview","_this$state5","columnOptions","col","chartPreview","class","queryResultItem","_this$state6","dataSourceOptions","chartOptionList","o","dashboardOptions","dash","drillItems","columnItems","dataType","react_ace_lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","FilterEditPanel","fetchFilter","handleTypeChange","useQuery","typeOptions","t","DashboardEditView","loadViewByDashboardName","dashboardName","pageWidth","getPageWidth","showFilterViewPanel","isReadOnly","refresh","toggleAutoRefresh","autoRefreshTimerId","clearInterval","timerId","setInterval","refreshWidgetView","refreshFilterView","filterViewPanel","current","widgetViewPanel","now","Date","toTimeString","replace","lastRefreshed","dashboard","onSaveDashboard","cancelEdit","onSaveWidget","showWidgetEditPanel","onSaveFilter","showFilterEditPanel","toggleFilterViewPanel","resizePageLayout","openFilterEditPanel","filterEditPanel","openWidgetEditPanel","widgetEditPanel","fullScreen","window","open","onTableCellClick","objectSpread","jdbcDataSourceOptions","createRef","match","location","search","URLSearchParams","editButtonPanel","fullScreenButtonPanel","_this3","autoRefreshStatus","size","readOnly","components_WidgetViewPanel","ref","src_components_FilterViewPanel","src_components_WidgetEditPanel","components_FilterEditPanel","Dashboard","fetchBoards","catch","error","view","_this$state$dashboard","dashboardRows","margin","Route","path","render","views_DashboardEditView","DashboardFullScreenView","dashboardEditView","wrappedComponentRef","comp","SYS_ROLES","User","handleOptionChange","fetchUsers","users","fetchGroups","groups","tempPassword","userGroups","initialEditPanelState","addUserGroup","userGroupId","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_this$state3$users","_this$state3$groups","_this$state3$userGrou","userItems","groupOptions","group","sysRoleOptions","groupName","userGroupItems","Group","fetchDashboards","groupDashboards","addGroupDashboard","groupDashboardId","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","MENU_ITEMS","link","UserManagement","handleMenuClick","menuLink","currentMenuLink","menuItems","menu","active","Link","to","Switch","component","Account","fetchUser","generateApiKey","confirmedPassword","alert","apiKey","Workspace","pathname","isAuthenticated","menuList","m","isAccountMenuActive","exact","PageNotFound","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","App","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.446894f2.chunk.js","sourcesContent":["\r\nclass AuthStore {\r\n\r\n  constructor() {\r\n    this._sysRole = '';\r\n    this._username = '';\r\n  }\r\n\r\n  set sysRole(sysRole) {\r\n    this._sysRole = sysRole;\r\n  }\r\n\r\n  get sysRole() {\r\n    return this._sysRole;\r\n  }\r\n\r\n  set username(username) {\r\n    this._username = username;\r\n  }\r\n\r\n  get username() {\r\n    return this._username;\r\n  }\r\n\r\n  get isAuthenticated() {\r\n    return true; // this._sysRole !== '';\r\n  }\r\n}\r\n\r\nexport default new AuthStore();","\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AuthStore from '../api/AuthStore';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tryLogin();\r\n  }\r\n\r\n  tryLogin = () => {\r\n    axios.post('/auth/login/cookie')\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  login = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password'\r\n      });\r\n      return;\r\n    }\r\n\r\n    AuthStore.username = 'testuser';\r\n    AuthStore.sysRole = 'developer';\r\n    this.props.history.push('/workspace/dashboard');\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div className=\"login-app-title\">Poli</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n              <label>Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} />\r\n            </div>\r\n            <button className=\"button login-button\" onClick={this.login}>Login</button>\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      modalClass = '',\r\n      title,\r\n      children\r\n    } = this.props;\r\n\r\n    const modalStatus = show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={`modal-panel ${modalClass}`}>\r\n          <div className=\"model-header row\">\r\n            <div className=\"model-title\">{title}</div>\r\n            <button className=\"model-close-btn button icon-button\" onClick={() => this.props.onClose()}>\r\n              <FontAwesomeIcon icon=\"times\" />\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          <div className='modal-body'>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\nimport './Datasource.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Fetch all datasources\r\n    this.fetchDataSources();\r\n    \r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      username,\r\n      password,\r\n      name,\r\n      ping,\r\n    } = this.state;\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      username: username,\r\n      name: name,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.fetchDataSources();\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      // New\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    console.log('delete', id);\r\n    axios.delete('/ws/jdbcdatasource/' + id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n      });\r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        console.log('ping', res.data);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  openDeletePanel = () => {\r\n\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      id,\r\n      jdbcDataSources = []\r\n    } = this.state;\r\n\r\n    const jdbcDataSourceItems = jdbcDataSources.map((ds, index) => \r\n      <div key={index} className=\"datasource-card row\">\r\n        <div className=\"float-left ellipsis\">\r\n          {ds.name}\r\n        </div>\r\n        <div className=\"float-right\">\r\n          <button className=\"button icon-button\" onClick={() => this.openEditPanel(ds)}>\r\n            <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n          </button>\r\n          <button className=\"button icon-button\" onClick={() => this.delete(ds.id)}>\r\n            <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n          </button>\r\n          <button className=\"button icon-button\" onClick={() => this.ping(ds.id)}>\r\n            <FontAwesomeIcon icon=\"plug\" fixedWidth />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    let mode;\r\n    let passwordInput = (\r\n      <div>\r\n        <label>Password</label>\r\n        <input \r\n          type=\"password\" \r\n          name=\"password\" \r\n          value={this.state.password}\r\n          onChange={this.handleInputChange} />\r\n      </div>\r\n    );\r\n    if (id === null) {\r\n      mode = 'New';\r\n    } else {\r\n      mode = 'Update';\r\n      if (!showUpdatePassword) {\r\n        passwordInput = (\r\n          <React.Fragment>\r\n            <br/>\r\n            <button onClick={this.toggleUpdatePassword}>Update password</button>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"searchValue\"\r\n          placeholder=\"Datasource name...\"\r\n          />\r\n        <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n          <FontAwesomeIcon icon=\"plus\" /> New datasource\r\n        </button>\r\n        <div>\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={mode} >\r\n\r\n          <div>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Connection Url</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            {passwordInput}\r\n\r\n            <label>Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <button className=\"button\"onClick={this.save}>Save</button>\r\n          </div>\r\n\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","import React from 'react';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n    searchValue: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const isChecked = target.checked;\r\n\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    if (searchValue) {\r\n      const result = [];\r\n      const { checkBoxes } = this.props;\r\n      for (let i = 0; i < checkBoxes.length; i++) {\r\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\r\n          result.push(checkBoxes[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n\r\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\r\n    // TODO: If value is too long, add.. to the end.\r\n  }\r\n\r\n  render() {\r\n    const checkBoxes = this.props.checkBoxes;\r\n    let checkBoxItems = [];\r\n    if (checkBoxes !== undefined && checkBoxes.length !== 0) {\r\n      checkBoxItems = this.props.checkBoxes.map((box, index) => \r\n        <div key={index}>\r\n          <input \r\n            type=\"checkbox\" \r\n            name={box.value} \r\n            value={box.value} \r\n            checked={box.isChecked} \r\n            onChange={this.handleChange}\r\n            />\r\n            {box.value}\r\n          <br/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button onClick={this.toggleSelectAll}>Toggle Select All {this.state.isSelectAll}</button>\r\n        <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.searchValue}\r\n            onChange={this.handleSearchValueChange} \r\n          />\r\n        \r\n        <div>\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};","import React from 'react';\r\n\r\nclass NumberRange extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        min\r\n        <input type=\"number\" name=\"min\" />\r\n        max\r\n        <input type=\"number\" name=\"max\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberRange;","/**\r\n * Constants\r\n */\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\r\n\r\nexport const SYS_ROLE_ADMIN = 'admin';\r\nexport const SYS_ROLE_DEVELOPER = 'developer';\r\nexport const SYS_ROLE_VIEWER = 'viewer';\r\n\r\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;","import React, { Component } from 'react';\r\nimport Slicer from \"./Slicer\";\r\nimport NumberRange from \"./NumberRange\";\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './FilterViewPanel.css';\r\n\r\nclass FilterViewPanel extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      dashboardId: null,\r\n      filters: []\r\n    };\r\n  }\r\n\r\n  fetchFilters = (dashboardId) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      dashboardId: dashboardId\r\n    })\r\n\r\n    axios.get('/ws/filter/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          filters: result,\r\n        }, this.queryFilters);\r\n      });\r\n  }\r\n\r\n  queryFilters = () => {\r\n    const { filters } = this.state;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === Constants.SLICER) {\r\n        const queryRequest = filter.data;\r\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\r\n          .then(res => {\r\n            const result = res.data;\r\n            const queryResult = JSON.parse(result.data);\r\n\r\n            const index = filters.findIndex(f => f.id === result.id);\r\n            const newFilters = [...this.state.filters];\r\n            newFilters[index].queryResult = queryResult;\r\n            const type = newFilters[index].type;\r\n            if (type === Constants.SLICER) {\r\n              const checkBoxes = [];\r\n              if (!Util.isArrayEmpty(queryResult)) {\r\n                for (let i = 0; i < queryResult.length; i++) {\r\n                  const values = Object.values(queryResult[i]);\r\n                  for (const val of values) {\r\n                    checkBoxes.push({\r\n                      value: val,\r\n                      isChecked: false\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n\r\n              newFilters[index].checkBoxes = checkBoxes;\r\n            } else if (type === Constants.SINGLE_VALUE) {\r\n              const values = Object.values(queryResult);\r\n              let value = '';\r\n              for (const val of values) {\r\n                value = val;\r\n                break;\r\n              }\r\n              newFilters[index].value = value;\r\n            }\r\n\r\n            this.setState({\r\n              filters: newFilters\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderFilterPanel = () => {\r\n    const filterPanel = [];\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      let filterComponent = (<div>NONE</div>);\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        filterComponent = (\r\n          <Slicer \r\n            key={i} \r\n            filterId={filter.id} \r\n            checkBoxes={checkBoxes} \r\n            onChange={this.onSlicerChange} \r\n          />\r\n        );\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterComponent = (\r\n          <input \r\n            type=\"text\"  \r\n            value={filter.value}\r\n            onChange={(event) => this.onSingleValueChange(filter.id, event)} \r\n          />\r\n        );\r\n      }\r\n\r\n      filterPanel.push(\r\n          (\r\n            <div className=\"filter-card\">\r\n              <div className=\"filter-card-title\">\r\n                {filter.name}\r\n\r\n                { this.props.isEditMode ? \r\n                  (\r\n                    <div className=\"icon-button-group\">\r\n                      <div className=\"icon-btn\" onClick={() => this.edit(filter.id)}>\r\n                        <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n                      </div>\r\n                      <div className=\"icon-btn\" onClick={() => this.remove(filter.id)}>\r\n                        <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n                      </div>\r\n                    </div>\r\n                  ): null \r\n                }\r\n              </div>\r\n              <div>\r\n                {filterComponent}\r\n              </div>\r\n            </div>\r\n          )\r\n        );\r\n    }\r\n    return filterPanel;\r\n  }\r\n\r\n  edit = (filterId) => {\r\n    this.props.onEdit(filterId);\r\n  }\r\n\r\n  remove = (filterId) => {\r\n    axios.delete('/ws/filter/' + filterId)\r\n      .then(res => {\r\n        const index = this.state.filters.findIndex(f => f.id === filterId);\r\n        const newFilters = [...this.state.filters];\r\n        newFilters.splice(index, 1);\r\n        this.setState({\r\n          filters: newFilters\r\n        });\r\n      });\r\n  }\r\n\r\n  onSlicerChange = (filterId, checkBoxes) => {\r\n    const index = this.state.filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...this.state.filters];\r\n    newFilters[index].checkBoxes = [...checkBoxes];\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n\r\n    // TODO: select all.\r\n    // const isSelectAll = checked.length === checkBoxes.length;    \r\n  }\r\n\r\n  onSingleValueChange = (filterId, event) => {\r\n    const { filters } = this.state;\r\n    const value = event.target.value;\r\n    const index = filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...filters];\r\n    newFilters[index].value = value;\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n  }\r\n\r\n  applyFilters = () => {\r\n    console.log('applyFilters');\r\n    const { filters } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      const filterParam = {};\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        const paramValues = [];\r\n        for (let j = 0; j < checkBoxes.length; j++) {\r\n          const checkBox = checkBoxes[j];\r\n          if (checkBox.isChecked) {\r\n            paramValues.push(checkBox.value);\r\n          }\r\n        }\r\n        filterParam.value = paramValues;\r\n        if (paramValues.length === checkBoxes.length) {\r\n          filterParam.remark = 'select all';\r\n        }\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterParam.value = filter.value;\r\n      }\r\n      filterParam.param = filter.data.param;\r\n      filterParam.type = filter.type;\r\n      filterParams.push(filterParam);\r\n    }\r\n\r\n    this.props.onApplyFilters(filterParams);\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n    const style = {};\r\n    if (show) {\r\n      style.width = Constants.DEFAULT_FILTER_VIEW_WIDTH + 'px';\r\n    } else {\r\n      style.width = '0px';\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-filter-panel\" style={style}>\r\n        <div>Filters</div>\r\n        <button onClick={this.applyFilters}>Run</button>\r\n        <div className=\"filterViewPanel\">\r\n          {this.renderFilterPanel()}\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterViewPanel;","import React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPalette: false\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      showPalette: !prevState.showPalette\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      showPalette: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    const rgb = color.rgb;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    this.props.onChange(rgba);\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: this.props.value\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: '2'\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.showPalette ? \r\n          (\r\n            <div style={popover}>\r\n              <div style={cover} onClick={this.handleClose} />\r\n              <ChromePicker color={this.props.value} onChange={this.handleChange} />\r\n            </div>\r\n          ) : null }\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const name = event.target.name;\r\n    const isChecked = event.target.checked;\r\n    console.log(name, isChecked);\r\n    this.props.onChange(name, isChecked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      value,\r\n      isChecked\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"checkbox-container\">\r\n        <div className=\"truncate\">\r\n          {value}\r\n        </div>\r\n        <input \r\n          type=\"checkbox\" \r\n          name={name}\r\n          value={value}\r\n          checked={isChecked}\r\n          onChange={this.handleChange} />\r\n        <span className=\"checkmark\"></span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","const CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOption = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      data: legend,\r\n      orient: 'vertical',\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['50%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        if (!Util.isArrayEmpty(drills)) {\r\n          const index = drills.findIndex(d => d.columnName === header);\r\n          if (index !== -1) {\r\n            const dashboardId = drills[index].dashboardId;\r\n            this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      chartType,\r\n      queryResult,\r\n      drillThrough\r\n    } = this.props;\r\n    let widgetItem = (<div></div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n      const headers = [];\r\n      if (!Util.isArrayEmpty(queryResult)) {\r\n        const obj = queryResult[0];\r\n        const keys = Object.keys(obj);\r\n        for (const key of keys) {\r\n          headers.push({\r\n            Header: key,\r\n            accessor: key\r\n          })\r\n        }\r\n      }\r\n\r\n      widgetItem = (\r\n        <ReactTable\r\n          data={queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n          getTdProps={this.onTableTdPropsChange}\r\n          widgetDrillThrough={drillThrough}  \r\n        />\r\n      );\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        name,\r\n        value\r\n      } = this.props.data;\r\n      if (!Util.isArrayEmpty(queryResult)) {\r\n        let legend = [];\r\n        let series = [];\r\n        for (let i = 0; i < queryResult.length; i++) {\r\n          const row = queryResult[i];\r\n          legend.push(row[name]);\r\n          series.push({\r\n            name: row[name],\r\n            value: row[value]\r\n          });\r\n        }\r\n        const chartOption = EchartsApi.getPieOption(legend, series);\r\n        widgetItem = (\r\n          <ReactEcharts \r\n            option={chartOption}   \r\n            className=\"echarts\"\r\n            onEvents={onChartEvents}  />\r\n        );\r\n      }\r\n      \r\n    } \r\n\r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    let styles = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: 1\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {this.props.name}\r\n\r\n          { this.props.isEditMode ? (\r\n            <div className=\"float-right\" style={{marginRight: '20px'}}>\r\n              <div className=\"icon-btn\" onClick={() => this.editWidget(this.props.id)}>\r\n                <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n              </div>\r\n              <div className=\"icon-btn\" onClick={() => this.removeWidget(this.props.id)}>\r\n                <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid-box-file-button-group\">\r\n              <div className=\"icon-btn\" onClick={() => this.exportJson(this.props.id)}>\r\n                <FontAwesomeIcon icon=\"file-export\" fixedWidth />\r\n              </div>\r\n              \r\n              <div className=\"icon-btn\" onClick={() => this.exportCsv(this.props.id)}>\r\n                <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { this.props.isEditMode ? (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} />\r\n        ): null}\r\n\r\n        { this.props.isEditMode ? (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} />\r\n        ): null}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(GridItem);","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      backgroundColor\r\n    } = this.props;\r\n\r\n    let style = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      backgroundColor: backgroundColor\r\n    };\r\n\r\n    if (this.props.showGridlines) {\r\n      style.backgroundSize = '15px 15px';\r\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = this.props.widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={style} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport ColorPicker from '../components/ColorPicker';\r\nimport Checkbox from '../components/Checkbox';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\n\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      snapToGrid: false,\r\n      showGridlines: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  resizeGrid = (width, isResizeToBase) => {\r\n    const preGridWidth = this.state.gridWidth;\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n    if (isResizeToBase) {\r\n      this.resizeWidgetsToBase(newWidgets, preGridWidth);\r\n    }\r\n\r\n    const gridWidth = width;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return Math.round(num * gridWidth / BASE_WIDTH);\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Math.round(num * BASE_WIDTH / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, width, filterParams) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get('/ws/widget/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(width, false);\r\n          this.queryWidgets(filterParams);\r\n        });\r\n      });\r\n  }\r\n\r\n  queryWidgets = (filterParams) => {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      axios.post('/ws/jdbcquery/widget/' + widget.id, params)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const index = widgets.findIndex(w => w.id === result.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = JSON.parse(result.data);\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleCheckBoxChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.checked\r\n    });\r\n  }\r\n\r\n  handleHeightChange = (event) => {\r\n    this.props.onHeightChange(event.target.value);\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    this.props.onBackgroundColorChange(color);\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });\r\n  }\r\n\r\n  onWidgetRemove = (widgetId) => {\r\n    axios.delete('/ws/widget/' + widgetId)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { widgetViewWidth } = this.props;\r\n    const style = {\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {this.props.isEditMode ?\r\n        (\r\n          <div className=\"dashboard-attribute-edit-panel\">\r\n            <div className=\"inline-block\">Height:</div>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.props.height}\r\n              onChange={this.handleHeightChange} \r\n              className=\"inline-block\" \r\n              style={{width: '200px'}}\r\n              />\r\n\r\n            <div className=\"inline-block\">Background Color</div>\r\n            <ColorPicker value={this.props.backgroundColor} onChange={this.onBackgroundColorChange} />\r\n\r\n            <input \r\n              type=\"checkbox\" \r\n              name=\"snapToGrid\"\r\n              value=\"snapToGrid\"\r\n              checked={this.state.snapToGrid} \r\n              onChange={this.handleCheckBoxChange} />\r\n              snapToGrid\r\n              <br/>\r\n            <input \r\n              type=\"checkbox\" \r\n              name=\"showGridlines\"\r\n              value=\"showGridlines\"\r\n              checked={this.state.showGridlines} \r\n              onChange={this.handleCheckBoxChange} />\r\n              showGridlines\r\n            <br/>\r\n          </div>\r\n        ) : null}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          backgroundColor={this.props.backgroundColor}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.onWidgetRemove} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nimport './WidgetEditPanel.css';\r\n\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      name: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      columns: [],\r\n      queryResultData: [],\r\n      chartType: Constants.TABLE,\r\n      aggrKey: '',\r\n      aggrValue: '',\r\n      chartOption: {},\r\n      drills: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId, dashboardId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    const filters = await webApi.fetchFiltersByDashboardId(dashboardId);\r\n    this.setState({ \r\n      filters: filters \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n\r\n      if (filters.length !== 0) {\r\n        this.setState({\r\n          filterId: filters[0].id\r\n        });\r\n      }\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            widgetId: widgetId,\r\n            name: result.name,\r\n            x: result.x,\r\n            y: result.y,\r\n            width: result.width,\r\n            height: result.height,\r\n            sqlQuery: result.sqlQuery,\r\n            chartType: result.chartType,\r\n            jdbcDataSourceId: result.jdbcDataSourceId,\r\n            drills: result.drillThrough\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    const jdbcDataSourceId = parseInt(event.target.value, 10);\r\n    this.setState({ \r\n      jdbcDataSourceId: jdbcDataSourceId\r\n    });\r\n  }\r\n\r\n  handleChartTypeChange = (event) => {\r\n    this.setState({ \r\n      chartType: event.target.value\r\n    });\r\n  }\r\n\r\n  handleColumnChange = (name, event) => {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleDrillColumnChange = (event) => {\r\n    this.setState({ \r\n      drillColumnName: event.target.value\r\n    });\r\n  }\r\n\r\n  handleDrillDashboardChange = (event) => {\r\n    const drillDashboardId = parseInt(event.target.value, 10);\r\n    this.setState({ \r\n      drillDashboardId: drillDashboardId\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      widgetId,\r\n      name,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      chartType,\r\n      drills\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      name: name,\r\n      dashboardId: this.props.dashboardId,\r\n      chartType: chartType,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      drillThrough: drills\r\n    }\r\n\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const {\r\n        aggrKey,\r\n        aggrValue\r\n      } = this.state;\r\n      widget.data = {\r\n        name: aggrKey,\r\n        value: aggrValue\r\n      }\r\n    }\r\n\r\n    if (widgetId === null) {\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const columns = result.columns;\r\n        const data = JSON.parse(result.data);\r\n        this.setState({\r\n          queryResultData: data,\r\n          columns: columns \r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      drills,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const filterId = this.state.filterId;\r\n    const index = drills.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill, event) => {\r\n    event.preventDefault();\r\n    const { drills } = this.state;\r\n    const index = drills.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.splice(index, 1);\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        aggrKey, \r\n        aggrValue, \r\n        queryResultData \r\n      } = this.state;\r\n      if (!Util.isArrayEmpty(queryResultData)) {\r\n        let legend = [];\r\n        let series = [];\r\n        for (let i = 0; i < queryResultData.length; i++) {\r\n          const row = queryResultData[i];\r\n          legend.push(row[aggrKey]);\r\n          series.push({\r\n            name: row[aggrKey],\r\n            value: row[aggrValue]\r\n          });\r\n        }\r\n        const chartOption = EchartsApi.getPieOption(legend, series);\r\n        this.setState({\r\n          chartOption: chartOption\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      columns \r\n    } = this.state;\r\n    const columnOptions = (columns || []).map(col =>\r\n      <option value={col.name} key={col.name}>{col.name}</option>\r\n    );\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      chartPreview = (\r\n        <div>\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label>Aggr Key (string)</label>\r\n          <select value={this.state.aggrKey} onChange={(event) => this.handleColumnChange('aggrKey', event)}>\r\n            {columnOptions}\r\n          </select>\r\n\r\n          <label>By Aggr Value (number)</label>\r\n          <select value={this.state.aggrValue} onChange={(event) => this.handleColumnChange('aggrValue', event)}>\r\n            {columnOptions}\r\n          </select>\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={this.state.chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      columns,\r\n      queryResultData,\r\n      jdbcDataSources,\r\n      drills,\r\n      drillDashboards\r\n    } = this.state;\r\n\r\n    const dataSourceOptions = (jdbcDataSources || []).map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const columnOptions = (columns || []).map(col =>\r\n      <option value={col.name} key={col.name}>{col.name}</option>\r\n    );\r\n\r\n    const chartOptionList = Constants.CHART_TYPES.map(o =>\r\n      <option value={o} key={o}>{o}</option>\r\n    );\r\n\r\n    const dashboardOptions = (drillDashboards || []).map(dash =>\r\n      <option value={dash.id} key={dash.id}>{dash.name}</option>\r\n    );\r\n\r\n    const drillItems = (drills || []).map(drill =>\r\n      <div key={drill.columnName}>\r\n        <div>Column: {drill.columnName}</div>\r\n        <div>Dashboard: {drill.dashboardId}</div>\r\n        <button onClick={(event) => this.removeDrillThrough(drill, event)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const headers = [];\r\n    let queryResultItem;\r\n    if (!Util.isArrayEmpty(queryResultData)) {\r\n      const obj = queryResultData[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        });\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={queryResultData}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResultData}</div>\r\n      );\r\n    }\r\n\r\n    const columnItems = (columns || []).map(col =>\r\n      <div key={col.name}>{col.name} {col.dataType}</div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        <button className=\"button\" onClick={this.runQuery}>Run Query</button>\r\n\r\n        <div className=\"form-panel\">\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>DataSource</label>\r\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n            {dataSourceOptions}\r\n          </select>\r\n        \r\n          <label>SQL Query</label>\r\n          <AceEditor\r\n            style={{ marginTop: '8px' }}\r\n            value={this.state.sqlQuery}\r\n            mode=\"mysql\"\r\n            theme=\"xcode\"\r\n            name=\"blah2\"\r\n            onChange={this.handleAceEditorChange}\r\n            height={'300px'}\r\n            width={'100%'}\r\n            fontSize={15}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              showLineNumbers: true,\r\n              tabSize: 2\r\n            }}\r\n          />\r\n\r\n          <label>Result</label>\r\n          {queryResultItem}\r\n\r\n          <label>Columns Mapping</label>\r\n          <div>\r\n             {columnItems}\r\n          </div>\r\n\r\n          <label>Chart Options</label>\r\n          <select value={this.state.chartType} onChange={this.handleChartTypeChange}>\r\n            {chartOptionList}\r\n          </select>\r\n\r\n          <label>Preview</label>\r\n          {this.renderChartPreview()}  \r\n\r\n          <label>Drill through</label>\r\n          <div>\r\n            <label>Column</label>\r\n            <select value={this.state.drillColumnName} onChange={this.handleDrillColumnChange}>\r\n              {columnOptions}\r\n            </select>\r\n            <label>Dashboard</label>\r\n            <select value={this.state.drillDashboardId} onChange={this.handleDrillDashboardChange}>\r\n              {dashboardOptions}\r\n            </select>\r\n            <div>\r\n              {drillItems}\r\n            </div>\r\n            <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\r\n          </div>\r\n\r\n        </div>\r\n        \r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","import React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nclass FilterEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      filterId: null,\r\n      name: '',\r\n      type: Constants.SLICER,\r\n      data: {},\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: [],\r\n      param: '',\r\n    };\r\n  }\r\n\r\n  fetchFilter = async (filterId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    if (filterId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n      this.setState({\r\n        filterId: null\r\n      })\r\n    } else {\r\n      axios.get('/ws/filter/' + filterId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { \r\n            data,\r\n            type\r\n          } = result;\r\n          this.setState({\r\n            filterId: filterId,\r\n            name: result.name,\r\n            type: result.type,\r\n            data: data\r\n          });\r\n\r\n          if (type === Constants.SLICER) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          } else if (type === Constants.SINGLE_VALUE) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          }\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    this.setState({ \r\n      jdbcDataSourceId: event.target.value\r\n    });\r\n  }\r\n\r\n  handleTypeChange = (event) => {\r\n    this.setState({ \r\n      type: event.target.value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      filterId,\r\n      name,\r\n      type,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      param\r\n    } = this.state;\r\n\r\n    const filter = {\r\n      name: name,\r\n      type: type,\r\n      dashboardId: this.props.dashboardId\r\n    };\r\n\r\n    if (type === Constants.SLICER) {\r\n      filter.data = {\r\n        jdbcDataSourceId: jdbcDataSourceId,\r\n        sqlQuery: sqlQuery,\r\n        param: param\r\n      }\r\n    } else if (type === Constants.SINGLE_VALUE) {\r\n      filter.data = {\r\n        useQuery: false,\r\n        jdbcDataSourceId: jdbcDataSourceId,\r\n        sqlQuery: sqlQuery,\r\n        param: param,\r\n      }\r\n    }\r\n\r\n    if (filterId === null) {\r\n      axios.post('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      filter.id = filterId;\r\n      axios.put('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { \r\n      queryResult,\r\n      jdbcDataSources\r\n    } = this.state;\r\n\r\n    const dataSourceOptions = jdbcDataSources.map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const typeOptions = Constants.FILTER_TYPES.map(t =>\r\n      <option value={t} key={t}>{t}</option>\r\n    );\r\n\r\n    const headers = [];\r\n    let queryResultItem;\r\n    if (!Util.isArrayEmpty(queryResult)) {\r\n      console.log('queryResult', queryResult);\r\n      const obj = queryResult[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        })\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={this.state.queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResult}</div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        <button className=\"button\" onClick={this.runQuery}>Run</button>\r\n\r\n        <div className=\"form-panel\">\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>Type</label>\r\n          <select value={this.state.type} onChange={this.handleTypeChange}>\r\n            {typeOptions}\r\n          </select>\r\n\r\n          <label>DataSource</label>\r\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n            {dataSourceOptions}\r\n          </select>\r\n        \r\n          <label>SQL Query</label>\r\n          <AceEditor\r\n            style={{ marginTop: '8px' }}\r\n            value={this.state.sqlQuery}\r\n            mode=\"mysql\"\r\n            theme=\"xcode\"\r\n            name=\"blah2\"\r\n            onChange={this.handleAceEditorChange}\r\n            height={'300px'}\r\n            width={'100%'}\r\n            fontSize={15}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              showLineNumbers: true,\r\n              tabSize: 2\r\n            }}\r\n          />\r\n\r\n          <label>Result</label>\r\n          {queryResultItem}\r\n\r\n          <label>Param</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"param\" \r\n            value={this.state.param}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport FilterViewPanel from '../components/FilterViewPanel';\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\nimport FilterEditPanel from '../components/FilterEditPanel';\r\n\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showFilterEditPanel: false,\r\n      showFilterViewPanel: true,\r\n      isEditMode: false,\r\n      isReadOnly: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      style: {},\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.filterViewPanel = React.createRef();\r\n    this.filterEditPanel = React.createRef();\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    console.log('DashboardEditView', dashboardId);\r\n\r\n    const url = this.props.location.search;\r\n    console.log('url', url);\r\n    const params = new URLSearchParams(url);\r\n    console.log('params', params);\r\n\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = this.state.showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    console.log('componentDidMount', pageWidth, widgetViewWidth);\r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const result = res.data;\r\n            this.setState({\r\n              dashboardId: result.id,\r\n              name: result.name,\r\n              style: result.style\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = (dashboardName) => {\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = this.state.showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    console.log('loadViewByDashboardName', pageWidth, widgetViewWidth);\r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth,\r\n      isReadOnly: true\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            style: result.style\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth;\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const timerId = setInterval(() => {\r\n        this.refreshWidgetView();\r\n      }, 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    console.log('refresh');\r\n    this.refreshWidgetView();\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  refreshFilterView = () => {\r\n    const { \r\n      dashboardId\r\n    } = this.state;\r\n    this.filterViewPanel.current.fetchFilters(dashboardId);\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n\r\n    const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\r\n    this.setState({\r\n      lastRefreshed: now\r\n    });\r\n  } \r\n\r\n  save = () => {\r\n    console.log('save');\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      style\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      style: style\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.widgetViewPanel.current.saveWidgets();\r\n\r\n    this.props.onSaveDashboard(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  delete = () => {\r\n    const { dashboardId } = this.state;\r\n    console.log('delete', dashboardId);\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        //this.fetchBoards();\r\n      });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  onSaveFilter = () => {\r\n    this.setState({ \r\n      showFilterEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  toggleFilterViewPanel = () => {\r\n    const { \r\n      showFilterViewPanel\r\n    } = this.state;\r\n    this.resizePageLayout(!showFilterViewPanel);\r\n  }\r\n\r\n  resizePageLayout = (showFilterViewPanel) => {\r\n    const pageWidth = this.getPageWidth();;\r\n    let widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    this.widgetViewPanel.current.resizeGrid(widgetViewWidth, true);\r\n\r\n    this.setState({\r\n      showFilterViewPanel: showFilterViewPanel,\r\n      widgetViewWidth: widgetViewWidth\r\n    }); \r\n  }\r\n\r\n  openFilterEditPanel = (filterId) => {\r\n    this.filterEditPanel.current.fetchFilter(filterId);\r\n    this.setState({\r\n      showFilterEditPanel: true\r\n    });\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    const { dashboardId } = this.state;\r\n    this.widgetEditPanel.current.fetchWidget(widgetId, dashboardId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/workspace/dashboard/view?name=${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onTableCellClick = () => {\r\n    this.props.history.push(`/workspace/dashboard/drill?name=&`);\r\n  }\r\n\r\n  onHeightChange = (height) => {\r\n    const style = {...this.state.style};\r\n    style.height = height;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    const style = {...this.state.style};\r\n    style.backgroundColor = color;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      lastRefreshed,\r\n      isEditMode,\r\n      isReadOnly\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel;\r\n    if (!isReadOnly) {\r\n      fullScreenButtonPanel = (\r\n        <React.Fragment>\r\n          <button className=\"button icon-button\" onClick={this.fullScreen}>\r\n            <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\r\n          </button>\r\n        </React.Fragment>\r\n      );\r\n\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button\" onClick={this.cancelEdit}>Cancel</button>\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n            <button className=\"button\" onClick={this.delete}>Delete</button>\r\n            <button className=\"button\" onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\r\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button\" onClick={this.edit}>Edit</button>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-menu-panel row\">\r\n          <div className=\"float-left\">\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              style={{width: '200px'}}\r\n              readOnly={isReadOnly || !isEditMode}\r\n              />\r\n          </div>\r\n          <div className=\"float-right\">\r\n            <span>Last refreshed: {lastRefreshed}</span>\r\n            <button className=\"button icon-button\" onClick={this.toggleAutoRefresh}>\r\n              {\r\n                autoRefreshStatus === 'ON' ? \r\n                (\r\n                  <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\r\n                ) : \r\n                (\r\n                  <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\r\n                )\r\n              }\r\n            </button>\r\n            <button className=\"button icon-button\" onClick={this.refresh}>\r\n              <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={this.toggleFilterViewPanel}>Show Filters</button>\r\n            \r\n            {fullScreenButtonPanel}\r\n            {editButtonPanel}\r\n          </div>\r\n        </div>\r\n\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          isEditMode={this.state.isEditMode}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          onHeightChange={this.onHeightChange}\r\n          onBackgroundColorChange={this.onBackgroundColorChange}\r\n          {...this.state.style}\r\n        />\r\n        <FilterViewPanel \r\n          ref={this.filterViewPanel} \r\n          onEdit={this.openFilterEditPanel}\r\n          onApplyFilters={this.applyFilters}\r\n          isEditMode={this.state.isEditMode}\r\n          show={this.state.showFilterViewPanel}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'dashboard-edit-widget-dialog'} \r\n          title={'Widget Edit'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showFilterEditPanel}\r\n          onClose={() => this.setState({ showFilterEditPanel: false })}\r\n          modalClass={'dashboard-edit-filter-dialog'} \r\n          title={'Filter Edit'}>\r\n          <FilterEditPanel\r\n            ref={this.filterEditPanel}\r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveFilter}\r\n          />\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\nimport './Dashboard.css';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as Constants from '../api/Constants';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false,\r\n      name: ''\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      style: {\r\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\r\n        backgroundColor: 'rgba(255, 255, 255, 1)'\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.closeEditPanel();\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n  }\r\n\r\n  onSaveDashboard = (dashboardId) => {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dashboards = []\r\n    } = this.state;\r\n    \r\n    const dashboardRows = dashboards.map((d, index) => \r\n      <div key={index} className=\"dashboard-menu-item ellipsis\" onClick={() => this.view(d.id)}>\r\n        {d.name}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dashboard-sidebar\">\r\n          <div style={{margin: '5px'}}>\r\n            <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\r\n              <FontAwesomeIcon icon=\"plus\" /> New dashboard\r\n            </button>\r\n            <input \r\n              type=\"text\" \r\n              name=\"searchValue\" \r\n              value={this.state.searchValue}\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleInputChange} />\r\n          </div>\r\n          <div>\r\n            {dashboardRows}\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route \r\n            path=\"/workspace/dashboard/:id\" \r\n            render={(props) => <DashboardEditView key={props.match.params.id} onSaveDashboard={this.onSaveDashboard} />} \r\n            />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'small-modal-panel'} \r\n          title={'New'} >\r\n          <div>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              />\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const url = this.props.location.search;\r\n    console.log('url', url);\r\n    const params = new URLSearchParams(url);\r\n    const dashboardName = params.get('name');\r\n    console.log('name', dashboardName);\r\n    console.log('dashboardEditView', this.dashboardEditView);\r\n\r\n    this.dashboardEditView.loadViewByDashboardName(dashboardName);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView wrappedComponentRef={comp => (this.dashboardEditView = comp)} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\n\r\nconst SYS_ROLES = ['developer', 'viewer'];\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      searchValue: '',\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, event) => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      this.setState({\r\n        id: user.id,\r\n        username: user.username,\r\n        name: user.name,\r\n        tempPassword: '',\r\n        sysRole: user.sysRole,\r\n        userGroups: user.userGroups\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  search = () => {\r\n    const { searchValue } = this.state;\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: sysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/user/' + id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n      });\r\n  }\r\n\r\n  addUserGroup = (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId, event) => {\r\n    event.preventDefault();\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      users = [],\r\n      groups = [],\r\n      userGroups = []\r\n    } = this.state;\r\n\r\n    const userItems = users.map(user => \r\n      <div key={user.id} className=\"user-card\">\r\n        <p>\r\n          {user.username}\r\n          {user.name}\r\n          {user.sysRole}\r\n          <button onClick={() => this.openEditPanel(user)}>update</button>\r\n          <button onClick={() => this.delete(user.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupOptions = groups.map(group => \r\n      <option value={group.id} key={group.id}>{group.name}</option>\r\n    );\r\n\r\n    const sysRoleOptions = SYS_ROLES.map(groupName => \r\n      <option value={groupName} key={groupName}>{groupName}</option>\r\n    );\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId}>\r\n                <div>Group: {groups[j].name}</div>\r\n                <button onClick={(event) => this.removeUserGroup(groupId, event)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>User</div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Username...\"\r\n          />\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Group...\"\r\n          />\r\n        <button onClick={this.search}>Search</button>\r\n        <div className=\"row\">\r\n          {userItems}\r\n        </div>\r\n        <button onClick={() => this.openEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'lg-modal-panel'} \r\n          title={'User'} >\r\n\r\n          <div>\r\n            <h3>{'User'}</h3>\r\n            <form>\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Temp password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"tempPassword\" \r\n                value={this.state.tempPassword}\r\n                onChange={this.handleInputChange} />\r\n              \r\n              <label>System Role</label>\r\n              <select value={this.state.sysRole} onChange={(event) => this.handleOptionChange('sysRole', event)}>\r\n                {sysRoleOptions}\r\n              </select>\r\n              <br/>\r\n              \r\n              <label>Groups</label>\r\n              <select value={this.state.userGroupId} onChange={(event) => this.handleOptionChange('userGroupId', event)}>\r\n                {groupOptions}\r\n              </select>\r\n              <button onClick={this.addUserGroup}>Add</button>\r\n              <div>\r\n                {userGroupItems}\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, event) => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      this.setState({\r\n        id: group.id,\r\n        name: group.name,\r\n        groupDashboards: group.groupDashboards\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/group/' + id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n      });\r\n  }\r\n\r\n  addGroupDashboard= (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n    if (index === -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.push(groupDashboardId);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId, event) => {\r\n    event.preventDefault();\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    const dashboardOptions = dashboards.map(dash => \r\n      <option value={dash.id} key={dash.id}>{dash.name}</option>\r\n    );\r\n\r\n    const groupItems = groups.map(group => \r\n      <div key={group.id} className=\"group-card\">\r\n        <p>\r\n          {group.name}\r\n          <button onClick={() => this.openEditPanel(group)}>update</button>\r\n          <button onClick={() => this.delete(group.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId}>\r\n                <div>Name: {dashboards[j].name}</div>\r\n                <button onClick={(event) => this.removeGroupDashboard(dashboardId, event)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Group</h1>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Group...\"\r\n          />\r\n        <button onClick={this.search}>Search</button>\r\n        <div className=\"row\">\r\n          {groupItems}\r\n        </div>\r\n        <button onClick={() => this.openEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'lg-modal-panel'} \r\n          title={'Group'} >\r\n\r\n          <div>\r\n            <h3>{'Group'}</h3>\r\n            <form>\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n              \r\n              <label>Dashboards</label>\r\n              <select value={this.state.groupDashboardId} onChange={(event) => this.handleOptionChange('groupDashboardId', event)}>\r\n                {dashboardOptions}\r\n              </select>\r\n              <button onClick={this.addGroupDashboard}>Add</button>\r\n              <div>\r\n                {groupDashboardItems}\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\nimport { Route, Link, Switch } from \"react-router-dom\";\r\nimport User from './User';\r\nimport Group from './Group';\r\nimport './UserManagement.css';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/user-management/user',\r\n    value: 'User',\r\n    icon: 'fa-users'\r\n  }, \r\n  {\r\n    link: '/workspace/user-management/group',\r\n    value: 'Group',\r\n    icon: 'fa-user-cog',\r\n  }\r\n];\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: 'group',\r\n    }\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let menuItems = [];\r\n    for (let i = 0; i < MENU_ITEMS.length; i++) {\r\n      const menu = MENU_ITEMS[i];\r\n      const active = this.state.currentMenuLink === menu.link ? 'active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li className={active} key={i}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <i className={`fas ${menu.icon} fa-fw`}></i>\r\n              <span className=\"app-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <ul className=\"nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/workspace/user-management/user\" component={User} />\r\n            <Route path=\"/workspace/user-management/group\" component={Group} />\r\n          </Switch>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        alert('confirm password');\r\n        return;\r\n      }\r\n      \r\n      user.password = password;\r\n    }\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>Account</div>\r\n        <div className=\"form-panel\">   \r\n          <label>Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label>System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label>API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button className=\"button\" onClick={this.generateApiKey}>Generate new API Key</button>\r\n          <br/>\r\n\r\n          {\r\n            showUpdatePassword ?\r\n            (\r\n              <React.Fragment>\r\n                <br/>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label>Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n            ) :\r\n            (\r\n              <React.Fragment>\r\n                <br/>\r\n                <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n              </React.Fragment>\r\n            )\r\n          }\r\n\r\n          <br/>\r\n          <button className=\"button\" onClick={this.save}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","import React from 'react';\r\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\n\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport AuthStore from '../api/AuthStore';\r\nimport './Workspace.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data source',\r\n    icon: 'database'\r\n  }, \r\n  {\r\n    link: '/workspace/user-management',\r\n    value: 'User Management',\r\n    icon: 'users-cog'\r\n  }\r\n];\r\n\r\nconst ACCOUNT_MENU_LINK = '/workspace/account';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard',\r\n      username: '',\r\n      sysRole: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Workspace - componentDidMount');\r\n    const pathname = this.props.location.pathname;\r\n    // TODO: fetch user information\r\n    this.setState({\r\n      currentMenuLink: pathname,\r\n    });\r\n    if (AuthStore.isAuthenticated) {\r\n      const sysRole = AuthStore.sysRole;\r\n      this.setState({\r\n        sysRole: sysRole\r\n      });\r\n    } else {\r\n      // Try login. If not, redirect\r\n    }\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n      sysRole\r\n    } = this.state;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.name === 'dashboard' || m.name === 'account');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li className={active} key={menu.link}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"workspace-nav\">  \r\n          <div className=\"workspace-name\">Poli</div>\r\n          <ul className=\"workspace-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div className=\"workspace-account-menu\">\r\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\r\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\r\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\r\n                <span className=\"workspace-nav-menu-text\">Account</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"workspace-logout-button inline-block\">\r\n              <Link to=\"/login\">\r\n                <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"workspace-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route exact path=\"/workspace/dashboard/view\" component={DashboardFullScreenView} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n            <Route path=\"/workspace/dashboard\" component={Dashboard} />\r\n            <Route path=\"/workspace/user-management\" component={UserManagement} />\r\n          </Switch>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Workspace);\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, Component } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\n\r\nimport AuthStore from './api/AuthStore';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv\r\n} from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('App - componentDidMount', AuthStore.isAuthenticated);\r\n  }\r\n   \r\n  render() {\r\n    console.log('App - render', AuthStore.isAuthenticated);\r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <PrivateRoute authenticated={AuthStore.isAuthenticated} path='/workspace' component={Workspace} />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} />\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}