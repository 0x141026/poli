{"version":3,"sources":["views/Login.js","views/ChangeTempPassword.js","api/WebApi.js","components/Modal.js","components/Toast.js","components/SearchInput.js","views/DataSource.js","api/Constants.js","components/ColorPicker.js","components/Checkbox.js","api/Util.js","api/EchartsApi.js","components/GridDraggable.js","components/GridResizable.js","components/TableWidget.js","components/filters/Slicer.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/Tabs.js","components/Select.js","components/WidgetEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/DashboardFullScreenView.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","handleKeyPress","keyCode","login","_this$state","state","username","password","user","axios","post","then","res","loginResponse","data","error","errorMsg","onLoginSuccess","_this2","isAuthenticated","sysRole","react_default","a","createElement","Fragment","className","type","onChange","onKeyDown","onClick","React","Component","withRouter","ChangeTempPassword","changePassword","confirmedPassword","length","history","push","style","fontSize","textAlign","fontWeight","marginBottom","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","concat","onClose","react_fontawesome_index_es","icon","size","COLOR_RED","Toast","message","bgColor","timeoutId","clearTimeout","showToast","backgroundColor","setTimeout","hide","_toastRef","assertThisInitialized","clearInterval","toastStatus","showSuccess","showError","SearchInput","reset","inputWidth","inputStyle","width","margin","placeholder","DataSource","handleNameInputChange","save","showUpdatePassword","id","connectionUrl","driverClassName","ping","ds","put","closeEditPanel","catch","result","clearEditPanel","initialState","openEditPanel","showEditPanel","confirmDelete","_this$state$objectToD","objectToDelete","delete","closeConfirmDeletionPanel","openConfirmDeletionPanel","datasource","showConfirmDeletionPanel","toggleUpdatePassword","prevState","jdbcDataSources","searchValue","webApi","_this$state2","_this$state2$jdbcData","_this$state2$objectTo","mode","jdbcDataSourceItems","_loop","i","includes","key","class","marginRight","src_components_SearchInput","src_components_Modal","rows","CHART","FILTER","WIDGET_TYPES","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","SYS_ROLE_ADMIN","SYS_ROLE_VIEWER","DEFAULT_DASHBOARD_HEIGHT","ColorPicker","handleClick","showPalette","handleClose","handleChange","color","rgb","rgba","r","g","b","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","Checkbox","toggle","checked","_this$props2","checkmarkBoxStyle","jsonToArray","json","array","JSON","parse","e","getReadableDiffTime","d1","d2","seconds","Math","abs","floor","minutes","hours","CHART_COLORS","getPieOption","queryResultData","pieKey","pieValue","legend","series","row","tooltip","orient","center","radius","getPieOptionTemplate","WIDGET_BORDER","GridDraggable","onMouseDown","preventDefault","gridItemNode","ReactDOM","findDOMNode","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","fixedWidth","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","TableWidget","handleTdClick","dashboardId","columnName","columnValue","onTableTdClick","_this$props$data","_this$props$columns","columns","_this$props$drillThro","drillThrough","columnHeaders","forEach","column","header","Header","accessor","index","findIndex","d","Cell","es","defaultPageSize","previousText","nextText","Slicer","toggleSelectAll","newIsSelectAll","isSelectAll","newCheckBoxes","toConsumableArray","checkBoxes","isChecked","handleSearchValueChange","handleCheckBoxChange","x","_this$props$checkBoxe","checkBoxItems","checkBox","src_components_Checkbox","selectText","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","instance","handleOriginal","console","log","drills","widgetDrillThrough","onChartClick","param","echarts","onChartLegendselectchanged","echart","widgetClickEvent","onWidgetContentClick","onSlicerChange","onWidgetFilterInputChange","onSingleValueChange","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","filterType","_this$props$queryResu","queryResult","Util","widgetItem","Constants","src_components_TableWidget","chartOption","EchartsApi","echarts_for_react_lib_default","option","onEvents","components_filters_Slicer","isEditMode","_this$props2$style","_style$showBorder","showBorder","borderColor","showTitle","borderStyle","gridBoxStyle","border","Array","isArray","components_GridDraggable","components_GridResizable","GridLayout","_this$props$widgets","widgets","showGridlines","backgroundSize","backgroundImage","boxItems","map","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","viewWidth","newWidgets","gridWidth","resizeWidgetsToActual","resizeWidgetsToBase","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryFilters","queryCharts","saveWidgets","stringify","w","splice","_this$state$widgets","getFilterParams","_this$state$widgets2","filterParams","filterParam","_widget$checkBoxes","paramValues","j","remark","queryParameter","_widgets$i","queryChart","_widgets$i2","queryFilter","params","_this3","_arr","values","_i","val","_this4","widgetViewWidth","onStyleValueChange","components_ColorPicker","src_components_GridLayout","Tabs","handleTabClick","activeTab","tabHeaders","tabContent","active","Select","handleOptionChange","_this$props$options","options","optionValue","optionDisplay","_this$props$preloadOn","preloadOneEmpty","optionList","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","_widget$data","sqlQuery","jdbcDataSourceId","runQuery","_x","objectSpread","handleAceEditorChange","newValue","handleIntegerOptionChange","intValue","_this$state3","_this$state4","onSave","queryRequest","addDrillThrough","_this$state5","drillColumnName","drillDashboardId","newDrillThrough","removeDrillThrough","drill","generateChart","_this$state6","_this$state6$queryRes","renderChartPreview","_this$state7","_this$state7$queryRes","chartPreview","_this$state8","components_Select","_this$state9","_this$state9$jdbcData","_this$state9$drillThr","_this$state9$drillDas","drillItems","columnItems","col","dataType","showQueryTab","src_components_Tabs","react_ace_lib_default","theme","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","marginTop","DashboardEditView","loadViewByDashboardName","dashboardName","match","url","location","search","URLSearchParams","fromDashboard","getPageWidth","isFullScreenView","refresh","toggleAutoRefresh","autoRefreshTimerId","refreshInterval","interval","timerId","setInterval","queryWidgets","updateLastRefreshed","refreshWidgetView","widgetViewPanel","current","now","Date","lastRefreshed","updateReadableLastRefreshed","readableLastRefreshed","dashboard","onDashboardSave","edit","cancelEdit","onSaveWidget","showWidgetEditPanel","openWidgetEditPanel","widgetEditPanel","applyFilters","fullScreen","window","open","nextDashboard","nextLink","goBackToFromDashboard","goBack","onDashboardDelete","deleteDashboard","lastRefreshLabelTimerId","jdbcDataSourceOptions","createRef","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","editButtonPanel","autoRefreshStatus","fullScreenButtonPanel","controlButtons","components_WidgetViewPanel","ref","src_components_WidgetEditPanel","Dashboard","fetchBoards","view","activeDashboardId","pathname","indexOf","Number","substring","_this$state$dashboard","showEdit","dashboardRows","menuActive","Route","path","render","views_DashboardEditView","User","fetchUsers","users","fetchGroups","groups","tempPassword","userGroups","userGroupId","initialEditPanelState","selectedSysRole","addUserGroup","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_this$state3$users","_this$state3$groups","_this$state3$userGrou","_this$state3$objectTo","userItems","userGroupItems","_loop2","Group","fetchDashboards","group","groupDashboards","groupDashboardId","addGroupDashboard","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","UserManagement","views_Group","views_User","Account","fetchUser","apiKey","generateApiKey","DashboardFullScreenView","MENU_ITEMS","link","Workspace","handleMenuClick","menuLink","currentMenuLink","logout","onLogout","startsWith","find","m","menuItems","menuList","filter","menu","Link","to","isAccountMenuActive","Switch","exact","component","views_UserManagement","src_views_Dashboard","src_components_Toast","PageNotFound","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","faCircleNotch","faSearch","faSave","faCalendarPlus","faFilter","faExternalLinkAlt","App","isTempPassword","isAuthorizing","directUrl","interceptors","use","status","Promise","reject","currentPath","spin","src_views_Login","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","BrowserRouter","basename","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0dd48166.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { sysRole } = this.props;\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      axios.post('/auth/login/cookie')\r\n        .then(res => {\r\n          const loginResponse = res.data;\r\n          if (!loginResponse.error) {\r\n            this.props.onLoginSuccess(loginResponse);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.keyCode === 13) {\r\n      this.login();\r\n    }\r\n  }\r\n\r\n  login = () => {\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const loginResponse = res.data;\r\n        if (loginResponse.error) {\r\n          this.setState({\r\n            errorMsg: loginResponse.error\r\n          });\r\n        } else {\r\n          this.props.onLoginSuccess(loginResponse);\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div className=\"login-app-title\">Poli</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <div className=\"login-panel-body\">\r\n            <div className=\"form-panel\">\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n              <label>Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n              <button className=\"button login-button\" onClick={this.login}>Login</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport './Login.css';\r\n\r\nclass ChangeTempPassword extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  changePassword = () => {\r\n    const {\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    if (password && confirmedPassword\r\n        && password === confirmedPassword) {\r\n      if (password.length < 8) {\r\n        this.setState({\r\n          errorMsg: `Use 8 or more characters.`\r\n        });\r\n        return;\r\n      }\r\n\r\n      const user = {\r\n        password: password\r\n      }\r\n\r\n      axios.post('/auth/login/change-password', user)\r\n        .then(res => {\r\n          const loginResponse = res.data || {};\r\n          if (loginResponse.error) {\r\n            this.setState({\r\n              errorMsg: loginResponse.error\r\n            });\r\n          } else {\r\n            this.props.history.push('/workspace/dashboard');\r\n          }\r\n        });\r\n    } else {\r\n      this.setState({\r\n        errorMsg: `Those passwords didn't match.`\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const titleStyle = {\r\n      fontSize: '22px',\r\n      textAlign: 'center',\r\n      fontWeight: 'bold',\r\n      marginBottom: '15px'\r\n    }\r\n\r\n    const tipStyle = {\r\n      fontWeight: 'bold',\r\n      marginBottom: '5px',\r\n      fontSize: '15px'\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div style={titleStyle}>Change password</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <div className=\"login-panel-body\">\r\n            <div className=\"form-panel\">\r\n              <div style={tipStyle}>* Use 8 or more characters</div>\r\n              <label>New password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n              <label>Confirm password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"confirmedPassword\" \r\n                value={this.state.confirmedPassword}\r\n                onChange={this.handleInputChange} />\r\n              <button className=\"button login-button\" onClick={this.changePassword}>Confirm</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ChangeTempPassword);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      modalClass = '',\r\n      title,\r\n      children\r\n    } = this.props;\r\n\r\n    const modalStatus = show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={`modal-panel ${modalClass}`}>\r\n          <div className=\"model-header row\">\r\n            <div className=\"model-title\">{title}</div>\r\n            <button className=\"model-close-button icon-button\" onClick={() => this.props.onClose()}>\r\n              <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          <div className='modal-body'>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Toast.css';\r\n\r\nconst COLOR_RED = '#FF5630';\r\nconst COLOR_GREEN = '#36B37E';\r\n\r\nclass Toast extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showToast: false,\r\n      message: '',\r\n      backgroundColor: COLOR_RED,\r\n      timeoutId: ''\r\n    };\r\n\r\n    Toast._toastRef = this;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { timeoutId } = this.state;\r\n    if (timeoutId) {\r\n      clearInterval(timeoutId);\r\n    }\r\n  }\r\n\r\n  show = (message, bgColor) => {\r\n    const { timeoutId } = this.state;\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    this.setState({ \r\n      showToast: true,\r\n      message: message,\r\n      backgroundColor: bgColor,\r\n      timeoutId: ''\r\n    }, () => {\r\n      const timeoutId = setTimeout(() => {\r\n        this.hide();\r\n      }, 3000);\r\n      this.setState({\r\n        timeoutId: timeoutId\r\n      });\r\n    });\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({ \r\n      showToast: false,\r\n      message: ''\r\n    });\r\n  }\r\n\r\n  static showSuccess = (message) => {\r\n    Toast._toastRef.show(message, COLOR_GREEN);\r\n  }\r\n\r\n   static showError = (message) => {\r\n    Toast._toastRef.show(message, COLOR_RED);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showToast,\r\n      message,\r\n      backgroundColor\r\n    } = this.state;\r\n\r\n    const toastStatus = showToast ? 'display-block' : 'display-none';\r\n    const style = {\r\n      backgroundColor: backgroundColor\r\n    }\r\n\r\n    return (\r\n      <div className={`toast-container ${toastStatus}`} style={style}>\r\n        {message}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toast;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './SearchInput.css';\r\n\r\nclass SearchInput extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    inputWidth: PropTypes.number\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const { name } = this.props;\r\n    const value = event.target.value;\r\n    this.props.onChange(name, value);\r\n  }\r\n\r\n  reset = () => {\r\n    const { name } = this.props;\r\n    this.props.onChange(name, '');\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      value,\r\n      inputWidth\r\n    } = this.props;\r\n\r\n    let inputStyle = {};\r\n    if (inputWidth) {\r\n      inputStyle.width = inputWidth + 'px';\r\n    }\r\n\r\n    return (\r\n      <div className=\"search-input-container\">\r\n        <div className=\"row\">\r\n          <div className=\"search-input-icon float-left\">\r\n            <FontAwesomeIcon icon=\"search\" style={{margin: '10px'}} />\r\n          </div>\r\n          <div className=\"float-left\">\r\n            <input\r\n              type=\"text\"\r\n              name={name}\r\n              value={value}\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleInputChange}\r\n              className=\"search-input-input\"\r\n              style={inputStyle}\r\n            />\r\n          </div>\r\n          <button className=\"button search-input-reset-button float-left\" onClick={this.reset}>\r\n            <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchInput;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './Datasource.css';\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport SearchInput from '../components/SearchInput';\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      showUpdatePassword: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataSources();\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      driverClassName,\r\n      username,\r\n      password,\r\n      name,\r\n      ping,\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      Toast.showError('Enter a name.');\r\n      return;\r\n    }\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      driverClassName: driverClassName,\r\n      username: username,\r\n      name: name,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword && password) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          Toast.showError('The name exists. Try another.');\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          Toast.showError('The name exists. Try another.');\r\n        });\r\n    } \r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        if (result === 'success') {\r\n          Toast.showSuccess('Ping Succeeded');\r\n        } else {\r\n          Toast.showError(result);\r\n        }\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        driverClassName: ds.driverClassName,\r\n        username: ds.username,\r\n        name: ds.name,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/jdbcdatasource/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (datasource) => {\r\n    this.setState({\r\n      objectToDelete: datasource,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      id,\r\n      jdbcDataSources = [],\r\n      searchValue,\r\n      showConfirmDeletionPanel,\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const jdbcDataSourceItems = [];\r\n    for (let i = 0; i < jdbcDataSources.length; i++) {\r\n      const ds = jdbcDataSources[i];\r\n      const name = ds.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        jdbcDataSourceItems.push(\r\n          (\r\n            <div key={i} className=\"card float-left\">\r\n              <div className=\"card-header ellipsis\">\r\n                {name}\r\n              </div>\r\n              <div className=\"card-content\"></div>\r\n              <div className=\"card-footer row\">\r\n                <div className=\"float-right\">\r\n                  <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(ds)}>\r\n                    <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                  </button>\r\n                  <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(ds)}>\r\n                    <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                  </button>\r\n                  <button className=\"icon-button datasource-icon-button\" onClick={() => this.ping(ds.id)}>\r\n                    <FontAwesomeIcon icon=\"plug\" size=\"lg\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"full-page-content\">\r\n        <div class=\"row\">\r\n          <div className=\"float-left\" style={{marginRight: '5px'}}>\r\n            <SearchInput \r\n              name={'searchValue'} \r\n              value={this.state.searchValue} \r\n              onChange={this.handleNameInputChange} \r\n              inputWidth={200}\r\n            />\r\n          </div>\r\n          <button className=\"button float-left\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New\r\n          </button>\r\n        </div>\r\n        <div className=\"row mt-10\">\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Name <span className=\"required\">*</span></label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n            />\r\n\r\n            <label>Connection Url</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label>Driver Class Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"driverClassName\" \r\n              value={this.state.driverClassName}\r\n              onChange={this.handleInputChange} \r\n            />\r\n\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} \r\n            />\r\n            \r\n            { mode === 'Edit' && (\r\n              <div style={{margin: '3px 0px 8px 0px'}}>\r\n                <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n              </div>\r\n            )}\r\n\r\n            { (mode === 'New' || showUpdatePassword) && ( \r\n              <div>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} \r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <label>Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} \r\n            />\r\n            <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","/**\r\n * Constants\r\n */\r\nexport const CHART = 'chart';\r\nexport const FILTER = 'filter';\r\nexport const WIDGET_TYPES = [CHART, FILTER];\r\n\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\r\n\r\nexport const SYS_ROLE_ADMIN = 'admin';\r\nexport const SYS_ROLE_DEVELOPER = 'developer';\r\nexport const SYS_ROLE_VIEWER = 'viewer';\r\n\r\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;","import React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPalette: false\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      showPalette: !prevState.showPalette\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      showPalette: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    const { name } = this.props;\r\n    const rgb = color.rgb;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    this.props.onChange(name, rgba);\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: this.props.value\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: 2\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.showPalette && (\r\n          <div style={popover}>\r\n            <div style={cover} onClick={this.handleClose} />\r\n            <ChromePicker color={this.props.value} onChange={this.handleChange} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    const {\r\n      name,\r\n      checked\r\n    } = this.props;\r\n\r\n    this.props.onChange(name, !checked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      checked\r\n    } = this.props;\r\n\r\n    const checkmarkBoxBgColor = checked ? '#000000' : '#FFFFFF';\r\n    const checkmarkBoxStyle = {\r\n      backgroundColor: checkmarkBoxBgColor\r\n    };\r\n\r\n    return (\r\n      <div className=\"checkbox-container\" onClick={this.toggle}>\r\n        <div className=\"checkbox-checkmark\">\r\n          <div className=\"checkbox-checkmark-box\" style={checkmarkBoxStyle}>\r\n          </div>\r\n        </div>\r\n        <div className=\"checkbox-label\">{value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};\r\n\r\nexport const jsonToArray = (json) => {\r\n  let array;\r\n  try {\r\n    array = JSON.parse(json);\r\n  } catch(e) {\r\n    array = [];\r\n  }\r\n  return array;\r\n}\r\n\r\nexport const getReadableDiffTime = (d1, d2) => {\r\n  const seconds = Math.abs(d1 - d2) / 1000;\r\n  if (seconds <= 5) {\r\n    return 'Just now';\r\n  } else if (seconds > 5 && seconds < 60) {\r\n    return Math.floor(seconds) + ' Seconds ago';\r\n  }\r\n\r\n  const minutes = Math.floor(seconds / 60);\r\n  if (minutes == 1) {\r\n    return '1 Minute ago';\r\n  } else if (minutes > 1 && minutes < 60) {\r\n    return minutes + \" Minutes ago\";\r\n  } \r\n\r\n  const hours = Math.floor(seconds / 3600);\r\n  if (hours == 1) {\r\n    return '1 Hour ago';\r\n  }\r\n  return hours + \" Hours ago\";\r\n}  \r\n","import * as Util from '../api/Util';\r\n\r\nconst CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOptionTemplate = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      type: 'scroll',\r\n      orient: 'vertical',\r\n      data: legend,\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['40%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport const getPieOption = (queryResultData, pieKey, pieValue) => {\r\n  let legend = [];\r\n  let series = [];\r\n  for (let i = 0; i < queryResultData.length; i++) {\r\n    const row = queryResultData[i];\r\n    legend.push(row[pieKey]);\r\n    series.push({\r\n      name: row[pieKey],\r\n      value: row[pieValue]\r\n    });  \r\n  }\r\n  return getPieOptionTemplate(legend, series);\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    /*\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n      boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n    */\r\n   \r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport './TableWidget.css';\r\n\r\nclass TableWidget extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  handleTdClick = (dashboardId, columnName, columnValue) => {\r\n    this.props.onTableTdClick(dashboardId, columnName, columnValue);\r\n  }\r\n\r\n  render() {   \r\n    const {\r\n      data = [],\r\n      columns = [],\r\n      drillThrough = [],\r\n      error\r\n    } = this.props;\r\n\r\n    const columnHeaders = [];\r\n    columns.forEach(column => {\r\n      const columnName = column.name;\r\n      const header = {\r\n        Header: columnName,\r\n        accessor: columnName\r\n      };\r\n      if (drillThrough.length > 0) {\r\n        const index = drillThrough.findIndex(d => d.columnName === columnName);\r\n        if (index !== -1) {\r\n          const dashboardId = drillThrough[index].dashboardId;\r\n          header.Cell = (props => \r\n            <span className=\"link-label\" \r\n              onClick={() => this.handleTdClick(dashboardId, columnName, props.value)}>\r\n              {props.value}\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n\r\n      columnHeaders.push(header);\r\n    });\r\n\r\n    if (error) {\r\n      return (\r\n        <div>\r\n          {error}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (data.length === 0 || columns.length === 0) {\r\n      return (\r\n        <div>No data</div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ReactTable\r\n        data={data}\r\n        columns={columnHeaders}\r\n        defaultPageSize={10}\r\n        previousText={'Prev'}\r\n        nextText={'Next'}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableWidget;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Checkbox from '../Checkbox';\r\nimport './Slicer.css';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSelectAll: false,\r\n      searchValue: ''\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    checkBoxes: PropTypes.array.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n  };\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n\r\n    this.props.onChange(this.props.id, newCheckBoxes);\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.id, newCheckBoxes);\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      checkBoxes = [],\r\n    } = this.props;\r\n\r\n    const {\r\n      searchValue,\r\n      isSelectAll\r\n    } = this.state;\r\n\r\n    const checkBoxItems = [];\r\n    for (let i = 0; i < checkBoxes.length; i++) {\r\n      const checkBox = checkBoxes[i];\r\n      const value = checkBox.value;\r\n      if (!searchValue || (searchValue && value.includes(searchValue))) {\r\n        checkBoxItems.push(\r\n          (\r\n            <Checkbox \r\n              key={i} \r\n              name={checkBox.value} \r\n              value={checkBox.value} \r\n              checked={checkBox.isChecked} \r\n              onChange={this.handleCheckBoxChange} \r\n            />\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    const selectText = isSelectAll ? 'Deselect All' : 'Select All'\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" style={{marginBottom: '5px'}} onClick={this.toggleSelectAll}>{selectText}</button>\r\n        <input \r\n          type=\"text\" \r\n          name=\"name\" \r\n          value={this.state.searchValue}\r\n          onChange={this.handleSearchValueChange}\r\n          placeholder=\"Search...\"\r\n        />\r\n        \r\n        <div className=\"slicer-body\">\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\nimport TableWidget from './TableWidget';\r\nimport Slicer from './filters/Slicer';\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough || []; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        const index = drills.findIndex(d => d.columnName === header);\r\n        if (index !== -1) {\r\n          const dashboardId = drills[index].dashboardId;\r\n          // this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  onTableTdClick = (dashboardId, columnName, columnValue) => {\r\n    const widgetClickEvent = {\r\n      type: 'tableTdClick',\r\n      data: {\r\n        dashboardId: dashboardId,\r\n        columnName: columnName,\r\n        columnValue: columnValue\r\n      }\r\n    }\r\n    this.props.onWidgetContentClick(widgetClickEvent);\r\n  }\r\n\r\n  onSlicerChange = (widgetId, checkBoxes) => {\r\n    const data = {\r\n      checkBoxes: checkBoxes\r\n    };\r\n    this.props.onWidgetFilterInputChange(widgetId, data);\r\n  }\r\n\r\n  onSingleValueChange = (widgetId, event) => {\r\n    const value = event.target.value;\r\n    const data = {\r\n      value: value\r\n    };\r\n    this.props.onWidgetFilterInputChange(widgetId, data);\r\n  }\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      id,\r\n      type,\r\n      chartType,\r\n      filterType,\r\n      queryResult = {},\r\n      drillThrough,\r\n      data = {},\r\n      checkBoxes,\r\n      value\r\n    } = this.props;\r\n\r\n    const queryResultData = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    let widgetItem = (<div></div>);\r\n    if (type === Constants.CHART) {\r\n      if (chartType === Constants.TABLE) {\r\n        widgetItem = (\r\n          <TableWidget\r\n            data={queryResultData}\r\n            columns={columns}\r\n            error={error}\r\n            drillThrough={drillThrough}\r\n            onTableTdClick={this.onTableTdClick}\r\n          />\r\n        );\r\n      } else if (chartType === Constants.PIE) {\r\n        const { \r\n          pieKey,\r\n          pieValue\r\n        } = data;\r\n        const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\r\n        widgetItem = (\r\n          <ReactEcharts \r\n            option={chartOption}   \r\n            className=\"echarts\"\r\n            onEvents={onChartEvents}  \r\n          />\r\n        );\r\n      } \r\n    } else if (type === Constants.FILTER) {\r\n      if (filterType === Constants.SLICER) {\r\n        widgetItem = (\r\n          <div className=\"grid-box-content-panel\">\r\n            <Slicer \r\n              id={id} \r\n              checkBoxes={checkBoxes} \r\n              onChange={this.onSlicerChange} \r\n            />\r\n          </div>\r\n        );\r\n      } else if (filterType === Constants.SINGLE_VALUE) {\r\n        widgetItem = (\r\n          <div className=\"grid-box-content-panel\">\r\n            <input \r\n              type=\"text\"  \r\n              value={value}\r\n              onChange={(event) => this.onSingleValueChange(id, event)} \r\n            />\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    \r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      title,\r\n      isEditMode,\r\n      style = {},\r\n      drillThrough\r\n    } = this.props;\r\n\r\n    const { \r\n      showBorder = false,\r\n      showTitle = true,\r\n      borderColor,\r\n      backgroundColor,\r\n      zIndex\r\n    } = style;\r\n\r\n    const borderStyle = showBorder ? `2px solid ${borderColor}` : '2px solid transparent';\r\n\r\n    let gridBoxStyle = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: zIndex,\r\n      border: borderStyle\r\n    };\r\n\r\n    const hasDrillThrough = !Util.isArrayEmpty(drillThrough);\r\n\r\n    /*\r\n    <div className=\"grid-box-file-button-group\">\r\n      <div className=\"inline-block\" onClick={() => this.exportJson(id)}>\r\n        <FontAwesomeIcon icon=\"file-export\" fixedWidth />\r\n      </div>\r\n      \r\n      <div className=\"inline-block\" onClick={() => this.exportCsv(id)}>\r\n        <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\r\n      </div>\r\n      <div className=\"grid-box-file-button-group\">\r\n              <div className=\"inline-block\">\r\n                <FontAwesomeIcon icon=\"external-link-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n    </div>\r\n    */\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={gridBoxStyle}>\r\n        <div className=\"grid-box-title\">\r\n          <div className=\"grid-box-title-value float-left ellipsis\">{title}</div>\r\n\r\n          { isEditMode && (\r\n            <div className=\"float-right\" style={{marginRight: '20px'}}>\r\n              <div className=\"grid-box-icon inline-block\" onClick={() => this.editWidget(id)}>\r\n                <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n              </div>\r\n              <div className=\"grid-box-icon inline-block\" onClick={() => this.removeWidget(id)}>\r\n                <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { isEditMode && (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} \r\n          />\r\n        )}\r\n\r\n        { isEditMode && (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} \r\n          />\r\n        )}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridItem;","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      backgroundColor,\r\n      widgets = [],\r\n      showGridlines\r\n    } = this.props;\r\n\r\n    let style = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      backgroundColor: backgroundColor\r\n    };\r\n\r\n    if (showGridlines) {\r\n      style.backgroundSize = '15px 15px';\r\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n        onWidgetFilterInputChange={this.props.onWidgetFilterInputChange}\r\n        onWidgetContentClick={this.props.onWidgetContentClick}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={style} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ColorPicker from './ColorPicker';\r\nimport Checkbox from './Checkbox';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\nimport Modal from '../components/Modal';\r\nimport * as Constants from '../api/Constants';\r\n\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      snapToGrid: false,\r\n      showGridlines: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('WidgetViewPanel componentDidMount');\r\n  }\r\n\r\n  resizeGrid = (viewWidth) => {\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n\r\n    const gridWidth = viewWidth - 10;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return Math.round(num * gridWidth / BASE_WIDTH);\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Math.round(num * BASE_WIDTH / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, viewWidth) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get(`/ws/widget/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(viewWidth);\r\n          this.queryFilters();\r\n          this.queryCharts();\r\n        });\r\n      });\r\n  }\r\n \r\n  queryCharts() {\r\n    const filterParams = this.getFilterParams();\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const {\r\n        id,\r\n        type,\r\n      } = widgets[i];\r\n      if (type === Constants.CHART) {\r\n        this.queryChart(id, filterParams);\r\n      }\r\n    }\r\n  }\r\n\r\n  queryFilters() {\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const {\r\n        id,\r\n        type,\r\n        filterType\r\n      }  = widgets[i];\r\n      if (type === Constants.FILTER) {\r\n        this.queryFilter(id, filterType);\r\n      }\r\n    }\r\n  }\r\n\r\n  queryChart(widgetId, filterParams) {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    axios.post(`/ws/jdbcquery/widget/${widgetId}`, params)\r\n      .then(res => {\r\n        const queryResult = res.data;\r\n        const index = widgets.findIndex(w => w.id === queryResult.id);\r\n        const newWidgets = [...widgets];\r\n        newWidgets[index].queryResult = queryResult;\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n\r\n  queryFilter(widgetId, filterType) {\r\n    const { widgets } = this.state;\r\n    if (filterType === Constants.SLICER) {\r\n      axios.post(`/ws/jdbcquery/widget/${widgetId}`, [])\r\n        .then(res => {\r\n          const queryResult = res.data;\r\n          const queryResultData = Util.jsonToArray(queryResult.data);\r\n          const checkBoxes = [];\r\n          for (let i = 0; i < queryResultData.length; i++) {\r\n            const values = Object.values(queryResultData[i]);\r\n            for (const val of values) {\r\n              checkBoxes.push({\r\n                value: val,\r\n                isChecked: false\r\n              });\r\n            }\r\n          }\r\n          const index = widgets.findIndex(w => w.id === queryResult.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = queryResult;\r\n          newWidgets[index].checkBoxes = checkBoxes;\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    } else if (filterType === Constants.SINGLE_VALUE) {\r\n      /*\r\n        const values = Object.values(queryResultData);\r\n        let value = '';\r\n        for (const val of values) {\r\n          value = val;\r\n          break;\r\n        }\r\n        newFilters[index].value = value;\r\n      */\r\n      const index = widgets.findIndex(w => w.id === widgetId);\r\n      const newWidgets = [...widgets];\r\n      newWidgets[index].value = '';\r\n      this.setState({\r\n        widgets: newWidgets\r\n      });\r\n    }\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    this.setState({\r\n      [name]: isChecked\r\n    });\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    }, () => {\r\n      // FIXME: only save this widget. Not all.\r\n      this.saveWidgets();\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete\r\n    } = this.state;\r\n    const widgetId = objectToDelete;\r\n    axios.delete(`/ws/widget/${widgetId}`)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (widgetId) => {\r\n    this.setState({\r\n      objectToDelete: widgetId,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  onWidgetFilterInputChange = (widgetId, data) => {\r\n    const { \r\n      widgets = []\r\n    } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widgetId);\r\n    const newWidgets = [...widgets];\r\n    const widget = widgets[index];\r\n    if (widget.filterType === Constants.SLICER) {\r\n      const {\r\n        checkBoxes\r\n      } = data;\r\n      newWidgets[index].checkBoxes = checkBoxes;\r\n    } else if (widget.filterType === Constants.SINGLE_VALUE) {\r\n      const {\r\n        value\r\n      } = data;\r\n      newWidgets[index].value = value;\r\n    }\r\n\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });   \r\n  }\r\n\r\n  /**\r\n   * FIXME: optimize it. No need to calculate this every time.\r\n   */\r\n  getFilterParams = () => {\r\n    const { \r\n      widgets = []\r\n    } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      if (widget.type === Constants.FILTER) {\r\n        const { filterType } = widget;\r\n        const filterParam = {};\r\n        if (filterType === Constants.SLICER) {\r\n          const { \r\n            checkBoxes = []\r\n          } = widget;\r\n          const paramValues = [];\r\n          for (let j = 0; j < checkBoxes.length; j++) {\r\n            const checkBox = checkBoxes[j];\r\n            if (checkBox.isChecked) {\r\n              paramValues.push(checkBox.value);\r\n            }\r\n          }\r\n          filterParam.value = paramValues;\r\n          if (paramValues.length === checkBoxes.length) {\r\n            filterParam.remark = 'select all';\r\n          }\r\n        } else if (filterType === Constants.SINGLE_VALUE) {\r\n          filterParam.value = widget.value;\r\n        }\r\n        filterParam.param = widget.data.queryParameter;\r\n        filterParam.type = widget.filterType;\r\n        filterParams.push(filterParam);\r\n      }\r\n    }\r\n    return filterParams;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      widgetViewWidth,\r\n      isEditMode\r\n    } = this.props;\r\n    const style = {\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {isEditMode && (\r\n          <div className=\"dashboard-attribute-edit-panel\">\r\n            <div className=\"inline-block\">Height:</div>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.props.height}\r\n              onChange={(event) => this.props.onStyleValueChange('height', event.target.value)} \r\n              className=\"inline-block\" \r\n              style={{width: '200px'}}\r\n              />\r\n\r\n            <div>\r\n              Background Color\r\n              <ColorPicker name={'backgroundColor'} value={this.props.backgroundColor} onChange={this.props.onStyleValueChange} />\r\n            </div>\r\n\r\n            <Checkbox name=\"snapToGrid\" value=\"Snap to grid\" checked={this.state.snapToGrid} onChange={this.handleCheckBoxChange} />\r\n            <Checkbox name=\"showGridlines\" value=\"Show gridlines\" checked={this.state.showGridlines} onChange={this.handleCheckBoxChange} />\r\n  \r\n          </div>\r\n        )}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          backgroundColor={this.props.backgroundColor}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.openConfirmDeletionPanel} \r\n          onWidgetFilterInputChange={this.onWidgetFilterInputChange}\r\n          onWidgetContentClick={this.props.onWidgetContentClick}\r\n        />\r\n        \r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete this widget?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","import React from 'react';\r\nimport './Tabs.css';\r\n\r\nclass Tabs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const activeTab = this.props.activeTab;\r\n    this.setState({\r\n      activeTab: activeTab\r\n    });\r\n  }\r\n\r\n  handleTabClick = (title) => {\r\n    this.setState({\r\n      activeTab: title\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children\r\n    } = this.props;\r\n\r\n    const {\r\n      activeTab\r\n    } = this.state;\r\n\r\n    const tabHeaders = [];\r\n    let tabContent = null;\r\n    for (let i = 0; i < children.length; i++) {\r\n      if (children[i]) {\r\n        const title = children[i].props.title;\r\n        let active = '';\r\n        if (title === activeTab) {\r\n          active = 'tab-header-active';\r\n          tabContent = children[i].props.children;\r\n        }\r\n        \r\n        tabHeaders.push(\r\n          <li className={`tab-header-item ${active}`} key={i} onClick={() => this.handleTabClick(title)}>{title}</li>\r\n        );\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className=\"tab-container\">\r\n        <ul className=\"tab-header\">\r\n          {tabHeaders}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {tabContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Select extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    optionDisplay: PropTypes.string,\r\n    optionValue: PropTypes.string,\r\n    preloadOneEmpty: PropTypes.bool\r\n  };\r\n\r\n  handleOptionChange = (event) => {\r\n    const name = this.props.name;\r\n    const value = event.target.value;\r\n    this.props.onChange(name, value);\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      value,\r\n      options = [],\r\n      optionValue,\r\n      optionDisplay,\r\n      preloadOneEmpty = true\r\n    } = this.props;\r\n\r\n    const optionList = [];\r\n    if (preloadOneEmpty) {\r\n      optionList.push(\r\n        <option value=\"\" key=\"\"></option>\r\n      );\r\n    }\r\n    \r\n    options.forEach((option, index) => {\r\n      let value;\r\n      let display;\r\n      if (optionValue && optionDisplay) {\r\n        // The options contain objects.\r\n        value = option[optionValue];\r\n        display = option[optionDisplay];\r\n      } else {\r\n        // The options contain string or number.\r\n        value = option;\r\n        display = option;\r\n      }\r\n      \r\n      optionList.push(\r\n        <option value={value} key={index}>{display}</option>\r\n      ) \r\n    });\r\n\r\n    return (\r\n      <select value={value} onChange={this.handleOptionChange}>\r\n        {optionList}\r\n      </select>\r\n    )\r\n  };\r\n}\r\n\r\nexport default Select;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport AceEditor from 'react-ace';\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nimport './WidgetEditPanel.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport Checkbox from './Checkbox';\r\nimport Tabs from './Tabs';\r\nimport Select from './Select';\r\nimport TableWidget from './TableWidget';\r\nimport ColorPicker from './ColorPicker';\r\n\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      title: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: {},\r\n      type: Constants.CHART,\r\n      filterType: Constants.SINGLE_VALUE,\r\n      chartType: Constants.TABLE,\r\n      style: {\r\n        showBorder: false,\r\n        borderColor: 'rgba(9, 30, 66, 1)',\r\n        showTitle: true,\r\n        backgroundColor: 'rgba(255, 255, 255, 1)',\r\n        zIndex: 50\r\n      },\r\n      queryParameter: '',\r\n      drillThrough: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: '',\r\n      pieKey: '',\r\n      pieValue: '',\r\n      chartOption: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const widget = res.data;\r\n          const {\r\n            type,\r\n            chartType,\r\n            filterType,\r\n            drillThrough\r\n          } = widget;\r\n          if (type === Constants.CHART) {\r\n            this.setState({\r\n              chartType: chartType,\r\n              drillThrough: drillThrough\r\n            });\r\n\r\n            if (chartType === Constants.PIE) {\r\n              const {\r\n                pieKey,\r\n                pieValue\r\n              } = widget.data;\r\n              this.setState({\r\n                pieKey: pieKey,\r\n                pieValue: pieValue\r\n              });\r\n            }\r\n          } else if (type === Constants.FILTER) {\r\n            const {\r\n              queryParameter\r\n            } = widget.data;\r\n            this.setState({\r\n              filterType: filterType,\r\n              queryParameter: queryParameter\r\n            });\r\n            if (filterType === Constants.SLICER) {\r\n\r\n            } else if (filterType === Constants.SINGLE_VALUE) {\r\n\r\n            }\r\n          }\r\n          \r\n          this.setState({\r\n            widgetId: widgetId,\r\n            title: widget.title,\r\n            x: widget.x,\r\n            y: widget.y,\r\n            width: widget.width,\r\n            height: widget.height,\r\n            sqlQuery: widget.sqlQuery,\r\n            type: type,\r\n            jdbcDataSourceId: widget.jdbcDataSourceId,\r\n            style: widget.style\r\n          }, () => {\r\n            this.runQuery();\r\n          });\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  onStyleValueChange = (name, value) => {\r\n    const style = {...this.state.style};\r\n    style[[name]] = value;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n\r\n  save = () => {\r\n    const {\r\n      widgetId,\r\n      title,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      type,\r\n      style\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      title: title,\r\n      dashboardId: this.props.dashboardId,\r\n      type: type,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      style: style\r\n    }\r\n\r\n    if (type === Constants.CHART) {\r\n      const {\r\n        chartType,\r\n        drillThrough\r\n      } = this.state;\r\n      widget.drillThrough = drillThrough;\r\n      widget.chartType = chartType;\r\n\r\n      if (chartType === Constants.TABLE) {\r\n\r\n      } else if (chartType === Constants.PIE) {\r\n        const {\r\n          pieKey,\r\n          pieValue\r\n        } = this.state;\r\n        widget.data = {\r\n          pieKey: pieKey,\r\n          pieValue: pieValue\r\n        }\r\n      }\r\n    } else if (type === Constants.FILTER) {\r\n      const  {\r\n        filterType,\r\n        queryParameter\r\n      } = this.state;\r\n      widget.filterType = filterType;\r\n      widget.data = {\r\n        queryParameter: queryParameter\r\n      }\r\n      if (filterType === Constants.SLICER) {\r\n\r\n      } else if (filterType === Constants.SINGLE_VALUE) {\r\n\r\n      }\r\n    }\r\n    \r\n\r\n    if (widgetId === null) {\r\n      widget.style = {\r\n        showBorder: false,\r\n        borderColor: 'rgba(9, 30, 66, 1)',\r\n        showTitle: true,\r\n        backgroundColor: 'rgba(255, 255, 255, 1)',\r\n        zIndex: 50\r\n      }\r\n\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          queryResult: result\r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = () => {\r\n    const { \r\n      drillThrough,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const index = drillThrough.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrillThrough = [...drillThrough];\r\n      newDrillThrough.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drillThrough: newDrillThrough\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill) => {\r\n    const { drillThrough } = this.state;\r\n    const index = drillThrough.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrillThrough = [...drillThrough];\r\n      newDrillThrough.splice(index, 1);\r\n      this.setState({\r\n        drillThrough: newDrillThrough\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = () => {\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        pieKey, \r\n        pieValue, \r\n        queryResult = {}\r\n      } = this.state;\r\n      const data = Util.jsonToArray(queryResult.data);\r\n      const chartOption = EchartsApi.getPieOption(data, pieKey, pieValue);\r\n      this.setState({\r\n        chartOption: chartOption\r\n      });\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      queryResult = {},\r\n    } = this.state;\r\n    const columns = queryResult.columns || [];\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        chartOption,\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n\r\n      chartPreview = (\r\n        <div>\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label>Aggr Key (string)</label>\r\n          <Select\r\n            name={'pieKey'}\r\n            value={pieKey}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n          />\r\n\r\n\r\n          <label>By Aggr Value (number)</label>\r\n          <Select\r\n            name={'pieValue'}\r\n            value={pieValue}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n          />\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      type,\r\n      queryResult,\r\n      jdbcDataSources = [],\r\n      drillThrough = [],\r\n      drillDashboards = []\r\n    } = this.state;\r\n\r\n    const data = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    const drillItems = drillThrough.map(drill =>\r\n      <div key={drill.columnName} className=\"row table-row\">\r\n        <div className=\"float-left ellipsis\">Column: {drill.columnName}, Dashboard: {drill.dashboardId}</div>\r\n        <button className=\"button table-row-button float-right\"onClick={() => this.removeDrillThrough(drill)}>\r\n          <FontAwesomeIcon icon=\"trash-alt\" />\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    const columnItems = columns.map(col =>\r\n      <div className=\"row\" key={col.name}>\r\n        <div className=\"float-left\">{col.name}</div>\r\n        <div className=\"float-right\">{col.dataType}</div>\r\n      </div>\r\n    );\r\n\r\n    const showQueryTab = type === Constants.CHART || (type === Constants.FILTER && this.state.filterType === Constants.SLICER);\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        <div className=\"row mt-10\">\r\n          <div className=\"float-left\">Type:</div>\r\n          <div className=\"float-left\">\r\n            <Select\r\n              name={'type'}\r\n              value={type}\r\n              onChange={this.handleOptionChange}\r\n              options={Constants.WIDGET_TYPES}\r\n              preloadOneEmpty={false}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mt-10\">\r\n          <Tabs activeTab=\"Basic\">\r\n            <div title=\"Basic\">\r\n              <div className=\"form-panel\">\r\n                <label>Title</label>\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"title\" \r\n                  value={this.state.title}\r\n                  onChange={this.handleInputChange} \r\n                />\r\n\r\n                <Checkbox name=\"showBorder\" value=\"Show border\" checked={this.state.style.showBorder} onChange={this.onStyleValueChange} />\r\n                <Checkbox name=\"showTitle\" value=\"Show title\" checked={this.state.style.showTitle} onChange={this.onStyleValueChange} />\r\n\r\n                <label>Z Index</label>\r\n                <input \r\n                  type=\"number\" \r\n                  name=\"zIndex\" \r\n                  value={this.state.style.zIndex}\r\n                  onChange={(event) => this.onStyleValueChange('zIndex', event.target.value)} \r\n                />\r\n\r\n                <div>\r\n                  Border Color\r\n                  <ColorPicker name={'borderColor'} value={this.state.style.borderColor} onChange={this.onStyleValueChange} />\r\n                </div>\r\n\r\n                <div>\r\n                  Background Color\r\n                  <ColorPicker name={'backgroundColor'} value={this.state.style.backgroundColor} onChange={this.onStyleValueChange} />\r\n                </div>\r\n\r\n                \r\n              </div>\r\n            </div>\r\n\r\n            { type === Constants.FILTER && (  \r\n              <div title=\"Filter\">\r\n                <div className=\"form-panel\">\r\n                  <label>Filter Options</label>\r\n                  <Select\r\n                    name={'filterType'}\r\n                    value={this.state.filterType}\r\n                    onChange={this.handleOptionChange}\r\n                    options={Constants.FILTER_TYPES}\r\n                    preloadOneEmpty={false}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { showQueryTab && (\r\n              <div title=\"Query\">\r\n                <div className=\"form-panel\">\r\n                  <label>DataSource</label>\r\n                  <Select\r\n                    name={'jdbcDataSourceId'}\r\n                    value={this.state.jdbcDataSourceId}\r\n                    onChange={this.handleIntegerOptionChange}\r\n                    options={jdbcDataSources}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'id'}\r\n                    />\r\n                \r\n                  <label>SQL Query</label>\r\n                  <AceEditor\r\n                    value={this.state.sqlQuery}\r\n                    mode=\"mysql\"\r\n                    theme=\"xcode\"\r\n                    name=\"blah2\"\r\n                    onChange={this.handleAceEditorChange}\r\n                    height={'300px'}\r\n                    width={'100%'}\r\n                    fontSize={15}\r\n                    showPrintMargin={false}\r\n                    showGutter={true}\r\n                    highlightActiveLine={true}\r\n                    setOptions={{\r\n                      showLineNumbers: true,\r\n                      tabSize: 2\r\n                    }}\r\n                  />\r\n\r\n                  <div style={{margin: '5px 0px 5px 0px'}}>\r\n                    <button className=\"button\" onClick={this.runQuery}>Run Query</button>\r\n                  </div>\r\n\r\n                  <label>Result</label>\r\n                  <TableWidget\r\n                    data={data}\r\n                    columns={columns}\r\n                    error={error}\r\n                  />\r\n\r\n                  <label style={{marginTop: '5px'}}>Columns Mapping</label>\r\n                  <div>\r\n                    {columnItems}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { type === Constants.CHART && (\r\n              <div title=\"Chart\">\r\n                <div className=\"form-panel\">\r\n                  <label>Chart Type</label>\r\n                  <Select\r\n                    name={'chartType'}\r\n                    value={this.state.chartType}\r\n                    onChange={this.handleOptionChange}\r\n                    options={Constants.CHART_TYPES}\r\n                    preloadOneEmpty={false}\r\n                  />\r\n                  <label>Preview</label>\r\n                  {this.renderChartPreview()} \r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            { type === Constants.CHART && (\r\n              <div title=\"Drill Through\">\r\n                <div className=\"form-panel\">\r\n                  <label>Column</label>\r\n                  <Select\r\n                    name={'drillColumnName'}\r\n                    value={this.state.drillColumnName}\r\n                    options={columns}\r\n                    onChange={this.handleOptionChange}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'name'}\r\n                  />\r\n\r\n                  <label>Dashboard</label>\r\n                  <Select\r\n                    name={'drillDashboardId'}\r\n                    value={this.state.drillDashboardId}\r\n                    options={drillDashboards}\r\n                    onChange={this.handleIntegerOptionChange}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'id'}\r\n                  />\r\n                  <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\r\n                  <div class=\"mt-3\">\r\n                    {drillItems}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { type === Constants.FILTER && (\r\n              <div title=\"Query parameter\">\r\n                <div className=\"form-panel\">\r\n                  <label>Parameter</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    name=\"queryParameter\" \r\n                    value={this.state.queryParameter}\r\n                    onChange={this.handleInputChange} \r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\n\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport * as Util from '../api/Util';\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      isEditMode: false,\r\n      isFullScreenView: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      refreshInterval: 15,\r\n      lastRefreshLabelTimerId: '',\r\n      jdbcDataSourceOptions: [],\r\n      fromDashboard: '',\r\n      dashboardId: 0,\r\n      name: '',\r\n      style: {},\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    if (id === undefined) {\r\n      // If the drill through is triggered from the full-dashboard page already, this component is remounted but not FullScreenView.\r\n      const dashboardName = this.props.match.params.name;\r\n      if (dashboardName !== undefined) {\r\n        this.loadViewByDashboardName();\r\n        return;\r\n      }\r\n    }\r\n    const dashboardId = id !== undefined ? id : null;\r\n\r\n    console.log('DashboardEditView - componentDidMount', dashboardId);\r\n\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    const fromDashboard = params.get('$fromDashboard');\r\n\r\n    for(let pair of params.entries()) {\r\n      console.log(pair[0]+ ', '+ pair[1]); \r\n    } \r\n\r\n    const widgetViewWidth = this.getPageWidth();\r\n    this.setState({\r\n      widgetViewWidth: widgetViewWidth,\r\n      fromDashboard: fromDashboard\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const dashboard = res.data;\r\n            this.setState({\r\n              dashboardId: dashboard.id,\r\n              name: dashboard.name,\r\n              style: dashboard.style\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n\r\n    const lastRefreshLabelTimerId = setInterval(() => {\r\n      this.updateReadableLastRefreshed();\r\n    }, 5000);\r\n    this.setState({\r\n      lastRefreshLabelTimerId: lastRefreshLabelTimerId\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { \r\n      autoRefreshTimerId,\r\n      lastRefreshLabelTimerId\r\n    } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n    if (lastRefreshLabelTimerId) {\r\n      clearInterval(lastRefreshLabelTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = () => {\r\n    const dashboardName = this.props.match.params.name;\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n\r\n    const showControl = params.get('$showControl');\r\n    const fromDashboard = params.get('$fromDashboard');\r\n\r\n    const widgetViewWidth = this.getPageWidth();\r\n\r\n    this.setState({\r\n      isFullScreenView: true,\r\n      name: dashboardName,\r\n      widgetViewWidth: widgetViewWidth,\r\n      fromDashboard: fromDashboard\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            style: result.style\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth - 40;\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const { refreshInterval } = this.state;\r\n      let interval = parseInt(refreshInterval, 10) || 15;\r\n      interval = interval < 1 ? 1 : interval;\r\n      const timerId = setInterval(() => {\r\n        this.queryWidgets();\r\n        this.updateLastRefreshed();\r\n      }, interval * 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    this.refreshWidgetView();\r\n    this.updateLastRefreshed();\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n  } \r\n\r\n  queryWidgets = () => {\r\n    this.widgetViewPanel.current.queryCharts();\r\n  }\r\n\r\n  updateLastRefreshed = () => {\r\n    const now = new Date();\r\n    this.setState({\r\n      lastRefreshed: now\r\n    }, () => {\r\n      this.updateReadableLastRefreshed();\r\n    });\r\n  }\r\n\r\n  updateReadableLastRefreshed = () => {\r\n    const { lastRefreshed } = this.state;\r\n    if (lastRefreshed instanceof Date) {\r\n      const readableLastRefreshed = Util.getReadableDiffTime(lastRefreshed, new Date());\r\n      this.setState({\r\n        readableLastRefreshed: readableLastRefreshed\r\n      })\r\n    }\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      style\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      style: style\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.props.onDashboardSave(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    this.widgetEditPanel.current.fetchWidget(widgetId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n    this.updateLastRefreshed();\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/workspace/dashboard/full/${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onStyleValueChange = (name, value) => {\r\n    const style = {...this.state.style};\r\n    style[[name]] = value;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  onWidgetContentClick = (widgetClickEvent) => {\r\n    const {\r\n      name,\r\n      isFullScreenView\r\n    } = this.state;\r\n\r\n    const {\r\n      type,\r\n      data\r\n    } = widgetClickEvent;\r\n\r\n    if (type === 'tableTdClick') {\r\n      const {\r\n        dashboardId,\r\n        columnName,\r\n        columnValue\r\n      } = data;\r\n\r\n      if (isFullScreenView) {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const dashboard = res.data;\r\n            const nextDashboard = dashboard.name;\r\n            const nextLink = `/workspace/dashboard/full/${nextDashboard}?$fromDashboard=${name}&${columnName}=${columnValue}`;\r\n            this.props.history.push(nextLink);\r\n            // The router doesn't rerender the component so force to refresh the dashboard.\r\n            //this.loadViewByDashboardName();\r\n          });\r\n      } else {\r\n        const nextLink = `/workspace/dashboard/${dashboardId}?$fromDashboard=${name}&${columnName}=${columnValue}`;\r\n        this.props.history.push(nextLink);\r\n      }\r\n    }\r\n  }\r\n\r\n  goBackToFromDashboard = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {},\r\n    } = this.state;\r\n    const dashboardId = objectToDelete.id;\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        this.props.onDashboardDelete(dashboardId);\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  deleteDashboard = () => {\r\n    const { \r\n      dashboardId,\r\n      name\r\n    } = this.state;\r\n    const dashboard = {\r\n      id: dashboardId,\r\n      name: name\r\n    }\r\n    this.openConfirmDeletionPanel(dashboard);\r\n  }\r\n\r\n  openConfirmDeletionPanel = (dashboard) => {\r\n    this.setState({\r\n      objectToDelete: dashboard,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      readableLastRefreshed,\r\n      isEditMode,\r\n      isFullScreenView,\r\n      fromDashboard\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel = null;\r\n    const controlButtons = (\r\n      <React.Fragment>\r\n        <div className=\"inline-block\">\r\n          <div className=\"inline-block mr-3\">\r\n            Last refreshed: {readableLastRefreshed}\r\n          </div>\r\n          { autoRefreshStatus === 'OFF' && (\r\n            <input \r\n              type=\"text\" \r\n              name=\"refreshInterval\" \r\n              value={this.state.refreshInterval}\r\n              onChange={this.handleInputChange}\r\n              className=\"inline-block\" \r\n              style={{width: '50px'}}\r\n            />\r\n          )}\r\n        </div>\r\n        <button className=\"button square-button mr-3\" onClick={this.toggleAutoRefresh}>\r\n          {\r\n            autoRefreshStatus === 'ON' ? \r\n            (\r\n              <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\r\n            ) : \r\n            (\r\n              <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\r\n            )\r\n          }\r\n        </button>\r\n        <button className=\"button square-button mr-3\" onClick={this.refresh}>\r\n          <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\r\n        </button>\r\n        <button className=\"button mr-3\" onClick={this.queryWidgets}>\r\n          <FontAwesomeIcon icon=\"filter\" size=\"lg\" fixedWidth /> Apply Filters\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n\r\n    if (!isFullScreenView) {\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button mr-3\" onClick={this.cancelEdit}>\r\n               <FontAwesomeIcon icon=\"times\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button mr-3\" onClick={this.save}>\r\n              <FontAwesomeIcon icon=\"save\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button mr-3\" onClick={this.deleteDashboard}>\r\n               <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>\r\n              <FontAwesomeIcon icon=\"calendar-plus\" size=\"lg\" fixedWidth /> New Widget\r\n            </button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            {controlButtons}\r\n            <button className=\"button square-button mr-3\" onClick={this.fullScreen}>\r\n              <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={this.edit}>\r\n              <FontAwesomeIcon icon=\"edit\" size=\"lg\" fixedWidth />\r\n            </button>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      fullScreenButtonPanel = controlButtons;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-menu-panel row\">\r\n          <div className=\"float-left\">\r\n            {fromDashboard && (\r\n              <div className=\"dashboard-drillthrough-name\" onClick={this.goBackToFromDashboard}>\r\n                <span className=\"link-label\">{fromDashboard}</span> >\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"float-left\">\r\n            {\r\n              isFullScreenView || !isEditMode ?\r\n              (\r\n                <div className=\"dashboard-name\">\r\n                  {this.state.name}\r\n                </div>\r\n              ) :(\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"name\" \r\n                  value={this.state.name}\r\n                  onChange={this.handleInputChange} \r\n                  className=\"dashboard-name-input\"\r\n                />\r\n              )\r\n            }\r\n            \r\n          </div>\r\n          <div className=\"float-right\">\r\n            {fullScreenButtonPanel}\r\n            {editButtonPanel}\r\n          </div>\r\n        </div>\r\n\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          isEditMode={this.state.isEditMode}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          onStyleValueChange={this.onStyleValueChange}\r\n          onWidgetContentClick={this.onWidgetContentClick}\r\n          {...this.state.style}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'dashboard-edit-widget-dialog'} \r\n          title={'Widget Edit'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {this.state.objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './Dashboard.css';\r\nimport * as Constants from '../api/Constants';\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport SearchInput from '../components/SearchInput';\r\n\r\nconst ROUTE_WORKSPACE_DASHBOARD = '/workspace/dashboard/';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      activeDashboardId: 0,\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    const index = pathname.indexOf(ROUTE_WORKSPACE_DASHBOARD);\r\n    if (index !== -1) {\r\n      const activeDashboardId = Number(pathname.substring(index + ROUTE_WORKSPACE_DASHBOARD.length));\r\n      this.setState({\r\n        activeDashboardId: activeDashboardId\r\n      })\r\n    }\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false,\r\n      name: ''\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      Toast.showError('Enter a name.');\r\n      return;\r\n    }\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      style: {\r\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\r\n        backgroundColor: 'rgba(233, 235, 238, 1)'\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.closeEditPanel();\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      })\r\n      .catch(error => {\r\n        Toast.showError('The name exists. Try another.');\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.setState({\r\n      activeDashboardId: dashboardId\r\n    }, () => {\r\n      this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n    });\r\n  }\r\n\r\n  onDashboardSave = (dashboardId) => {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  onDashboardDelete = (dashboardId) => {\r\n    this.fetchBoards();\r\n    this.setState({\r\n      activeDashboardId: 0\r\n    }, () => {\r\n      this.props.history.push('/workspace/dashboard');\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dashboards = [],\r\n      activeDashboardId,\r\n      searchValue\r\n    } = this.state;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.props;\r\n    const showEdit = sysRole === Constants.SYS_ROLE_VIEWER ? false : true;\r\n\r\n    const dashboardRows = [];\r\n    for (let i = 0; i < dashboards.length; i++) {\r\n      const dashboard = dashboards[i];\r\n      const name = dashboard.name;\r\n      const menuActive = activeDashboardId === dashboard.id ? 'dashboard-menu-item-active' : '';\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        dashboardRows.push(\r\n          (\r\n            <div key={i} className={`dashboard-menu-item ellipsis ${menuActive}`} onClick={() => this.view(dashboard.id)}>\r\n              {name}\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-sidebar\">\r\n          <div style={{margin: '5px'}}>\r\n            { showEdit && (\r\n              <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\r\n                <FontAwesomeIcon icon=\"plus\" /> New\r\n              </button>\r\n            )}\r\n\r\n            <div style={{marginTop: '5px'}}>\r\n              <SearchInput \r\n                name={'searchValue'} \r\n                value={this.state.searchValue} \r\n                onChange={this.handleNameInputChange} \r\n                inputWidth={117}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            {dashboardRows}\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route \r\n            path=\"/workspace/dashboard/:id\" \r\n            render={(props) => \r\n              <DashboardEditView \r\n                key={props.match.params.id} \r\n                onDashboardSave={this.onDashboardSave} \r\n                onDashboardDelete={this.onDashboardDelete} \r\n              />\r\n            } \r\n            />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'small-modal-panel'} \r\n          title={'New'} >\r\n          <div className=\"form-panel\">\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n            />\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport SearchInput from '../components/SearchInput';\r\nimport Toast from '../components/Toast';\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      searchValue: '',\r\n      showUpdatePassword: false,\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: Constants.SYS_ROLE_VIEWER,\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      this.setState({\r\n        id: user.id,\r\n        username: user.username,\r\n        name: user.name,\r\n        tempPassword: '',\r\n        sysRole: user.sysRole,\r\n        userGroups: user.userGroups\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      userGroupId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    if (!username) {\r\n      Toast.showError('Enter a username.');\r\n      return;\r\n    }\r\n\r\n    let selectedSysRole = Constants.SYS_ROLE_VIEWER;\r\n    if (Constants.SYS_ROLE_ADMIN === this.props.sysRole) {\r\n      if (sysRole) {\r\n        selectedSysRole = sysRole;\r\n      } else {\r\n        Toast.showError('Select a role.');\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: selectedSysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      if (showUpdatePassword) {\r\n        if (!tempPassword || tempPassword.length < 8) {\r\n          Toast.showError(`Use 8 or more characters for password.`);\r\n          return;\r\n        }\r\n        user.tempPassword = tempPassword;\r\n      }\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      if (!tempPassword || tempPassword.length < 8) {\r\n        Toast.showError(`Use 8 or more characters for password.`);\r\n        return;\r\n      }\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  addUserGroup = () => {\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId) => {\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/user/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (user) => {\r\n    this.setState({\r\n      objectToDelete: user,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      showUpdatePassword,\r\n      users = [],\r\n      groups = [],\r\n      userGroups = [],\r\n      searchValue,\r\n      showConfirmDeletionPanel,\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.props;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const userItems = [];\r\n    for (let i = 0; i < users.length; i++) {\r\n      const user = users[i];\r\n      const name = user.name;\r\n      const username = user.username;\r\n      if (!searchValue || (searchValue && (username.includes(searchValue) || name.includes(searchValue)))) {\r\n        userItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {user.username},\r\n                {user.name},\r\n                {user.sysRole}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(user)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(user)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups.length; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups.length; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId} className=\"row table-row\">\r\n                <div className=\"float-left ellipsis \">{groups[j].name}</div>\r\n                <button className=\"button table-row-button float-right\" onClick={() => this.removeUserGroup(groupId)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" />\r\n                </button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"row\">\r\n          <div className=\"float-left\" style={{marginRight: '5px'}}>\r\n            <SearchInput \r\n              name={'searchValue'} \r\n              value={this.state.searchValue} \r\n              onChange={this.handleNameInputChange} \r\n              inputWidth={200}\r\n            />\r\n          </div>\r\n          <button className=\"button float-left\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New\r\n          </button>\r\n        </div>\r\n        <div className=\"row mt-10\">\r\n          {userItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'mid-modal-panel'} \r\n          title={mode} >\r\n\r\n          <div className=\"row\">\r\n            <div className=\"form-panel float-left\" style={{width: '240px'}}>\r\n              <label>Username <span className=\"required\">*</span></label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} \r\n              />\r\n\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} \r\n              />\r\n\r\n              { mode === 'Edit' && (\r\n                  <div style={{margin: '3px 0px 8px 0px'}}>\r\n                    <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n                  </div>\r\n              )}\r\n              { (mode === 'New' || showUpdatePassword) && ( \r\n                <div>\r\n                  <label>Password</label>\r\n                  <input \r\n                    type=\"password\" \r\n                    name=\"tempPassword\" \r\n                    value={this.state.tempPassword}\r\n                    onChange={this.handleInputChange} />\r\n                </div>\r\n              )}\r\n              \r\n              <label>System Role</label>\r\n              { Constants.SYS_ROLE_ADMIN === sysRole && (\r\n                <Select\r\n                  name={'sysRole'}\r\n                  value={this.state.sysRole}\r\n                  onChange={this.handleNameInputChange}\r\n                  options={[Constants.SYS_ROLE_VIEWER, Constants.SYS_ROLE_DEVELOPER]}\r\n                />\r\n              )}\r\n\r\n              { Constants.SYS_ROLE_DEVELOPER === sysRole && (\r\n                <div>{Constants.SYS_ROLE_VIEWER}</div>\r\n              )}\r\n              \r\n            </div>\r\n            <div className=\"form-panel float-right\" style={{width: '240px'}}>\r\n            \r\n              <label>Groups</label>\r\n              <Select\r\n                name={'userGroupId'}\r\n                value={this.state.userGroupId}\r\n                onChange={this.handleIntegerOptionChange}\r\n                options={groups}\r\n                optionDisplay={'name'}\r\n                optionValue={'id'}\r\n              />\r\n              <button className=\"button\" onClick={this.addUserGroup}>Add</button>\r\n              <div className=\"mt-3\">\r\n                {userGroupItems}\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport SearchInput from '../components/SearchInput';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      showEditPanel: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      this.setState({\r\n        id: group.id,\r\n        name: group.name,\r\n        groupDashboards: group.groupDashboards\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      groupDashboardId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } \r\n  }\r\n\r\n  addGroupDashboard= () => {\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    if (groupDashboardId) {\r\n      const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n      if (index === -1) {\r\n        const newGroupDashboards = [...groupDashboards];\r\n        newGroupDashboards.push(groupDashboardId);\r\n        this.setState({\r\n          groupDashboards: newGroupDashboards\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId) => {\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/group/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (group) => {\r\n    this.setState({\r\n      objectToDelete: group,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = [],\r\n      searchValue,\r\n      showConfirmDeletionPanel,\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const groupItems = [];\r\n    for (let i = 0; i < groups.length; i++) {\r\n      const group = groups[i];\r\n      const name = group.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        groupItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {name}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(group)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(group)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards.length; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards.length; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId} className=\"row table-row\">\r\n                <div className=\"float-left ellipsis\">{dashboards[j].name}</div>\r\n                <button className=\"button table-row-button float-right\" onClick={() => this.removeGroupDashboard(dashboardId)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" />\r\n                </button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"row\">\r\n          <div className=\"float-left\" style={{marginRight: '5px'}}>\r\n            <SearchInput \r\n              name={'searchValue'} \r\n              value={this.state.searchValue} \r\n              onChange={this.handleNameInputChange} \r\n              inputWidth={200}\r\n            />\r\n          </div>\r\n          <button className=\"button float-left\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New\r\n          </button>\r\n        </div>\r\n        <div className=\"row mt-10\">\r\n          {groupItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'mid-modal-panel'} \r\n          title={mode} >\r\n          <div className=\"row\">\r\n            <div className=\"form-panel float-left\" style={{width: '240px'}}>\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n            </div>\r\n            \r\n            <div className=\"form-panel float-right\" style={{width: '240px'}}>\r\n              <label>Dashboards</label>\r\n              <Select\r\n                name={'groupDashboardId'}\r\n                value={this.state.groupDashboardId}\r\n                onChange={this.handleIntegerOptionChange}\r\n                options={dashboards}\r\n                optionDisplay={'name'}\r\n                optionValue={'id'}\r\n              />\r\n              <button className=\"button\" onClick={this.addGroupDashboard}>Add</button>\r\n              <div className=\"mt-3\">\r\n                {groupDashboardItems}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\n\r\nimport User from './User';\r\nimport Group from './Group';\r\nimport Tabs from '../components/Tabs';\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-page-content\">\r\n        <Tabs activeTab=\"Group\">\r\n          <div title=\"Group\">\r\n            <Group />\r\n          </div>\r\n          <div title=\"User\">\r\n            <User {...this.props} />\r\n          </div>\r\n        </Tabs>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Toast from '../components/Toast';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const user = res.data;\r\n        this.setState({\r\n          id: user.id,\r\n          username: user.username,\r\n          name: user.name,\r\n          sysRole: user.sysRole,\r\n          apiKey: user.apiKey\r\n        });\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n    axios.get('/auth/generate-apikey')\r\n      .then(res => {\r\n        const apiKey = res.data;\r\n        this.setState({\r\n          apiKey: apiKey\r\n        });\r\n      });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        Toast.showError(`Those passwords didn't match.`);\r\n        return;\r\n      }  \r\n\r\n      if (password.length < 8) {\r\n        Toast.showError(`Use 8 or more characters for password.`);\r\n        return;\r\n      }\r\n\r\n      user.password = password;\r\n    }\r\n\r\n    axios.put('/ws/user/account', user)\r\n      .then(res => {\r\n        Toast.showSuccess('Saved.');\r\n      });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"full-page-content\">\r\n        <div className=\"form-panel\" style={{width: '500px'}}>   \r\n          <label>Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\"   \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label>System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label>API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button className=\"button mt-10\" onClick={this.generateApiKey}>Generate new API Key</button>\r\n          <br/>\r\n\r\n          <button className=\"button mt-3\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n          {\r\n            showUpdatePassword && (\r\n              <React.Fragment>\r\n                <br/>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label>Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n          )}\r\n\r\n          <br/>\r\n          <button className=\"button mt-10\" onClick={this.save}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","\r\nimport React from 'react';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('DashboardFullScreenView', 'componentDidMount');\r\n  }\r\n\r\n  render() {\r\n    const pathname = this.props.location.pathname;\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView key={pathname} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","import React from 'react';\r\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\n\r\nimport Toast from '../components/Toast';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport './Workspace.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data Source',\r\n    icon: 'database'\r\n  }, \r\n  {\r\n    link: '/workspace/usermanagement',\r\n    value: 'User Management',\r\n    icon: 'users-cog'\r\n  }\r\n];\r\n\r\nconst ACCOUNT_MENU_LINK = '/workspace/account';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    let link;\r\n    if (pathname.startsWith(ACCOUNT_MENU_LINK)) {\r\n      link = ACCOUNT_MENU_LINK;\r\n    } else {\r\n      const menuItem = MENU_ITEMS.find(m => pathname.startsWith(m.link));\r\n      link = menuItem.link;\r\n    }\r\n\r\n    this.setState({\r\n      currentMenuLink: link,\r\n    });\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  logout = () => {\r\n    axios.get('/auth/logout')\r\n      .then(res => {\r\n        this.props.onLogout();\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n    } = this.state;\r\n    \r\n    const {\r\n      username,\r\n      sysRole\r\n    } = this.props;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.link === '/workspace/dashboard');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li key={menu.link} className={active}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"workspace-nav\">  \r\n          <div className=\"workspace-name\">Poli</div>\r\n          <ul className=\"workspace-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div className=\"workspace-account-menu\">\r\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\r\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\r\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\r\n                <span className=\"workspace-nav-menu-text\">{username}</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"workspace-logout-button inline-block\" onClick={this.logout}>\r\n              <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"workspace-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n            <Route exact path=\"/workspace/dashboard/full/:name\" component={DashboardFullScreenView} />\r\n            <Route exact path=\"/workspace/usermanagement\" render={() => <UserManagement {...this.props} />} />\r\n            <Route path=\"/workspace/dashboard\" render={() => <Dashboard {...this.props} />} />\r\n          </Switch>\r\n        </div>\r\n        <Toast />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Workspace);\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch, faSearch, faSave, \r\n  faCalendarPlus, faFilter, faExternalLinkAlt\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport ChangeTempPassword from './views/ChangeTempPassword';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\n\r\n\r\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch, faSearch, faSave, \r\n  faCalendarPlus, faFilter, faExternalLinkAlt\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      sysRole: '',\r\n      isAuthorizing: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.interceptors.response.use((response) => {\r\n        return response;\r\n      }, (error) => {\r\n        if(error.response.status === 401) { \r\n          this.onLogout();\r\n        }\r\n        return Promise.reject(error);\r\n    });\r\n\r\n    const pathname = this.props.location.pathname;\r\n    const search = this.props.location.search;\r\n\r\n    const params = new URLSearchParams(search);\r\n    const apiKey = params.get('$apiKey');\r\n\r\n    let currentPath = pathname + search;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      this.setState({\r\n        isAuthorizing: true\r\n      }, () => {\r\n        axios.post('/auth/login/cookie')\r\n          .then(res => {\r\n            const loginResponse = res.data;\r\n            if (loginResponse.error) {\r\n                this.setState({\r\n                  sysRole: '',\r\n                  isAuthorizing: false\r\n                }, () => {\r\n                  this.props.history.push('/login');\r\n                });\r\n              } else {\r\n                this.onLoginSuccess(loginResponse, currentPath);\r\n              }\r\n          });\r\n      });\r\n    }\r\n  }\r\n\r\n  onLoginSuccess = (loginResponse = {}, pathname = null) => {\r\n    if (loginResponse.isTempPassword) {\r\n      this.props.history.push('/changepassword');\r\n    } else {\r\n      this.setState({\r\n        username: loginResponse.username,\r\n        sysRole: loginResponse.sysRole,\r\n        isAuthorizing: false\r\n      }, () => {\r\n        let directUrl = '/workspace/dashboard';\r\n        if (pathname) {\r\n          directUrl = pathname;\r\n        }\r\n        this.props.history.push(directUrl);\r\n      });\r\n    }\r\n  }\r\n\r\n  onLogout = () => {\r\n    this.setState({\r\n      username: '',\r\n      sysRole: '',\r\n      isAuthorizing: false\r\n    }, () => {\r\n      this.props.history.push('/login');\r\n    });\r\n  }\r\n   \r\n  render() {\r\n    const {\r\n      username,\r\n      sysRole,\r\n      isAuthorizing\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (isAuthorizing) {\r\n      return (\r\n        <div className=\"authenticating-panel\">\r\n          <div className=\"authenticating-panel-title\">Poli</div>\r\n          <FontAwesomeIcon icon=\"circle-notch\" spin={true} size=\"2x\" />\r\n        </div>\r\n      )\r\n    }\r\n    \r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Login sysRole={sysRole} onLoginSuccess={this.onLoginSuccess} />} />\r\n          <Route path=\"/login\" render={() => <Login sysRole={sysRole} onLoginSuccess={this.onLoginSuccess} />} />\r\n          <Route path=\"/changepassword\" component={ChangeTempPassword} />\r\n          <PrivateRoute \r\n            authenticated={isAuthenticated} \r\n            path='/workspace' \r\n            component={Workspace} \r\n            username={username}\r\n            sysRole={sysRole} \r\n            onLogout={this.onLogout}\r\n          />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} {...rest} />\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}