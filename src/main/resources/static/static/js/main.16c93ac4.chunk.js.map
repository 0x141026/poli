{"version":3,"sources":["views/Overview.js","api/WebApi.js","views/DataSources.js","views/Dashboards.js","components/GridDraggable.js","components/GridResizable.js","components/GridItem.js","components/GridLayout.js","views/Test.js","views/EditDataSource.js","components/QuerySlicer.js","components/NumberRange.js","components/FilterViewPanel.js","components/WidgetViewPanel.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/SingleTest.js","App.js","index.js"],"names":["Overview","react_default","a","createElement","Component","fetchDataSources","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","get","abrupt","sent","stop","this","apply","arguments","_ref3","_callee3","url","response","_context3","axios","data","t0","_x2","DataSources","state","jdbcDataSources","showEditPanel","id","name","connectionUrl","username","password","type","ping","handleInputChange","event","target","value","_this","setState","defineProperty","save","preventDefault","ds","post","then","res","initData","update","console","log","put","delete","concat","clearEditPanel","showDeletePanel","webApi","_this2","filterDrawerClass","jdbcDataSourceItems","map","index","key","onClick","mode","className","onChange","row","mockDashboards","dashboardId","Dashboard","dashboards","fetchBoards","props","history","push","jump","dashboardRows","d","withRouter","GridDraggable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onMouseDown","gridItemNode","ReactDOM","findDOMNode","assertThisInitialized","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","i","length","style","zIndex","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","width","boxHeight","height","Math","floor","left","top","React","GridResizable","prevWidth","prevHeight","GridItem","x","y","styles","backgroundColor","position","title","components_GridDraggable","es","firstName","lastName","columns","Header","accessor","defaultPageSize","components_GridResizable","GridLayout","snapToGrid","showGridlines","margin","border","backgroundSize","backgroundImage","boxItems","box","components_GridItem","Test","selectedOption","newValue","submit","handleChange","lib_default","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","components_GridLayout","PureComponent","EditDataSource","router","reset","initialState","match","params","undefined","QuerySlicer","isSelectAll","isChecked","checked","newCheckBox","toConsumableArray","checkBoxes","find","filterId","toggleSelectAll","newIsSelectAll","newCheckBoxes","prevState","NumberRange","filters","dataSourceId","sqlQuery","display","param","queryResult","FilterViewPanel","renderFilterPanel","filterPanel","filter","components_QuerySlicer","onQuerySlicerChange","components_NumberRange","f","fetchFilters","run","WidgetViewPanel","CHART_TYPES","WidgetEditPanel","fetchWidget","_x","widget","widgetId","jdbcDataSourceId","close","onClose","runQuery","queryRequest","query","handleAceEditorChange","handleDataSourceChange","panelClass","show","dataSourceOptions","chartOptionList","o","headers","obj","keys","_i","marginTop","optionValue","handleOptionChange","class","FilterEditPanel","mockDataSources","mockDashboard","widgets","DashboardEditView","refresh","filterViewPanel","current","showFilterEditPanel","showWidgetEditPanel","widgetEditPanel","jdbcDataSourceOptions","createRef","widgetViewPanel","label","dashboard","components_FilterViewPanel","ref","components_WidgetViewPanel","components_WidgetEditPanel","components_FilterEditPanel","SingleTest","App","handleClick","e","toggleMenu","menuMin","Link","to","Route","exact","path","component","Dashboards","render","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.16c93ac4.chunk.js","sourcesContent":["\nimport React, { Component } from 'react';\n\nclass Overview extends Component {\n\n  render() {\n    return (\n      <div>\n        <h1>Overview</h1>     \n        <h5>Number of data sources</h5>\n        <h5>Number of dashboards</h5>\n      </div>\n    );\n  }\n}\n\nexport default Overview;\n","import axios from 'axios';\n\nconst JSON_HEADER = {\n  headers: {\n    'Content-Type': 'application/json',\n  }\n};\n\nexport const fetchDataSources = async () => {\n  return await get('/ws/jdbcdatasource');\n};\n\nexport const fetchDashboardById = async (id) => {\n  return await get(`/ws/dashboard/${id}`);\n}\n\n\nconst get = async (url) => {\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (e) {\n    return [];\n  }\n} \n\n\n","\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport * as webApi from '../api/WebApi';\n\nclass DataSources extends Component {\n\n  state = { \n    jdbcDataSources: [],\n    showEditPanel: false,\n    id: null,\n    name: '',\n    connectionUrl: '',\n    username: '',\n    password: '',\n    type: '',\n    ping: ''\n  };\n\n  componentDidMount() {\n    // Fetch all datasources\n    this.initData();\n    \n  }\n\n  async initData() {\n    const jdbcDataSources = await webApi.fetchDataSources();\n    this.setState({ \n      jdbcDataSources: jdbcDataSources \n    });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  save = (event) => {\n    event.preventDefault();\n    const ds = {\n      connectionUrl: this.state.connectionUrl,\n      username: this.state.username,\n      password: this.state.password,\n      name: this.state.name,\n      type: this.state.password,\n      ping: this.state.ping\n    };\n\n    axios.post('/ws/jdbcdatasource', ds)\n      .then(res => {\n        this.initData();\n      });\n  }\n\n  update = (ds) => {\n    console.log('update', ds);\n\n    axios.put('/ws/jdbcdatasource', ds)\n      .then(res => {\n        this.initData();\n      });\n  }\n\n  delete = (id) => {\n    console.log('delete', id);\n    axios.delete('/ws/jdbcdatasource/' + id)\n      .then(res => {\n        this.initData();\n      });\n  }\n\n  ping = (id) => {\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\n      .then(res => {\n        console.log('ping', res.data);\n      });\n  }\n\n  clearEditPanel = () => {\n    this.setState({\n      id: null,\n      connectionUrl: '',\n      username: '',\n      password: '',\n      name: '',\n      type: '',\n      ping: ''\n    });\n  }\n\n  showEditPanel = (ds) => {\n    if (ds !== null) {\n      this.setState({\n        id: ds.id,\n        connectionUrl: ds.connectionUrl,\n        username: ds.username,\n        password: ds.password,\n        name: ds.name,\n        type: ds.type,\n        ping: ds.ping\n      });\n    } else {\n      this.clearEditPanel();\n    }\n    \n    this.setState({\n      showEditPanel: true\n    }); \n  }\n\n  showDeletePanel = () => {\n\n  }\n\n  render() {\n\n    const filterDrawerClass = this.state.showEditPanel ? 'right-drawer display-block' : 'right-drawer display-none';\n\n    const jdbcDataSourceItems = this.state.jdbcDataSources.map((ds, index) => \n      <tr key={index}>\n        <td>{ds.name}</td>\n        <td>{ds.connectionUrl}</td>\n        <td>{ds.type}</td>\n        <td>{ds.username}</td>\n        <td>{ds.ping}</td>\n        <td><button onClick={() => this.showEditPanel(ds)}>update</button></td>\n        <td><button onClick={() => this.delete(ds.id)}>delete</button></td>\n        <td><button onClick={() => this.ping(ds.id)}>ping</button></td>\n      </tr>\n    );\n\n    const mode = this.state.id === null ? 'New' : 'Update';\n\n    return (\n      <div>\n        <h1>Data Sources</h1>\n        <div>\n          <h2>Table</h2>\n\n          <table>\n            <thead>\n            </thead>\n            <tbody>\n              {jdbcDataSourceItems}\n            </tbody>\n          </table>\n\n        </div>\n        <button onClick={() => this.showEditPanel(null)}>\n          Add\n        </button>\n\n        <div className={filterDrawerClass}>\n          <h3>{mode}</h3>\n          <button onClick={() => this.setState({showEditPanel: false })}>Close</button>\n          <form>\n            <label>Name</label>\n            <input \n              type=\"text\" \n              name=\"name\" \n              value={this.state.name}\n              onChange={this.handleInputChange} />\n\n            <label>Connection Url</label>\n            <textarea\n              row=\"3\"\n              type=\"text\" \n              name=\"connectionUrl\" \n              value={this.state.connectionUrl}\n              onChange={this.handleInputChange} >\n            </textarea>\n\n            <label>Username</label>\n            <input \n              type=\"text\" \n              name=\"username\" \n              value={this.state.username}\n              onChange={this.handleInputChange} />\n\n            <label>Password</label>\n            <input \n              type=\"password\" \n              name=\"password\" \n              value={this.state.password}\n              onChange={this.handleInputChange} />\n\n            <label>Type</label>\n            <input \n              type=\"text\" \n              name=\"type\" \n              value={this.state.type}\n              onChange={this.handleInputChange} />\n\n            <label>Ping</label>\n            <input \n              type=\"text\" \n              name=\"ping\" \n              value={this.state.ping}\n              onChange={this.handleInputChange} />\n          </form>\n\n          <div>\n            <button onClick={this.save}>Save</button>\n            <button onClick={this.ping}>Ping</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DataSources;\n","\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport axios from 'axios';\n\nconst mockDashboards = [\n  {\n    dashboardId: 1,\n    name: 'dashboard1'\n  }\n]\n\nclass Dashboard extends Component {\n\n  state = { \n    dashboards: [],\n  };\n\n  componentDidMount() {\n    //this.fetchBoards();\n    this.setState({\n      dashboards: mockDashboards\n    });\n  }\n\n  fetchBoards = () => {\n    axios.get('/ws/dashboard')\n      .then(res => {\n        const dashboards = res.data;\n        this.setState({ \n          dashboards: dashboards \n        });\n      });\n  }\n\n  save = () => {\n\n  }\n\n  update = (dashboardId) => {\n    this.props.history.push(`/dashboard/edit/${dashboardId}`);\n  }\n\n  delete = (dashboardId) => {\n    console.log('delete', dashboardId);\n  }\n\n  jump = () => {\n    this.props.history.push('/overview');\n  }\n\n\n  render() {\n\n    const dashboardRows = this.state.dashboards.map((d, index) => \n      <tr key={index}>\n        <td>{d.id}</td>\n        <td>{d.name}</td>\n        <td><button onClick={() => this.update(d.id)}>update</button></td>\n        <td><button onClick={() => this.delete(d.id)}>delete</button></td>\n      </tr>\n    );\n\n    return (\n      <div>\n        Board\n        <button onClick={this.jump}>Overview</button>\n        <button onClick={() => this.props.history.push('/dashboard/new')}>New</button>\n\n        <table>\n          <thead>\n          </thead>\n          <tbody>\n            {dashboardRows}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Dashboard);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass GridDraggable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      xOffset: 0,\n      yOffset: 0\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\n    const yOffset = event.clientY - gridItemNode.offsetTop;\n\n    let boxes = document.getElementsByClassName(\"grid-box\");\n    for (let i = 0; i < boxes.length; i++) {\n        boxes[i].style.zIndex = 2;\n    }\n    gridItemNode.style.zIndex = 3;\n\n    \n    const { ownerDocument } = gridItemNode;\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\n    this.setState({\n      xOffset: xOffset,\n      yOffset: yOffset\n    });\n\n    this.props.onMouseDown('drag');\n  }\n\n  onMouseUp = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n    this.props.onMouseUp();\n  }\n\n  onMouseMove = (event) => {\n    console.log('GridDraggable onMouseMove', event);\n    event.preventDefault();\n    if (this.props.mode !== 'drag') {\n      return; \n    }\n\n    let gridCell = 5;\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    let currentX = event.clientX - this.state.xOffset;\n    let currentY = event.clientY - this.state.yOffset;\n    \n    const containerNode = gridItemNode.parentNode;\n    const containerWidth = containerNode.clientWidth;\n    const containerHeight = containerNode.clientHeight;\n    \n    let boxWidth = parseInt(gridItemNode.style.width, 10) + 4;\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + 4;\n\n\n    if (currentX < 0) {\n      currentX = 0;\n    }\n    if (currentY < 0) {\n      currentY = 0;\n    }\n    if (currentX + boxWidth > containerWidth) {\n      currentX = containerWidth - boxWidth;\n    }\n    if (currentY + boxHeight > containerHeight) {\n      currentY = containerHeight - boxHeight;\n    }\n    \n\n    currentX = Math.floor(currentX / gridCell) * gridCell;\n    currentY = Math.floor(currentY / gridCell) * gridCell;\n\n    gridItemNode.style.left = currentX + 'px';\n    gridItemNode.style.top = currentY + 'px';\n  }\n\n  render() {\n    return (\n      <div className=\"grid-draggable\"\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp} >\n      </div>\n    )\n  }\n}\n\nexport default GridDraggable;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass GridResizable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      xOffset: 0,\n      yOffset: 0,\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (event) => {\n    console.log('onMouseDown', event);\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    const xOffset = event.clientX;\n    const yOffset = event.clientY;\n    \n    const { ownerDocument } = thisNode;\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\n    this.setState({\n      xOffset: xOffset,\n      yOffset: yOffset\n    });\n\n    this.props.onMouseDown('resize');\n  }\n\n  onMouseUp = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n    this.props.onMouseUp();\n  }\n\n  onMouseMove = (event) => {\n    console.log('GridResizer onMouseMove', event);\n    event.preventDefault();\n\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\n\n    let currentX = event.clientX - this.state.xOffset;\n    let currentY = event.clientY - this.state.yOffset;\n\n    gridItemNode.style.width = Math.floor(prevWidth + currentX) + 'px';\n    gridItemNode.style.height = Math.floor(prevHeight + currentY) + 'px';\n\n    const xOffset = event.clientX;\n    const yOffset = event.clientY;\n    this.setState({\n      xOffset: xOffset,\n      yOffset: yOffset\n    });\n  }\n\n  render() {\n    return (\n      <div \n        className=\"grid-resizable\"\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp} >\n      </div>\n    )\n  }\n}\n\nexport default GridResizable;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GridDraggable from './GridDraggable';\nimport GridResizable from './GridResizable';\n\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\n\nclass GridItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      x: this.props.x,\n      y: this.props.y,\n      mode: ''\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (mode) => {\n    console.log('GridItem onMouseDown', mode);\n    this.setState({\n      mode: mode\n    });\n  }\n\n  onMouseUp = () => {\n    console.log('GridItem onMouseUp');\n    this.setState({\n      mode: ''\n    });\n  }\n\n  onMouseMove = (event, mode, state) => {\n    console.log('GridItem onMouseMove', event);\n    event.preventDefault();   \n  }\n\n  render() {\n    let styles = {\n      left: this.state.x,\n      top: this.state.y,\n      width: this.props.width,\n      height: this.props.height,\n      backgroundColor: '#f1f1f1',\n      position: 'absolute',\n      zIndex: 1\n    };\n\n    const data = [\n      {firstName: 'a1', lastName: 'b1'},\n      {firstName: 'a2', lastName: 'b2'},\n      {firstName: 'a3', lastName: 'b3'}\n    ];\n\n    return (\n      <div className=\"grid-box\" style={styles}>\n        <div className=\"grid-box-title\">\n          {this.props.title}\n        </div>\n        <GridDraggable \n          onMouseUp={this.onMouseUp}\n          onMouseDown={this.onMouseDown}\n          onMouseMove={this.onMouseMove}\n          mode={this.state.mode} />\n          \n          <ReactTable\n            data={data}\n            columns={[\n              {\n                Header: \"First Name\",\n                accessor: \"firstName\"\n              },\n              {\n                Header: \"Last Name\",\n                accessor: \"lastName\"\n              },\n            ]}\n            defaultPageSize={10}\n          />\n        <GridResizable \n          onMouseUp={this.onMouseUp}\n          onMouseDown={this.onMouseDown}\n          onMouseMove={this.onMouseMove}\n          mode={this.state.mode} />\n      </div>\n    )\n  }\n}\n\nexport default GridItem;","import React from 'react';\n\nimport GridItem from './GridItem';\n\nconst boxes = [\n   {\n    title: 'title1',\n    x: 0,\n    y: 0,\n    width: 100,\n    height: 100\n  },\n  {\n    title: 'title2',\n    x: 100,\n    y: 100,\n    width: 100,\n    height: 100\n  }\n];\n\nclass GridLayout extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      boxes: [],\n      snapToGrid: false,\n      showGridlines: true,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      boxes: boxes\n    });\n  }\n\n  render() {\n    const width = 600;\n    const height = 400;\n\n    let styles = {\n      width: width,\n      height: height,\n      position: 'relative',\n      margin: '20px',\n      border: '1px solid blue'\n    };\n\n    if (this.state.showGridlines) {\n      styles.backgroundSize = '20px 20px';\n      styles.backgroundImage = 'linear-gradient(to right, grey 1px, transparent 1px), linear-gradient(to bottom, grey 1px, transparent 1px)';\n    }\n\n    const boxItems = this.state.boxes.map((box, index) => \n      <GridItem\n        key={index}\n        x={box.x}\n        y={box.y}\n        width={box.width}\n        height={box.height}\n        title={box.title}\n      />\n    );\n\n\n    return (\n      <div\n        style={styles} >\n        {boxItems}\n      </div>\n    )\n  }\n}\n\nexport default GridLayout;","\nimport React from 'react';\nimport AceEditor from 'react-ace';\n\nimport 'brace/mode/mysql';\nimport 'brace/theme/xcode';\n\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nimport GridLayout from '../components/GridLayout';\n\nconst options = [\n  { value: 'chocolate', label: 'Chocolate' },\n  { value: 'strawberry', label: 'Strawberry' },\n  { value: 'vanilla', label: 'Vanilla' }\n];\n\nclass Test extends React.PureComponent {\n\n  state = {\n    selectedOption: null,\n    data: [\n      {firstName: 'a1', lastName: 'b1'},\n      {firstName: 'a2', lastName: 'b2'},\n      {firstName: 'a3', lastName: 'b3'}\n    ]\n  }\n\n  onChange = (newValue) => {\n    console.log('change',newValue);\n  }\n\n  submit = () => {\n    console.log('submit', );\n  }\n\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption });\n    console.log(`Option selected:`, selectedOption);\n  }\n\n  render() {\n    const { selectedOption } = this.state;\n    const { data } = this.state;\n\n    return (\n      <div>\n        <AceEditor\n          mode=\"mysql\"\n          theme=\"xcode\"\n          name=\"blah2\"\n          onChange={this.onChange}\n          height={'300px'}\n          width={'300px'}\n          fontSize={18}\n          showPrintMargin={false}\n          showGutter={true}\n          highlightActiveLine={true}\n          setOptions={{\n            enableBasicAutocompletion: true,\n            enableLiveAutocompletion: true,\n            enableSnippets: false,\n            showLineNumbers: true,\n            tabSize: 2,\n            }}\n          />\n          <button onClick={this.submit}>Submit</button>\n\n          <ReactTable\n            data={data}\n            columns={[\n              {\n                Header: \"First Name\",\n                accessor: \"firstName\"\n              },\n              {\n                Header: \"Last Name\",\n                accessor: \"lastName\"\n              },\n            ]}\n            defaultPageSize={10}\n          />\n\n          <GridLayout />\n      </div>\n    )\n  }\n}\n\nexport default Test;\n","\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass EditDataSource extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {\n      id: 0,\n      name: '',\n      connectionUrl: '',\n      username: '',\n      password: '',\n      type: '',\n      ping: '',\n      mode: ''\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    console.log(\"id\", id);\n    let mode = 'Edit';\n    if (id === undefined) {\n      mode = 'New';\n    }\n    this.setState({\n      mode: mode\n    });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  save = (event) => {\n    event.preventDefault();\n    const ds = {\n      connectionUrl: this.state.connectionUrl,\n      username: this.state.username,\n      password: this.state.password,\n      name: this.state.name,\n      type: this.state.password,\n      ping: this.state.ping\n    };\n\n    const { router } = this.props;\n\n    axios.post('/ws/jdbcdatasource', ds)\n      .then(res => {\n        this.reset();\n        router.push('/datasources');\n      });\n  }\n\n  reset = () => {\n    this.setState(this.initialState);\n  }\n\n  ping = () => {\n    \n  }\n\n  render() {\n\n    return (\n      <div>\n        <h1>{this.state.mode} Data Source</h1>\n        \n\n        \n\n        <div>\n          <button type=\"primary\" onClick={this.save}>Save</button>\n          <button type=\"primary\" onClick={this.ping}>Ping</button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default EditDataSource;\n","import React from 'react';\n\nclass QuerySlicer extends React.Component {\n\n  state = {\n    isSelectAll: false,\n  }\n\n  handleChange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const isChecked = target.checked;\n\n    const newCheckBoxes = [...this.props.checkBoxes];\n    const newCheckBox = newCheckBoxes.find(x => x.value === name);\n    newCheckBox.isChecked = isChecked;\n\n    this.props.onChange(this.props.filterId, newCheckBox);\n  }\n\n  toggleSelectAll = () => {\n    const newIsSelectAll = !this.state.isSelectAll;\n    const newCheckBoxes = [...this.props.checkBoxes];\n    for (let i = 0; i < newCheckBoxes.length; i++) {\n      newCheckBoxes[i].isChecked = newIsSelectAll;\n    }\n    this.props.onChange(this.props.filterId, newCheckBoxes);\n\n    this.setState(prevState => ({\n      isSelectAll: !prevState.isSelectAll\n    }));\n  }\n\n  render() {\n\n    const checkBoxes = this.props.checkBoxes.map((box, index) => \n      <div key={index}>\n        <input \n          type=\"checkbox\" \n          name={box.value} \n          value={box.value} \n          checked={box.isChecked} \n          onChange={this.handleChange}\n          />\n          {box.value}\n        <br/>\n      </div>\n    );\n\n    return (\n      <div>\n        <button onClick={this.toggleSelectAll}>Toggle Select All {this.state.isSelectAll}</button>\n        <div>\n          {checkBoxes}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QuerySlicer;\n","import React from 'react';\n\nclass NumberRange extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        min\n        <input type=\"number\" name=\"min\" />\n        max\n        <input type=\"number\" name=\"max\" />\n      </div>\n    );\n  }\n}\n\nexport default NumberRange;","import React, { Component } from 'react';\nimport QuerySlicer from \"./QuerySlicer\";\nimport NumberRange from \"./NumberRange\";\n\n\nconst filters = [\n  {\n    type: 'slicer',\n    id: 1,\n    dashboardId: 1,\n    data: {\n      dataSourceId: 2,\n      sqlQuery: 'select name from table',\n      display: 'Name',\n      columns: [{\n          name: 'name',\n          param: 'name'\n        },\n        {\n          name: 'b',\n          param: ':column b'\n        }\n      ]\n    },\n    queryResult: ['s1', 's2', 's3']\n  }\n]\n\nclass FilterViewPanel extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      filters: filters\n    };\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    this.fetchFilters();\n  }\n\n  renderFilterPanel = () => {\n    console.log('renderFilterPanel');\n    const filterPanel = [];\n    const filters = this.state.filters;\n    for (let i = 0; i < filters.length; i++) {\n      const filter = filters[i];\n      if (filter.type === 'slicer') {\n        console.log('11111');\n\n        const queryResult = filter.queryResult;\n        const checkBoxes = [];\n        for (let i = 0; i < queryResult.length; i++) {\n          checkBoxes.push({\n            value: queryResult[i],\n            isChecked: false\n          });\n        }\n\n        filterPanel.push(<QuerySlicer key={i} filterId={filter.id} checkBoxes={checkBoxes} onChange={this.onQuerySlicerChange} />);\n      } else if (filter.type === 'number-range') {\n        filterPanel.push(<NumberRange key={i} />);\n      } else if (filter.type === 'date-range') {\n\n      }\n    }\n    return filterPanel;\n  }\n\n  onQuerySlicerChange = (filterId, checkBoxes) => {\n    console.log('onQuerySlicerChange', filterId, checkBoxes);\n\n    const filter = this.state.filters.find(f => f.id === filterId);\n\n    const checked = [];\n    for (let i = 0; i < checkBoxes.length; i++) {\n      if (checkBoxes[i].isChecked) {\n        checked.push(checkBoxes[i]);\n      }\n    }\n\n    // const isSelectAll = checked.length === checkBoxes.length;    \n  }\n\n\n  fetchFilters = () => {\n    console.log('fetchFilters');\n    this.setState({\n      filters: filters\n    });\n  }\n\n  run = () => {\n    console.log('run');\n    \n    this.fetchFilters();\n\n    // TODO: call props\n  }\n\n  render() {\n    return (\n      <div className=\"testPanel\">\n        <h5>FilterViewPanel</h5>\n        <button onClick={this.run}>Run</button>\n        {this.renderFilterPanel()}\n      </div>\n    )\n  };\n}\n\nexport default FilterViewPanel;","\nimport React from 'react';\n\nclass WidgetViewPanel extends React.Component {\n  render() {\n    return (\n      <div className=\"testPanel\">\n        WidgetViewPanel\n      </div>\n    )\n  };\n}\n\nexport default WidgetViewPanel;","\nimport React from 'react';\n\nimport AceEditor from 'react-ace';\n\nimport 'brace/mode/mysql';\nimport 'brace/theme/xcode';\n\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\n\nimport axios from 'axios';\n\nimport * as webApi from '../api/WebApi';\n\nconst CHART_TYPES = ['table', 'pie'];\n\nclass WidgetEditPanel extends React.Component {\n\n   constructor(props) {\n    super(props);\n    this.state = {\n      jdbcDataSources: [],\n      widgetId: null,\n      name: '',\n      dashboardId: null,\n      sqlQuery: '',\n      jdbcDataSourceId: null,\n      queryResult: []\n    };\n  }\n\n  componentDidMount() {\n    console.log('WidgetEditPanel', 'componentDidMount');\n  }\n\n  fetchWidget = async (id) => {\n    const jdbcDataSources = await webApi.fetchDataSources();\n    this.setState({ \n      jdbcDataSources: jdbcDataSources \n    });\n\n    if (id === null) {\n      \n    } else {\n\n    }\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  save = (event) => {\n    event.preventDefault();\n    const widget ={\n      id: this.state.widgetId,\n      name: this.state.name,\n      dashboardId: this.state.dashboardId,\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\n      sqlQuery: this.state.sqlQuery\n    };\n    console.log('save', widget);\n  }\n\n  close = () => {\n    this.props.onClose();\n  }\n\n  runQuery = (event) => {\n    event.preventDefault();\n    const queryRequest ={\n      id: this.state.jdbcDataSourceId,\n      query: this.state.sqlQuery\n    };\n\n    axios.post('/ws/jdbcquery/query', queryRequest)\n      .then(res => {\n        const result = res.data;\n        const queryResult = result;\n        this.setState({\n          queryResult: queryResult\n        });\n      });\n  }\n\n  handleAceEditorChange = (newValue) => {\n    this.setState({\n      sqlQuery: newValue\n    });\n  }\n\n  handleDataSourceChange = (event) => {\n    this.setState({ \n      jdbcDataSourceId: event.target.value\n    });\n  }\n\n  render() {\n    const panelClass = this.props.show ? 'right-drawer display-block' : 'right-drawer display-none';\n\n    const dataSourceOptions = this.state.jdbcDataSources.map(ds =>\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\n    );\n\n    const chartOptionList = CHART_TYPES.map(o =>\n      <option value={o} key={o}>{o}</option>\n    );\n\n\n    const headers = [];\n    const queryResult = this.state.queryResult;\n    if (queryResult !== undefined && queryResult.length !== 0) {\n      const obj = queryResult[0];\n      const keys = Object.keys(obj);\n      for (const key of keys) {\n        headers.push({\n          Header: key,\n          accessor: key\n        })\n      }\n    }\n\n    return (\n      <div className={panelClass}>\n        <h3>WidgetEditPanel</h3>\n        <button onClick={() => this.props.onClose()}>Close</button>\n        <button onClick={this.save}>Save</button>\n        <button onClick={this.runQuery}>Run Query</button>\n\n        <form>\n          <label>Name</label>\n          <input \n            type=\"text\" \n            name=\"name\" \n            value={this.state.name}\n            onChange={this.handleInputChange} \n          />\n\n          <label>DataSource</label>\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\n            {dataSourceOptions}\n          </select>\n        \n          <label>SQL Query</label>\n          <AceEditor\n            style={{ marginTop: '8px' }}\n            value={this.state.sqlQuery}\n            mode=\"mysql\"\n            theme=\"xcode\"\n            name=\"blah2\"\n            onChange={this.handleAceEditorChange}\n            height={'300px'}\n            width={'100%'}\n            fontSize={15}\n            showPrintMargin={false}\n            showGutter={true}\n            highlightActiveLine={true}\n            setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: false,\n              showLineNumbers: true,\n              tabSize: 2,\n            }}\n          />\n\n          <label>Result</label>\n          <ReactTable\n            data={this.state.queryResult}\n            columns={headers}\n            defaultPageSize={10}\n          />\n\n          <label>Columns Mapping</label>\n          <div>column name, display name, data type</div>\n\n          <label>Chart Options</label>\n          <select value={this.state.optionValue} onChange={this.handleOptionChange}>\n            {chartOptionList}\n          </select>\n\n          <label><i class=\"fas fa-table\"></i> Table</label>\n          <div></div>\n\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\n          <div>Count \"users\" by \"last name\"</div>\n\n\n        </form>\n        \n      </div>\n    )\n  };\n}\n\nexport default WidgetEditPanel;","import React from 'react';\n\nclass FilterEditPanel extends React.Component {\n  render() {\n    const panelClass = this.props.show ? 'right-drawer display-block' : 'right-drawer display-none';\n\n    return (\n      <div className={panelClass}>\n        <h3>FilterEditPanel</h3>\n        <button onClick={() => this.props.onClose()}>Close</button>\n      </div>\n    )\n  };\n}\n\nexport default FilterEditPanel;","\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport FilterViewPanel from '../components/FilterViewPanel';\nimport WidgetViewPanel from '../components/WidgetViewPanel';\nimport WidgetEditPanel from '../components/WidgetEditPanel';\nimport FilterEditPanel from '../components/FilterEditPanel';\n\nconst FILTER_TYPES = [\n  { value: 'slicer', label: 'Slicer' },\n  { value: 'number-range', label: 'Number Range' },\n  { value: 'date-range', label: 'Date Range' }\n];\n\n\nconst mockDataSources = [{\n    name: 'ds1',\n    id: 1\n  }, {\n    name: 'ds2',\n    id: 2\n  }\n]\n\nconst mockDashboard = {\n  dashboardId: 1,\n  filters: [\n    {\n      type: 'slicer',\n      id: 1,\n      dashboardId: 1,\n      data: {\n        dataSourceId: 2,\n        sqlQuery: 'select name from table',\n        display: 'Name',\n        columns: [{\n            name: 'name',\n            param: 'name'\n          },\n          {\n            name: 'b',\n            param: ':column b'\n          }\n        ]\n      },\n      queryResult: ['s1', 's2', 's3']\n    }\n  ],\n  widgets: []\n}\n\n\nclass DashboardEditView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      showWidgetEditPanel: false,\n      showFilterEditPanel: false,\n      jdbcDataSourceOptions: [],\n      dashboardId: 0,\n      name: '',\n      widgets: [],\n      filters: []\n    }\n\n    this.filterViewPanel = React.createRef();\n    this.widgetViewPanel = React.createRef();\n    this.widgetEditPanel = React.createRef();\n  }\n\n  componentDidMount() {\n    let dashboardId = 1; // this.props.match.params.id;\n    console.log(\"componentDidMount\", dashboardId);\n    this.initData(dashboardId);\n  }\n\n  async initData(dashboardId) {\n    const jdbcDataSources = mockDataSources;// await webApi.fetchDataSources();\n    const jdbcDataSourceOptions = [];\n    for (let i = 0; i < jdbcDataSources.length; i++) {\n      jdbcDataSourceOptions.push({\n        label: jdbcDataSources[i].name,\n        value: jdbcDataSources[i].id\n      });\n    }\n    this.setState({ \n      jdbcDataSourceOptions: jdbcDataSourceOptions \n    });\n\n    if (dashboardId !== undefined) {\n      const dashboard = mockDashboard; // await webApi.fetchDashboardById(dashboardId);\n      const filters = dashboard.filters;\n      const widgets = dashboard.widgets;\n      console.log('filters', filters);\n      this.setState({ \n        dashboardId: dashboardId,\n        filters: filters,\n        widgets: widgets\n      });\n\n      //this.initFilters();\n      // TODO: inig widgets based on the base value of the filters.\n      //this.initWidgets();\n    } else {\n      this.setState({ \n        dashboardId: null,\n        filters: [],\n        widgets: []\n      });\n    } \n  }\n\n  refresh = () => {\n    console.log('refresh');\n    this.filterViewPanel.current.fetchFilters();\n  }\n\n  showFilterEditPanel = (filter) => {\n    this.setState({\n      showFilterEditPanel: true\n    });\n  }\n\n  showWidgetEditPanel = (widget) => {\n    this.widgetEditPanel.current.fetchWidget(null);\n    this.setState({\n      showWidgetEditPanel: true\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>DashboardEditView</h3>\n        <button onClick={this.refresh}>Refresh</button>\n        <button onClick={() => this.showFilterEditPanel(null)}>Add Filter</button>\n        <button onClick={() => this.showWidgetEditPanel(null)}>Add Widget</button>\n        <FilterViewPanel ref={this.filterViewPanel} />\n        <WidgetViewPanel ref={this.widgetViewPanel} />\n        <WidgetEditPanel \n          ref={this.widgetEditPanel} \n          show={this.state.showWidgetEditPanel}\n          onClose={() => this.setState({ showWidgetEditPanel: false})}\n          jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\n        />\n        <FilterEditPanel\n          ref={this.FilterEditPanel}\n          show={this.state.showFilterEditPanel}\n          onClose={() => this.setState({ showFilterEditPanel: false})}\n          jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\n        />\n      </div>\n    )\n  };\n}\n\nexport default withRouter(DashboardEditView);\n","\nimport React, { Component } from 'react';\nimport FilterViewPanel from '../components/FilterViewPanel';\n\nclass SingleTest extends Component {\n\n  constructor(props) {\n    super(props);\n    this.filterViewPanel = React.createRef();\n  }\n\n  refresh = () => {\n    console.log('refresh');\n    this.filterViewPanel.current.fetchFilters();\n  }\n\n  render() {\n    return (\n      <div>\n        <h5>SingleTest</h5>\n        <FilterViewPanel ref={this.filterViewPanel}/>\n        <button onClick={this.refresh}>Refresh</button>\n      </div>\n    )\n  };\n}\n\nexport default SingleTest;","import React, { Component } from 'react';\nimport './App.css';\n\nimport { Route, Link } from \"react-router-dom\";\nimport Overview from './views/Overview';\nimport DataSources from './views/DataSources';\nimport Dashboards from './views/Dashboards';\nimport Test from './views/Test';\nimport EditDataSource from './views/EditDataSource';\nimport DashboardEditView from './views/DashboardEditView';\n\nimport SingleTest from './views/SingleTest';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: 'overview',\n      menuMin: ''\n    }\n  }\n\n  componentDidMount() {\n  }\n\n  handleClick = (e) => {\n    this.setState({\n      current: e.key,\n    });\n  }\n\n  toggleMenu = () => {\n    const menuMin = this.state.menuMin === '' ? 'menu-min' : '';\n    this.setState({\n      menuMin: menuMin\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Nav\">\n          <div className=\"Nav_title-bar\">\n            <div className=\"Nav_title\">Poli</div>\n          </div>\n          <div className=\"Nav_menu\">\n            <ul className=\"menu\">\n              <li>\n                <Link to=\"/overview\">\n                  <i class=\"fas fa-heartbeat fa-fw\"></i>\n                  <span class=\"menu-text\">Overview</span>\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/datasources\">\n                  <i class=\"fas fa-database fa-fw\"></i>\n                  <span class=\"menu-text\">Data Sources</span>\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/dashboards\">\n                  <i class=\"fas fa-chalkboard fa-fw\"></i>\n                  <span class=\"menu-text\">Dashboards</span>\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/test\">Test</Link>\n              </li>\n              <li>\n                <Link to=\"/single-test\">SingleTest</Link>\n              </li>\n              \n            </ul>\n            <div className=\"Nav__toggle-menu\">\n              <div onClick={this.toggleMenu}>toggle</div>\n            </div>\n          </div>\n        </div>\n        <div className={`Status_bar ${this.state.menuMin}`}>\n        </div>\n        <div className={`Content ${this.state.menuMin}`}>\n          <Route exact path=\"/\" component={Overview} />\n          <Route exact path=\"/overview\" component={Overview} />\n          <Route exact path=\"/datasources\" component={DataSources} />\n          <Route exact path=\"/dashboards\" component={Dashboards} />\n          <Route exact path=\"/test\" component={Test} />\n          <Route exact path=\"/datasources/new\" component={EditDataSource} />\n          <Route exact path=\"/datasources/edit/:id\" component={EditDataSource} />\n          <Route exact path=\"/dashboard/new\" component={DashboardEditView} />\n          <Route exact path=\"/dashboard/edit/:id\" component={DashboardEditView} />\n          <Route exact path=\"/single-test\" component={SingleTest} />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/poli\">\n    <App />\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}