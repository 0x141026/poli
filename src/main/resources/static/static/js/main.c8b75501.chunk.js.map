{"version":3,"sources":["views/Overview.js","api/WebApi.js","views/DataSources.js","views/Dashboards.js","views/Test.js","views/EditDataSource.js","views/EditDashboard.js","App.js","index.js"],"names":["Overview","react_default","a","createElement","Component","fetchDataSources","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","get","abrupt","sent","stop","this","apply","arguments","fetchDashboardById","_ref2","_callee2","id","_context2","concat","_x","_ref3","_callee3","url","response","_context3","axios","data","t0","_x2","DataSources","state","visible","jdbcDataSources","mode","name","connectionUrl","username","password","type","ping","handleInputChange","event","target","value","_this","setState","defineProperty","save","preventDefault","ds","post","then","res","initData","update","console","log","put","delete","webApi","_this2","jdbcDataSourceItems","map","index","key","onClick","showDrawer","Link","to","onChange","row","Dashboard","dashboards","fetchBoards","dashboardId","props","history","push","jump","dashboardRows","d","withRouter","Test","newValue","submit","lib_default","theme","height","width","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","React","PureComponent","EditDataSource","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","router","reset","initialState","match","params","undefined","EditDashboard","widgets","filters","slicer","showAddFilter","jdbcDataSourceId","saveDashboard","dashboard","addFilter","saveFilter","filter","sqlQuery","saveWidget","widget","filterDrawerClass","filterItems","widgetItems","w","className","App","handleClick","e","current","Route","exact","path","component","Dashboards","ReactDOM","render","HashRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c8b75501.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\n\r\nclass Overview extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Overview</h1>      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Overview;\r\n","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  return await get('/ws/jdbcdatasource');\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport * as webApi from '../api/WebApi';\r\n\r\nclass DataSources extends Component {\r\n\r\n  state = { \r\n    visible: false,\r\n    jdbcDataSources: [],\r\n    mode: '',\r\n    id: 0,\r\n    name: '',\r\n    connectionUrl: '',\r\n    username: '',\r\n    password: '',\r\n    type: '',\r\n    ping: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Fetch all datasources\r\n    this.initData();\r\n    \r\n  }\r\n\r\n  async initData() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const ds = {\r\n      connectionUrl: this.state.connectionUrl,\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      name: this.state.name,\r\n      type: this.state.password,\r\n      ping: this.state.ping\r\n    };\r\n\r\n    axios.post('/ws/jdbcdatasource', ds)\r\n      .then(res => {\r\n        this.initData();\r\n      });\r\n  }\r\n\r\n  update = (ds) => {\r\n    console.log('update', ds);\r\n    axios.put('/ws/jdbcdatasource', ds)\r\n      .then(res => {\r\n        this.initData();\r\n      });\r\n  }\r\n\r\n  delete = (id) => {\r\n    console.log('delete', id);\r\n    axios.delete('/ws/jdbcdatasource/' + id)\r\n      .then(res => {\r\n        this.initData();\r\n      });\r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        console.log('ping', res.data);\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const jdbcDataSourceItems = this.state.jdbcDataSources.map((ds, index) => \r\n      <tr key={index}>\r\n        <td>{ds.name}</td>\r\n        <td>{ds.connectionUrl}</td>\r\n        <td>{ds.type}</td>\r\n        <td>{ds.username}</td>\r\n        <td>{ds.ping}</td>\r\n        <td><button onClick={() => this.update(ds)}>update</button></td>\r\n        <td><button onClick={() => this.delete(ds.id)}>delete</button></td>\r\n        <td><button onClick={() => this.ping(ds.id)}>ping</button></td>\r\n      </tr>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <h1>Data Sources</h1>\r\n        <div>\r\n          <h2>Table</h2>\r\n\r\n          <table>\r\n            <thead>\r\n            </thead>\r\n            <tbody>\r\n              {jdbcDataSourceItems}\r\n            </tbody>\r\n          </table>\r\n\r\n        </div>\r\n        <button onClick={this.showDrawer}>\r\n          Add\r\n        </button>\r\n        <button>\r\n          <Link to=\"/datasources/new\">New</Link>\r\n        </button>\r\n        <button>\r\n          <Link to=\"/datasources/edit/1\">Edit</Link>\r\n        </button>\r\n\r\n        <div>\r\n          <form>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Connection Url</label>\r\n            <textarea\r\n              row=\"3\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Password</label>\r\n            <input \r\n              type=\"password\" \r\n              name=\"password\" \r\n              value={this.state.password}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Type</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"type\" \r\n              value={this.state.type}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} />\r\n          </form>\r\n\r\n          <div>\r\n            <button onClick={this.save}>Save</button>\r\n            <button onClick={this.ping}>Ping</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSources;\r\n","\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n  state = { \r\n    dashboards: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  save = () => {\r\n\r\n  }\r\n\r\n  update = (dashboardId) => {\r\n    this.props.history.push(`/dashboard/edit/${dashboardId}`);\r\n  }\r\n\r\n  delete = () => {\r\n\r\n  }\r\n\r\n  jump = () => {\r\n    this.props.history.push('/overview');\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const dashboardRows = this.state.dashboards.map((d, index) => \r\n      <tr key={index}>\r\n        <td>{d.id}</td>\r\n        <td>{d.name}</td>\r\n        <td><button onClick={() => this.update(d.id)}>update</button></td>\r\n      </tr>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        Board\r\n        <button onClick={this.jump}>Overview</button>\r\n        <button onClick={() => this.props.history.push('/dashboard/new')}>New</button>\r\n\r\n        <table>\r\n          <thead>\r\n          </thead>\r\n          <tbody>\r\n            {dashboardRows}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nclass Test extends React.PureComponent {\r\n\r\n  onChange = (newValue) => {\r\n    console.log('change',newValue);\r\n  }\r\n\r\n  submit = () => {\r\n    console.log('submit', );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AceEditor\r\n          mode=\"mysql\"\r\n          theme=\"xcode\"\r\n          name=\"blah2\"\r\n          onChange={this.onChange}\r\n          height={'300px'}\r\n          width={'300px'}\r\n          fontSize={18}\r\n          showPrintMargin={false}\r\n          showGutter={true}\r\n          highlightActiveLine={true}\r\n          setOptions={{\r\n            enableBasicAutocompletion: true,\r\n            enableLiveAutocompletion: true,\r\n            enableSnippets: false,\r\n            showLineNumbers: true,\r\n            tabSize: 2,\r\n            }}\r\n          />\r\n          <button onClick={this.submit}>Submit</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nclass EditDataSource extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      id: 0,\r\n      name: '',\r\n      connectionUrl: '',\r\n      username: '',\r\n      password: '',\r\n      type: '',\r\n      ping: '',\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    console.log(\"id\", id);\r\n    let mode = 'Edit';\r\n    if (id === undefined) {\r\n      mode = 'New';\r\n    }\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const ds = {\r\n      connectionUrl: this.state.connectionUrl,\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      name: this.state.name,\r\n      type: this.state.password,\r\n      ping: this.state.ping\r\n    };\r\n\r\n    const { router } = this.props;\r\n\r\n    axios.post('/ws/jdbcdatasource', ds)\r\n      .then(res => {\r\n        this.reset();\r\n        router.push('/datasources');\r\n      });\r\n  }\r\n\r\n  reset = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  ping = () => {\r\n    \r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <h1>{this.state.mode} Data Source</h1>\r\n        \r\n\r\n        \r\n\r\n        <div>\r\n          <button type=\"primary\" onClick={this.save}>Save</button>\r\n          <button type=\"primary\" onClick={this.ping}>Ping</button>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditDataSource;\r\n","\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport * as webApi from '../api/WebApi';\r\n\r\n\r\nclass EditDashboard extends Component {\r\n\r\n  state = { \r\n    mode: '',\r\n    jdbcDataSources: [],\r\n    dashboardId: 0,\r\n    name: '',\r\n    widgets: [],\r\n    filters: [],\r\n    slicer: {},\r\n    showAddFilter: false,\r\n    jdbcDataSourceId: 1\r\n  };\r\n\r\n  componentDidMount() {\r\n    const dashboardId = this.props.match.params.id;\r\n    console.log(\"id\", dashboardId);\r\n    let mode = 'Edit';\r\n    if (dashboardId === undefined) {\r\n      mode = 'New';\r\n    }\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n    this.initData(dashboardId);\r\n  }\r\n\r\n  async initData(dashboardId) {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    if (dashboardId !== undefined) {\r\n      const dashboard = await webApi.fetchDashboardById(dashboardId);\r\n      const filters = dashboard.filters;\r\n      const widgets = dashboard.widgets;\r\n      console.log('filters', filters);\r\n      this.setState({ \r\n        dashboardId: dashboardId,\r\n        filters: filters,\r\n        widgets: widgets\r\n      });\r\n    }    \r\n  }\r\n\r\n  initFilter() {\r\n\r\n  }\r\n\r\n  initWidget() {\r\n\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  saveDashboard = (event) => {\r\n    event.preventDefault();\r\n    const dashboard = {\r\n      name: this.state.name\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data.id;\r\n        this.setState({\r\n          dashboardId: dashboardId\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  addFilter = () => {\r\n    this.setState({\r\n      showAddFilter: !this.state.showAddFilter\r\n    })\r\n  }\r\n\r\n  saveFilter = (event) => {\r\n    event.preventDefault();\r\n    const dashboardId = this.state.dashboardId;\r\n    const filter = {\r\n      dashboardId: dashboardId,\r\n      data: {\r\n        type: 'slicer',\r\n        sqlQuery: 'select name from page group by name;'\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/filter', filter)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  saveWidget = (event) => {\r\n    event.preventDefault();\r\n    const widget = {\r\n      dashboardId: this.state.dashboardId,\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      data: {\r\n        sqlQuery: 'select * from page'\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/widget', widget)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const filterDrawerClass = this.state.showAddFilter ? 'right-drawer display-block' : 'right-drawer display-none';\r\n\r\n    const filterItems = this.state.filters.map((filter, index) => \r\n      <div key={index}>\r\n        {filter.dashboardId} - {filter.data.type} - {filter.data.sqlQuery}\r\n      </div>\r\n    );\r\n\r\n    const jdbcDataSourceItems = this.state.jdbcDataSources.map((ds, index) => \r\n      <div key={index}>\r\n        {ds.id} - {ds.name}\r\n      </div>\r\n    );\r\n\r\n    const widgetItems = this.state.widgets.map((w, index) => \r\n      <div key={index}>\r\n        {w.id} - {w.data.sqlQuery}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <h3>Edit Board</h3>\r\n        <div>\r\n          <h4>Board - id: {this.state.dashboardId}</h4>\r\n          <form>\r\n            <label>Name</label>\r\n            <br/>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n          </form>\r\n          <button onClick={this.saveDashboard}>Save</button>\r\n        </div>\r\n\r\n        <div>\r\n          <h5>Datasources</h5>\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <div>\r\n          <h5>Widgets</h5>\r\n          <button onClick={this.saveWidget}>save Widget</button>\r\n          <div>\r\n            {widgetItems}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h5>Filters</h5>\r\n          <button onClick={this.addFilter}>add filter</button>\r\n\r\n          {filterItems}\r\n        </div>\r\n        \r\n        <div className={filterDrawerClass}>\r\n          <h5>Add Filter</h5>\r\n          <button onClick={this.saveFilter}>save filter</button>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(EditDashboard);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport Overview from './views/Overview';\r\nimport DataSources from './views/DataSources';\r\nimport Dashboards from './views/Dashboards';\r\nimport Test from './views/Test';\r\nimport EditDataSource from './views/EditDataSource';\r\nimport EditDashboard from './views/EditDashboard';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: 'overview'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"nav\">\r\n          <Link to=\"/overview\">Overview</Link>\r\n          <Link to=\"/datasources\">Data Sources</Link>\r\n          <Link to=\"/dashboards\">Dashboards</Link>\r\n          <Link to=\"/test\">Test</Link>\r\n        </div>\r\n        <div className=\"content\">\r\n          <Route exact path=\"/\" component={Overview} />\r\n          <Route exact path=\"/overview\" component={Overview} />\r\n          <Route exact path=\"/datasources\" component={DataSources} />\r\n          <Route exact path=\"/dashboards\" component={Dashboards} />\r\n          <Route exact path=\"/test\" component={Test} />\r\n          <Route exact path=\"/datasources/new\" component={EditDataSource} />\r\n          <Route exact path=\"/datasources/edit/:id\" component={EditDataSource} />\r\n          <Route exact path=\"/dashboard/new\" component={EditDashboard} />\r\n          <Route exact path=\"/dashboard/edit/:id\" component={EditDashboard} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}