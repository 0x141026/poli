{"version":3,"sources":["views/Login.js","views/ChangeTempPassword.js","api/WebApi.js","components/Modal.js","components/Toast.js","views/DataSource.js","api/Constants.js","components/ColorPicker.js","components/Checkbox.js","api/Util.js","api/EchartsApi.js","components/GridDraggable.js","components/GridResizable.js","components/TableWidget.js","components/Slicer.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/Tabs.js","components/Select.js","components/WidgetEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/DashboardFullScreenView.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","handleKeyPress","keyCode","login","_this$state","state","username","password","user","axios","post","then","res","loginResponse","data","error","errorMsg","onLoginSuccess","_this2","isAuthenticated","sysRole","react_default","a","createElement","Fragment","className","type","onChange","onKeyDown","onClick","React","Component","withRouter","ChangeTempPassword","changePassword","confirmedPassword","length","history","push","style","fontSize","textAlign","fontWeight","marginBottom","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","concat","onClose","react_fontawesome_index_es","icon","size","Toast","message","showToast","setTimeout","hide","_toastRef","assertThisInitialized","toastStatus","DataSource","save","showUpdatePassword","id","connectionUrl","driverClassName","ping","ds","put","closeEditPanel","catch","result","clearEditPanel","initialState","openEditPanel","showEditPanel","confirmDelete","_this$state$objectToD","objectToDelete","delete","closeConfirmDeletionPanel","openConfirmDeletionPanel","datasource","showConfirmDeletionPanel","toggleUpdatePassword","prevState","clearSearch","searchValue","jdbcDataSources","webApi","_this$state2","_this$state2$jdbcData","_this$state2$objectTo","mode","jdbcDataSourceItems","_loop","i","includes","key","placeholder","width","src_components_Modal","rows","margin","CHART","FILTER","WIDGET_TYPES","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","SYS_ROLE_ADMIN","SYS_ROLE_VIEWER","DEFAULT_DASHBOARD_HEIGHT","ColorPicker","handleClick","showPalette","handleClose","handleChange","color","rgb","rgba","r","g","b","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","Checkbox","toggle","checked","_this$props2","checkmarkBoxStyle","backgroundColor","jsonToArray","json","array","JSON","parse","e","CHART_COLORS","getPieOption","queryResultData","pieKey","pieValue","legend","series","row","tooltip","orient","center","radius","getPieOptionTemplate","WIDGET_BORDER","GridDraggable","onMouseDown","preventDefault","gridItemNode","ReactDOM","findDOMNode","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","fixedWidth","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","TableWidget","goToLink","link","onTableTdClick","_this$props$data","_this$props$columns","columns","_this$props$drillThro","drillThrough","columnHeaders","forEach","column","columnName","header","Header","accessor","index","findIndex","d","dashboardId","Cell","es","defaultPageSize","previousText","nextText","Slicer","isSelectAll","toggleSelectAll","newIsSelectAll","newCheckBoxes","toConsumableArray","checkBoxes","isChecked","filterId","handleSearchValueChange","indexOf","handleCheckBoxChange","x","_this$props$checkBoxe","checkBoxItems","map","box","src_components_Checkbox","GridItem","console","log","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","instance","handleOriginal","drills","widgetDrillThrough","onChartClick","param","echarts","onChartLegendselectchanged","echart","onSlicerChange","onWidgetFilterInputChange","onSingleValueChange","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","filterType","_this$props$queryResu","queryResult","Util","widgetItem","Constants","src_components_TableWidget","chartOption","EchartsApi","echarts_for_react_lib_default","option","onEvents","src_components_Slicer","isEditMode","_this$props2$style","_style$showBorder","showBorder","borderStyle","showTitle","styles","border","marginRight","components_GridDraggable","components_GridResizable","GridLayout","_this$props$widgets","widgets","showGridlines","backgroundSize","backgroundImage","boxItems","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","viewWidth","newWidgets","gridWidth","resizeWidgetsToActual","resizeWidgetsToBase","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryFilters","queryCharts","handleHeightChange","onHeightChange","onBackgroundColorChange","saveWidgets","stringify","w","splice","_this$state$widgets","getFilterParams","_this$state$widgets2","filterParams","filterParam","_widget$checkBoxes","paramValues","j","checkBox","remark","queryParameter","_widgets$i","queryChart","_widgets$i2","queryFilter","params","_this3","_arr","values","_i","val","widgetViewWidth","components_ColorPicker","src_components_GridLayout","Tabs","handleTabClick","activeTab","tabHeaders","tabContent","active","Select","handleOptionChange","_this$props$options","options","optionValue","optionDisplay","_this$props$preloadOn","preloadOneEmpty","optionList","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","_widget$data","sqlQuery","jdbcDataSourceId","runQuery","_x","objectSpread","handleAceEditorChange","newValue","handleIntegerOptionChange","intValue","_this$state3","_this$state4","onSave","queryRequest","addDrillThrough","_this$state5","drillColumnName","drillDashboardId","newDrillThrough","removeDrillThrough","drill","generateChart","_this$state6","_this$state6$queryRes","renderChartPreview","_this$state7","_this$state7$queryRes","chartPreview","_this$state8","class","components_Select","_this$state9","_this$state9$jdbcData","_this$state9$drillThr","_this$state9$drillDas","drillItems","columnItems","col","dataType","showQueryTab","src_components_Tabs","react_ace_lib_default","marginTop","theme","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","DashboardEditView","loadViewByDashboardName","url","location","search","dashboardName","URLSearchParams","getPageWidth","isReadOnly","refresh","toggleAutoRefresh","autoRefreshTimerId","clearInterval","refreshInterval","interval","timerId","setInterval","queryWidgets","updateLastRefreshed","refreshWidgetView","widgetViewPanel","current","now","Date","toTimeString","replace","lastRefreshed","dashboard","onDashboardSave","edit","cancelEdit","onSaveWidget","showWidgetEditPanel","openWidgetEditPanel","widgetEditPanel","applyFilters","fullScreen","window","open","onTableCellClick","onDashboardDelete","deleteDashboard","jdbcDataSourceOptions","createRef","match","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","editButtonPanel","autoRefreshStatus","fullScreenButtonPanel","controlButtons","components_WidgetViewPanel","ref","src_components_WidgetEditPanel","Dashboard","fetchBoards","view","activeDashboardId","pathname","Number","substring","_this$state$dashboard","showEdit","dashboardRows","menuActive","Route","path","render","views_DashboardEditView","User","fetchUsers","users","fetchGroups","groups","tempPassword","userGroups","userGroupId","initialEditPanelState","selectedSysRole","addUserGroup","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_this$state3$users","_this$state3$groups","_this$state3$userGrou","_this$state3$objectTo","userItems","userGroupItems","_loop2","Group","fetchDashboards","group","groupDashboards","groupDashboardId","addGroupDashboard","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","UserManagement","views_Group","views_User","Account","fetchUser","apiKey","generateApiKey","DashboardFullScreenView","dashboardEditView","wrappedComponentRef","comp","MENU_ITEMS","Workspace","handleMenuClick","menuLink","currentMenuLink","logout","onLogout","startsWith","find","m","menuItems","menuList","filter","menu","Link","to","isAccountMenuActive","Switch","exact","component","views_UserManagement","src_views_Dashboard","src_components_Toast","PageNotFound","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","faCircleNotch","App","isAuthorizing","directUrl","currentPath","spin","src_views_Login","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.d06a340f.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { sysRole } = this.props;\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      axios.post('/auth/login/cookie')\r\n        .then(res => {\r\n          const loginResponse = res.data;\r\n          if (!loginResponse.error) {\r\n            this.props.onLoginSuccess(loginResponse);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.keyCode === 13) {\r\n      this.login();\r\n    }\r\n  }\r\n\r\n  login = () => {\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const loginResponse = res.data;\r\n        if (loginResponse.error) {\r\n          this.setState({\r\n            errorMsg: loginResponse.error\r\n          });\r\n        } else {\r\n          this.props.onLoginSuccess(loginResponse);\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div className=\"login-app-title\">Poli</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <div className=\"login-panel-body\">\r\n            <div className=\"form-panel\">\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n              <label>Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n              <button className=\"button login-button\" onClick={this.login}>Login</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport './Login.css';\r\n\r\nclass ChangeTempPassword extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  changePassword = () => {\r\n    const {\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    if (password && confirmedPassword\r\n        && password === confirmedPassword) {\r\n      if (password.length < 8) {\r\n        this.setState({\r\n          errorMsg: `Use 8 or more characters.`\r\n        });\r\n        return;\r\n      }\r\n\r\n      const user = {\r\n        password: password\r\n      }\r\n\r\n      axios.post('/auth/login/changepassword', user)\r\n        .then(res => {\r\n          const loginResponse = res.data || {};\r\n          if (loginResponse.error) {\r\n            this.setState({\r\n              errorMsg: loginResponse.error\r\n            });\r\n          } else {\r\n            this.props.history.push('/workspace/dashboard');\r\n          }\r\n        });\r\n    } else {\r\n      this.setState({\r\n        errorMsg: `Those passwords didn't match.`\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const titleStyle = {\r\n      fontSize: '22px',\r\n      textAlign: 'center',\r\n      fontWeight: 'bold',\r\n      marginBottom: '15px'\r\n    }\r\n\r\n    const tipStyle = {\r\n      fontWeight: 'bold',\r\n      marginBottom: '5px',\r\n      fontSize: '15px'\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div style={titleStyle}>Change password</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <div className=\"login-panel-body\">\r\n            <div className=\"form-panel\">\r\n              <div style={tipStyle}>* Use 8 or more characters</div>\r\n              <label>New password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n              <label>Confirm password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"confirmedPassword\" \r\n                value={this.state.confirmedPassword}\r\n                onChange={this.handleInputChange} />\r\n              <button className=\"button login-button\" onClick={this.changePassword}>Confirm</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ChangeTempPassword);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      modalClass = '',\r\n      title,\r\n      children\r\n    } = this.props;\r\n\r\n    const modalStatus = show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={`modal-panel ${modalClass}`}>\r\n          <div className=\"model-header row\">\r\n            <div className=\"model-title\">{title}</div>\r\n            <button className=\"model-close-button icon-button\" onClick={() => this.props.onClose()}>\r\n              <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          <div className='modal-body'>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Toast.css';\r\n\r\nclass Toast extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showToast: false,\r\n      message: ''\r\n    };\r\n\r\n    Toast._toastRef = this;\r\n  }\r\n\r\n  show = (message) => {\r\n    this.setState({ \r\n      showToast: true,\r\n      message: message\r\n    }, () => {\r\n      setTimeout(() => {\r\n        this.hide();\r\n      }, 3500);\r\n    });\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({ \r\n      showToast: false,\r\n      message: ''\r\n    });\r\n  }\r\n\r\n  static show = (message) => {\r\n    Toast._toastRef.show(message);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showToast,\r\n      message\r\n    } = this.state;\r\n\r\n    const toastStatus = showToast ? 'display-block' : 'display-none';\r\n\r\n    return (\r\n      <div className={`toast-container ${toastStatus}`}>\r\n        <button className=\"button\" onClick={this.hide}>X</button>\r\n        <div>\r\n          {message}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toast;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './Datasource.css';\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      showUpdatePassword: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataSources();\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      driverClassName,\r\n      username,\r\n      password,\r\n      name,\r\n      ping,\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      Toast.show('Enter a name.');\r\n      return;\r\n    }\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      driverClassName: driverClassName,\r\n      username: username,\r\n      name: name,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword && password) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          Toast.show('The name exists. Try another.');\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          Toast.show('The name exists. Try another.');\r\n        });\r\n    } \r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        Toast.show(result);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        driverClassName: ds.driverClassName,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/jdbcdatasource/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (datasource) => {\r\n    this.setState({\r\n      objectToDelete: datasource,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  clearSearch = () => {\r\n    this.setState({\r\n      searchValue: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      id,\r\n      jdbcDataSources = [],\r\n      searchValue,\r\n      showConfirmDeletionPanel,\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const jdbcDataSourceItems = [];\r\n    for (let i = 0; i < jdbcDataSources.length; i++) {\r\n      const ds = jdbcDataSources[i];\r\n      const name = ds.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        jdbcDataSourceItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {name}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.ping(ds.id)}>\r\n                  <FontAwesomeIcon icon=\"plug\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"full-page-content\">\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchValue\"\r\n            value={this.state.searchValue}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Search...\"\r\n            style={{width: '200px'}}\r\n          />\r\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n          <button className=\"button margin-left\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New\r\n          </button>\r\n          </div>\r\n        <div className=\"row mt-10\">\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Name <span className=\"required\">*</span></label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n            />\r\n\r\n            <label>Connection Url</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label>Driver Class Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"driverClassName\" \r\n              value={this.state.driverClassName}\r\n              onChange={this.handleInputChange} \r\n            />\r\n\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} \r\n            />\r\n            \r\n            { mode === 'Edit' && (\r\n              <div style={{margin: '3px 0px 8px 0px'}}>\r\n                <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n              </div>\r\n            )}\r\n\r\n            { (mode === 'New' || showUpdatePassword) && ( \r\n              <div>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} \r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <label>Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} \r\n            />\r\n            <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","/**\r\n * Constants\r\n */\r\nexport const CHART = 'chart';\r\nexport const FILTER = 'filter';\r\nexport const WIDGET_TYPES = [CHART, FILTER];\r\n\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\r\n\r\nexport const SYS_ROLE_ADMIN = 'admin';\r\nexport const SYS_ROLE_DEVELOPER = 'developer';\r\nexport const SYS_ROLE_VIEWER = 'viewer';\r\n\r\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;","import React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPalette: false\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      showPalette: !prevState.showPalette\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      showPalette: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    const rgb = color.rgb;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    this.props.onChange(rgba);\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: this.props.value\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: '2'\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.showPalette && (\r\n          <div style={popover}>\r\n            <div style={cover} onClick={this.handleClose} />\r\n            <ChromePicker color={this.props.value} onChange={this.handleChange} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    const {\r\n      name,\r\n      checked\r\n    } = this.props;\r\n\r\n    this.props.onChange(name, !checked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      checked\r\n    } = this.props;\r\n\r\n    const checkmarkBoxBgColor = checked ? '#000000' : '#FFFFFF';\r\n    const checkmarkBoxStyle = {\r\n      backgroundColor: checkmarkBoxBgColor\r\n    };\r\n\r\n    return (\r\n      <div className=\"checkbox-container\" onClick={this.toggle}>\r\n        <div className=\"checkbox-checkmark\">\r\n          <div className=\"checkbox-checkmark-box\" style={checkmarkBoxStyle}>\r\n          </div>\r\n        </div>\r\n        <div className=\"checkbox-label\">{value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};\r\n\r\nexport const jsonToArray = (json) => {\r\n  let array;\r\n  try {\r\n    array = JSON.parse(json);\r\n  } catch(e) {\r\n    array = [];\r\n  }\r\n  return array;\r\n}\r\n","import * as Util from '../api/Util';\r\n\r\nconst CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOptionTemplate = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      type: 'scroll',\r\n      orient: 'vertical',\r\n      data: legend,\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['40%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport const getPieOption = (queryResultData, pieKey, pieValue) => {\r\n  let legend = [];\r\n  let series = [];\r\n  for (let i = 0; i < queryResultData.length; i++) {\r\n    const row = queryResultData[i];\r\n    legend.push(row[pieKey]);\r\n    series.push({\r\n      name: row[pieKey],\r\n      value: row[pieValue]\r\n    });  \r\n  }\r\n  return getPieOptionTemplate(legend, series);\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport './TableWidget.css';\r\n\r\nclass TableWidget extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  goToLink = (link) => {\r\n    this.props.onTableTdClick(link);\r\n  }\r\n\r\n  render() {   \r\n    const {\r\n      data = [],\r\n      columns = [],\r\n      drillThrough = [],\r\n      error\r\n    } = this.props;\r\n\r\n    const columnHeaders = [];\r\n    columns.forEach(column => {\r\n      const columnName = column.name;\r\n      const header = {\r\n        Header: columnName,\r\n        accessor: columnName\r\n      };\r\n      if (drillThrough.length > 0) {\r\n        const index = drillThrough.findIndex(d => d.columnName === columnName);\r\n        if (index !== -1) {\r\n          const dashboardId = drillThrough[index].dashboardId;\r\n          header.Cell = (props => \r\n            <span className=\"link-label\" \r\n              onClick={() => this.goToLink(`/workspace/dashboard/${dashboardId}?${columnName}=${props.value}`)}>\r\n              {props.value}\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n\r\n      columnHeaders.push(header);\r\n    });\r\n\r\n    if (error) {\r\n      return (\r\n        <div>\r\n          {error}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ReactTable\r\n        data={data}\r\n        columns={columnHeaders}\r\n        defaultPageSize={10}\r\n        previousText={'Prev'}\r\n        nextText={'Next'}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableWidget;\r\n","import React from 'react';\r\nimport Checkbox from './Checkbox';\r\nimport './Slicer.css';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n    searchValue: ''\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    if (searchValue) {\r\n      const result = [];\r\n      const { checkBoxes } = this.props;\r\n      for (let i = 0; i < checkBoxes.length; i++) {\r\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\r\n          result.push(checkBoxes[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n\r\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      checkBoxes = []\r\n    } = this.props;\r\n    const checkBoxItems = checkBoxes.map((box, index) => \r\n      <Checkbox \r\n        key={index} \r\n        name={box.value} \r\n        value={box.value} \r\n        checked={box.isChecked} \r\n        onChange={this.handleCheckBoxChange} \r\n      />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.toggleSelectAll}>Select All {this.state.isSelectAll}</button>\r\n        <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.searchValue}\r\n            onChange={this.handleSearchValueChange}\r\n            placeholder=\"Search...\"\r\n          />\r\n        \r\n        <div className=\"slicer-body\">\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\nimport TableWidget from './TableWidget';\r\nimport Slicer from \"./Slicer\";\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough || []; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        const index = drills.findIndex(d => d.columnName === header);\r\n        if (index !== -1) {\r\n          const dashboardId = drills[index].dashboardId;\r\n          this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  onTableTdClick = (link) => {\r\n    this.props.history.push(link);\r\n  }\r\n\r\n  onSlicerChange = (widgetId, checkBoxes) => {\r\n    const data = {\r\n      checkBoxes: checkBoxes\r\n    };\r\n    this.props.onWidgetFilterInputChange(widgetId, data);\r\n  }\r\n\r\n  onSingleValueChange = (widgetId, event) => {\r\n    const value = event.target.value;\r\n    const data = {\r\n      value: value\r\n    };\r\n    this.props.onWidgetFilterInputChange(widgetId, data);\r\n  }\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      id,\r\n      type,\r\n      chartType,\r\n      filterType,\r\n      queryResult = {},\r\n      drillThrough,\r\n      data = {},\r\n      checkBoxes,\r\n      value\r\n    } = this.props;\r\n\r\n    const queryResultData = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    let widgetItem = (<div></div>);\r\n    if (type === Constants.CHART) {\r\n      if (chartType === Constants.TABLE) {\r\n        widgetItem = (\r\n          <TableWidget\r\n            data={queryResultData}\r\n            columns={columns}\r\n            error={error}\r\n            drillThrough={drillThrough}\r\n            onTableTdClick={this.onTableTdClick}\r\n          />\r\n        );\r\n      } else if (chartType === Constants.PIE) {\r\n        const { \r\n          pieKey,\r\n          pieValue\r\n        } = data;\r\n        const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\r\n        widgetItem = (\r\n          <ReactEcharts \r\n            option={chartOption}   \r\n            className=\"echarts\"\r\n            onEvents={onChartEvents}  \r\n          />\r\n        );\r\n      } \r\n    } else if (type === Constants.FILTER) {\r\n      if (filterType === Constants.SLICER) {\r\n        widgetItem = (\r\n          <Slicer \r\n            filterId={id} \r\n            checkBoxes={checkBoxes} \r\n            onChange={this.onSlicerChange} \r\n          />\r\n        );\r\n      } else if (filterType === Constants.SINGLE_VALUE) {\r\n        widgetItem = (\r\n          <input \r\n            type=\"text\"  \r\n            value={value}\r\n            onChange={(event) => this.onSingleValueChange(id, event)} \r\n          />\r\n        );\r\n      }\r\n    }\r\n    \r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      title,\r\n      isEditMode,\r\n      style = {}\r\n    } = this.props;\r\n\r\n    const { \r\n      showBorder = false,\r\n      showTitle = true\r\n    } = style;\r\n\r\n    const borderStyle = showBorder ? '2px solid #091E42' : '2px solid transparent';\r\n\r\n    let styles = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: 1,\r\n      border: borderStyle\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {title}\r\n\r\n          { isEditMode ? (\r\n            <div className=\"float-right\" style={{marginRight: '20px'}}>\r\n              <div className=\"inline-block\" onClick={() => this.editWidget(id)}>\r\n                <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n              </div>\r\n              <div className=\"inline-block\" onClick={() => this.removeWidget(id)}>\r\n                <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid-box-file-button-group\">\r\n              <div className=\"inline-block\" onClick={() => this.exportJson(id)}>\r\n                <FontAwesomeIcon icon=\"file-export\" fixedWidth />\r\n              </div>\r\n              \r\n              <div className=\"inline-block\" onClick={() => this.exportCsv(id)}>\r\n                <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { isEditMode && (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} />\r\n        )}\r\n\r\n        { isEditMode && (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} />\r\n        )}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(GridItem);","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      backgroundColor,\r\n      widgets = [],\r\n      showGridlines\r\n    } = this.props;\r\n\r\n    let style = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      backgroundColor: backgroundColor\r\n    };\r\n\r\n    if (showGridlines) {\r\n      style.backgroundSize = '15px 15px';\r\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n        onWidgetFilterInputChange={this.props.onWidgetFilterInputChange}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={style} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ColorPicker from './ColorPicker';\r\nimport Checkbox from './Checkbox';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\nimport Modal from '../components/Modal';\r\nimport * as Constants from '../api/Constants';\r\n\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      snapToGrid: false,\r\n      showGridlines: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  resizeGrid = (viewWidth) => {\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n\r\n    const gridWidth = viewWidth - 10;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return Math.round(num * gridWidth / BASE_WIDTH);\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Math.round(num * BASE_WIDTH / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, viewWidth) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get(`/ws/widget/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(viewWidth);\r\n          this.queryFilters();\r\n          this.queryCharts();\r\n        });\r\n      });\r\n  }\r\n \r\n  queryCharts() {\r\n    const filterParams = this.getFilterParams();\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const {\r\n        id,\r\n        type,\r\n      } = widgets[i];\r\n      if (type === Constants.CHART) {\r\n        this.queryChart(id, filterParams);\r\n      }\r\n    }\r\n  }\r\n\r\n  queryFilters() {\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const {\r\n        id,\r\n        type,\r\n        filterType\r\n      }  = widgets[i];\r\n      if (type === Constants.FILTER) {\r\n        this.queryFilter(id, filterType);\r\n      }\r\n    }\r\n  }\r\n\r\n  queryChart(widgetId, filterParams) {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    axios.post(`/ws/jdbcquery/widget/${widgetId}`, params)\r\n      .then(res => {\r\n        const queryResult = res.data;\r\n        const index = widgets.findIndex(w => w.id === queryResult.id);\r\n        const newWidgets = [...widgets];\r\n        newWidgets[index].queryResult = queryResult;\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n\r\n  queryFilter(widgetId, filterType) {\r\n    const { widgets } = this.state;\r\n    if (filterType === Constants.SLICER) {\r\n      axios.post(`/ws/jdbcquery/widget/${widgetId}`, [])\r\n        .then(res => {\r\n          const queryResult = res.data;\r\n          const queryResultData = Util.jsonToArray(queryResult.data);\r\n          const checkBoxes = [];\r\n          for (let i = 0; i < queryResultData.length; i++) {\r\n            const values = Object.values(queryResultData[i]);\r\n            for (const val of values) {\r\n              checkBoxes.push({\r\n                value: val,\r\n                isChecked: false\r\n              });\r\n            }\r\n          }\r\n          const index = widgets.findIndex(w => w.id === queryResult.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = queryResult;\r\n          newWidgets[index].checkBoxes = checkBoxes;\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    } else if (filterType === Constants.SINGLE_VALUE) {\r\n      /*\r\n        const values = Object.values(queryResultData);\r\n        let value = '';\r\n        for (const val of values) {\r\n          value = val;\r\n          break;\r\n        }\r\n        newFilters[index].value = value;\r\n      */\r\n      const index = widgets.findIndex(w => w.id === widgetId);\r\n      const newWidgets = [...widgets];\r\n      newWidgets[index].value = '';\r\n      this.setState({\r\n        widgets: newWidgets\r\n      });\r\n    }\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    this.setState({\r\n      [name]: isChecked\r\n    });\r\n  }\r\n\r\n  handleHeightChange = (event) => {\r\n    this.props.onHeightChange(event.target.value);\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    this.props.onBackgroundColorChange(color);\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete\r\n    } = this.state;\r\n    const widgetId = objectToDelete;\r\n    axios.delete(`/ws/widget/${widgetId}`)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (widgetId) => {\r\n    this.setState({\r\n      objectToDelete: widgetId,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  onWidgetFilterInputChange = (widgetId, data) => {\r\n    const { \r\n      widgets = []\r\n    } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widgetId);\r\n    const newWidgets = [...widgets];\r\n    const widget = widgets[index];\r\n    if (widget.filterType === Constants.SLICER) {\r\n      const {\r\n        checkBoxes\r\n      } = data;\r\n      newWidgets[index].checkBoxes = checkBoxes;\r\n    } else if (widget.filterType === Constants.SINGLE_VALUE) {\r\n      const {\r\n        value\r\n      } = data;\r\n      newWidgets[index].value = value;\r\n    }\r\n\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });   \r\n  }\r\n\r\n  /**\r\n   * FIXME: optimize it. No need to calculate this every time.\r\n   */\r\n  getFilterParams = () => {\r\n    const { \r\n      widgets = []\r\n    } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      if (widget.type === Constants.FILTER) {\r\n        const { filterType } = widget;\r\n        const filterParam = {};\r\n        if (filterType === Constants.SLICER) {\r\n          const { \r\n            checkBoxes = []\r\n          } = widget;\r\n          const paramValues = [];\r\n          for (let j = 0; j < checkBoxes.length; j++) {\r\n            const checkBox = checkBoxes[j];\r\n            if (checkBox.isChecked) {\r\n              paramValues.push(checkBox.value);\r\n            }\r\n          }\r\n          filterParam.value = paramValues;\r\n          if (paramValues.length === checkBoxes.length) {\r\n            filterParam.remark = 'select all';\r\n          }\r\n        } else if (filterType === Constants.SINGLE_VALUE) {\r\n          filterParam.value = widget.value;\r\n        }\r\n        filterParam.param = widget.data.queryParameter;\r\n        filterParam.type = widget.filterType;\r\n        filterParams.push(filterParam);\r\n      }\r\n    }\r\n    return filterParams;\r\n  }\r\n\r\n  render() {\r\n    const { widgetViewWidth } = this.props;\r\n    const style = {\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {this.props.isEditMode && (\r\n          <div className=\"dashboard-attribute-edit-panel\">\r\n            <div className=\"inline-block\">Height:</div>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.props.height}\r\n              onChange={this.handleHeightChange} \r\n              className=\"inline-block\" \r\n              style={{width: '200px'}}\r\n              />\r\n\r\n            <div>\r\n              Background Color\r\n              <ColorPicker value={this.props.backgroundColor} onChange={this.onBackgroundColorChange} />\r\n            </div>\r\n\r\n            <Checkbox name=\"snapToGrid\" value=\"Snap to grid\" checked={this.state.snapToGrid} onChange={this.handleCheckBoxChange} />\r\n            <Checkbox name=\"showGridlines\" value=\"Show gridlines\" checked={this.state.showGridlines} onChange={this.handleCheckBoxChange} />\r\n  \r\n          </div>\r\n        )}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          backgroundColor={this.props.backgroundColor}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.openConfirmDeletionPanel} \r\n          onWidgetFilterInputChange={this.onWidgetFilterInputChange}\r\n        />\r\n        \r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete this widget?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","import React from 'react';\r\nimport './Tabs.css';\r\n\r\nclass Tabs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const activeTab = this.props.activeTab;\r\n    this.setState({\r\n      activeTab: activeTab\r\n    });\r\n  }\r\n\r\n  handleTabClick = (title) => {\r\n    this.setState({\r\n      activeTab: title\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children\r\n    } = this.props;\r\n\r\n    const {\r\n      activeTab\r\n    } = this.state;\r\n\r\n    const tabHeaders = [];\r\n    let tabContent = null;\r\n    for (let i = 0; i < children.length; i++) {\r\n      if (children[i]) {\r\n        const title = children[i].props.title;\r\n        let active = '';\r\n        if (title === activeTab) {\r\n          active = 'tab-header-active';\r\n          tabContent = children[i].props.children;\r\n        }\r\n        \r\n        tabHeaders.push(\r\n          <li className={`tab-header-item ${active}`} key={i} onClick={() => this.handleTabClick(title)}>{title}</li>\r\n        );\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className=\"tab-container\">\r\n        <ul className=\"tab-header\">\r\n          {tabHeaders}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {tabContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Select extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    optionDisplay: PropTypes.string,\r\n    optionValue: PropTypes.string,\r\n    preloadOneEmpty: PropTypes.bool\r\n  };\r\n\r\n  handleOptionChange = (event) => {\r\n    const name = this.props.name;\r\n    const value = event.target.value;\r\n    this.props.onChange(name, value);\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      value,\r\n      options = [],\r\n      optionValue,\r\n      optionDisplay,\r\n      preloadOneEmpty = true\r\n    } = this.props;\r\n\r\n    const optionList = [];\r\n    if (preloadOneEmpty) {\r\n      optionList.push(\r\n        <option value=\"\" key=\"\"></option>\r\n      );\r\n    }\r\n    \r\n    options.forEach((option, index) => {\r\n      let value;\r\n      let display;\r\n      if (optionValue && optionDisplay) {\r\n        // The options contain objects.\r\n        value = option[optionValue];\r\n        display = option[optionDisplay];\r\n      } else {\r\n        // The options contain string or number.\r\n        value = option;\r\n        display = option;\r\n      }\r\n      \r\n      optionList.push(\r\n        <option value={value} key={index}>{display}</option>\r\n      ) \r\n    });\r\n\r\n    return (\r\n      <select value={value} onChange={this.handleOptionChange}>\r\n        {optionList}\r\n      </select>\r\n    )\r\n  };\r\n}\r\n\r\nexport default Select;","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport TableWidget from './TableWidget';\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nimport './WidgetEditPanel.css';\r\n\r\nimport Checkbox from './Checkbox';\r\nimport Tabs from '../components/Tabs';\r\nimport Select from '../components/Select';\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      title: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: {},\r\n      type: Constants.CHART,\r\n      filterType: Constants.SINGLE_VALUE,\r\n      chartType: Constants.TABLE,\r\n      style: {\r\n        showBorder: false,\r\n        showTitle: true\r\n      },\r\n      queryParameter: '',\r\n      drillThrough: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: '',\r\n      pieKey: '',\r\n      pieValue: '',\r\n      chartOption: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const widget = res.data;\r\n          const {\r\n            type,\r\n            chartType,\r\n            filterType,\r\n            drillThrough\r\n          } = widget;\r\n          if (type === Constants.CHART) {\r\n            this.setState({\r\n              chartType: chartType,\r\n              drillThrough: drillThrough\r\n            });\r\n\r\n            if (chartType === Constants.PIE) {\r\n              const {\r\n                pieKey,\r\n                pieValue\r\n              } = widget.data;\r\n              this.setState({\r\n                pieKey: pieKey,\r\n                pieValue: pieValue\r\n              });\r\n            }\r\n          } else if (type === Constants.FILTER) {\r\n            const {\r\n              queryParameter\r\n            } = widget.data;\r\n            this.setState({\r\n              filterType: filterType,\r\n              queryParameter: queryParameter\r\n            });\r\n            if (filterType === Constants.SLICER) {\r\n\r\n            } else if (filterType === Constants.SINGLE_VALUE) {\r\n\r\n            }\r\n          }\r\n          \r\n          this.setState({\r\n            widgetId: widgetId,\r\n            title: widget.title,\r\n            x: widget.x,\r\n            y: widget.y,\r\n            width: widget.width,\r\n            height: widget.height,\r\n            sqlQuery: widget.sqlQuery,\r\n            type: type,\r\n            jdbcDataSourceId: widget.jdbcDataSourceId,\r\n            style: widget.style\r\n          }, () => {\r\n            this.runQuery();\r\n          });\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const style = {...this.state.style};\r\n    style[[name]] = isChecked;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      widgetId,\r\n      title,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      type,\r\n      style\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      title: title,\r\n      dashboardId: this.props.dashboardId,\r\n      type: type,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      style: style\r\n    }\r\n\r\n    if (type === Constants.CHART) {\r\n      const {\r\n        chartType,\r\n        drillThrough\r\n      } = this.state;\r\n      widget.drillThrough = drillThrough;\r\n      widget.chartType = chartType;\r\n\r\n      if (chartType === Constants.TABLE) {\r\n\r\n      } else if (chartType === Constants.PIE) {\r\n        const {\r\n          pieKey,\r\n          pieValue\r\n        } = this.state;\r\n        widget.data = {\r\n          pieKey: pieKey,\r\n          pieValue: pieValue\r\n        }\r\n      }\r\n    } else if (type === Constants.FILTER) {\r\n      const  {\r\n        filterType,\r\n        queryParameter\r\n      } = this.state;\r\n      widget.filterType = filterType;\r\n      widget.data = {\r\n        queryParameter: queryParameter\r\n      }\r\n      if (filterType === Constants.SLICER) {\r\n\r\n      } else if (filterType === Constants.SINGLE_VALUE) {\r\n\r\n      }\r\n    }\r\n    \r\n\r\n    if (widgetId === null) {\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          queryResult: result\r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = () => {\r\n    const { \r\n      drillThrough,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const index = drillThrough.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrillThrough = [...drillThrough];\r\n      newDrillThrough.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drillThrough: newDrillThrough\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill) => {\r\n    const { drillThrough } = this.state;\r\n    const index = drillThrough.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrillThrough = [...drillThrough];\r\n      newDrillThrough.splice(index, 1);\r\n      this.setState({\r\n        drillThrough: newDrillThrough\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = () => {\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        pieKey, \r\n        pieValue, \r\n        queryResult = {}\r\n      } = this.state;\r\n      console.log(\"generateChart\", pieKey, pieValue);\r\n      const data = Util.jsonToArray(queryResult.data);\r\n      const chartOption = EchartsApi.getPieOption(data, pieKey, pieValue);\r\n      this.setState({\r\n        chartOption: chartOption\r\n      });\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      queryResult = {},\r\n    } = this.state;\r\n    const columns = queryResult.columns || [];\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        chartOption,\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n\r\n      chartPreview = (\r\n        <div>\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label>Aggr Key (string)</label>\r\n          <Select\r\n            name={'pieKey'}\r\n            value={pieKey}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n          />\r\n\r\n\r\n          <label>By Aggr Value (number)</label>\r\n          <Select\r\n            name={'pieValue'}\r\n            value={pieValue}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n          />\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      type,\r\n      queryResult,\r\n      jdbcDataSources = [],\r\n      drillThrough = [],\r\n      drillDashboards = []\r\n    } = this.state;\r\n\r\n    const data = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    const drillItems = drillThrough.map(drill =>\r\n      <div key={drill.columnName}>\r\n        <div>Column: {drill.columnName}</div>\r\n        <div>Dashboard: {drill.dashboardId}</div>\r\n        <button onClick={() => this.removeDrillThrough(drill)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const columnItems = columns.map(col =>\r\n      <div key={col.name}>{col.name} {col.dataType}</div>\r\n    );\r\n\r\n    const showQueryTab = type === Constants.CHART || (type === Constants.FILTER && this.state.filterType === Constants.SLICER);\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        <div className=\"row mt-10\">\r\n          <div className=\"float-left\">Type:</div>\r\n          <div className=\"float-left\">\r\n            <Select\r\n              name={'type'}\r\n              value={type}\r\n              onChange={this.handleOptionChange}\r\n              options={Constants.WIDGET_TYPES}\r\n              preloadOneEmpty={false}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mt-10\">\r\n          <Tabs activeTab=\"Basic\">\r\n            <div title=\"Basic\">\r\n              <div className=\"form-panel\">\r\n                <label>Title</label>\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"title\" \r\n                  value={this.state.title}\r\n                  onChange={this.handleInputChange} \r\n                />\r\n              </div>\r\n\r\n              <Checkbox name=\"showBorder\" value=\"Show border\" checked={this.state.style.showBorder} onChange={this.handleCheckBoxChange} />\r\n              <Checkbox name=\"showTitle\" value=\"Show title\" checked={this.state.style.showTitle} onChange={this.handleCheckBoxChange} />\r\n            </div>\r\n\r\n            { type === Constants.FILTER && (  \r\n              <div title=\"Filter\">\r\n                <div className=\"form-panel\">\r\n                  <label>Filter Options</label>\r\n                  <Select\r\n                    name={'filterType'}\r\n                    value={this.state.filterType}\r\n                    onChange={this.handleOptionChange}\r\n                    options={Constants.FILTER_TYPES}\r\n                    preloadOneEmpty={false}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { showQueryTab && (\r\n              <div title=\"Query\">\r\n                <div className=\"form-panel\">\r\n                  <label>DataSource</label>\r\n                  <Select\r\n                    name={'jdbcDataSourceId'}\r\n                    value={this.state.jdbcDataSourceId}\r\n                    onChange={this.handleIntegerOptionChange}\r\n                    options={jdbcDataSources}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'id'}\r\n                    />\r\n                \r\n                  <label>SQL Query</label>\r\n                  <AceEditor\r\n                    style={{ marginTop: '8px' }}\r\n                    value={this.state.sqlQuery}\r\n                    mode=\"mysql\"\r\n                    theme=\"xcode\"\r\n                    name=\"blah2\"\r\n                    onChange={this.handleAceEditorChange}\r\n                    height={'300px'}\r\n                    width={'100%'}\r\n                    fontSize={15}\r\n                    showPrintMargin={false}\r\n                    showGutter={true}\r\n                    highlightActiveLine={true}\r\n                    setOptions={{\r\n                      showLineNumbers: true,\r\n                      tabSize: 2\r\n                    }}\r\n                  />\r\n\r\n                  <div className=\"mt-3\">\r\n                    <button className=\"button\" onClick={this.runQuery}>Run Query</button>\r\n                  </div>\r\n\r\n                  <label>Result</label>\r\n                  <TableWidget\r\n                    data={data}\r\n                    columns={columns}\r\n                    error={error}\r\n                  />\r\n\r\n                  <label>Columns Mapping</label>\r\n                  <div>\r\n                    {columnItems}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { type === Constants.CHART && (\r\n              <div title=\"Chart\">\r\n                <div className=\"form-panel\">\r\n                  <label>Chart Options</label>\r\n                  <Select\r\n                    name={'chartType'}\r\n                    value={this.state.chartType}\r\n                    onChange={this.handleOptionChange}\r\n                    options={Constants.CHART_TYPES}\r\n                    preloadOneEmpty={false}\r\n                  />\r\n                  <label>Preview</label>\r\n                  {this.renderChartPreview()} \r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            { type === Constants.CHART && (\r\n              <div title=\"Drill through\">\r\n                <div className=\"form-panel\">\r\n                  <label>Drill through</label>\r\n                  <label>Column</label>\r\n                  <Select\r\n                    name={'drillColumnName'}\r\n                    value={this.state.drillColumnName}\r\n                    options={columns}\r\n                    onChange={this.handleOptionChange}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'name'}\r\n                  />\r\n\r\n                  <label>Dashboard</label>\r\n                  <Select\r\n                    name={'drillDashboardId'}\r\n                    value={this.state.drillDashboardId}\r\n                    options={drillDashboards}\r\n                    onChange={this.handleIntegerOptionChange}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'id'}\r\n                  />\r\n                  <div>\r\n                    {drillItems}\r\n                  </div>\r\n                  <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { type === Constants.FILTER && (\r\n              <div title=\"Query parameter\">\r\n                <div className=\"form-panel\">\r\n                  <label>Parameter</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    name=\"queryParameter\" \r\n                    value={this.state.queryParameter}\r\n                    onChange={this.handleInputChange} \r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\n\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      isEditMode: false,\r\n      isReadOnly: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      refreshInterval: 15,\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      style: {},\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    console.log('DashboardEditView - componentDidMount', dashboardId);\r\n\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    for(let pair of params.entries()) {\r\n      console.log(pair[0]+ ', '+ pair[1]); \r\n    } \r\n\r\n    const widgetViewWidth = this.getPageWidth();\r\n    this.setState({\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const result = res.data;\r\n            this.setState({\r\n              dashboardId: result.id,\r\n              name: result.name,\r\n              style: result.style\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = () => {\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    const dashboardName = params.get('name');\r\n\r\n    const widgetViewWidth = this.getPageWidth();\r\n\r\n    this.setState({\r\n      isReadOnly: true,\r\n      name: dashboardName,\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            style: result.style\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth - 40;\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const { refreshInterval } = this.state;\r\n      let interval = parseInt(refreshInterval, 10) || 15;\r\n      interval = interval < 1 ? 1 : interval;\r\n      const timerId = setInterval(() => {\r\n        this.queryWidgets();\r\n        this.updateLastRefreshed();\r\n      }, interval * 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    this.refreshWidgetView();\r\n    this.updateLastRefreshed();\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n  } \r\n\r\n  queryWidgets = () => {\r\n    this.widgetViewPanel.current.queryCharts();\r\n  }\r\n\r\n  updateLastRefreshed = () => {\r\n    const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\r\n    this.setState({\r\n      lastRefreshed: now\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    console.log('save');\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      style\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      style: style\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.widgetViewPanel.current.saveWidgets();\r\n\r\n    this.props.onDashboardSave(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    this.widgetEditPanel.current.fetchWidget(widgetId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/workspace/dashboard/view?name=${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onTableCellClick = () => {\r\n    this.props.history.push(`/workspace/dashboard/drill?name=&`);\r\n  }\r\n\r\n  onHeightChange = (height) => {\r\n    const style = {...this.state.style};\r\n    style.height = height;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    const style = {...this.state.style};\r\n    style.backgroundColor = color;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {},\r\n    } = this.state;\r\n    const dashboardId = objectToDelete.id;\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        this.props.onDashboardDelete(dashboardId);\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  deleteDashboard = () => {\r\n    const { \r\n      dashboardId,\r\n      name\r\n    } = this.state;\r\n    const dashboard = {\r\n      id: dashboardId,\r\n      name: name\r\n    }\r\n    this.openConfirmDeletionPanel(dashboard);\r\n  }\r\n\r\n  openConfirmDeletionPanel = (dashboard) => {\r\n    this.setState({\r\n      objectToDelete: dashboard,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      lastRefreshed,\r\n      isEditMode,\r\n      isReadOnly\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel = null;\r\n    const controlButtons = (\r\n      <React.Fragment>\r\n        <span className=\"mr-3\">Last refreshed: {lastRefreshed}</span>\r\n        { autoRefreshStatus === 'OFF' && (\r\n          <input \r\n            type=\"text\" \r\n            name=\"refreshInterval\" \r\n            value={this.state.refreshInterval}\r\n            onChange={this.handleInputChange}\r\n            className=\"inline-block\" \r\n            style={{width: '50px'}}\r\n          />\r\n        )}\r\n        <button className=\"button square-button mr-3\" onClick={this.toggleAutoRefresh}>\r\n          {\r\n            autoRefreshStatus === 'ON' ? \r\n            (\r\n              <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\r\n            ) : \r\n            (\r\n              <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\r\n            )\r\n          }\r\n        </button>\r\n        <button className=\"button square-button\" onClick={this.refresh}>\r\n          <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\r\n        </button>\r\n        <button className=\"button mr-3\" onClick={this.queryWidgets}>Apply Filters</button>\r\n      </React.Fragment>\r\n    );\r\n\r\n    if (!isReadOnly) {\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button mr-3\" onClick={this.cancelEdit}>Cancel</button>\r\n            <button className=\"button mr-3\" onClick={this.save}>Save</button>\r\n            <button className=\"button mr-3\" onClick={this.deleteDashboard}>Delete</button>\r\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            {controlButtons}\r\n            <button className=\"button square-button mr-3\" onClick={this.fullScreen}>\r\n              <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={this.edit}>Edit</button>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      fullScreenButtonPanel = controlButtons;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-menu-panel row\">\r\n          <div className=\"float-left\">\r\n            {\r\n              isReadOnly || !isEditMode ?\r\n              (\r\n                <div className=\"dashboard-name\">\r\n                  {this.state.name}\r\n                </div>\r\n              ) :(\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"name\" \r\n                  value={this.state.name}\r\n                  onChange={this.handleInputChange} \r\n                  className=\"dashboard-name\"\r\n                  />\r\n              )\r\n            }\r\n            \r\n          </div>\r\n          <div className=\"float-right\">\r\n            {fullScreenButtonPanel}\r\n            {editButtonPanel}\r\n          </div>\r\n        </div>\r\n\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          isEditMode={this.state.isEditMode}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          onHeightChange={this.onHeightChange}\r\n          onBackgroundColorChange={this.onBackgroundColorChange}\r\n          {...this.state.style}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'dashboard-edit-widget-dialog'} \r\n          title={'Widget Edit'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {this.state.objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './Dashboard.css';\r\nimport * as Constants from '../api/Constants';\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\n\r\nconst ROUTE_WORKSPACE_DASHBOARD = '/workspace/dashboard/';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      activeDashboardId: 0,\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    const index = pathname.indexOf(ROUTE_WORKSPACE_DASHBOARD);\r\n    if (index !== -1) {\r\n      const activeDashboardId = Number(pathname.substring(index + ROUTE_WORKSPACE_DASHBOARD.length));\r\n      this.setState({\r\n        activeDashboardId: activeDashboardId\r\n      })\r\n    }\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false,\r\n      name: ''\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      Toast.show('Enter a name.');\r\n      return;\r\n    }\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      style: {\r\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\r\n        backgroundColor: 'rgba(233, 235, 238, 1)'\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.closeEditPanel();\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      })\r\n      .catch(error => {\r\n        Toast.show('The name exists. Try another.');\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.setState({\r\n      activeDashboardId: dashboardId\r\n    }, () => {\r\n      this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n    });\r\n  }\r\n\r\n  onDashboardSave = (dashboardId) => {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  onDashboardDelete = (dashboardId) => {\r\n    this.fetchBoards();\r\n    this.setState({\r\n      activeDashboardId: 0\r\n    }, () => {\r\n      this.props.history.push('/workspace/dashboard');\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dashboards = [],\r\n      activeDashboardId,\r\n      searchValue\r\n    } = this.state;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.props;\r\n    const showEdit = sysRole === Constants.SYS_ROLE_VIEWER ? false : true;\r\n\r\n    const dashboardRows = [];\r\n    for (let i = 0; i < dashboards.length; i++) {\r\n      const dashboard = dashboards[i];\r\n      const name = dashboard.name;\r\n      const menuActive = activeDashboardId === dashboard.id ? 'dashboard-menu-item-active' : '';\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        dashboardRows.push(\r\n          (\r\n            <div key={i} className={`dashboard-menu-item ellipsis ${menuActive}`} onClick={() => this.view(dashboard.id)}>\r\n              {name}\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-sidebar\">\r\n          <div style={{margin: '5px'}}>\r\n            { showEdit && (\r\n                <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\r\n                  <FontAwesomeIcon icon=\"plus\" /> New\r\n                </button>\r\n            )}\r\n            \r\n            <input \r\n              type=\"text\" \r\n              name=\"searchValue\" \r\n              value={this.state.searchValue}\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleInputChange}\r\n              style={{marginTop: '5px'}} \r\n            />\r\n          </div>\r\n          <div>\r\n            {dashboardRows}\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route \r\n            path=\"/workspace/dashboard/:id\" \r\n            render={(props) => \r\n              <DashboardEditView \r\n                key={props.match.params.id} \r\n                onDashboardSave={this.onDashboardSave} \r\n                onDashboardDelete={this.onDashboardDelete} \r\n              />\r\n            } \r\n            />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'small-modal-panel'} \r\n          title={'New'} >\r\n          <div className=\"form-panel\">\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n            />\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      searchValue: '',\r\n      showUpdatePassword: false,\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: Constants.SYS_ROLE_VIEWER,\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      this.setState({\r\n        id: user.id,\r\n        username: user.username,\r\n        name: user.name,\r\n        tempPassword: '',\r\n        sysRole: user.sysRole,\r\n        userGroups: user.userGroups\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      userGroupId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    if (!username) {\r\n      return;\r\n    }\r\n\r\n    let selectedSysRole = Constants.SYS_ROLE_VIEWER;\r\n    if (Constants.SYS_ROLE_ADMIN === this.props.sysRole) {\r\n      if (sysRole) {\r\n        selectedSysRole = sysRole;\r\n      } else {\r\n        // TODO: throw errors.\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: selectedSysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      if (showUpdatePassword && tempPassword) {\r\n        user.tempPassword = tempPassword;\r\n      }\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  addUserGroup = () => {\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId) => {\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/user/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (user) => {\r\n    this.setState({\r\n      objectToDelete: user,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      showUpdatePassword,\r\n      users = [],\r\n      groups = [],\r\n      userGroups = [],\r\n      searchValue,\r\n      showConfirmDeletionPanel,\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.props;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const userItems = [];\r\n    for (let i = 0; i < users.length; i++) {\r\n      const user = users[i];\r\n      const name = user.name;\r\n      const username = user.username;\r\n      if (!searchValue || (searchValue && (username.includes(searchValue) || name.includes(searchValue)))) {\r\n        userItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {user.username}\r\n                {user.name}\r\n                {user.sysRole}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(user)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(user)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups.length; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups.length; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId}>\r\n                <div>Group: {groups[j].name}</div>\r\n                <button className=\"button\" onClick={() => this.removeUserGroup(groupId)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchValue\"\r\n            value={this.state.searchValue}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Search...\"\r\n            style={{width: '200px'}}\r\n          />\r\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n          <button className=\"button margin-left\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New\r\n          </button>\r\n        </div>\r\n        <div className=\"row mt-10\">\r\n          {userItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'mid-modal-panel'} \r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} \r\n            />\r\n\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n            />\r\n\r\n            { mode === 'Edit' && (\r\n                <div style={{margin: '3px 0px 8px 0px'}}>\r\n                  <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n                </div>\r\n            )}\r\n            { (mode === 'New' || showUpdatePassword) && ( \r\n              <div>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"tempPassword\" \r\n                  value={this.state.tempPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </div>\r\n            )}\r\n            \r\n            <label>System Role</label>\r\n            { Constants.SYS_ROLE_ADMIN === sysRole && (\r\n              <Select\r\n                name={'sysRole'}\r\n                value={this.state.sysRole}\r\n                onChange={this.handleOptionChange}\r\n                options={[Constants.SYS_ROLE_VIEWER, Constants.SYS_ROLE_DEVELOPER]}\r\n              />\r\n            )}\r\n\r\n            { Constants.SYS_ROLE_DEVELOPER === sysRole && (\r\n              <div>{Constants.SYS_ROLE_VIEWER}</div>\r\n            )}\r\n            \r\n            <br/>\r\n            \r\n            <label>Groups</label>\r\n            <Select\r\n              name={'userGroupId'}\r\n              value={this.state.userGroupId}\r\n              onChange={this.handleIntegerOptionChange}\r\n              options={groups}\r\n              optionDisplay={'name'}\r\n              optionValue={'id'}\r\n            />\r\n            <button className=\"button\" onClick={this.addUserGroup}>Add</button>\r\n            <div>\r\n              {userGroupItems}\r\n            </div>\r\n\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      showEditPanel: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      this.setState({\r\n        id: group.id,\r\n        name: group.name,\r\n        groupDashboards: group.groupDashboards\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      groupDashboardId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } \r\n  }\r\n\r\n  addGroupDashboard= () => {\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    if (groupDashboardId) {\r\n      const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n      if (index === -1) {\r\n        const newGroupDashboards = [...groupDashboards];\r\n        newGroupDashboards.push(groupDashboardId);\r\n        this.setState({\r\n          groupDashboards: newGroupDashboards\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId) => {\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/group/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (group) => {\r\n    this.setState({\r\n      objectToDelete: group,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = [],\r\n      searchValue,\r\n      showConfirmDeletionPanel,\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const groupItems = [];\r\n    for (let i = 0; i < groups.length; i++) {\r\n      const group = groups[i];\r\n      const name = group.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        groupItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {name}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(group)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(group)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards.length; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards.length; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId}>\r\n                <div>Name: {dashboards[j].name}</div>\r\n                <button className=\"button\" onClick={() => this.removeGroupDashboard(dashboardId)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchValue\"\r\n            value={this.state.searchValue}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Search...\"\r\n            style={{width: '200px'}}\r\n            />\r\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n          <button className=\"button margin-left\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New\r\n          </button>\r\n        </div>\r\n        <div className=\"row mt-10\">\r\n          {groupItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'mid-modal-panel'} \r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            <label>Dashboards</label>\r\n            <Select\r\n              name={'groupDashboardId'}\r\n              value={this.state.groupDashboardId}\r\n              onChange={this.handleIntegerOptionChange}\r\n              options={dashboards}\r\n              optionDisplay={'name'}\r\n              optionValue={'id'}\r\n            />\r\n            <button className=\"button\" onClick={this.addGroupDashboard}>Add</button>\r\n            <div>\r\n              {groupDashboardItems}\r\n            </div>\r\n            \r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\n\r\nimport User from './User';\r\nimport Group from './Group';\r\nimport Tabs from '../components/Tabs';\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-page-content\">\r\n        <Tabs activeTab=\"Group\">\r\n          <div title=\"Group\">\r\n            <Group />\r\n          </div>\r\n          <div title=\"User\">\r\n            <User {...this.props} />\r\n          </div>\r\n        </Tabs>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const user = res.data;\r\n        this.setState({\r\n          id: user.id,\r\n          username: user.username,\r\n          name: user.name,\r\n          sysRole: user.sysRole,\r\n          apiKey: user.apiKey\r\n        });\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        return;\r\n      }  \r\n\r\n      user.password = password;\r\n    }\r\n\r\n    axios.put('/ws/user/account', user)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"full-page-content\">\r\n        <div className=\"form-panel\" style={{width: '500px'}}>   \r\n          <label>Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\"   \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label>System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label>API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button className=\"button\" onClick={this.generateApiKey}>Generate new API Key</button>\r\n          <br/>\r\n\r\n          <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n          {\r\n            showUpdatePassword && (\r\n              <React.Fragment>\r\n                <br/>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label>Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n          )}\r\n\r\n          <br/>\r\n          <button className=\"button\" onClick={this.save}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","\r\nimport React from 'react';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('DashboardFullScreenView', 'componentDidMount');\r\n    this.dashboardEditView.loadViewByDashboardName();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView wrappedComponentRef={comp => (this.dashboardEditView = comp)} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","import React from 'react';\r\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\n\r\nimport Toast from '../components/Toast';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport './Workspace.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data Source',\r\n    icon: 'database'\r\n  }, \r\n  {\r\n    link: '/workspace/usermanagement',\r\n    value: 'User Management',\r\n    icon: 'users-cog'\r\n  }\r\n];\r\n\r\nconst ACCOUNT_MENU_LINK = '/workspace/account';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    let link;\r\n    if (pathname.startsWith(ACCOUNT_MENU_LINK)) {\r\n      link = ACCOUNT_MENU_LINK;\r\n    } else {\r\n      const menuItem = MENU_ITEMS.find(m => pathname.startsWith(m.link));\r\n      link = menuItem.link;\r\n    }\r\n\r\n    this.setState({\r\n      currentMenuLink: link,\r\n    });\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  logout = () => {\r\n    axios.get('/auth/logout')\r\n      .then(res => {\r\n        this.props.onLogout();\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n    } = this.state;\r\n    \r\n    console.log('Workspace - render');\r\n\r\n    const {\r\n      username,\r\n      sysRole\r\n    } = this.props;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.link === '/workspace/dashboard');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li key={menu.link} className={active}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"workspace-nav\">  \r\n          <div className=\"workspace-name\">Poli</div>\r\n          <ul className=\"workspace-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div className=\"workspace-account-menu\">\r\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\r\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\r\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\r\n                <span className=\"workspace-nav-menu-text\">{username}</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"workspace-logout-button inline-block\" onClick={this.logout}>\r\n              <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"workspace-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n            <Route exact path=\"/workspace/dashboard/view\" component={DashboardFullScreenView} />\r\n            <Route exact path=\"/workspace/usermanagement\" render={() => <UserManagement {...this.props} />} />\r\n            <Route path=\"/workspace/dashboard\" render={() => <Dashboard {...this.props} />} />\r\n          </Switch>\r\n        </div>\r\n        <Toast />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Workspace);\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, withRouter, Component } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport ChangeTempPassword from './views/ChangeTempPassword';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\n\r\n\r\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      sysRole: '',\r\n      isAuthorizing: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    const search = this.props.location.search;\r\n\r\n    const params = new URLSearchParams(search);\r\n    const apiKey = params.get('apiKey');\r\n\r\n    let currentPath = pathname + search;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      this.setState({\r\n        isAuthorizing: true\r\n      }, () => {\r\n        axios.post('/auth/login/cookie')\r\n          .then(res => {\r\n            const loginResponse = res.data;\r\n            if (loginResponse.error) {\r\n                this.setState({\r\n                  sysRole: '',\r\n                  isAuthorizing: false\r\n                }, () => {\r\n                  this.props.history.push('/login');\r\n                });\r\n              } else {\r\n                this.onLoginSuccess(loginResponse, currentPath);\r\n              }\r\n          });\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n  onLoginSuccess = (loginResponse = {}, pathname = null) => {\r\n    if (loginResponse.tempPassword) {\r\n      this.props.history.push('/changepassword');\r\n    } else {\r\n      this.setState({\r\n        username: loginResponse.username,\r\n        sysRole: loginResponse.sysRole,\r\n        isAuthorizing: false\r\n      }, () => {\r\n        let directUrl = '/workspace/dashboard';\r\n        if (pathname) {\r\n          directUrl = pathname;\r\n        }\r\n        this.props.history.push(directUrl);\r\n      });\r\n    }\r\n  }\r\n\r\n  onLogout = () => {\r\n    this.setState({\r\n      username: '',\r\n      sysRole: '',\r\n      isAuthorizing: false\r\n    }, () => {\r\n      this.props.history.push('/login');\r\n    });\r\n  }\r\n   \r\n  render() {\r\n    const {\r\n      username,\r\n      sysRole,\r\n      isAuthorizing\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (isAuthorizing) {\r\n      return (\r\n        <FontAwesomeIcon icon='cicle-notch' spin={true} size=\"3x\" />\r\n      )\r\n    }\r\n    \r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Login sysRole={sysRole} onLoginSuccess={this.onLoginSuccess} />} />\r\n          <Route path=\"/login\" render={() => <Login sysRole={sysRole} onLoginSuccess={this.onLoginSuccess} />} />\r\n          <Route path=\"/changepassword\" component={ChangeTempPassword} />\r\n          <PrivateRoute \r\n            authenticated={isAuthenticated} \r\n            path='/workspace' \r\n            component={Workspace} \r\n            username={username}\r\n            sysRole={sysRole} \r\n            onLogout={this.onLogout}\r\n          />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} {...rest} />\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}