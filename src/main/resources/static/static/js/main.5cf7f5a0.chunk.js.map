{"version":3,"sources":["api/AuthStore.js","views/Login.js","api/WebApi.js","components/Modal.js","views/DataSource.js","components/Checkbox.js","components/Slicer.js","api/Util.js","components/NumberRange.js","api/Constants.js","components/FilterViewPanel.js","components/ColorPicker.js","components/GridDraggable.js","components/GridResizable.js","api/EchartsApi.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/Tabs.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/DashboardFullScreenView.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["api_AuthStore","AuthStore","Object","classCallCheck","this","_sysRole","_username","sysRole","username","Login","props","_this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","tryLogin","axios","post","then","res","data","login","preventDefault","_this$state","state","password","user","history","push","errorMsg","react_default","a","createElement","Fragment","className","type","onChange","onClick","React","Component","withRouter","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","fetchFiltersByDashboardId","_ref3","_callee3","dashboardId","_context3","concat","_x2","_ref4","_callee4","url","_context4","_x3","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","onClose","index_es","icon","DataSource","save","showUpdatePassword","id","connectionUrl","driverClassName","ds","ping","put","closeEditPanel","delete","console","log","clearEditPanel","initialState","openEditPanel","showEditPanel","openDeletePanel","toggleUpdatePassword","prevState","jdbcDataSources","webApi","_this2","_this$state2","_this$state2$jdbcData","jdbcDataSourceItems","map","index","key","fixedWidth","mode","placeholder","src_components_Modal","rows","Checkbox","toggle","checked","_this$props2","checkmarkBoxStyle","backgroundColor","style","Slicer","isSelectAll","searchValue","toggleSelectAll","newIsSelectAll","newCheckBoxes","toConsumableArray","checkBoxes","i","length","isChecked","filterId","handleSearchValueChange","result","indexOf","handleCheckBoxChange","findIndex","x","checkBoxItems","undefined","box","src_components_Checkbox","isArrayEmpty","array","Array","isArray","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","DEFAULT_FILTER_VIEW_WIDTH","DEFAULT_DASHBOARD_HEIGHT","FilterViewPanel","fetchFilters","filters","queryFilters","filter","Constants","queryRequest","queryResult","JSON","parse","f","newFilters","Util","_arr","values","_i2","val","_arr2","_i3","renderFilterPanel","filterPanel","_loop","filterComponent","components_Slicer","onSlicerChange","onSingleValueChange","isEditMode","edit","remove","onEdit","splice","applyFilters","filterParams","filterParam","paramValues","j","checkBox","remark","param","onApplyFilters","width","ColorPicker","handleClick","showPalette","handleClose","handleChange","color","rgb","rgba","r","g","b","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","WIDGET_BORDER","GridDraggable","onMouseDown","gridItemNode","ReactDOM","findDOMNode","assertThisInitialized","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","CHART_COLORS","getPieOption","queryResultData","pieKey","pieValue","legend","series","row","tooltip","orient","center","radius","getPieOptionTemplate","getTableHeaders","headers","obj","keys","_i","Header","accessor","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","column","instance","e","handleOriginal","header","drills","widgetDrillThrough","d","columnName","onChartClick","echarts","onChartLegendselectchanged","echart","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","drillThrough","widgetItem","EchartsApi","es","columns","minRows","showPagination","getTdProps","_this$props$data","chartOption","echarts_for_react_lib_default","option","onEvents","styles","marginRight","components_GridDraggable","components_GridResizable","GridLayout","_this$props$widgets","widgets","showGridlines","backgroundSize","backgroundImage","boxItems","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","isResizeToBase","preGridWidth","gridWidth","newWidgets","resizeWidgetsToBase","resizeWidgetsToActual","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryWidgets","params","w","handleHeightChange","onHeightChange","onBackgroundColorChange","saveWidgets","stringify","widgetViewWidth","components_ColorPicker","src_components_GridLayout","Tabs","handleTabClick","activeTab","_this$props$children","tabHeaders","tabContent","active","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","jdbcDataSourceId","_result$data","sqlQuery","runQuery","_x","handleAceEditorChange","newValue","handleDataSourceChange","handleChartTypeChange","handleColumnChange","handleDrillColumnChange","drillColumnName","handleDrillDashboardChange","drillDashboardId","onSave","addDrillThrough","_this$state3","newDrills","removeDrillThrough","drill","generateChart","_this$state4","renderChartPreview","_this$state5","_this$state5$columns","columnOptions","col","chartPreview","class","queryResultItem","_this$state6","dataSourceOptions","chartOptionList","o","dashboardOptions","dash","drillItems","columnItems","dataType","src_components_Tabs","react_ace_lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","FilterEditPanel","fetchFilter","handleTypeChange","useQuery","_this$state2$queryRes","typeOptions","t","DashboardEditView","loadViewByDashboardName","pageWidth","getPageWidth","showFilterViewPanel","location","search","URLSearchParams","dashboardName","isReadOnly","refresh","toggleAutoRefresh","autoRefreshTimerId","clearInterval","timerId","setInterval","refreshWidgetView","refreshFilterView","filterViewPanel","current","widgetViewPanel","now","Date","toTimeString","replace","lastRefreshed","dashboard","onSaveDashboard","cancelEdit","onSaveWidget","showWidgetEditPanel","onSaveFilter","showFilterEditPanel","toggleFilterViewPanel","resizePageLayout","openFilterEditPanel","filterEditPanel","openWidgetEditPanel","widgetEditPanel","fullScreen","window","open","onTableCellClick","objectSpread","jdbcDataSourceOptions","createRef","match","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","editButtonPanel","_this3","autoRefreshStatus","fullScreenButtonPanel","controlButtons","size","readOnly","components_WidgetViewPanel","ref","src_components_FilterViewPanel","src_components_WidgetEditPanel","components_FilterEditPanel","Dashboard","fetchBoards","catch","error","view","_this$state$dashboard","dashboardRows","margin","Route","path","render","views_DashboardEditView","DashboardFullScreenView","dashboardEditView","wrappedComponentRef","comp","SYS_ROLES","User","handleOptionChange","fetchUsers","users","fetchGroups","groups","tempPassword","userGroups","initialEditPanelState","addUserGroup","userGroupId","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_this$state3$users","_this$state3$groups","_this$state3$userGrou","userItems","groupOptions","group","sysRoleOptions","groupName","userGroupItems","Group","fetchDashboards","groupDashboards","addGroupDashboard","groupDashboardId","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","MENU_ITEMS","link","UserManagement","handleMenuClick","menuLink","currentMenuLink","menuItems","menu","Link","to","Switch","component","Account","fetchUser","generateApiKey","confirmedPassword","alert","apiKey","Workspace","pathname","isAuthenticated","menuList","m","isAccountMenuActive","exact","PageNotFound","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","App","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.5cf7f5a0.chunk.js","sourcesContent":["\r\nclass AuthStore {\r\n\r\n  constructor() {\r\n    this._sysRole = '';\r\n    this._username = '';\r\n  }\r\n\r\n  set sysRole(sysRole) {\r\n    this._sysRole = sysRole;\r\n  }\r\n\r\n  get sysRole() {\r\n    return this._sysRole;\r\n  }\r\n\r\n  set username(username) {\r\n    this._username = username;\r\n  }\r\n\r\n  get username() {\r\n    return this._username;\r\n  }\r\n\r\n  get isAuthenticated() {\r\n    return true; // this._sysRole !== '';\r\n  }\r\n}\r\n\r\nexport default new AuthStore();","\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AuthStore from '../api/AuthStore';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tryLogin();\r\n  }\r\n\r\n  tryLogin = () => {\r\n    axios.post('/auth/login/cookie')\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  login = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password'\r\n      });\r\n      return;\r\n    }\r\n\r\n    AuthStore.username = 'testuser';\r\n    AuthStore.sysRole = 'developer';\r\n    this.props.history.push('/workspace/dashboard');\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div className=\"login-app-title\">Poli</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n              <label>Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} />\r\n            </div>\r\n            <button className=\"button login-button\" onClick={this.login}>Login</button>\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      modalClass = '',\r\n      title,\r\n      children\r\n    } = this.props;\r\n\r\n    const modalStatus = show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={`modal-panel ${modalClass}`}>\r\n          <div className=\"model-header row\">\r\n            <div className=\"model-title\">{title}</div>\r\n            <button className=\"model-close-btn button icon-button\" onClick={() => this.props.onClose()}>\r\n              <FontAwesomeIcon icon=\"times\" />\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          <div className='modal-body'>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\nimport './Datasource.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Fetch all datasources\r\n    this.fetchDataSources();\r\n    \r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      driverClassName,\r\n      username,\r\n      password,\r\n      name,\r\n      ping,\r\n    } = this.state;\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      driverClassName: driverClassName,\r\n      username: username,\r\n      name: name,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.fetchDataSources();\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      // New\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    console.log('delete', id);\r\n    axios.delete('/ws/jdbcdatasource/' + id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n      });\r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        console.log('ping', res.data);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        driverClassName: ds.driverClassName,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  openDeletePanel = () => {\r\n\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      id,\r\n      jdbcDataSources = []\r\n    } = this.state;\r\n\r\n    const jdbcDataSourceItems = jdbcDataSources.map((ds, index) => \r\n      <div key={index} className=\"datasource-card row\">\r\n        <div className=\"float-left ellipsis\">\r\n          {ds.name}\r\n        </div>\r\n        <div className=\"float-right\">\r\n          <button className=\"button icon-button\" onClick={() => this.openEditPanel(ds)}>\r\n            <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n          </button>\r\n          <button className=\"button icon-button\" onClick={() => this.delete(ds.id)}>\r\n            <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n          </button>\r\n          <button className=\"button icon-button\" onClick={() => this.ping(ds.id)}>\r\n            <FontAwesomeIcon icon=\"plug\" fixedWidth />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    let mode = id === null ? 'New' : 'Update';\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"searchValue\"\r\n          placeholder=\"Datasource name...\"\r\n          />\r\n        <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n          <FontAwesomeIcon icon=\"plus\" /> New datasource\r\n        </button>\r\n        <div>\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={mode} >\r\n\r\n          <div>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Connection Url</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label>Driver class name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"driverClassName\" \r\n              value={this.state.driverClassName}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            <br/>\r\n            <button onClick={this.toggleUpdatePassword}>Update password</button>\r\n            { this.props.showUpdatePassword ? \r\n              (\r\n                <div>\r\n                  <label>Password</label>\r\n                  <input \r\n                    type=\"password\" \r\n                    name=\"password\" \r\n                    value={this.state.password}\r\n                    onChange={this.handleInputChange} />\r\n                </div>\r\n              ) : null\r\n            }\r\n\r\n            <br/>\r\n            <label>Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <button className=\"button\"onClick={this.save}>Save</button>\r\n          </div>\r\n\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    const {\r\n      name,\r\n      checked\r\n    } = this.props;\r\n\r\n    this.props.onChange(name, !checked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      checked\r\n    } = this.props;\r\n\r\n    const checkmarkBoxBgColor = checked ? '#000000' : '#FFFFFF';\r\n    const checkmarkBoxStyle = {\r\n      backgroundColor: checkmarkBoxBgColor\r\n    };\r\n\r\n    return (\r\n      <div className=\"checkbox-container\" onClick={this.toggle}>\r\n        <div className=\"checkbox-checkmark\">\r\n          <div className=\"checkbox-checkmark-box\" style={checkmarkBoxStyle}>\r\n          </div>\r\n        </div>\r\n        <div className=\"checkbox-label\">{value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport Checkbox from './Checkbox';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n    searchValue: ''\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    if (searchValue) {\r\n      const result = [];\r\n      const { checkBoxes } = this.props;\r\n      for (let i = 0; i < checkBoxes.length; i++) {\r\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\r\n          result.push(checkBoxes[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n\r\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  render() {\r\n    const checkBoxes = this.props.checkBoxes;\r\n    let checkBoxItems = [];\r\n    if (checkBoxes !== undefined && checkBoxes.length !== 0) {\r\n      checkBoxItems = this.props.checkBoxes.map((box, index) => \r\n        <Checkbox \r\n          key={index} \r\n          name={box.value} \r\n          value={box.value} \r\n          checked={box.isChecked} \r\n          onChange={this.handleCheckBoxChange} \r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.toggleSelectAll}>Toggle Select All {this.state.isSelectAll}</button>\r\n        <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.searchValue}\r\n            onChange={this.handleSearchValueChange} \r\n          />\r\n        \r\n        <div>\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};\r\n","import React from 'react';\r\n\r\nclass NumberRange extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        min\r\n        <input type=\"number\" name=\"min\" />\r\n        max\r\n        <input type=\"number\" name=\"max\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberRange;","/**\r\n * Constants\r\n */\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\r\n\r\nexport const SYS_ROLE_ADMIN = 'admin';\r\nexport const SYS_ROLE_DEVELOPER = 'developer';\r\nexport const SYS_ROLE_VIEWER = 'viewer';\r\n\r\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;","import React, { Component } from 'react';\r\nimport Slicer from \"./Slicer\";\r\nimport NumberRange from \"./NumberRange\";\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './FilterViewPanel.css';\r\n\r\nclass FilterViewPanel extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      dashboardId: null,\r\n      filters: []\r\n    };\r\n  }\r\n\r\n  fetchFilters = (dashboardId) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      dashboardId: dashboardId\r\n    })\r\n\r\n    axios.get('/ws/filter/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          filters: result,\r\n        }, this.queryFilters);\r\n      });\r\n  }\r\n\r\n  queryFilters = () => {\r\n    const { filters } = this.state;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === Constants.SLICER) {\r\n        const queryRequest = filter.data;\r\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\r\n          .then(res => {\r\n            const result = res.data;\r\n            const queryResult = JSON.parse(result.data);\r\n\r\n            const index = filters.findIndex(f => f.id === result.id);\r\n            const newFilters = [...this.state.filters];\r\n            newFilters[index].queryResult = queryResult;\r\n            const type = newFilters[index].type;\r\n            if (type === Constants.SLICER) {\r\n              const checkBoxes = [];\r\n              if (!Util.isArrayEmpty(queryResult)) {\r\n                for (let i = 0; i < queryResult.length; i++) {\r\n                  const values = Object.values(queryResult[i]);\r\n                  for (const val of values) {\r\n                    checkBoxes.push({\r\n                      value: val,\r\n                      isChecked: false\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n\r\n              newFilters[index].checkBoxes = checkBoxes;\r\n            } else if (type === Constants.SINGLE_VALUE) {\r\n              const values = Object.values(queryResult);\r\n              let value = '';\r\n              for (const val of values) {\r\n                value = val;\r\n                break;\r\n              }\r\n              newFilters[index].value = value;\r\n            }\r\n\r\n            this.setState({\r\n              filters: newFilters\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderFilterPanel = () => {\r\n    const filterPanel = [];\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      let filterComponent = (<div>NONE</div>);\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        filterComponent = (\r\n          <Slicer \r\n            key={i} \r\n            filterId={filter.id} \r\n            checkBoxes={checkBoxes} \r\n            onChange={this.onSlicerChange} \r\n          />\r\n        );\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterComponent = (\r\n          <input \r\n            type=\"text\"  \r\n            value={filter.value}\r\n            onChange={(event) => this.onSingleValueChange(filter.id, event)} \r\n          />\r\n        );\r\n      }\r\n\r\n      filterPanel.push(\r\n          (\r\n            <div className=\"filter-card\">\r\n              <div className=\"filter-card-title\">\r\n                {filter.name}\r\n\r\n                { this.props.isEditMode ? \r\n                  (\r\n                    <div className=\"icon-button-group\">\r\n                      <div className=\"icon-btn\" onClick={() => this.edit(filter.id)}>\r\n                        <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n                      </div>\r\n                      <div className=\"icon-btn\" onClick={() => this.remove(filter.id)}>\r\n                        <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n                      </div>\r\n                    </div>\r\n                  ): null \r\n                }\r\n              </div>\r\n              <div>\r\n                {filterComponent}\r\n              </div>\r\n            </div>\r\n          )\r\n        );\r\n    }\r\n    return filterPanel;\r\n  }\r\n\r\n  edit = (filterId) => {\r\n    this.props.onEdit(filterId);\r\n  }\r\n\r\n  remove = (filterId) => {\r\n    axios.delete('/ws/filter/' + filterId)\r\n      .then(res => {\r\n        const index = this.state.filters.findIndex(f => f.id === filterId);\r\n        const newFilters = [...this.state.filters];\r\n        newFilters.splice(index, 1);\r\n        this.setState({\r\n          filters: newFilters\r\n        });\r\n      });\r\n  }\r\n\r\n  onSlicerChange = (filterId, checkBoxes) => {\r\n    const index = this.state.filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...this.state.filters];\r\n    newFilters[index].checkBoxes = [...checkBoxes];\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n\r\n    // TODO: select all.\r\n    // const isSelectAll = checked.length === checkBoxes.length;    \r\n  }\r\n\r\n  onSingleValueChange = (filterId, event) => {\r\n    const { filters } = this.state;\r\n    const value = event.target.value;\r\n    const index = filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...filters];\r\n    newFilters[index].value = value;\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n  }\r\n\r\n  applyFilters = () => {\r\n    const { filters } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      const filterParam = {};\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        const paramValues = [];\r\n        for (let j = 0; j < checkBoxes.length; j++) {\r\n          const checkBox = checkBoxes[j];\r\n          if (checkBox.isChecked) {\r\n            paramValues.push(checkBox.value);\r\n          }\r\n        }\r\n        filterParam.value = paramValues;\r\n        if (paramValues.length === checkBoxes.length) {\r\n          filterParam.remark = 'select all';\r\n        }\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterParam.value = filter.value;\r\n      }\r\n      filterParam.param = filter.data.param;\r\n      filterParam.type = filter.type;\r\n      filterParams.push(filterParam);\r\n    }\r\n\r\n    this.props.onApplyFilters(filterParams);\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n    const style = {};\r\n    if (show) {\r\n      style.width = Constants.DEFAULT_FILTER_VIEW_WIDTH + 'px';\r\n    } else {\r\n      style.width = '0px';\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-filter-panel\" style={style}>\r\n        <div>Filters</div>\r\n        <button className=\"button\" onClick={this.applyFilters}>Run</button>\r\n        <div className=\"filterViewPanel\">\r\n          {this.renderFilterPanel()}\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterViewPanel;","import React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPalette: false\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      showPalette: !prevState.showPalette\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      showPalette: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    const rgb = color.rgb;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    this.props.onChange(rgba);\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: this.props.value\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: '2'\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.showPalette ? \r\n          (\r\n            <div style={popover}>\r\n              <div style={cover} onClick={this.handleClose} />\r\n              <ChromePicker color={this.props.value} onChange={this.handleChange} />\r\n            </div>\r\n          ) : null }\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","import * as Util from '../api/Util';\r\n\r\nconst CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOptionTemplate = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      data: legend,\r\n      orient: 'vertical',\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['50%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport const getPieOption = (queryResultData, pieKey, pieValue) => {\r\n  let legend = [];\r\n  let series = [];\r\n  for (let i = 0; i < queryResultData.length; i++) {\r\n    const row = queryResultData[i];\r\n    legend.push(row[pieKey]);\r\n    series.push({\r\n      name: row[pieKey],\r\n      value: row[pieValue]\r\n    });  \r\n  }\r\n  return getPieOptionTemplate(legend, series);\r\n}\r\n\r\nexport const getTableHeaders = (queryResultData) => {\r\n  const headers = [];\r\n  if (!Util.isArrayEmpty(queryResultData)) {\r\n    const obj = queryResultData[0];\r\n    const keys = Object.keys(obj);\r\n    for (const key of keys) {\r\n      headers.push({\r\n        Header: key,\r\n        accessor: key\r\n      })\r\n    }\r\n  }\r\n  return headers;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        if (!Util.isArrayEmpty(drills)) {\r\n          const index = drills.findIndex(d => d.columnName === header);\r\n          if (index !== -1) {\r\n            const dashboardId = drills[index].dashboardId;\r\n            this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      chartType,\r\n      queryResultData,\r\n      drillThrough\r\n    } = this.props;\r\n    let widgetItem = (<div></div>);\r\n    if (chartType === Constants.TABLE) {\r\n      const headers = EchartsApi.getTableHeaders(queryResultData);\r\n      widgetItem = (\r\n        <ReactTable\r\n          data={queryResultData}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n          getTdProps={this.onTableTdPropsChange}\r\n          widgetDrillThrough={drillThrough}  \r\n        />\r\n      );\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        pieKey,\r\n        pieValue\r\n      } = this.props.data;\r\n      if (!Util.isArrayEmpty(queryResultData)) {\r\n        const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\r\n        widgetItem = (\r\n          <ReactEcharts \r\n            option={chartOption}   \r\n            className=\"echarts\"\r\n            onEvents={onChartEvents}  />\r\n        );\r\n      }\r\n      \r\n    } \r\n\r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    let styles = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: 1\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {this.props.name}\r\n\r\n          { this.props.isEditMode ? (\r\n            <div className=\"float-right\" style={{marginRight: '20px'}}>\r\n              <div className=\"icon-btn\" onClick={() => this.editWidget(this.props.id)}>\r\n                <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n              </div>\r\n              <div className=\"icon-btn\" onClick={() => this.removeWidget(this.props.id)}>\r\n                <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid-box-file-button-group\">\r\n              <div className=\"icon-btn\" onClick={() => this.exportJson(this.props.id)}>\r\n                <FontAwesomeIcon icon=\"file-export\" fixedWidth />\r\n              </div>\r\n              \r\n              <div className=\"icon-btn\" onClick={() => this.exportCsv(this.props.id)}>\r\n                <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { this.props.isEditMode ? (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} />\r\n        ): null}\r\n\r\n        { this.props.isEditMode ? (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} />\r\n        ): null}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(GridItem);","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      backgroundColor,\r\n      widgets = [],\r\n      showGridlines\r\n    } = this.props;\r\n\r\n    let style = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      backgroundColor: backgroundColor\r\n    };\r\n\r\n    if (showGridlines) {\r\n      style.backgroundSize = '15px 15px';\r\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={style} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport ColorPicker from './ColorPicker';\r\nimport Checkbox from './Checkbox';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\n\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      snapToGrid: false,\r\n      showGridlines: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  resizeGrid = (width, isResizeToBase) => {\r\n    const preGridWidth = this.state.gridWidth;\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n    if (isResizeToBase) {\r\n      this.resizeWidgetsToBase(newWidgets, preGridWidth);\r\n    }\r\n\r\n    const gridWidth = width;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return Math.round(num * gridWidth / BASE_WIDTH);\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Math.round(num * BASE_WIDTH / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, width, filterParams) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get('/ws/widget/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(width, false);\r\n          this.queryWidgets(filterParams);\r\n        });\r\n      });\r\n  }\r\n\r\n  queryWidgets = (filterParams) => {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      axios.post('/ws/jdbcquery/widget/' + widget.id, params)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const index = widgets.findIndex(w => w.id === result.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResultData = JSON.parse(result.data);\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    this.setState({\r\n      [name]: isChecked\r\n    });\r\n  }\r\n\r\n  handleHeightChange = (event) => {\r\n    this.props.onHeightChange(event.target.value);\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    this.props.onBackgroundColorChange(color);\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });\r\n  }\r\n\r\n  onWidgetRemove = (widgetId) => {\r\n    axios.delete('/ws/widget/' + widgetId)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { widgetViewWidth } = this.props;\r\n    const style = {\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {this.props.isEditMode ?\r\n        (\r\n          <div className=\"dashboard-attribute-edit-panel\">\r\n            <div className=\"inline-block\">Height:</div>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.props.height}\r\n              onChange={this.handleHeightChange} \r\n              className=\"inline-block\" \r\n              style={{width: '200px'}}\r\n              />\r\n\r\n            <div className=\"inline-block\">Background Color</div>\r\n            <ColorPicker value={this.props.backgroundColor} onChange={this.onBackgroundColorChange} />\r\n\r\n            <Checkbox name=\"snapToGrid\" value=\"Snap to grid\" checked={this.state.snapToGrid} onChange={this.handleCheckBoxChange} />\r\n            <Checkbox name=\"showGridlines\" value=\"Show gridlines\" checked={this.state.showGridlines} onChange={this.handleCheckBoxChange} />\r\n  \r\n          </div>\r\n        ) : null}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          backgroundColor={this.props.backgroundColor}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.onWidgetRemove} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","import React from 'react';\r\nimport './Tabs.css';\r\n\r\nclass Tabs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const activeTab = this.props.activeTab;\r\n    this.setState({\r\n      activeTab: activeTab\r\n    });\r\n  }\r\n\r\n  handleTabClick = (title) => {\r\n    this.setState({\r\n      activeTab: title\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children = []\r\n    } = this.props;\r\n\r\n    const {\r\n      activeTab\r\n    } = this.state;\r\n\r\n    const tabHeaders = [];\r\n    let tabContent = null;\r\n    for (let i = 0; i < children.length; i++) {\r\n      const title = children[i].props.title;\r\n      let active = '';\r\n      if (title === activeTab) {\r\n        active = 'tab-header-active';\r\n        tabContent = children[i].props.children;\r\n      }\r\n      \r\n      tabHeaders.push(\r\n        <li className={`tab-header-item ${active}`} key={i} onClick={() => this.handleTabClick(title)}>{title}</li>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"tab-container\">\r\n        <ul className=\"tab-header\">\r\n          {tabHeaders}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {tabContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n\r\n","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nimport './WidgetEditPanel.css';\r\n\r\nimport Tabs from '../components/Tabs';\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      name: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      columns: [],\r\n      queryResultData: [],\r\n      chartType: Constants.TABLE,\r\n      pieKey: '',\r\n      pieValue: '',\r\n      chartOption: {},\r\n      drills: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId, dashboardId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    const filters = await webApi.fetchFiltersByDashboardId(dashboardId);\r\n    this.setState({ \r\n      filters: filters \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n\r\n      if (filters.length !== 0) {\r\n        this.setState({\r\n          filterId: filters[0].id\r\n        });\r\n      }\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { chartType } = result;\r\n          if (chartType === Constants.PIE) {\r\n            const {\r\n              pieKey,\r\n              pieValue\r\n            } = result.data;\r\n            this.setState({\r\n              pieKey: pieKey,\r\n              pieValue: pieValue\r\n            });\r\n          }\r\n\r\n          this.setState({\r\n            widgetId: widgetId,\r\n            name: result.name,\r\n            x: result.x,\r\n            y: result.y,\r\n            width: result.width,\r\n            height: result.height,\r\n            sqlQuery: result.sqlQuery,\r\n            chartType: result.chartType,\r\n            jdbcDataSourceId: result.jdbcDataSourceId,\r\n            drills: result.drillThrough\r\n          }, () => {\r\n            this.runQuery();\r\n          });\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    const jdbcDataSourceId = parseInt(event.target.value, 10);\r\n    this.setState({ \r\n      jdbcDataSourceId: jdbcDataSourceId\r\n    });\r\n  }\r\n\r\n  handleChartTypeChange = (event) => {\r\n    this.setState({ \r\n      chartType: event.target.value\r\n    });\r\n  }\r\n\r\n  handleColumnChange = (name, event) => {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleDrillColumnChange = (event) => {\r\n    this.setState({ \r\n      drillColumnName: event.target.value\r\n    });\r\n  }\r\n\r\n  handleDrillDashboardChange = (event) => {\r\n    const drillDashboardId = parseInt(event.target.value, 10);\r\n    this.setState({ \r\n      drillDashboardId: drillDashboardId\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      widgetId,\r\n      name,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      chartType,\r\n      drills\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      name: name,\r\n      dashboardId: this.props.dashboardId,\r\n      chartType: chartType,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      drillThrough: drills\r\n    }\r\n\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const {\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n      widget.data = {\r\n        pieKey: pieKey,\r\n        pieValue: pieValue\r\n      }\r\n    }\r\n\r\n    if (widgetId === null) {\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const columns = result.columns;\r\n        const data = JSON.parse(result.data);\r\n        this.setState({\r\n          queryResultData: data,\r\n          columns: columns \r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = () => {\r\n    const { \r\n      drills,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const filterId = this.state.filterId;\r\n    const index = drills.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill) => {\r\n    const { drills } = this.state;\r\n    const index = drills.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.splice(index, 1);\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = () => {\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        pieKey, \r\n        pieValue, \r\n        queryResultData \r\n      } = this.state;\r\n      if (!Util.isArrayEmpty(queryResultData)) {\r\n        const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\r\n        this.setState({\r\n          chartOption: chartOption\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      columns = [],\r\n    } = this.state;\r\n    const columnOptions = columns.map(col =>\r\n      <option value={col.name} key={col.name}>{col.name}</option>\r\n    );\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      chartPreview = (\r\n        <div>\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label>Aggr Key (string)</label>\r\n          <select value={this.state.pieKey} onChange={(event) => this.handleColumnChange('pieKey', event)}>\r\n            {columnOptions}\r\n          </select>\r\n\r\n          <label>By Aggr Value (number)</label>\r\n          <select value={this.state.pieValue} onChange={(event) => this.handleColumnChange('pieValue', event)}>\r\n            {columnOptions}\r\n          </select>\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={this.state.chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      columns,\r\n      queryResultData,\r\n      jdbcDataSources,\r\n      drills,\r\n      drillDashboards\r\n    } = this.state;\r\n\r\n    const dataSourceOptions = (jdbcDataSources || []).map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const columnOptions = (columns || []).map(col =>\r\n      <option value={col.name} key={col.name}>{col.name}</option>\r\n    );\r\n\r\n    const chartOptionList = Constants.CHART_TYPES.map(o =>\r\n      <option value={o} key={o}>{o}</option>\r\n    );\r\n\r\n    const dashboardOptions = (drillDashboards || []).map(dash =>\r\n      <option value={dash.id} key={dash.id}>{dash.name}</option>\r\n    );\r\n\r\n    const drillItems = (drills || []).map(drill =>\r\n      <div key={drill.columnName}>\r\n        <div>Column: {drill.columnName}</div>\r\n        <div>Dashboard: {drill.dashboardId}</div>\r\n        <button onClick={() => this.removeDrillThrough(drill)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const headers = [];\r\n    let queryResultItem;\r\n    if (!Util.isArrayEmpty(queryResultData)) {\r\n      const obj = queryResultData[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        });\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={queryResultData}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResultData}</div>\r\n      );\r\n    }\r\n\r\n    const columnItems = (columns || []).map(col =>\r\n      <div key={col.name}>{col.name} {col.dataType}</div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        \r\n        <div className=\"form-panel\">\r\n          <Tabs activeTab=\"basic\">\r\n            <div title=\"basic\">\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} \r\n              />\r\n            </div>\r\n\r\n            <div title=\"Query\">\r\n              <label>DataSource</label>\r\n              <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n                {dataSourceOptions}\r\n              </select>\r\n            \r\n              <label>SQL Query</label>\r\n              <AceEditor\r\n                style={{ marginTop: '8px' }}\r\n                value={this.state.sqlQuery}\r\n                mode=\"mysql\"\r\n                theme=\"xcode\"\r\n                name=\"blah2\"\r\n                onChange={this.handleAceEditorChange}\r\n                height={'300px'}\r\n                width={'100%'}\r\n                fontSize={15}\r\n                showPrintMargin={false}\r\n                showGutter={true}\r\n                highlightActiveLine={true}\r\n                setOptions={{\r\n                  showLineNumbers: true,\r\n                  tabSize: 2\r\n                }}\r\n              />\r\n\r\n              <button className=\"button\" onClick={this.runQuery}>Run Query</button>\r\n\r\n              <label>Result</label>\r\n              {queryResultItem}\r\n\r\n              <label>Columns Mapping</label>\r\n              <div>\r\n                {columnItems}\r\n              </div>\r\n            </div>\r\n\r\n            <div title=\"Chart\">\r\n              <label>Chart Options</label>\r\n              <select value={this.state.chartType} onChange={this.handleChartTypeChange}>\r\n                {chartOptionList}\r\n              </select>\r\n\r\n              <label>Preview</label>\r\n              {this.renderChartPreview()}  \r\n            </div>\r\n\r\n            <div title=\"Drill through\">\r\n              <label>Drill through</label>\r\n              <label>Column</label>\r\n              <select value={this.state.drillColumnName} onChange={this.handleDrillColumnChange}>\r\n                {columnOptions}\r\n              </select>\r\n              <label>Dashboard</label>\r\n              <select value={this.state.drillDashboardId} onChange={this.handleDrillDashboardChange}>\r\n                {dashboardOptions}\r\n              </select>\r\n              <div>\r\n                {drillItems}\r\n              </div>\r\n              <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\r\n            </div>\r\n          </Tabs>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","import React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nclass FilterEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      filterId: null,\r\n      name: '',\r\n      type: Constants.SLICER,\r\n      data: {},\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: [],\r\n      param: '',\r\n    };\r\n  }\r\n\r\n  fetchFilter = async (filterId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    if (filterId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n      this.setState({\r\n        filterId: null\r\n      })\r\n    } else {\r\n      axios.get('/ws/filter/' + filterId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { \r\n            data,\r\n            type\r\n          } = result;\r\n          this.setState({\r\n            filterId: filterId,\r\n            name: result.name,\r\n            type: result.type,\r\n            data: data\r\n          });\r\n\r\n          if (type === Constants.SLICER) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          } else if (type === Constants.SINGLE_VALUE) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          }\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    this.setState({ \r\n      jdbcDataSourceId: event.target.value\r\n    });\r\n  }\r\n\r\n  handleTypeChange = (event) => {\r\n    this.setState({ \r\n      type: event.target.value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      filterId,\r\n      name,\r\n      type,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      param\r\n    } = this.state;\r\n\r\n    const filter = {\r\n      name: name,\r\n      type: type,\r\n      dashboardId: this.props.dashboardId\r\n    };\r\n\r\n    if (type === Constants.SLICER) {\r\n      filter.data = {\r\n        jdbcDataSourceId: jdbcDataSourceId,\r\n        sqlQuery: sqlQuery,\r\n        param: param\r\n      }\r\n    } else if (type === Constants.SINGLE_VALUE) {\r\n      filter.data = {\r\n        useQuery: false,\r\n        jdbcDataSourceId: jdbcDataSourceId,\r\n        sqlQuery: sqlQuery,\r\n        param: param,\r\n      }\r\n    }\r\n\r\n    if (filterId === null) {\r\n      axios.post('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      filter.id = filterId;\r\n      axios.put('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { \r\n      queryResult = [],\r\n      jdbcDataSources = [],\r\n    } = this.state;\r\n\r\n    const dataSourceOptions = jdbcDataSources.map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const typeOptions = Constants.FILTER_TYPES.map(t =>\r\n      <option value={t} key={t}>{t}</option>\r\n    );\r\n\r\n    const headers = [];\r\n    let queryResultItem;\r\n    if (!Util.isArrayEmpty(queryResult)) {\r\n      console.log('queryResult', queryResult);\r\n      const obj = queryResult[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        })\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={this.state.queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResult}</div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        <button className=\"button\" onClick={this.runQuery}>Run</button>\r\n\r\n        <div className=\"form-panel\">\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>Type</label>\r\n          <select value={this.state.type} onChange={this.handleTypeChange}>\r\n            {typeOptions}\r\n          </select>\r\n\r\n          <label>DataSource</label>\r\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n            {dataSourceOptions}\r\n          </select>\r\n        \r\n          <label>SQL Query</label>\r\n          <AceEditor\r\n            style={{ marginTop: '8px' }}\r\n            value={this.state.sqlQuery}\r\n            mode=\"mysql\"\r\n            theme=\"xcode\"\r\n            name=\"blah2\"\r\n            onChange={this.handleAceEditorChange}\r\n            height={'300px'}\r\n            width={'100%'}\r\n            fontSize={15}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              showLineNumbers: true,\r\n              tabSize: 2\r\n            }}\r\n          />\r\n\r\n          <label>Result</label>\r\n          {queryResultItem}\r\n\r\n          <label>Param</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"param\" \r\n            value={this.state.param}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport FilterViewPanel from '../components/FilterViewPanel';\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\nimport FilterEditPanel from '../components/FilterEditPanel';\r\n\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showFilterEditPanel: false,\r\n      showFilterViewPanel: true,\r\n      isEditMode: false,\r\n      isReadOnly: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      style: {},\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.filterViewPanel = React.createRef();\r\n    this.filterEditPanel = React.createRef();\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    console.log('DashboardEditView', dashboardId);\r\n\r\n    const url = this.props.location.search;\r\n    console.log('url', url);\r\n    const params = new URLSearchParams(url);\r\n    console.log('params', params);\r\n    for(let pair of params.entries()) {\r\n      console.log(pair[0]+ ', '+ pair[1]); \r\n    } \r\n\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = this.state.showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    console.log('componentDidMount', pageWidth, widgetViewWidth);\r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const result = res.data;\r\n            this.setState({\r\n              dashboardId: result.id,\r\n              name: result.name,\r\n              style: result.style\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = () => {\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = this.state.showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    \r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    const dashboardName = params.get('name');\r\n    const showFilter = params.get('showFilter');\r\n\r\n    const showFilterViewPanel = showFilter == 'true';\r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth,\r\n      isReadOnly: true,\r\n      name: dashboardName,\r\n      showFilterViewPanel: showFilterViewPanel\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            style: result.style\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth;\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const timerId = setInterval(() => {\r\n        this.refreshWidgetView();\r\n      }, 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    console.log('refresh');\r\n    this.refreshWidgetView();\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  refreshFilterView = () => {\r\n    const { \r\n      dashboardId\r\n    } = this.state;\r\n    this.filterViewPanel.current.fetchFilters(dashboardId);\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n\r\n    const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\r\n    this.setState({\r\n      lastRefreshed: now\r\n    });\r\n  } \r\n\r\n  save = () => {\r\n    console.log('save');\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      style\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      style: style\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.widgetViewPanel.current.saveWidgets();\r\n\r\n    this.props.onSaveDashboard(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  delete = () => {\r\n    const { dashboardId } = this.state;\r\n    console.log('delete', dashboardId);\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        //this.fetchBoards();\r\n      });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  onSaveFilter = () => {\r\n    this.setState({ \r\n      showFilterEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  toggleFilterViewPanel = () => {\r\n    const { \r\n      showFilterViewPanel\r\n    } = this.state;\r\n    this.resizePageLayout(!showFilterViewPanel);\r\n  }\r\n\r\n  resizePageLayout = (showFilterViewPanel) => {\r\n    const pageWidth = this.getPageWidth();;\r\n    let widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    this.widgetViewPanel.current.resizeGrid(widgetViewWidth, true);\r\n\r\n    this.setState({\r\n      showFilterViewPanel: showFilterViewPanel,\r\n      widgetViewWidth: widgetViewWidth\r\n    }); \r\n  }\r\n\r\n  openFilterEditPanel = (filterId) => {\r\n    this.filterEditPanel.current.fetchFilter(filterId);\r\n    this.setState({\r\n      showFilterEditPanel: true\r\n    });\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    const { dashboardId } = this.state;\r\n    this.widgetEditPanel.current.fetchWidget(widgetId, dashboardId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/workspace/dashboard/view?name=${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onTableCellClick = () => {\r\n    this.props.history.push(`/workspace/dashboard/drill?name=&`);\r\n  }\r\n\r\n  onHeightChange = (height) => {\r\n    const style = {...this.state.style};\r\n    style.height = height;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    const style = {...this.state.style};\r\n    style.backgroundColor = color;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      lastRefreshed,\r\n      isEditMode,\r\n      isReadOnly\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel = null;\r\n    const controlButtons = (\r\n      <React.Fragment>\r\n        <span>Last refreshed: {lastRefreshed}</span>\r\n        <button className=\"button icon-button\" onClick={this.toggleAutoRefresh}>\r\n          {\r\n            autoRefreshStatus === 'ON' ? \r\n            (\r\n              <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\r\n            ) : \r\n            (\r\n              <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\r\n            )\r\n          }\r\n        </button>\r\n        <button className=\"button icon-button\" onClick={this.refresh}>\r\n          <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\r\n        </button>\r\n        <button className=\"button\" onClick={this.toggleFilterViewPanel}>Show Filters</button>\r\n      </React.Fragment>\r\n    );\r\n\r\n    if (!isReadOnly) {\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button\" onClick={this.cancelEdit}>Cancel</button>\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n            <button className=\"button\" onClick={this.delete}>Delete</button>\r\n            <button className=\"button\" onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\r\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            {controlButtons}\r\n            <button className=\"button icon-button\" onClick={this.fullScreen}>\r\n              <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={this.edit}>Edit</button>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      fullScreenButtonPanel = controlButtons;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-menu-panel row\">\r\n          <div className=\"float-left\">\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              style={{width: '200px'}}\r\n              readOnly={isReadOnly || !isEditMode}\r\n              />\r\n          </div>\r\n          <div className=\"float-right\">\r\n            {fullScreenButtonPanel}\r\n            {editButtonPanel}\r\n          </div>\r\n        </div>\r\n\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          isEditMode={this.state.isEditMode}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          onHeightChange={this.onHeightChange}\r\n          onBackgroundColorChange={this.onBackgroundColorChange}\r\n          {...this.state.style}\r\n        />\r\n        <FilterViewPanel \r\n          ref={this.filterViewPanel} \r\n          onEdit={this.openFilterEditPanel}\r\n          onApplyFilters={this.applyFilters}\r\n          isEditMode={this.state.isEditMode}\r\n          show={this.state.showFilterViewPanel}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'dashboard-edit-widget-dialog'} \r\n          title={'Widget Edit'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showFilterEditPanel}\r\n          onClose={() => this.setState({ showFilterEditPanel: false })}\r\n          modalClass={'dashboard-edit-filter-dialog'} \r\n          title={'Filter Edit'}>\r\n          <FilterEditPanel\r\n            ref={this.filterEditPanel}\r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveFilter}\r\n          />\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\nimport './Dashboard.css';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as Constants from '../api/Constants';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false,\r\n      name: ''\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      style: {\r\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\r\n        backgroundColor: 'rgba(233, 235, 238, 1)'\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.closeEditPanel();\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n  }\r\n\r\n  onSaveDashboard = (dashboardId) => {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dashboards = []\r\n    } = this.state;\r\n    \r\n    const dashboardRows = dashboards.map((d, index) => \r\n      <div key={index} className=\"dashboard-menu-item ellipsis\" onClick={() => this.view(d.id)}>\r\n        {d.name}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dashboard-sidebar\">\r\n          <div style={{margin: '5px'}}>\r\n            <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\r\n              <FontAwesomeIcon icon=\"plus\" /> New dashboard\r\n            </button>\r\n            <input \r\n              type=\"text\" \r\n              name=\"searchValue\" \r\n              value={this.state.searchValue}\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleInputChange} />\r\n          </div>\r\n          <div>\r\n            {dashboardRows}\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route \r\n            path=\"/workspace/dashboard/:id\" \r\n            render={(props) => <DashboardEditView key={props.match.params.id} onSaveDashboard={this.onSaveDashboard} />} \r\n            />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'small-modal-panel'} \r\n          title={'New'} >\r\n          <div>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              />\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.dashboardEditView.loadViewByDashboardName();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView wrappedComponentRef={comp => (this.dashboardEditView = comp)} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\n\r\nconst SYS_ROLES = ['developer', 'viewer'];\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      searchValue: '',\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, event) => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      this.setState({\r\n        id: user.id,\r\n        username: user.username,\r\n        name: user.name,\r\n        tempPassword: '',\r\n        sysRole: user.sysRole,\r\n        userGroups: user.userGroups\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  search = () => {\r\n    const { searchValue } = this.state;\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: sysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/user/' + id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n      });\r\n  }\r\n\r\n  addUserGroup = (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId, event) => {\r\n    event.preventDefault();\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      users = [],\r\n      groups = [],\r\n      userGroups = []\r\n    } = this.state;\r\n\r\n    const userItems = users.map(user => \r\n      <div key={user.id} className=\"user-card\">\r\n        <p>\r\n          {user.username}\r\n          {user.name}\r\n          {user.sysRole}\r\n          <button onClick={() => this.openEditPanel(user)}>update</button>\r\n          <button onClick={() => this.delete(user.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupOptions = groups.map(group => \r\n      <option value={group.id} key={group.id}>{group.name}</option>\r\n    );\r\n\r\n    const sysRoleOptions = SYS_ROLES.map(groupName => \r\n      <option value={groupName} key={groupName}>{groupName}</option>\r\n    );\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId}>\r\n                <div>Group: {groups[j].name}</div>\r\n                <button onClick={(event) => this.removeUserGroup(groupId, event)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>User</div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Username...\"\r\n          />\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Group...\"\r\n          />\r\n        <button onClick={this.search}>Search</button>\r\n        <div className=\"row\">\r\n          {userItems}\r\n        </div>\r\n        <button onClick={() => this.openEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'lg-modal-panel'} \r\n          title={'User'} >\r\n\r\n          <div>\r\n            <h3>{'User'}</h3>\r\n            <form>\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Temp password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"tempPassword\" \r\n                value={this.state.tempPassword}\r\n                onChange={this.handleInputChange} />\r\n              \r\n              <label>System Role</label>\r\n              <select value={this.state.sysRole} onChange={(event) => this.handleOptionChange('sysRole', event)}>\r\n                {sysRoleOptions}\r\n              </select>\r\n              <br/>\r\n              \r\n              <label>Groups</label>\r\n              <select value={this.state.userGroupId} onChange={(event) => this.handleOptionChange('userGroupId', event)}>\r\n                {groupOptions}\r\n              </select>\r\n              <button onClick={this.addUserGroup}>Add</button>\r\n              <div>\r\n                {userGroupItems}\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, event) => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      this.setState({\r\n        id: group.id,\r\n        name: group.name,\r\n        groupDashboards: group.groupDashboards\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/group/' + id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n      });\r\n  }\r\n\r\n  addGroupDashboard= (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n    if (index === -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.push(groupDashboardId);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId, event) => {\r\n    event.preventDefault();\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    const dashboardOptions = dashboards.map(dash => \r\n      <option value={dash.id} key={dash.id}>{dash.name}</option>\r\n    );\r\n\r\n    const groupItems = groups.map(group => \r\n      <div key={group.id} className=\"group-card\">\r\n        <p>\r\n          {group.name}\r\n          <button onClick={() => this.openEditPanel(group)}>update</button>\r\n          <button onClick={() => this.delete(group.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId}>\r\n                <div>Name: {dashboards[j].name}</div>\r\n                <button onClick={(event) => this.removeGroupDashboard(dashboardId, event)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Group</h1>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Group...\"\r\n          />\r\n        <button onClick={this.search}>Search</button>\r\n        <div className=\"row\">\r\n          {groupItems}\r\n        </div>\r\n        <button onClick={() => this.openEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'lg-modal-panel'} \r\n          title={'Group'} >\r\n\r\n          <div>\r\n            <h3>{'Group'}</h3>\r\n            <form>\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n              \r\n              <label>Dashboards</label>\r\n              <select value={this.state.groupDashboardId} onChange={(event) => this.handleOptionChange('groupDashboardId', event)}>\r\n                {dashboardOptions}\r\n              </select>\r\n              <button onClick={this.addGroupDashboard}>Add</button>\r\n              <div>\r\n                {groupDashboardItems}\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\nimport { Route, Link, Switch } from \"react-router-dom\";\r\nimport User from './User';\r\nimport Group from './Group';\r\nimport './UserManagement.css';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/user-management/user',\r\n    value: 'User',\r\n    icon: 'fa-users'\r\n  }, \r\n  {\r\n    link: '/workspace/user-management/group',\r\n    value: 'Group',\r\n    icon: 'fa-user-cog',\r\n  }\r\n];\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: 'group',\r\n    }\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let menuItems = [];\r\n    for (let i = 0; i < MENU_ITEMS.length; i++) {\r\n      const menu = MENU_ITEMS[i];\r\n      const active = this.state.currentMenuLink === menu.link ? 'active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li className={active} key={i}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <i className={`fas ${menu.icon} fa-fw`}></i>\r\n              <span className=\"app-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <ul className=\"nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/workspace/user-management/user\" component={User} />\r\n            <Route path=\"/workspace/user-management/group\" component={Group} />\r\n          </Switch>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        alert('confirm password');\r\n        return;\r\n      }\r\n      \r\n      user.password = password;\r\n    }\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>Account</div>\r\n        <div className=\"form-panel\">   \r\n          <label>Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label>System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label>API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button className=\"button\" onClick={this.generateApiKey}>Generate new API Key</button>\r\n          <br/>\r\n\r\n          <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n          {\r\n            showUpdatePassword ?\r\n            (\r\n              <React.Fragment>\r\n                <br/>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label>Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n            ) : null\r\n          }\r\n\r\n          <br/>\r\n          <button className=\"button\" onClick={this.save}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","import React from 'react';\r\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\n\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport AuthStore from '../api/AuthStore';\r\nimport './Workspace.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data source',\r\n    icon: 'database'\r\n  }, \r\n  {\r\n    link: '/workspace/user-management',\r\n    value: 'User Management',\r\n    icon: 'users-cog'\r\n  }\r\n];\r\n\r\nconst ACCOUNT_MENU_LINK = '/workspace/account';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard',\r\n      username: '',\r\n      sysRole: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Workspace - componentDidMount');\r\n    const pathname = this.props.location.pathname;\r\n    // TODO: fetch user information\r\n    this.setState({\r\n      currentMenuLink: pathname,\r\n    });\r\n    if (AuthStore.isAuthenticated) {\r\n      const sysRole = AuthStore.sysRole;\r\n      this.setState({\r\n        sysRole: sysRole\r\n      });\r\n    } else {\r\n      // Try login. If not, redirect\r\n    }\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n      sysRole\r\n    } = this.state;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.name === 'dashboard' || m.name === 'account');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li key={menu.link} className={active}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"workspace-nav\">  \r\n          <div className=\"workspace-name\">Poli</div>\r\n          <ul className=\"workspace-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div className=\"workspace-account-menu\">\r\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\r\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\r\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\r\n                <span className=\"workspace-nav-menu-text\">Account</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"workspace-logout-button inline-block\">\r\n              <Link to=\"/login\">\r\n                <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"workspace-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route exact path=\"/workspace/dashboard/view\" component={DashboardFullScreenView} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n            <Route path=\"/workspace/dashboard\" component={Dashboard} />\r\n            <Route path=\"/workspace/user-management\" component={UserManagement} />\r\n          </Switch>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Workspace);\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, Component } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\n\r\nimport AuthStore from './api/AuthStore';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv\r\n} from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('App - componentDidMount', AuthStore.isAuthenticated);\r\n  }\r\n   \r\n  render() {\r\n    console.log('App - render', AuthStore.isAuthenticated);\r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <PrivateRoute authenticated={AuthStore.isAuthenticated} path='/workspace' component={Workspace} />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} />\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}