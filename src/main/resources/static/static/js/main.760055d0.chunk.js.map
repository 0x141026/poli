{"version":3,"sources":["views/Overview.js","api/WebApi.js","views/DataSources.js","views/Dashboards.js","components/GridDraggable.js","components/GridResizable.js","components/GridItem.js","components/GridLayout.js","views/Test.js","views/EditDataSource.js","components/QuerySlicer.js","components/NumberRange.js","components/FilterViewPanel.js","components/WidgetViewPanel.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/SingleTest.js","App.js","index.js"],"names":["Overview","react_default","a","createElement","Component","fetchDataSources","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","get","abrupt","sent","stop","this","apply","arguments","_ref3","_callee3","url","response","_context3","axios","data","t0","_x2","DataSources","state","jdbcDataSources","showEditPanel","id","name","connectionUrl","username","password","type","ping","handleInputChange","event","target","value","_this","setState","defineProperty","save","preventDefault","ds","post","then","res","initData","update","console","log","put","delete","concat","clearEditPanel","showDeletePanel","webApi","_this2","filterDrawerClass","jdbcDataSourceItems","map","index","key","onClick","mode","className","onChange","row","Dashboard","dashboards","fetchBoards","dashboard","dashboardId","props","history","push","jump","panelClass","dashboardRows","d","withRouter","WIDGET_BORDER","GridDraggable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onMouseDown","gridItemNode","ReactDOM","findDOMNode","assertThisInitialized","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","i","length","style","zIndex","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","width","boxHeight","height","Math","floor","left","top","React","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","GridItem","x","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","renderWidgetContent","widgetItem","headers","queryResult","undefined","Array","isArray","obj","keys","_i","Header","accessor","es","columns","minRows","showPagination","styles","marginRight","components_GridDraggable","components_GridResizable","GridLayout","showGridlines","backgroundSize","backgroundImage","boxItems","widgets","components_GridItem","assign","Test","selectedOption","firstName","lastName","newValue","submit","handleChange","src_components_GridLayout","PureComponent","EditDataSource","router","reset","initialState","match","params","QuerySlicer","isSelectAll","isChecked","checked","newCheckBoxes","toConsumableArray","checkBoxes","findIndex","filterId","toggleSelectAll","newIsSelectAll","prevState","checkBoxItems","box","NumberRange","FilterViewPanel","fetchFilters","result","filters","queryFilters","filter","queryRequest","f","newFilters","JSON","parse","isArrayNotEmpty","values","_i2","val","renderFilterPanel","filterPanel","_loop","edit","components_QuerySlicer","onQuerySlicerChange","components_NumberRange","onEdit","run","show","onClose","WidgetViewPanel","fetchWidgets","queryWidgets","w","newWidgets","widgetItems","CHART_TYPES","WidgetEditPanel","fetchWidget","jdbcDataSourceId","_x","handleAceEditorChange","sqlQuery","handleDataSourceChange","close","runQuery","queryResultItem","dataSourceOptions","chartOptionList","o","lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","optionValue","handleOptionChange","class","TYPES","FilterEditPanel","fetchFilter","handleTypeChange","typeOptions","t","DashboardEditView","refresh","filterViewPanel","current","widgetViewPanel","openFilterEditPanel","filterEditPanel","showFilterEditPanel","openWidgetEditPanel","widgetEditPanel","showWidgetEditPanel","showFilterViewPanel","jdbcDataSourceOptions","createRef","components_FilterViewPanel","ref","components_WidgetViewPanel","components_WidgetEditPanel","components_FilterEditPanel","SingleTest","App","handleClick","e","toggleMenu","menuMin","Link","to","Route","exact","path","component","Dashboards","render","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.760055d0.chunk.js","sourcesContent":["\nimport React, { Component } from 'react';\n\nclass Overview extends Component {\n\n  render() {\n    return (\n      <div>\n        <h1>Overview</h1>     \n        <h5>Number of data sources</h5>\n        <h5>Number of dashboards</h5>\n      </div>\n    );\n  }\n}\n\nexport default Overview;\n","import axios from 'axios';\n\nconst JSON_HEADER = {\n  headers: {\n    'Content-Type': 'application/json',\n  }\n};\n\nexport const fetchDataSources = async () => {\n  return await get('/ws/jdbcdatasource');\n};\n\nexport const fetchDashboardById = async (id) => {\n  return await get(`/ws/dashboard/${id}`);\n}\n\n\nconst get = async (url) => {\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (e) {\n    return [];\n  }\n} \n\n\n","\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport * as webApi from '../api/WebApi';\n\nclass DataSources extends Component {\n\n  state = { \n    jdbcDataSources: [],\n    showEditPanel: false,\n    id: null,\n    name: '',\n    connectionUrl: '',\n    username: '',\n    password: '',\n    type: '',\n    ping: ''\n  };\n\n  componentDidMount() {\n    // Fetch all datasources\n    this.initData();\n    \n  }\n\n  async initData() {\n    const jdbcDataSources = await webApi.fetchDataSources();\n    this.setState({ \n      jdbcDataSources: jdbcDataSources \n    });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  save = (event) => {\n    event.preventDefault();\n    const ds = {\n      connectionUrl: this.state.connectionUrl,\n      username: this.state.username,\n      password: this.state.password,\n      name: this.state.name,\n      type: this.state.password,\n      ping: this.state.ping\n    };\n\n    axios.post('/ws/jdbcdatasource', ds)\n      .then(res => {\n        this.initData();\n      });\n  }\n\n  update = (ds) => {\n    console.log('update', ds);\n\n    axios.put('/ws/jdbcdatasource', ds)\n      .then(res => {\n        this.initData();\n      });\n  }\n\n  delete = (id) => {\n    console.log('delete', id);\n    axios.delete('/ws/jdbcdatasource/' + id)\n      .then(res => {\n        this.initData();\n      });\n  }\n\n  ping = (id) => {\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\n      .then(res => {\n        console.log('ping', res.data);\n      });\n  }\n\n  clearEditPanel = () => {\n    this.setState({\n      id: null,\n      connectionUrl: '',\n      username: '',\n      password: '',\n      name: '',\n      type: '',\n      ping: ''\n    });\n  }\n\n  showEditPanel = (ds) => {\n    if (ds !== null) {\n      this.setState({\n        id: ds.id,\n        connectionUrl: ds.connectionUrl,\n        username: ds.username,\n        password: ds.password,\n        name: ds.name,\n        type: ds.type,\n        ping: ds.ping\n      });\n    } else {\n      this.clearEditPanel();\n    }\n    \n    this.setState({\n      showEditPanel: true\n    }); \n  }\n\n  showDeletePanel = () => {\n\n  }\n\n  render() {\n\n    const filterDrawerClass = this.state.showEditPanel ? 'right-drawer display-block' : 'right-drawer display-none';\n\n    const jdbcDataSourceItems = this.state.jdbcDataSources.map((ds, index) => \n      <tr key={index}>\n        <td>{ds.name}</td>\n        <td>{ds.connectionUrl}</td>\n        <td>{ds.type}</td>\n        <td>{ds.username}</td>\n        <td>{ds.ping}</td>\n        <td><button onClick={() => this.showEditPanel(ds)}>update</button></td>\n        <td><button onClick={() => this.delete(ds.id)}>delete</button></td>\n        <td><button onClick={() => this.ping(ds.id)}>ping</button></td>\n      </tr>\n    );\n\n    const mode = this.state.id === null ? 'New' : 'Update';\n\n    return (\n      <div>\n        <h1>Data Sources</h1>\n        <div>\n          <h2>Table</h2>\n\n          <table>\n            <thead>\n            </thead>\n            <tbody>\n              {jdbcDataSourceItems}\n            </tbody>\n          </table>\n\n        </div>\n        <button onClick={() => this.showEditPanel(null)}>\n          Add\n        </button>\n\n        <div className={filterDrawerClass}>\n          <h3>{mode}</h3>\n          <button onClick={() => this.setState({showEditPanel: false })}>Close</button>\n          <form>\n            <label>Name</label>\n            <input \n              type=\"text\" \n              name=\"name\" \n              value={this.state.name}\n              onChange={this.handleInputChange} />\n\n            <label>Connection Url</label>\n            <textarea\n              row=\"3\"\n              type=\"text\" \n              name=\"connectionUrl\" \n              value={this.state.connectionUrl}\n              onChange={this.handleInputChange} >\n            </textarea>\n\n            <label>Username</label>\n            <input \n              type=\"text\" \n              name=\"username\" \n              value={this.state.username}\n              onChange={this.handleInputChange} />\n\n            <label>Password</label>\n            <input \n              type=\"password\" \n              name=\"password\" \n              value={this.state.password}\n              onChange={this.handleInputChange} />\n\n            <label>Type</label>\n            <input \n              type=\"text\" \n              name=\"type\" \n              value={this.state.type}\n              onChange={this.handleInputChange} />\n\n            <label>Ping</label>\n            <input \n              type=\"text\" \n              name=\"ping\" \n              value={this.state.ping}\n              onChange={this.handleInputChange} />\n          </form>\n\n          <div>\n            <button onClick={this.save}>Save</button>\n            <button onClick={this.ping}>Ping</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DataSources;\n","\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport axios from 'axios';\n\n\nclass Dashboard extends Component {\n\n  state = { \n    dashboards: [],\n    showEditPanel: false,\n    name: ''\n  };\n\n  componentDidMount() {\n    this.fetchBoards();\n  }\n\n  fetchBoards = () => {\n    axios.get('/ws/dashboard')\n      .then(res => {\n        const dashboards = res.data;\n        this.setState({ \n          dashboards: dashboards \n        });\n      });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  save = () => {\n    const dashboard = {\n      name: this.state.name\n    };\n\n    axios.post('/ws/dashboard', dashboard)\n      .then(res => {\n        const dashboardId = res.data;\n        this.props.history.push(`/dashboard/edit/${dashboardId}`);\n      });\n  }\n\n  update = (dashboardId) => {\n    this.props.history.push(`/dashboard/edit/${dashboardId}`);\n  }\n\n  delete = (dashboardId) => {\n    console.log('delete', dashboardId);\n    axios.delete('/ws/dashboard/' + dashboardId)\n      .then(res => {\n        this.fetchBoards();\n      });\n  }\n\n  jump = () => {\n    this.props.history.push('/overview');\n  }\n\n  render() {\n    const panelClass = this.state.showEditPanel ? 'right-drawer display-block' : 'right-drawer display-none';\n\n    const dashboardRows = this.state.dashboards.map((d, index) => \n      <tr key={index}>\n        <td>{d.id}</td>\n        <td>{d.name}</td>\n        <td><button onClick={() => this.update(d.id)}>update</button></td>\n        <td><button onClick={() => this.delete(d.id)}>delete</button></td>\n      </tr>\n    );\n\n    return (\n      <div>\n        Board\n        <button onClick={this.jump}>Overview</button>\n        <button onClick={() => this.setState({ showEditPanel: true })}>Add</button>\n\n        <table>\n          <thead>\n          </thead>\n          <tbody>\n            {dashboardRows}\n          </tbody>\n        </table>\n\n        <div className={panelClass}>\n          <div>New dashboard</div>\n          <button onClick={() => this.setState({showEditPanel: false })}>Close</button>\n          <button onClick={this.save}>Save</button>\n          <form>\n            <label>Name</label>\n            <input \n              type=\"text\" \n              name=\"name\" \n              value={this.state.name}\n              onChange={this.handleInputChange} />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Dashboard);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst WIDGET_BORDER = 2;\n\nclass GridDraggable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      xOffset: 0,\n      yOffset: 0\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\n    const yOffset = event.clientY - gridItemNode.offsetTop;\n\n    let boxes = document.getElementsByClassName(\"grid-box\");\n    for (let i = 0; i < boxes.length; i++) {\n        boxes[i].style.zIndex = 20;\n    }\n    gridItemNode.style.zIndex = 30;\n\n    const { ownerDocument } = gridItemNode;\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\n    this.setState({\n      xOffset: xOffset,\n      yOffset: yOffset\n    });\n\n    this.props.onMouseDown('drag');\n  }\n\n  onMouseUp = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n    this.props.onMouseUp();\n  }\n\n  onMouseMove = (event) => {\n    console.log('GridDraggable onMouseMove', event);\n    event.preventDefault();\n    if (this.props.mode !== 'drag') {\n      return; \n    }\n\n    let gridCell = 1;\n    if (this.props.snapToGrid) {\n      gridCell = 4;\n    }\n\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    let currentX = event.clientX - this.state.xOffset;\n    let currentY = event.clientY - this.state.yOffset;\n    \n    const containerNode = gridItemNode.parentNode;\n    const containerWidth = containerNode.clientWidth;\n    const containerHeight = containerNode.clientHeight;\n    \n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\n\n    if (currentX < 0) {\n      currentX = 0;\n    }\n    if (currentY < 0) {\n      currentY = 0;\n    }\n    if (currentX + boxWidth > containerWidth) {\n      currentX = containerWidth - boxWidth;\n    }\n    if (currentY + boxHeight > containerHeight) {\n      currentY = containerHeight - boxHeight;\n    }\n\n    currentX = Math.floor(currentX / gridCell) * gridCell;\n    currentY = Math.floor(currentY / gridCell) * gridCell;\n\n    gridItemNode.style.left = currentX + 'px';\n    gridItemNode.style.top = currentY + 'px';\n  }\n\n  render() {\n    return (\n      <div className=\"grid-draggable\"\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp}>\n      </div>\n    )\n  }\n}\n\nexport default GridDraggable;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst MIN_WIDTH = 30;\nconst MIN_HEIGHT = 30;\nconst WIDGET_BORDER = 2;\n\nclass GridResizable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentX: 0,\n      currentY: 0,\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (event) => {\n    console.log('onMouseDown', event);\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    const currentX = event.clientX;\n    const currentY = event.clientY;\n    \n    const { ownerDocument } = thisNode;\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\n    this.setState({\n      currentX: currentX,\n      currentY: currentY\n    });\n\n    this.props.onMouseDown('resize');\n  }\n\n  onMouseUp = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n    this.props.onMouseUp();\n  }\n\n  onMouseMove = (event) => {\n    console.log('GridResizer onMouseMove', event);\n    event.preventDefault();\n    if (this.props.mode !== 'resize') {\n      return; \n    }\n\n    let xOffset = event.clientX - this.state.currentX;\n    let yOffset = event.clientY - this.state.currentY;\n\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\n\n    const containerNode = gridItemNode.parentNode;\n    const containerWidth = containerNode.clientWidth;\n    const containerHeight = containerNode.clientHeight;\n\n    let newWidth = Math.floor(prevWidth + xOffset);\n    let newHeight = Math.floor(prevHeight + yOffset);\n\n    if (newWidth < MIN_WIDTH) {\n      newWidth = MIN_WIDTH;\n    }\n    \n    if (newHeight < MIN_HEIGHT) {\n      newHeight = MIN_HEIGHT;\n    }\n\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\n\n    if (newWidth +  left > containerWidth) {\n      newWidth = containerWidth - left;\n    }\n\n    if (newHeight + top > containerHeight) {\n      newHeight = containerHeight - top;\n    }\n\n    gridItemNode.style.width = newWidth + 'px';\n    gridItemNode.style.height = newHeight + 'px';\n\n    this.setState({\n      currentX: event.clientX,\n      currentY: event.clientY\n    });\n  }\n\n  render() {\n    return (\n      <div \n        className=\"grid-resizable\"\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp} >\n      </div>\n    )\n  }\n}\n\nexport default GridResizable;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GridDraggable from './GridDraggable';\nimport GridResizable from './GridResizable';\n\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\n\nclass GridItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      x: this.props.x,\n      y: this.props.y,\n      mode: ''\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (mode) => {\n    console.log('GridItem onMouseDown', mode);\n    this.setState({\n      mode: mode\n    });\n  }\n\n  onMouseUp = () => {\n    console.log('GridItem onMouseUp');\n    this.setState({\n      mode: ''\n    });\n\n    const thisNode = ReactDOM.findDOMNode(this);\n    const x = thisNode.offsetLeft;\n    const y = thisNode.offsetTop;\n    const width = parseInt(thisNode.style.width, 10);\n    const height = parseInt(thisNode.style.height, 10);\n    const widgetId = this.props.id;\n\n    const widget = {\n      id: widgetId,\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n\n    this.props.onWidgetMove(widget);\n  }\n\n  onMouseMove = (event, mode, state) => {\n    console.log('GridItem onMouseMove', event);\n    event.preventDefault();   \n  }\n\n  editWidget = (widgetId) => {\n    console.log('editWidget', widgetId);\n    this.props.onWidgetEdit(widgetId);\n  }\n\n  delete = () => {\n\n  }\n\n  renderWidgetContent = () => {\n    const widget = this.props;\n    let widgetItem = (<div>NONE</div>);\n    if (widget.type === 'table') {\n\n      const headers = [];\n      const queryResult = widget.queryResult;\n      if (queryResult !== undefined \n        && queryResult.length !== 0 \n        && Array.isArray(queryResult)) {\n        const obj = queryResult[0];\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n          headers.push({\n            Header: key,\n            accessor: key\n          })\n        }\n      }\n\n      widgetItem = (\n        <ReactTable\n          data={queryResult}\n          columns={headers}\n          minRows={0}\n          showPagination={false}\n        />\n      );\n    } \n    return widgetItem;\n  }\n\n  render() {\n    let styles = {\n      left: this.state.x,\n      top: this.state.y,\n      width: this.props.width,\n      height: this.props.height,\n      zIndex: 1\n    };\n\n    return (\n      <div className=\"grid-box\" style={styles}>\n        <div className=\"grid-box-title\">\n          {this.props.name}\n\n          <div className=\"icon-button-group\" style={{marginRight: '20px'}}>\n            <div className=\"icon-btn\" onClick={() => this.editWidget(this.props.id)}>\n              <i className=\"fas fa-edit fa-fw\"></i>\n            </div>\n            <div className=\"icon-btn\" onClick={() => this.delete()}>\n              <i className=\"fas fa-trash-alt fa-fw\"></i>\n            </div>\n          </div>\n        </div>\n        <div className=\"grid-box-content\">\n          {this.renderWidgetContent()}\n        </div>\n\n        <GridDraggable \n          onMouseUp={this.onMouseUp}\n          onMouseDown={this.onMouseDown}\n          onMouseMove={this.onMouseMove}\n          mode={this.state.mode}\n          snapToGrid={this.props.snapToGrid} />\n\n        <GridResizable \n          onMouseUp={this.onMouseUp}\n          onMouseDown={this.onMouseDown}\n          onMouseMove={this.onMouseMove}\n          mode={this.state.mode} />\n      </div>\n    )\n  }\n}\n\nexport default GridItem;","import React from 'react';\n\nimport GridItem from './GridItem';\nimport './GridLayout.css';\n\nclass GridLayout extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    let styles = {\n      width: this.props.width + 'px',\n      height: this.props.height + 'px',\n    };\n\n    if (this.props.showGridlines) {\n      styles.backgroundSize = '15px 15px';\n      styles.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\n    }\n\n    const boxItems = this.props.widgets.map((widget, index) => \n      <GridItem\n        key={index}\n        snapToGrid={this.props.snapToGrid}\n        {...widget}\n        onWidgetMove={this.props.onWidgetMove}\n        onWidgetEdit={this.props.onWidgetEdit}\n      />\n    );\n\n\n    return (\n      <div\n        className=\"grid-layout\"\n        style={styles} >\n        {boxItems}\n      </div>\n    )\n  }\n}\n\nexport default GridLayout;","\nimport React from 'react';\nimport AceEditor from 'react-ace';\n\nimport 'brace/mode/mysql';\nimport 'brace/theme/xcode';\n\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nimport GridLayout from '../components/GridLayout';\n\nconst options = [\n  { value: 'chocolate', label: 'Chocolate' },\n  { value: 'strawberry', label: 'Strawberry' },\n  { value: 'vanilla', label: 'Vanilla' }\n];\n\nconst widgets = [\n   {\n    id: 1,\n    name: 'title1',\n    x: 0,\n    y: 0,\n    width: 100,\n    height: 100\n  },\n  {\n    id: 2,\n    name: 'title2',\n    x: 100,\n    y: 100,\n    width: 100,\n    height: 100\n  }\n];\n\nclass Test extends React.PureComponent {\n\n  state = {\n    selectedOption: null,\n    data: [\n      {firstName: 'a1', lastName: 'b1'},\n      {firstName: 'a2', lastName: 'b2'},\n      {firstName: 'a3', lastName: 'b3'}\n    ]\n  }\n\n  onChange = (newValue) => {\n    console.log('change',newValue);\n  }\n\n  submit = () => {\n    console.log('submit', );\n  }\n\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption });\n    console.log(`Option selected:`, selectedOption);\n  }\n\n  editWidget = (widgetId) => {\n    console.log('editWidget', widgetId);\n  }\n\n  render() {\n    return (\n      <div>\n\n          <GridLayout \n            width={800}\n            height={600}\n            snapToGrid={false}\n            showGridlines={true}\n            widgets={widgets} />\n      </div>\n    )\n  }\n}\n\nexport default Test;\n","\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass EditDataSource extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {\n      id: 0,\n      name: '',\n      connectionUrl: '',\n      username: '',\n      password: '',\n      type: '',\n      ping: '',\n      mode: ''\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    console.log(\"id\", id);\n    let mode = 'Edit';\n    if (id === undefined) {\n      mode = 'New';\n    }\n    this.setState({\n      mode: mode\n    });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  save = (event) => {\n    event.preventDefault();\n    const ds = {\n      connectionUrl: this.state.connectionUrl,\n      username: this.state.username,\n      password: this.state.password,\n      name: this.state.name,\n      type: this.state.password,\n      ping: this.state.ping\n    };\n\n    const { router } = this.props;\n\n    axios.post('/ws/jdbcdatasource', ds)\n      .then(res => {\n        this.reset();\n        router.push('/datasources');\n      });\n  }\n\n  reset = () => {\n    this.setState(this.initialState);\n  }\n\n  ping = () => {\n    \n  }\n\n  render() {\n\n    return (\n      <div>\n        <h1>{this.state.mode} Data Source</h1>\n        \n\n        \n\n        <div>\n          <button type=\"primary\" onClick={this.save}>Save</button>\n          <button type=\"primary\" onClick={this.ping}>Ping</button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default EditDataSource;\n","import React from 'react';\n\nclass QuerySlicer extends React.Component {\n\n  state = {\n    isSelectAll: false,\n  }\n\n  handleChange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const isChecked = target.checked;\n\n    const newCheckBoxes = [...this.props.checkBoxes];\n    const index = newCheckBoxes.findIndex(x => x.value === name);\n    newCheckBoxes[index].isChecked = isChecked;\n    this.props.onChange(this.props.filterId, newCheckBoxes);\n  }\n\n  toggleSelectAll = () => {\n    const newIsSelectAll = !this.state.isSelectAll;\n    const newCheckBoxes = [...this.props.checkBoxes];\n    for (let i = 0; i < newCheckBoxes.length; i++) {\n      newCheckBoxes[i].isChecked = newIsSelectAll;\n    }\n    this.props.onChange(this.props.filterId, newCheckBoxes);\n\n    this.setState(prevState => ({\n      isSelectAll: !prevState.isSelectAll\n    }));\n  }\n\n  render() {\n    const checkBoxes = this.props.checkBoxes;\n    let checkBoxItems = [];\n    if (checkBoxes !== undefined && checkBoxes.length !== 0) {\n      checkBoxItems = this.props.checkBoxes.map((box, index) => \n        <div key={index}>\n          <input \n            type=\"checkbox\" \n            name={box.value} \n            value={box.value} \n            checked={box.isChecked} \n            onChange={this.handleChange}\n            />\n            {box.value}\n          <br/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <button onClick={this.toggleSelectAll}>Toggle Select All {this.state.isSelectAll}</button>\n        <div>\n          {checkBoxItems}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QuerySlicer;\n","import React from 'react';\n\nclass NumberRange extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        min\n        <input type=\"number\" name=\"min\" />\n        max\n        <input type=\"number\" name=\"max\" />\n      </div>\n    );\n  }\n}\n\nexport default NumberRange;","import React, { Component } from 'react';\nimport QuerySlicer from \"./QuerySlicer\";\nimport NumberRange from \"./NumberRange\";\n\nimport axios from 'axios';\n\n\nclass FilterViewPanel extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      filters: []\n    };\n  }\n\n  fetchFilters = (dashboardId) => {\n    if (dashboardId === null) {\n      return;\n    }\n\n    axios.get('/ws/filter/dashboard/' + dashboardId)\n      .then(res => {\n        const result = res.data;\n        this.setState({\n          filters: result,\n        }, this.queryFilters);\n      });\n  }\n\n  queryFilters = () => {\n    const filters = this.state.filters;\n    for (let i = 0; i < filters.length; i++) {\n      const filter = filters[i];\n      if (filter.type === 'slicer') {\n        const queryRequest = filter.data;\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\n          .then(res => {\n            const result = res.data;\n            const index = filters.findIndex(f => f.id === result.id);\n            const newFilters = [...this.state.filters];\n            const queryResult = JSON.parse(result.data);\n            const checkBoxes = [];\n\n            if (this.isArrayNotEmpty(queryResult)) {\n              for (let i = 0; i < queryResult.length; i++) {\n                const values = Object.values(queryResult[i]);\n                for (const val of values) {\n                  checkBoxes.push({\n                    value: val,\n                    isChecked: false\n                  });\n                }\n              }\n            }\n\n            newFilters[index].queryResult = queryResult;\n            newFilters[index].checkBoxes = checkBoxes;\n\n            this.setState({\n              filters: newFilters\n            });\n          });\n      }\n    }\n  }\n\n  isArrayNotEmpty(a) {\n    return a !== undefined && a.length !== 0 && Array.isArray(a);\n  }\n\n  renderFilterPanel = () => {\n    const filterPanel = [];\n    const filters = this.state.filters;\n    for (let i = 0; i < filters.length; i++) {\n      const filter = filters[i];\n      if (filter.type === 'slicer') {\n        const checkBoxes = filter.checkBoxes;\n        filterPanel.push(\n          (\n            <div className=\"filterCard\">\n              <div className=\"filter-card-title\">\n                {filter.name}\n                <div className=\"icon-button-group\">\n                  <div className=\"icon-btn\" onClick={() => this.edit(filter.id)}>\n                    <i className=\"fas fa-edit fa-fw\"></i>\n                  </div>\n                  <div className=\"icon-btn\" onClick={() => this.delete(filter.id)}>\n                    <i className=\"fas fa-trash-alt fa-fw\"></i>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <QuerySlicer \n                  key={i} \n                  filterId={filter.id} \n                  checkBoxes={checkBoxes} \n                  onChange={this.onQuerySlicerChange} \n                />\n              </div>\n            </div>\n          )\n        );\n      } else if (filter.type === 'number-range') {\n        filterPanel.push(<NumberRange key={i} />);\n      } else if (filter.type === 'date-range') {\n\n      }\n    }\n    return filterPanel;\n  }\n\n  edit = (filterId) => {\n    this.props.onEdit(filterId);\n  }\n\n  delete = (filterId) => {\n\n  }\n\n  onQuerySlicerChange = (filterId, checkBoxes) => {\n    const index = this.state.filters.findIndex(f => f.id === filterId);\n    const newFilters = [...this.state.filters];\n    newFilters[index].checkBoxes = [...checkBoxes];\n    this.setState({\n      filters: newFilters\n    });\n\n    // TODO: select all.\n    // const isSelectAll = checked.length === checkBoxes.length;    \n  }\n\n\n  run = () => {\n    console.log('run');\n  \n    // TODO: call props\n  }\n\n  render() {\n    const panelClass = this.props.show ? 'display-block' : 'display-none';\n\n    return (\n      <div className={`testPanel ${panelClass}`}>\n        <h5>FilterViewPanel</h5>\n        <button onClick={() => this.props.onClose()}>Close</button>\n        <button onClick={this.run}>Run</button>\n        <div className=\"filterViewPanel\">\n          {this.renderFilterPanel()}\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default FilterViewPanel;","\nimport React from 'react';\nimport axios from 'axios';\n\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nimport GridLayout from './GridLayout';\n\n\nclass WidgetViewPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dashboardId: null,\n      widgets: [],\n      snapToGrid: false,\n      showGridlines: true\n    };\n  }\n\n  fetchWidgets = (dashboardId) => {\n    if (dashboardId === null) {\n      return;\n    }\n\n    axios.get('/ws/widget/dashboard/' + dashboardId)\n      .then(res => {\n        const result = res.data;\n        this.setState({\n          widgets: result,\n        }, this.queryWidgets);\n      });\n  }\n\n  queryWidgets() {\n    const widgets = this.state.widgets;\n    for (let i = 0; i < widgets.length; i++) {\n      const widget = widgets[i];\n      axios.get('/ws/jdbcquery/widget/' + widget.id)\n        .then(res => {\n          const result = res.data;\n          const index = widgets.findIndex(w => w.id === result.id);\n          const newWidgets = [...this.state.widgets];\n          newWidgets[index].queryResult = JSON.parse(result.data);\n          this.setState({\n            widgets: newWidgets\n          });\n        });\n    }\n  }\n\n  handleChange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const isChecked = target.checked;\n    this.setState({\n      [name]: isChecked\n    })\n  }\n\n  onWidgetMove = (widget) => {\n    console.log('onWidgetMove', widget);\n\n    const index = this.state.widgets.findIndex(w => w.id === widget.id);\n    const newWidgets = [...this.state.widgets];\n    newWidgets[index].x = widget.x;\n    newWidgets[index].y = widget.y;\n    newWidgets[index].width = widget.width;\n    newWidgets[index].height = widget.height;\n\n    this.setState({\n      widgets: newWidgets\n    });\n  }\n\n  render() {\n\n    const widgetItems = this.state.widgets.map((widget, index) => {\n      \n      const headers = [];\n      const queryResult = widget.queryResult;\n      if (queryResult !== undefined && Array.isArray(queryResult)) {\n        const obj = queryResult[0];\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n          headers.push({\n            Header: key,\n            accessor: key\n          })\n        }\n      }\n\n      return (\n        <div key={index}>\n          <ReactTable\n            data={queryResult}\n            columns={headers}\n            minRows={0}\n            showPagination={false}\n          />\n        </div>);\n    });\n\n    return (\n      <div className=\"testPanel\">\n        <h3>WidgetViewPanel</h3>\n        <input \n          type=\"checkbox\" \n          name=\"snapToGrid\"\n          value=\"snapToGrid\"\n          checked={this.state.snapToGrid} \n          onChange={this.handleChange}\n          />\n          snapToGrid\n        <br/>\n        <input \n          type=\"checkbox\" \n          name=\"showGridlines\"\n          value=\"showGridlines\"\n          checked={this.state.showGridlines} \n          onChange={this.handleChange}\n          />\n          showGridlines\n        <br/>\n        \n        {widgetItems}\n        <div>\n          <GridLayout \n            width={800}\n            height={600}\n            snapToGrid={this.state.snapToGrid}\n            showGridlines={this.state.showGridlines}\n            widgets={this.state.widgets}\n            onWidgetMove={this.onWidgetMove}\n            onWidgetEdit={this.props.onWidgetEdit} />\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default WidgetViewPanel;","\nimport React from 'react';\n\nimport AceEditor from 'react-ace';\n\nimport 'brace/mode/mysql';\nimport 'brace/theme/xcode';\n\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\n\nimport axios from 'axios';\n\nimport * as webApi from '../api/WebApi';\n\nconst CHART_TYPES = ['table', 'pie'];\n\nclass WidgetEditPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      jdbcDataSources: [],\n      widgetId: null,\n      name: '',\n      sqlQuery: '',\n      jdbcDataSourceId: null,\n      queryResult: []\n    };\n  }\n\n  componentDidMount() {\n    console.log('WidgetEditPanel', 'componentDidMount');\n  }\n\n  fetchWidget = async (id) => {\n    const jdbcDataSources = await webApi.fetchDataSources();\n    this.setState({ \n      jdbcDataSources: jdbcDataSources \n    });\n\n    if (id === null) {\n      if (jdbcDataSources.length !== 0) {\n        this.setState({\n          jdbcDataSourceId: jdbcDataSources[0].id \n        });\n      }\n      this.setState({\n        widgetId: null\n      })\n    } else {\n      this.setState({\n        widgetId: id\n      })\n    }\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleAceEditorChange = (newValue) => {\n    this.setState({\n      sqlQuery: newValue\n    });\n  }\n\n  handleDataSourceChange = (event) => {\n    this.setState({ \n      jdbcDataSourceId: event.target.value\n    });\n  }\n\n  save = (event) => {\n    event.preventDefault();\n    const widget ={\n      id: this.state.widgetId,\n      name: this.state.name,\n      dashboardId: this.props.dashboardId,\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\n      sqlQuery: this.state.sqlQuery\n    };\n    \n    axios.post('/ws/widget', widget)\n      .then(res => {\n        \n      });\n  }\n\n  close = () => {\n    this.props.onClose();\n  }\n\n  runQuery = (event) => {\n    event.preventDefault();\n    const queryRequest ={\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\n      sqlQuery: this.state.sqlQuery\n    };\n\n    axios.post('/ws/jdbcquery/query', queryRequest)\n      .then(res => {\n        const result = res.data;\n        const queryResult = result;\n        this.setState({\n          queryResult: queryResult\n        });\n      });\n  }\n\n  render() {\n    const panelClass = this.props.show ? 'right-drawer display-block' : 'right-drawer display-none';\n\n    const dataSourceOptions = this.state.jdbcDataSources.map(ds =>\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\n    );\n\n    const chartOptionList = CHART_TYPES.map(o =>\n      <option value={o} key={o}>{o}</option>\n    );\n\n\n    const headers = [];\n    const queryResult = this.state.queryResult;\n    let queryResultItem;\n    if (queryResult !== undefined && queryResult.length !== 0 && Array.isArray(queryResult)) {\n      const obj = queryResult[0];\n      const keys = Object.keys(obj);\n      for (const key of keys) {\n        headers.push({\n          Header: key,\n          accessor: key\n        })\n      }\n\n      queryResultItem = (\n        <ReactTable\n          data={this.state.queryResult}\n          columns={headers}\n          minRows={0}\n          showPagination={false}\n        />\n      );\n    } else {\n      queryResultItem = (\n        <div>{queryResult}</div>\n      );\n    }\n\n    return (\n      <div className={panelClass}>\n        <h3>WidgetEditPanel: {this.state.widgetId}</h3>\n        <button onClick={() => this.props.onClose()}>Close</button>\n        <button onClick={this.save}>Save</button>\n        <button onClick={this.runQuery}>Run Query</button>\n\n        <form>\n          <label>Name</label>\n          <input \n            type=\"text\" \n            name=\"name\" \n            value={this.state.name}\n            onChange={this.handleInputChange} \n          />\n\n          <label>DataSource</label>\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\n            {dataSourceOptions}\n          </select>\n        \n          <label>SQL Query</label>\n          <AceEditor\n            style={{ marginTop: '8px' }}\n            value={this.state.sqlQuery}\n            mode=\"mysql\"\n            theme=\"xcode\"\n            name=\"blah2\"\n            onChange={this.handleAceEditorChange}\n            height={'300px'}\n            width={'100%'}\n            fontSize={15}\n            showPrintMargin={false}\n            showGutter={true}\n            highlightActiveLine={true}\n            setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: false,\n              showLineNumbers: true,\n              tabSize: 2,\n            }}\n          />\n\n          <label>Result</label>\n          {queryResultItem}\n\n          <label>Columns Mapping</label>\n          <div>column name, display name, data type</div>\n\n          <label>Chart Options</label>\n          <select value={this.state.optionValue} onChange={this.handleOptionChange}>\n            {chartOptionList}\n          </select>\n\n          <label><i class=\"fas fa-table\"></i> Table</label>\n          <div></div>\n\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\n          <div>Count \"users\" by \"last name\"</div>\n\n\n        </form>\n        \n      </div>\n    )\n  };\n}\n\nexport default WidgetEditPanel;","import React from 'react';\nimport AceEditor from 'react-ace';\n\nimport 'brace/mode/mysql';\nimport 'brace/theme/xcode';\n\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\n\nimport axios from 'axios';\n\nimport * as webApi from '../api/WebApi';\n\nconst QUERY_SLICER = 'slicer'\nconst TYPES = [QUERY_SLICER];\n\nclass FilterEditPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      jdbcDataSources: [],\n      filterId: null,\n      name: '',\n      type: 'slicer',\n      data: {},\n      sqlQuery: '',\n      jdbcDataSourceId: null,\n      queryResult: []\n    };\n  }\n\n  fetchFilter = async (id) => {\n    const jdbcDataSources = await webApi.fetchDataSources();\n    this.setState({ \n      jdbcDataSources: jdbcDataSources \n    });\n\n    if (id === null) {\n      if (jdbcDataSources.length !== 0) {\n        this.setState({\n          jdbcDataSourceId: jdbcDataSources[0].id \n        });\n      }\n      this.setState({\n        filterId: null\n      })\n    } else {\n      this.setState({\n        filterId: id\n      })\n    }\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleAceEditorChange = (newValue) => {\n    this.setState({\n      sqlQuery: newValue\n    });\n  }\n\n  handleDataSourceChange = (event) => {\n    this.setState({ \n      jdbcDataSourceId: event.target.value\n    });\n  }\n\n  handleTypeChange = (event) => {\n    this.setState({ \n      type: event.target.value\n    });\n  }\n\n  save = (event) => {\n    event.preventDefault();\n    const filter ={\n      id: this.state.filterId,\n      name: this.state.name,\n      type: this.state.type,\n      dashboardId: this.props.dashboardId,\n      data: {\n        jdbcDataSourceId: this.state.jdbcDataSourceId,\n        sqlQuery: this.state.sqlQuery\n      }\n    };\n    \n    axios.post('/ws/filter', filter)\n      .then(res => {\n        \n      });\n  }\n\n  runQuery = (event) => {\n    event.preventDefault();\n    const queryRequest ={\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\n      sqlQuery: this.state.sqlQuery\n    };\n\n    axios.post('/ws/jdbcquery/query', queryRequest)\n      .then(res => {\n        const result = res.data;\n        const queryResult = result;\n        this.setState({\n          queryResult: queryResult\n        });\n      });\n  }\n\n  render() {\n    const panelClass = this.props.show ? 'right-drawer display-block' : 'right-drawer display-none';\n    const dataSourceOptions = this.state.jdbcDataSources.map(ds =>\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\n    );\n\n    const typeOptions = TYPES.map(t =>\n      <option value={t} key={t}>{t}</option>\n    );\n\n    const headers = [];\n    const queryResult = this.state.queryResult;\n    let queryResultItem;\n    if (queryResult !== undefined && queryResult.length !== 0 && Array.isArray(queryResult)) {\n      const obj = queryResult[0];\n      const keys = Object.keys(obj);\n      for (const key of keys) {\n        headers.push({\n          Header: key,\n          accessor: key\n        })\n      }\n\n      queryResultItem = (\n        <ReactTable\n          data={this.state.queryResult}\n          columns={headers}\n          minRows={0}\n          showPagination={false}\n        />\n      );\n    } else {\n      queryResultItem = (\n        <div>{queryResult}</div>\n      );\n    }\n\n    return (\n      <div className={panelClass}>\n        <h3>FilterEditPanel: {this.state.filterId}</h3>\n        <button onClick={() => this.props.onClose()}>Close</button>\n        <button onClick={this.save}>Save</button>\n        <button onClick={this.runQuery}>Run</button>\n\n        <form>\n          <label>Name</label>\n          <input \n            type=\"text\" \n            name=\"name\" \n            value={this.state.name}\n            onChange={this.handleInputChange} \n          />\n\n          <label>Type</label>\n          <select value={this.state.type} onChange={this.handleTypeChange}>\n            {typeOptions}\n          </select>\n\n          <label>DataSource</label>\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\n            {dataSourceOptions}\n          </select>\n        \n          <label>SQL Query</label>\n          <AceEditor\n            style={{ marginTop: '8px' }}\n            value={this.state.sqlQuery}\n            mode=\"mysql\"\n            theme=\"xcode\"\n            name=\"blah2\"\n            onChange={this.handleAceEditorChange}\n            height={'300px'}\n            width={'100%'}\n            fontSize={15}\n            showPrintMargin={false}\n            showGutter={true}\n            highlightActiveLine={true}\n            setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: false,\n              showLineNumbers: true,\n              tabSize: 2,\n            }}\n          />\n\n          <label>Result</label>\n          {queryResultItem}\n\n        </form>\n\n      </div>\n    )\n  };\n}\n\nexport default FilterEditPanel;","\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport FilterViewPanel from '../components/FilterViewPanel';\nimport WidgetViewPanel from '../components/WidgetViewPanel';\nimport WidgetEditPanel from '../components/WidgetEditPanel';\nimport FilterEditPanel from '../components/FilterEditPanel';\n\nimport * as webApi from '../api/WebApi';\nimport axios from 'axios';\n\nconst FILTER_TYPES = [\n  { value: 'slicer', label: 'Slicer' },\n  { value: 'number-range', label: 'Number Range' },\n  { value: 'date-range', label: 'Date Range' }\n];\n\nconst mockDashboard = {\n  dashboardId: 1,\n  filters: [\n    {\n      type: 'slicer',\n      id: 1,\n      dashboardId: 1,\n      data: {\n        dataSourceId: 2,\n        sqlQuery: 'select name from table',\n        display: 'Name',\n        columns: [{\n            name: 'name',\n            param: 'name'\n          },\n          {\n            name: 'b',\n            param: ':column b'\n          }\n        ]\n      },\n      queryResult: ['s1', 's2', 's3']\n    }\n  ],\n  widgets: []\n}\n\n\nclass DashboardEditView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      showWidgetEditPanel: false,\n      showFilterEditPanel: false,\n      showFilterViewPanel: true,\n      jdbcDataSourceOptions: [],\n      dashboardId: 0,\n      name: '',\n      widgets: [],\n      filters: []\n    }\n\n    this.filterViewPanel = React.createRef();\n    this.filterEditPanel = React.createRef();\n    this.widgetViewPanel = React.createRef();\n    this.widgetEditPanel = React.createRef();\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    const dashboardId = id !== undefined ? id : null;\n    this.setState({\n      dashboardId: dashboardId\n    })\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  refresh = () => {\n    console.log('refresh');\n    const { dashboardId } = this.state;\n    this.filterViewPanel.current.fetchFilters(dashboardId);\n    this.widgetViewPanel.current.fetchWidgets(dashboardId);\n  }\n\n  save = () => {\n    console.log('save');\n\n  }\n\n  openFilterEditPanel = (filterId) => {\n    this.filterEditPanel.current.fetchFilter(filterId);\n    this.setState({\n      showFilterEditPanel: true\n    });\n  }\n\n  openWidgetEditPanel = (widgetId) => {\n    this.widgetEditPanel.current.fetchWidget(widgetId);\n    this.setState({\n      showWidgetEditPanel: true\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>\n          DashboardEditView: \n          <input \n          type=\"text\" \n          name=\"name\" \n          value={this.state.name}\n          onChange={this.handleInputChange} />\n        </h3>\n        <button onClick={this.refresh}>Refresh</button>\n        <button onClick={this.save}>Save</button>\n        <button onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\n        <button onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\n        <button onClick={() => this.setState({ showFilterViewPanel: true})}>Show Filters</button>\n        \n        <FilterViewPanel \n          ref={this.filterViewPanel} \n          onEdit={this.openFilterEditPanel}\n          show={this.state.showFilterViewPanel}\n          onClose={() => this.setState({ showFilterViewPanel: false})}\n        />\n        <WidgetViewPanel \n          ref={this.widgetViewPanel} \n          onWidgetEdit={this.openWidgetEditPanel}\n        />\n        <WidgetEditPanel \n          ref={this.widgetEditPanel} \n          show={this.state.showWidgetEditPanel}\n          onClose={() => this.setState({ showWidgetEditPanel: false})}\n          jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\n          dashboardId={this.state.dashboardId}\n        />\n        <FilterEditPanel\n          ref={this.filterEditPanel}\n          show={this.state.showFilterEditPanel}\n          onClose={() => this.setState({ showFilterEditPanel: false})}\n          jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\n          dashboardId={this.state.dashboardId}\n        />\n      </div>\n    )\n  };\n}\n\nexport default withRouter(DashboardEditView);\n","\nimport React, { Component } from 'react';\nimport FilterViewPanel from '../components/FilterViewPanel';\n\nclass SingleTest extends Component {\n\n  constructor(props) {\n    super(props);\n    this.filterViewPanel = React.createRef();\n  }\n\n  refresh = () => {\n    console.log('refresh');\n    this.filterViewPanel.current.fetchFilters();\n  }\n\n  render() {\n    return (\n      <div>\n        <h5>SingleTest</h5>\n        <FilterViewPanel ref={this.filterViewPanel}/>\n        <button onClick={this.refresh}>Refresh</button>\n      </div>\n    )\n  };\n}\n\nexport default SingleTest;","import React, { Component } from 'react';\nimport './App.css';\n\nimport { Route, Link } from \"react-router-dom\";\nimport Overview from './views/Overview';\nimport DataSources from './views/DataSources';\nimport Dashboards from './views/Dashboards';\nimport Test from './views/Test';\nimport EditDataSource from './views/EditDataSource';\nimport DashboardEditView from './views/DashboardEditView';\n\nimport SingleTest from './views/SingleTest';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: 'overview',\n      menuMin: ''\n    }\n  }\n\n  componentDidMount() {\n  }\n\n  handleClick = (e) => {\n    this.setState({\n      current: e.key,\n    });\n  }\n\n  toggleMenu = () => {\n    const menuMin = this.state.menuMin === '' ? 'menu-min' : '';\n    this.setState({\n      menuMin: menuMin\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Nav\">\n          <div className=\"Nav_title-bar\">\n            <div className=\"Nav_title\">Poli</div>\n          </div>\n          <div className=\"Nav_menu\">\n            <ul className=\"menu\">\n              <li>\n                <Link to=\"/overview\">\n                  <i className=\"fas fa-heartbeat fa-fw\"></i>\n                  <span className=\"menu-text\">Overview</span>\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/datasources\">\n                  <i className=\"fas fa-database fa-fw\"></i>\n                  <span className=\"menu-text\">Data Sources</span>\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/dashboards\">\n                  <i className=\"fas fa-chalkboard fa-fw\"></i>\n                  <span className=\"menu-text\">Dashboards</span>\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/test\">Test</Link>\n              </li>\n              <li>\n                <Link to=\"/single-test\">SingleTest</Link>\n              </li>\n              \n            </ul>\n            <div className=\"Nav__toggle-menu\">\n              <div onClick={this.toggleMenu}>toggle</div>\n            </div>\n          </div>\n        </div>\n        <div className={`Content ${this.state.menuMin}`}>\n          <Route exact path=\"/\" component={Overview} />\n          <Route exact path=\"/overview\" component={Overview} />\n          <Route exact path=\"/datasources\" component={DataSources} />\n          <Route exact path=\"/dashboards\" component={Dashboards} />\n          <Route exact path=\"/test\" component={Test} />\n          <Route exact path=\"/datasources/new\" component={EditDataSource} />\n          <Route exact path=\"/datasources/edit/:id\" component={EditDataSource} />\n          <Route exact path=\"/dashboard/new\" component={DashboardEditView} />\n          <Route exact path=\"/dashboard/edit/:id\" component={DashboardEditView} />\n          <Route exact path=\"/single-test\" component={SingleTest} />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/poli\">\n    <App />\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}