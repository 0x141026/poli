{"version":3,"sources":["api/WebApi.js","components/Modal.js","views/DataSource.js","components/Slicer.js","api/Util.js","components/NumberRange.js","api/Constants.js","components/FilterViewPanel.js","components/GridDraggable.js","components/GridResizable.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","api/EchartsApi.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/SingleTest.js","App.js","index.js"],"names":["fetchDataSources","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","t0","stop","this","apply","arguments","fetchFiltersByDashboardId","_ref3","_callee3","dashboardId","_context3","concat","_x2","_ref4","_callee4","url","_context4","_x3","Modal","_this","modalStatus","props","show","react_default","createElement","className","modalClass","onClick","onClose","children","React","Component","DataSource","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","target","value","name","setState","defineProperty","save","preventDefault","_this$state","state","showUpdatePassword","id","connectionUrl","username","password","ds","type","ping","put","then","res","post","closeEditPanel","delete","console","log","clearEditPanel","initialState","openEditPanel","showEditPanel","openDeletePanel","toggleUpdatePassword","prevState","jdbcDataSources","webApi","mode","_this2","_this$state2","jdbcDataSourceItems","map","index","key","passwordInput","onChange","components_Modal","row","Slicer","isSelectAll","searchValue","handleChange","isChecked","checked","newCheckBoxes","toConsumableArray","checkBoxes","findIndex","x","filterId","toggleSelectAll","newIsSelectAll","i","length","handleSearchValueChange","result","indexOf","push","checkBoxItems","undefined","box","isArrayEmpty","array","Array","isArray","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","FilterViewPanel","fetchFilters","filters","queryFilters","filter","Constants","queryRequest","queryResult","JSON","parse","f","newFilters","Util","values","_i2","val","_i3","renderFilterPanel","filterPanel","_loop","edit","remove","components_Slicer","onSlicerChange","onSingleValueChange","onEdit","splice","applyFilters","filterParams","paramValues","j","checkBox","param","onApplyFilters","WIDGET_BORDER","GridDraggable","onMouseDown","gridItemNode","ReactDOM","findDOMNode","assertThisInitialized","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","style","zIndex","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","width","boxHeight","height","Math","floor","left","top","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","removeWidget","onWidgetRemove","onTdPropsChange","rowInfo","column","instance","e","handleOriginal","renderWidgetContent","_this$props","chartType","widgetItem","headers","obj","keys","_i","Header","accessor","es","columns","minRows","showPagination","getTdProps","styles","marginRight","components_GridDraggable","components_GridResizable","GridLayout","showGridlines","backgroundSize","backgroundImage","boxItems","widgets","components_GridItem","assign","WidgetViewPanel","resizeGrid","gridWidth","widgetViewPanel","current","newWidgets","resizeWidgetsToActual","resizeWidgetsToBase","baseX","scaleToBase","baseWidth","actualX","scaleToActual","num","round","fetchWidgets","queryWidgets","params","w","createRef","ref","src_components_GridLayout","CHART_COLORS","getPieOption","legend","series","color","tooltip","orient","right","bottom","center","radius","WidgetEditPanel","fetchWidget","jdbcDataSourceId","sqlQuery","_x","handleAceEditorChange","newValue","handleDataSourceChange","handleChartTypeChange","close","runQuery","addFilterParam","newFilterParams","removeFilterParam","handleFilterChange","generateChart","aggrKey","aggrValue","chartOption","EchartsApi","queryResultItem","dataSourceOptions","filterOptions","filterParamItems","chartOptionList","o","lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","class","echarts_for_react_lib_default","option","FilterEditPanel","fetchFilter","handleTypeChange","useQuery","typeOptions","t","DashboardEditView","toggleAutoRefresh","autoRefreshTimerId","clearInterval","timerId","setInterval","now","Date","toTimeString","replace","lastRefreshed","refresh","filterViewPanel","_this$state3","isEditMode","openFilterEditPanel","filterEditPanel","showFilterViewPanel","showFilterEditPanel","openWidgetEditPanel","widgetEditPanel","showWidgetEditPanel","jdbcDataSourceOptions","match","statusButtonPanel","_this3","_this$state4","autoRefreshStatus","Fragment","components_WidgetViewPanel","components_FilterViewPanel","components_WidgetEditPanel","components_FilterEditPanel","withRouter","Dashboard","fetchBoards","dashboards","dashboard","history","view","dashboardRows","d","placeholder","Route","path","render","views_DashboardEditView","SingleTest","getOption","title","text","trigger","toolbox","feature","saveAsImage","grid","containLabel","xAxis","boundaryGap","yAxis","stack","areaStyle","normal","onChartClick","echarts","onChartLegendselectchanged","echart","onEvents","click","legendselectchanged","App","handleClick","menuItem","currentMenuItem","Link","to","Switch","exact","component","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.64dbbe5c.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst JSON_HEADER = {\n  headers: {\n    'Content-Type': 'application/json',\n  }\n};\n\nexport const fetchDataSources = async () => {\n  try {\n    const response = await axios.get('/ws/jdbcdatasource');\n    return response.data || [];\n  } catch (e) {\n    return null;\n  }\n};\n\nexport const fetchDashboardById = async (id) => {\n  return await get(`/ws/dashboard/${id}`);\n}\n\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\n}\n\nconst get = async (url) => {\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (e) {\n    return null;\n  }\n} \n\n\n","import React from 'react';\n\nclass Modal extends React.Component {\n\n  render() {\n    const modalStatus = this.props.show ? 'display-block' : 'display-none';\n    return (\n      <div className={`modal-overlay ${modalStatus}`}>\n        <div className={this.props.modalClass}>\n          <button onClick={() => this.props.onClose()}>Close</button>\n          <div className='modal-body'>\n            {this.props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;","\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport * as webApi from '../api/WebApi';\nimport Modal from '../components/Modal';\n\nclass DataSource extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      jdbcDataSources: [],\n      showEditPanel: false,\n      showUpdatePassword: false,\n      id: null,\n      name: '',\n      connectionUrl: '',\n      username: '',\n      password: '',\n      type: '',\n      ping: ''\n    };\n  }\n\n  get initialState() {\n    return {\n      showUpdatePassword: false,\n      id: null,\n      name: '',\n      connectionUrl: '',\n      username: '',\n      password: '',\n      type: '',\n      ping: ''\n    };\n  }\n\n  componentDidMount() {\n    // Fetch all datasources\n    this.fetchDataSources();\n    \n  }\n\n  async fetchDataSources() {\n    const jdbcDataSources = await webApi.fetchDataSources();\n    this.setState({ \n      jdbcDataSources: jdbcDataSources \n    });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  save = (event) => {\n    event.preventDefault();\n    const {\n      showUpdatePassword,\n      id,\n      connectionUrl,\n      username,\n      password,\n      name,\n      type,\n      ping,\n    } = this.state;\n\n    let ds = {\n      connectionUrl: connectionUrl,\n      username: username,\n      name: name,\n      type: type,\n      ping: ping\n    };\n\n    if (id !== null) {\n      ds.id = id;\n      if (showUpdatePassword) {\n        ds.password = password;\n      }\n\n      // Update\n      axios.put('/ws/jdbcdatasource', ds)\n        .then(res => {\n          this.fetchDataSources();\n        });\n    } else {\n      ds.password = password;\n\n      // New\n      axios.post('/ws/jdbcdatasource', ds)\n        .then(res => {\n          this.closeEditPanel();\n          this.fetchDataSources();\n        });\n    } \n  }\n\n  delete = (id) => {\n    console.log('delete', id);\n    axios.delete('/ws/jdbcdatasource/' + id)\n      .then(res => {\n        this.fetchDataSources();\n      });\n  }\n\n  ping = (id) => {\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\n      .then(res => {\n        console.log('ping', res.data);\n      });\n  }\n\n  clearEditPanel = () => {\n    this.setState(this.initialState);\n  }\n\n  openEditPanel = (ds) => {\n    if (ds !== null) {\n      this.setState({\n        showUpdatePassword: false,\n        id: ds.id,\n        connectionUrl: ds.connectionUrl,\n        username: ds.username,\n        password: ds.password,\n        name: ds.name,\n        type: ds.type,\n        ping: ds.ping\n      });\n    } else {\n      this.clearEditPanel();\n    }\n    \n    this.setState({\n      showEditPanel: true\n    }); \n  }\n\n  closeEditPanel = () => {\n    this.setState({\n      showEditPanel: false\n    });\n  }\n\n  openDeletePanel = () => {\n\n  }\n\n  toggleUpdatePassword = () => {\n    this.setState(prevState => ({\n      showUpdatePassword: !prevState.showUpdatePassword\n    })); \n  }\n\n  render() {\n    const { \n      showUpdatePassword,\n      id,\n      jdbcDataSources\n    } = this.state;\n\n    const jdbcDataSourceItems = jdbcDataSources.map((ds, index) => \n      <tr key={index}>\n        <td>{ds.name}</td>\n        <td>{ds.connectionUrl}</td>\n        <td>{ds.type}</td>\n        <td>{ds.username}</td>\n        <td>{ds.ping}</td>\n        <td><button onClick={() => this.openEditPanel(ds)}>update</button></td>\n        <td><button onClick={() => this.delete(ds.id)}>delete</button></td>\n        <td><button onClick={() => this.ping(ds.id)}>ping</button></td>\n      </tr>\n    );\n\n    let mode;\n    let passwordInput = (\n      <div>\n        <label>Password</label>\n        <input \n          type=\"password\" \n          name=\"password\" \n          value={this.state.password}\n          onChange={this.handleInputChange} />\n      </div>\n    );\n    if (id === null) {\n      mode = 'New';\n    } else {\n      mode = 'Update';\n      if (!showUpdatePassword) {\n        passwordInput = (\n          <button onClick={this.toggleUpdatePassword}>Update password</button>\n        );\n      }\n    }\n\n    return (\n      <div>\n        <h1>Data Sources</h1>\n        <div>\n          <h2>Table</h2>\n\n          <table>\n            <thead>\n            </thead>\n            <tbody>\n              {jdbcDataSourceItems}\n            </tbody>\n          </table>\n\n        </div>\n        <button onClick={() => this.openEditPanel(null)}>\n          Add\n        </button>\n\n        <Modal \n          show={this.state.showEditPanel}\n          onClose={this.closeEditPanel}\n          modalClass={'lg-modal-panel'} >\n\n          <div>\n            <h3>{mode}</h3>\n            <form>\n              <label>Name</label>\n              <input \n                type=\"text\" \n                name=\"name\" \n                value={this.state.name}\n                onChange={this.handleInputChange} />\n\n              <label>Connection Url</label>\n              <textarea\n                row=\"3\"\n                type=\"text\" \n                name=\"connectionUrl\" \n                value={this.state.connectionUrl}\n                onChange={this.handleInputChange} >\n              </textarea>\n\n              <label>Username</label>\n              <input \n                type=\"text\" \n                name=\"username\" \n                value={this.state.username}\n                onChange={this.handleInputChange} />\n              \n              {passwordInput}\n              <br/>\n\n              <label>Type</label>\n              <input \n                type=\"text\" \n                name=\"type\" \n                value={this.state.type}\n                onChange={this.handleInputChange} />\n\n              <label>Ping</label>\n              <input \n                type=\"text\" \n                name=\"ping\" \n                value={this.state.ping}\n                onChange={this.handleInputChange} />\n            </form>\n\n            <div>\n              <button onClick={this.save}>Save</button>\n            </div>\n          </div>\n\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default DataSource;\n","import React from 'react';\n\nclass Slicer extends React.Component {\n\n  state = {\n    isSelectAll: false,\n    searchValue: ''\n  }\n\n  handleChange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const isChecked = target.checked;\n\n    const newCheckBoxes = [...this.props.checkBoxes];\n    const index = newCheckBoxes.findIndex(x => x.value === name);\n    newCheckBoxes[index].isChecked = isChecked;\n    this.props.onChange(this.props.filterId, newCheckBoxes);\n  }\n\n  toggleSelectAll = () => {\n    const newIsSelectAll = !this.state.isSelectAll;\n    const newCheckBoxes = [...this.props.checkBoxes];\n    for (let i = 0; i < newCheckBoxes.length; i++) {\n      newCheckBoxes[i].isChecked = newIsSelectAll;\n    }\n    this.props.onChange(this.props.filterId, newCheckBoxes);\n\n    this.setState(prevState => ({\n      isSelectAll: !prevState.isSelectAll\n    }));\n  }\n\n  handleSearchValueChange = (event) => {\n    const searchValue = event.target.value;\n    if (searchValue) {\n      const result = [];\n      const { checkBoxes } = this.props;\n      for (let i = 0; i < checkBoxes.length; i++) {\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\n          result.push(checkBoxes[i]);\n        }\n      }\n    }\n\n    this.setState({\n      searchValue: searchValue\n    });\n\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\n    // TODO: If value is too long, add.. to the end.\n  }\n\n  render() {\n    const checkBoxes = this.props.checkBoxes;\n    let checkBoxItems = [];\n    if (checkBoxes !== undefined && checkBoxes.length !== 0) {\n      checkBoxItems = this.props.checkBoxes.map((box, index) => \n        <div key={index}>\n          <input \n            type=\"checkbox\" \n            name={box.value} \n            value={box.value} \n            checked={box.isChecked} \n            onChange={this.handleChange}\n            />\n            {box.value}\n          <br/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <button onClick={this.toggleSelectAll}>Toggle Select All {this.state.isSelectAll}</button>\n        <input \n            type=\"text\" \n            name=\"name\" \n            value={this.state.searchValue}\n            onChange={this.handleSearchValueChange} \n          />\n        \n        <div>\n          {checkBoxItems}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Slicer;\n","\nexport const isArrayEmpty = (array) => {\n  return !Array.isArray(array) || !array.length;\n};","import React from 'react';\n\nclass NumberRange extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        min\n        <input type=\"number\" name=\"min\" />\n        max\n        <input type=\"number\" name=\"max\" />\n      </div>\n    );\n  }\n}\n\nexport default NumberRange;","/**\r\n * Constants\r\n */\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];","import React, { Component } from 'react';\nimport Slicer from \"./Slicer\";\nimport NumberRange from \"./NumberRange\";\nimport * as Util from '../api/Util';\nimport * as Constants from '../api/Constants';\n\nimport axios from 'axios';\n\n\nclass FilterViewPanel extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      dashboardId: null,\n      filters: []\n    };\n  }\n\n  fetchFilters = (dashboardId) => {\n    if (dashboardId === null) {\n      return;\n    }\n\n    this.setState({\n      dashboardId: dashboardId\n    })\n\n    axios.get('/ws/filter/dashboard/' + dashboardId)\n      .then(res => {\n        const result = res.data;\n        this.setState({\n          filters: result,\n        }, this.queryFilters);\n      });\n  }\n\n  queryFilters = () => {\n    const { filters } = this.state;\n    for (let i = 0; i < filters.length; i++) {\n      const filter = filters[i];\n      if (filter.type === Constants.SLICER) {\n        const queryRequest = filter.data;\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\n          .then(res => {\n            const result = res.data;\n            const queryResult = JSON.parse(result.data);\n\n            const index = filters.findIndex(f => f.id === result.id);\n            const newFilters = [...this.state.filters];\n            newFilters[index].queryResult = queryResult;\n            const type = newFilters[index].type;\n            if (type === Constants.SLICER) {\n              const checkBoxes = [];\n              if (!Util.isArrayEmpty(queryResult)) {\n                for (let i = 0; i < queryResult.length; i++) {\n                  const values = Object.values(queryResult[i]);\n                  for (const val of values) {\n                    checkBoxes.push({\n                      value: val,\n                      isChecked: false\n                    });\n                  }\n                }\n              }\n\n              newFilters[index].checkBoxes = checkBoxes;\n            } else if (type === Constants.SINGLE_VALUE) {\n              const values = Object.values(queryResult);\n              let value = '';\n              for (const val of values) {\n                value = val;\n                break;\n              }\n              newFilters[index].value = value;\n            }\n\n            this.setState({\n              filters: newFilters\n            });\n          });\n      }\n    }\n  }\n\n  renderFilterPanel = () => {\n    const filterPanel = [];\n    const filters = this.state.filters;\n    for (let i = 0; i < filters.length; i++) {\n      const filter = filters[i];\n      if (filter.type === Constants.SLICER) {\n        const checkBoxes = filter.checkBoxes;\n        filterPanel.push(\n          (\n            <div className=\"filter-card\">\n              <div className=\"filter-card-title\">\n                {filter.name}\n                <div className=\"icon-button-group\">\n                  <div className=\"icon-btn\" onClick={() => this.edit(filter.id)}>\n                    <i className=\"fas fa-edit fa-fw\"></i>\n                  </div>\n                  <div className=\"icon-btn\" onClick={() => this.remove(filter.id)}>\n                    <i className=\"fas fa-trash-alt fa-fw\"></i>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <Slicer \n                  key={i} \n                  filterId={filter.id} \n                  checkBoxes={checkBoxes} \n                  onChange={this.onSlicerChange} \n                />\n              </div>\n            </div>\n          )\n        );\n      } else if (filter.type === Constants.SINGLE_VALUE) {\n        filterPanel.push(\n          (\n            <div className=\"filter-card\">\n              <div className=\"filter-card-title\">\n                {filter.name}\n                <div className=\"icon-button-group\">\n                  <div className=\"icon-btn\" onClick={() => this.edit(filter.id)}>\n                    <i className=\"fas fa-edit fa-fw\"></i>\n                  </div>\n                  <div className=\"icon-btn\" onClick={() => this.remove(filter.id)}>\n                    <i className=\"fas fa-trash-alt fa-fw\"></i>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <input \n                  type=\"text\"  \n                  value={filter.value}\n                  onChange={(event) => this.onSingleValueChange(filter.id, event)} \n                />\n              </div>\n            </div>\n          )\n        );\n      } else if (filter.type === 'date-range') {\n\n      }\n    }\n    return filterPanel;\n  }\n\n  edit = (filterId) => {\n    this.props.onEdit(filterId);\n  }\n\n  remove = (filterId) => {\n    axios.delete('/ws/filter/' + filterId)\n      .then(res => {\n        const index = this.state.filters.findIndex(f => f.id === filterId);\n        const newFilters = [...this.state.filters];\n        newFilters.splice(index, 1);\n        this.setState({\n          filters: newFilters\n        });\n      });\n  }\n\n  onSlicerChange = (filterId, checkBoxes) => {\n    const index = this.state.filters.findIndex(f => f.id === filterId);\n    const newFilters = [...this.state.filters];\n    newFilters[index].checkBoxes = [...checkBoxes];\n    this.setState({\n      filters: newFilters\n    });\n\n    // TODO: select all.\n    // const isSelectAll = checked.length === checkBoxes.length;    \n  }\n\n  onSingleValueChange = (filterId, event) => {\n    const { filters } = this.state;\n    const value = event.target.value;\n    const index = filters.findIndex(f => f.id === filterId);\n    const newFilters = [...filters];\n    newFilters[index].value = value;\n    this.setState({\n      filters: newFilters\n    });\n  }\n\n  applyFilters = () => {\n    console.log('applyFilters');\n    const { filters } = this.state;\n    const filterParams = [];\n    for (let i = 0; i < filters.length; i++) {\n      const filter = filters[i];\n      if (filter.type === Constants.SLICER) {\n        const checkBoxes = filter.checkBoxes;\n        const paramValues = [];\n        for (let j = 0; j < checkBoxes.length; j++) {\n          const checkBox = checkBoxes[j];\n          if (checkBox.isChecked) {\n            paramValues.push(checkBox.value);\n          }\n        }\n        filterParams.push({\n          param: filter.data.param,\n          value: paramValues\n        });\n      } else if (filter.type === Constants.SINGLE_VALUE) {\n        filterParams.push({\n          param: filter.data.param,\n          value: filter.value\n        });\n      }\n    }\n\n    this.props.onApplyFilters(filterParams);\n  }\n\n  render() {\n    return (\n      <div>\n        <h5>FilterViewPanel</h5>\n        <button onClick={this.applyFilters}>Run</button>\n        <div className=\"filterViewPanel\">\n          {this.renderFilterPanel()}\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default FilterViewPanel;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst WIDGET_BORDER = 2;\n\nclass GridDraggable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      xOffset: 0,\n      yOffset: 0\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\n    const yOffset = event.clientY - gridItemNode.offsetTop;\n\n    let boxes = document.getElementsByClassName(\"grid-box\");\n    for (let i = 0; i < boxes.length; i++) {\n        boxes[i].style.zIndex = 20;\n    }\n    gridItemNode.style.zIndex = 30;\n\n    const { ownerDocument } = gridItemNode;\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\n    this.setState({\n      xOffset: xOffset,\n      yOffset: yOffset\n    });\n\n    this.props.onMouseDown('drag');\n  }\n\n  onMouseUp = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n    this.props.onMouseUp();\n  }\n\n  onMouseMove = (event) => {\n    console.log('GridDraggable onMouseMove', event);\n    event.preventDefault();\n    if (this.props.mode !== 'drag') {\n      return; \n    }\n\n    let gridCell = 1;\n    if (this.props.snapToGrid) {\n      gridCell = 4;\n    }\n\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    let currentX = event.clientX - this.state.xOffset;\n    let currentY = event.clientY - this.state.yOffset;\n    \n    const containerNode = gridItemNode.parentNode;\n    const containerWidth = containerNode.clientWidth;\n    const containerHeight = containerNode.clientHeight;\n    \n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\n\n    if (currentX < 0) {\n      currentX = 0;\n    }\n    if (currentY < 0) {\n      currentY = 0;\n    }\n    if (currentX + boxWidth > containerWidth) {\n      currentX = containerWidth - boxWidth;\n    }\n    if (currentY + boxHeight > containerHeight) {\n      currentY = containerHeight - boxHeight;\n    }\n\n    currentX = Math.floor(currentX / gridCell) * gridCell;\n    currentY = Math.floor(currentY / gridCell) * gridCell;\n\n    gridItemNode.style.left = currentX + 'px';\n    gridItemNode.style.top = currentY + 'px';\n  }\n\n  render() {\n    return (\n      <div className=\"grid-draggable\"\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp}>\n      </div>\n    )\n  }\n}\n\nexport default GridDraggable;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst MIN_WIDTH = 30;\nconst MIN_HEIGHT = 30;\nconst WIDGET_BORDER = 2;\n\nclass GridResizable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentX: 0,\n      currentY: 0,\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (event) => {\n    console.log('onMouseDown', event);\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    const currentX = event.clientX;\n    const currentY = event.clientY;\n    \n    const { ownerDocument } = thisNode;\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\n    this.setState({\n      currentX: currentX,\n      currentY: currentY\n    });\n\n    this.props.onMouseDown('resize');\n  }\n\n  onMouseUp = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n    this.props.onMouseUp();\n  }\n\n  onMouseMove = (event) => {\n    console.log('GridResizer onMouseMove', event);\n    event.preventDefault();\n    if (this.props.mode !== 'resize') {\n      return; \n    }\n\n    let xOffset = event.clientX - this.state.currentX;\n    let yOffset = event.clientY - this.state.currentY;\n\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\n\n    const containerNode = gridItemNode.parentNode;\n    const containerWidth = containerNode.clientWidth;\n    const containerHeight = containerNode.clientHeight;\n\n    let newWidth = Math.floor(prevWidth + xOffset);\n    let newHeight = Math.floor(prevHeight + yOffset);\n\n    if (newWidth < MIN_WIDTH) {\n      newWidth = MIN_WIDTH;\n    }\n    \n    if (newHeight < MIN_HEIGHT) {\n      newHeight = MIN_HEIGHT;\n    }\n\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\n\n    if (newWidth +  left > containerWidth) {\n      newWidth = containerWidth - left;\n    }\n\n    if (newHeight + top > containerHeight) {\n      newHeight = containerHeight - top;\n    }\n\n    gridItemNode.style.width = newWidth + 'px';\n    gridItemNode.style.height = newHeight + 'px';\n\n    this.setState({\n      currentX: event.clientX,\n      currentY: event.clientY\n    });\n  }\n\n  render() {\n    return (\n      <div \n        className=\"grid-resizable\"\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp} >\n      </div>\n    )\n  }\n}\n\nexport default GridResizable;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GridDraggable from './GridDraggable';\nimport GridResizable from './GridResizable';\n\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nimport * as Util from '../api/Util';\nimport * as Constants from '../api/Constants';\n\n\nclass GridItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      x: this.props.x,\n      y: this.props.y,\n      mode: ''\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (mode) => {\n    console.log('GridItem onMouseDown', mode);\n    this.setState({\n      mode: mode\n    });\n  }\n\n  onMouseUp = () => {\n    console.log('GridItem onMouseUp');\n    this.setState({\n      mode: ''\n    });\n\n    const thisNode = ReactDOM.findDOMNode(this);\n    const x = thisNode.offsetLeft;\n    const y = thisNode.offsetTop;\n    const width = parseInt(thisNode.style.width, 10);\n    const height = parseInt(thisNode.style.height, 10);\n    const widgetId = this.props.id;\n\n    const widget = {\n      id: widgetId,\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n\n    this.props.onWidgetMove(widget);\n  }\n\n  onMouseMove = (event, mode, state) => {\n    console.log('GridItem onMouseMove', event);\n    event.preventDefault();   \n  }\n\n  editWidget = (widgetId) => {\n    console.log('editWidget', widgetId);\n    this.props.onWidgetEdit(widgetId);\n  }\n\n  removeWidget = (widgetId) => {\n    this.props.onWidgetRemove(widgetId);\n  }\n\n  onTdPropsChange = (state, rowInfo, column, instance) => {\n    return {\n      onClick: (e, handleOriginal) => {\n        console.log(\"A Td Element was clicked!\");\n        console.log(\"it produced this event:\", e);\n        console.log(\"It was in this column:\", column);\n        console.log(\"It was in this row:\", rowInfo);\n        console.log(\"It was in this table instance:\", instance);\n\n        // IMPORTANT! React-Table uses onClick internally to trigger\n        // events like expanding SubComponents and pivots.\n        // By default a custom 'onClick' handler will override this functionality.\n        // If you want to fire the original onClick handler, call the\n        // 'handleOriginal' function.\n        if (handleOriginal) {\n          handleOriginal();\n        }\n      }\n    };\n  }\n\n  renderWidgetContent = () => {\n    const { \n      chartType,\n      queryResult \n    } = this.props;\n    let widgetItem = (<div>NONE</div>);\n    if (chartType === Constants.TABLE) {\n\n      const headers = [];\n      if (!Util.isArrayEmpty(queryResult)) {\n        const obj = queryResult[0];\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n          headers.push({\n            Header: key,\n            accessor: key\n          })\n        }\n      }\n\n      widgetItem = (\n        <ReactTable\n          data={queryResult}\n          columns={headers}\n          minRows={0}\n          showPagination={false}\n          getTdProps={this.onTdPropsChange}\n        />\n      );\n    } else if (chartType === Constants.PIE) {\n\n    } \n\n    return widgetItem;\n  }\n\n  render() {\n    let styles = {\n      left: this.state.x,\n      top: this.state.y,\n      width: this.props.width,\n      height: this.props.height,\n      zIndex: 1\n    };\n\n    return (\n      <div className=\"grid-box\" style={styles}>\n        <div className=\"grid-box-title\">\n          {this.props.name}\n\n          <div className=\"icon-button-group\" style={{marginRight: '20px'}}>\n            <div className=\"icon-btn\" onClick={() => this.editWidget(this.props.id)}>\n              <i className=\"fas fa-edit fa-fw\"></i>\n            </div>\n            <div className=\"icon-btn\" onClick={() => this.removeWidget(this.props.id)}>\n              <i className=\"fas fa-trash-alt fa-fw\"></i>\n            </div>\n          </div>\n        </div>\n        <div className=\"grid-box-content\">\n          {this.renderWidgetContent()}\n        </div>\n\n        <GridDraggable \n          onMouseUp={this.onMouseUp}\n          onMouseDown={this.onMouseDown}\n          onMouseMove={this.onMouseMove}\n          mode={this.state.mode}\n          snapToGrid={this.props.snapToGrid} />\n\n        <GridResizable \n          onMouseUp={this.onMouseUp}\n          onMouseDown={this.onMouseDown}\n          onMouseMove={this.onMouseMove}\n          mode={this.state.mode} />\n      </div>\n    )\n  }\n}\n\nexport default GridItem;","import React from 'react';\n\nimport GridItem from './GridItem';\nimport './GridLayout.css';\n\nclass GridLayout extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    let styles = {\n      width: this.props.width + 'px',\n      height: this.props.height + 'px'\n    };\n\n    if (this.props.showGridlines) {\n      styles.backgroundSize = '15px 15px';\n      styles.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\n    }\n\n    const boxItems = this.props.widgets.map((widget, index) => \n      <GridItem\n        key={index}\n        snapToGrid={this.props.snapToGrid}\n        {...widget}\n        onWidgetMove={this.props.onWidgetMove}\n        onWidgetEdit={this.props.onWidgetEdit}\n        onWidgetRemove={this.props.onWidgetRemove}\n      />\n    );\n\n\n    return (\n      <div\n        className=\"grid-layout\"\n        style={styles} >\n        {boxItems}\n      </div>\n    )\n  }\n}\n\nexport default GridLayout;","\nimport React from 'react';\nimport axios from 'axios';\n\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nimport GridLayout from './GridLayout';\nimport * as Util from '../api/Util';\n\nclass WidgetViewPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      widgets: [],\n      gridWidth: 1200,\n      width: 1200,\n      height: 600,\n      snapToGrid: false,\n      showGridlines: true\n    };\n\n    this.widgetViewPanel = React.createRef();\n  }\n\n  componentDidMount() {\n  }\n\n  resizeGrid = () => {\n    const thisNode = this.widgetViewPanel.current;\n    const gridWidth = thisNode.clientWidth;\n    this.setState({\n      gridWidth: gridWidth - 20,\n    }, () => {\n      const { widgets } = this.state;\n      const newWidgets = [...widgets];\n      this.resizeWidgetsToActual(newWidgets);\n      this.setState({\n        widgets: newWidgets\n      });\n    });\n  }\n\n  resizeWidgetsToBase = (widgets) => {\n    for (let i = 0; i < widgets.length; i++) {\n      const baseX = this.scaleToBase(widgets[i].x);\n      const baseWidth = this.scaleToBase(widgets[i].width);\n      widgets[i].x = baseX;\n      widgets[i].width = baseWidth;\n    }\n  }\n\n  resizeWidgetsToActual = (widgets) => {\n    for (let i = 0; i < widgets.length; i++) {\n      const actualX = this.scaleToActual(widgets[i].x);\n      const gridWidth = this.scaleToActual(widgets[i].width);\n      widgets[i].x = actualX;\n      widgets[i].width = gridWidth;\n    }\n  }\n\n  scaleToActual = (num) => {\n    const {\n      width,\n      gridWidth\n    } = this.state;\n    return Math.round(num * gridWidth / width);\n  }\n\n  scaleToBase = (num) => {\n    const {\n      width,\n      gridWidth\n    } = this.state;\n    return Math.round(num * width / gridWidth);\n  }\n\n  fetchWidgets = (dashboardId, width, height, filterParams) => {\n    if (dashboardId === null) {\n      return;\n    }\n\n    axios.get('/ws/widget/dashboard/' + dashboardId)\n      .then(res => {\n        const result = res.data;\n        this.setState({\n          widgets: result,\n          width: width,\n          height: height\n        }, () => {\n          this.resizeGrid();\n          this.queryWidgets(filterParams);\n        });\n      });\n  }\n\n  queryWidgets = (filterParams) => {\n    console.log('queryWidgets', filterParams);\n    const params = filterParams === null ? [] : filterParams;\n    const { widgets } = this.state;\n    for (let i = 0; i < widgets.length; i++) {\n      const widget = widgets[i];\n      axios.post('/ws/jdbcquery/widget/' + widget.id, params)\n        .then(res => {\n          const result = res.data;\n          const index = widgets.findIndex(w => w.id === result.id);\n          const newWidgets = [...widgets];\n          newWidgets[index].queryResult = JSON.parse(result.data);\n          this.setState({\n            widgets: newWidgets\n          });\n        });\n    }\n  }\n\n  handleChange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const isChecked = target.checked;\n    this.setState({\n      [name]: isChecked\n    })\n  }\n\n  save = () => {\n    const { widgets } = this.state;\n    const newWidgets = [...widgets];\n    this.resizeWidgetsToBase(newWidgets);\n    console.log('save', newWidgets);\n  }\n\n  onWidgetMove = (widget) => {\n    console.log('onWidgetMove', widget);\n    const { widgets } = this.state;\n    const index = widgets.findIndex(w => w.id === widget.id);\n    const newWidgets = [...widgets];\n    newWidgets[index].x = widget.x;\n    newWidgets[index].y = widget.y;\n    newWidgets[index].width = widget.width;\n    newWidgets[index].height = widget.height;\n    this.setState({\n      widgets: newWidgets\n    });\n\n    // FIXME: use save button to update position and size of all widgets at the same time.\n    // axios.post('/ws/widget/position', widget)\n    //   .then(res => {\n    //  });\n      \n  }\n\n  onWidgetRemove = (widgetId) => {\n    axios.delete('/ws/widget/' + widgetId)\n      .then(res => {\n        const { widgets } = this.state;\n        const index = widgets.findIndex(w => w.id === widgetId);\n        const newWidgets = [...widgets];\n        newWidgets.splice(index, 1);\n        this.setState({\n          widgets: newWidgets\n        });\n      });\n  }\n\n  render() {\n    const widgetItems = this.state.widgets.map((widget, index) => {\n      \n      const headers = [];\n      const queryResult = widget.queryResult;\n      if (!Util.isArrayEmpty(queryResult)) {\n        const obj = queryResult[0];\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n          headers.push({\n            Header: key,\n            accessor: key\n          })\n        }\n      }\n\n      return (\n        <div key={index}>\n          <ReactTable\n            data={queryResult}\n            columns={headers}\n            minRows={0}\n            showPagination={false}\n          />\n        </div>);\n    });\n\n    return (\n      <div \n        ref={this.widgetViewPanel} \n        className=\"testPanel\">\n\n        <h3>WidgetViewPanel</h3>\n        <input \n          type=\"checkbox\" \n          name=\"snapToGrid\"\n          value=\"snapToGrid\"\n          checked={this.state.snapToGrid} \n          onChange={this.handleChange}\n          />\n          snapToGrid\n        <br/>\n        <input \n          type=\"checkbox\" \n          name=\"showGridlines\"\n          value=\"showGridlines\"\n          checked={this.state.showGridlines} \n          onChange={this.handleChange}\n          />\n          showGridlines\n        <br/>\n        \n        <GridLayout \n          width={this.state.gridWidth}\n          height={this.state.height}\n          snapToGrid={this.state.snapToGrid}\n          showGridlines={this.state.showGridlines}\n          widgets={this.state.widgets}\n          onWidgetMove={this.onWidgetMove}\n          onWidgetEdit={this.props.onWidgetEdit} \n          onWidgetRemove={this.onWidgetRemove} />\n      </div>\n    )\n  };\n}\n\nexport default WidgetViewPanel;","const CHART_COLORS = [\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\n];\n\nexport const getPieOption = (legend, series) => {\n  return {\n    color: CHART_COLORS,\n    tooltip: {\n    },\n    legend: {\n      data: legend,\n      orient: 'vertical',\n      right: 10,\n      top: 10,\n      bottom: 10\n    },\n    series: [\n      {\n        type:'pie',\n        center: ['50%', '50%'],\n        radius: '50%',\n        data: series\n      }\n    ]\n  }\n};\n","\nimport React from 'react';\n\nimport AceEditor from 'react-ace';\n\nimport 'brace/mode/mysql';\nimport 'brace/theme/xcode';\n\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\n\nimport axios from 'axios';\n\nimport * as webApi from '../api/WebApi';\nimport * as Util from '../api/Util';\nimport * as EchartsApi from '../api/EchartsApi';\nimport * as Constants from '../api/Constants';\n\nimport ReactEcharts from 'echarts-for-react';\n\n\nclass WidgetEditPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {\n      jdbcDataSources: [],\n      filters: [],\n      widgetId: null,\n      name: '',\n      sqlQuery: '',\n      jdbcDataSourceId: null,\n      queryResult: [],\n      filterId: null,\n      filterParams: [],\n      chartType: Constants.TABLE,\n      aggrKey: '',\n      aggrValue: '',\n      chartOption: {}\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  fetchWidget = async (widgetId, dashboardId) => {\n    this.setState(this.initialState);\n\n    const jdbcDataSources = await webApi.fetchDataSources();\n    this.setState({ \n      jdbcDataSources: jdbcDataSources \n    });\n\n    const filters = await webApi.fetchFiltersByDashboardId(dashboardId);\n    this.setState({ \n      filters: filters \n    });\n\n    if (widgetId === null) {\n      if (jdbcDataSources.length !== 0) {\n        this.setState({\n          jdbcDataSourceId: jdbcDataSources[0].id \n        });\n      }\n\n      if (filters.length !== 0) {\n        this.setState({\n          filterId: filters[0].id\n        });\n      }\n      this.setState({\n        widgetId: null\n      })\n    } else {\n      this.setState({\n        widgetId: widgetId\n      })\n      axios.get('/ws/widget/' + widgetId)\n        .then(res => {\n          const result = res.data;\n          this.setState({\n            widgetId: widgetId,\n            name: result.name,\n            x: result.x,\n            y: result.y,\n            width: result.width,\n            height: result.height,\n            sqlQuery: result.sqlQuery,\n            chartType: result.chartType,\n            jdbcDataSourceId: result.jdbcDataSourceId,\n          });\n        });\n    }\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleAceEditorChange = (newValue) => {\n    this.setState({\n      sqlQuery: newValue\n    });\n  }\n\n  handleDataSourceChange = (event) => {\n    this.setState({ \n      jdbcDataSourceId: event.target.value\n    });\n  }\n\n  handleChartTypeChange = (event) => {\n    this.setState({ \n      chartType: event.target.value\n    });\n  }\n\n  save = (event) => {\n    event.preventDefault();\n\n    const {\n      widgetId,\n      name,\n      jdbcDataSourceId,\n      sqlQuery,\n      chartType,\n    } = this.state;\n\n    const widget = {\n      name: name,\n      dashboardId: this.props.dashboardId,\n      chartType: chartType,\n      jdbcDataSourceId: jdbcDataSourceId,\n      sqlQuery: sqlQuery\n    }\n\n    if (widgetId !== null) {\n      widget.id = widgetId;\n    }\n\n    if (chartType === Constants.TABLE) {\n\n    } else if (chartType === Constants.PIE) {\n      widget.data = {\n        name: '1',\n        value: '1'\n      }\n    }\n\n    axios.post('/ws/widget', widget)\n      .then(res => {\n        \n      });\n  }\n\n  close = () => {\n    this.props.onClose();\n  }\n\n  runQuery = (event) => {\n    event.preventDefault();\n    const queryRequest ={\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\n      sqlQuery: this.state.sqlQuery\n    };\n\n    axios.post('/ws/jdbcquery/query', queryRequest)\n      .then(res => {\n        const result = res.data;\n        const queryResult = result;\n        this.setState({\n          queryResult: queryResult\n        });\n      });\n  }\n\n  addFilterParam = (event) => {\n    event.preventDefault();\n    const filterId = this.state.filterId;\n    const index = this.state.filterParams.findIndex(f => f === filterId);\n    if (index === -1) {\n      const newFilterParams = [...this.state.filterParams];\n      newFilterParams.push(filterId);\n      this.setState({\n        filterParams: newFilterParams\n      });\n    } \n  }\n\n  removeFilterParam = (filterId, event) => {\n    event.preventDefault();\n    const index = this.state.filterParams.findIndex(f => f === filterId);\n    if (index !== -1) {\n      const newFilterParams = [...this.state.filterParams];\n      newFilterParams.splice(index, 1);\n      this.setState({\n        filterParams: newFilterParams\n      });\n    } \n  }\n\n  handleFilterChange = (event) => {\n    this.setState({ \n      filterId: event.target.value\n    });\n  }\n\n  generateChart = (event) => {\n    event.preventDefault();\n    if (this.state.chartType === Constants.PIE) {\n      const { \n        aggrKey, \n        aggrValue, \n        queryResult \n      } = this.state;\n      if (!Util.isArrayEmpty(queryResult)) {\n        let legend = [];\n        let series = [];\n        for (let i = 0; i < queryResult.length; i++) {\n          const row = queryResult[i];\n          legend.push(row[aggrKey]);\n          series.push({\n            name: row[aggrKey],\n            value: row[aggrValue]\n          });\n        }\n        const chartOption = EchartsApi.getPieOption(legend, series);\n        this.setState({\n          chartOption: chartOption\n        })\n      }\n    }\n  }\n\n  render() {\n    const dataSourceOptions = this.state.jdbcDataSources.map(ds =>\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\n    );\n\n    const filterOptions = this.state.filters.map(f =>\n      <option value={f.id} key={f.id}>{f.id}</option>\n    );\n\n    const filterParamItems = this.state.filterParams.map(f =>\n      <div key={f}>\n        <div>value: {f}</div>\n        <button onClick={(event) => this.removeFilterParam(f, event)}>delete</button>\n      </div>\n    );\n\n    const chartOptionList = Constants.CHART_TYPES.map(o =>\n      <option value={o} key={o}>{o}</option>\n    );\n\n    const headers = [];\n    const queryResult = this.state.queryResult;\n    let queryResultItem;\n    if (!Util.isArrayEmpty(queryResult)) {\n      const obj = queryResult[0];\n      const keys = Object.keys(obj);\n      for (const key of keys) {\n        headers.push({\n          Header: key,\n          accessor: key\n        })\n      }\n\n      queryResultItem = (\n        <ReactTable\n          data={this.state.queryResult}\n          columns={headers}\n          minRows={0}\n          showPagination={false}\n        />\n      );\n    } else {\n      queryResultItem = (\n        <div>{queryResult}</div>\n      );\n    }\n\n    return (\n      <div>\n        <h3>WidgetEditPanel: {this.state.widgetId}</h3>\n        <button onClick={this.save}>Save</button>\n        <button onClick={this.runQuery}>Run Query</button>\n\n        <form>\n          <label>Name</label>\n          <input \n            type=\"text\" \n            name=\"name\" \n            value={this.state.name}\n            onChange={this.handleInputChange} \n          />\n\n          <label>DataSource</label>\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\n            {dataSourceOptions}\n          </select>\n        \n          <label>SQL Query</label>\n          <AceEditor\n            style={{ marginTop: '8px' }}\n            value={this.state.sqlQuery}\n            mode=\"mysql\"\n            theme=\"xcode\"\n            name=\"blah2\"\n            onChange={this.handleAceEditorChange}\n            height={'300px'}\n            width={'100%'}\n            fontSize={15}\n            showPrintMargin={false}\n            showGutter={true}\n            highlightActiveLine={true}\n            setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: false,\n              showLineNumbers: true,\n              tabSize: 2,\n            }}\n          />\n\n          <label>Result</label>\n          {queryResultItem}\n\n          <label>Filter Params</label>\n          <div>\n            <select value={this.state.filterId} onChange={this.handleFilterChange}>\n              {filterOptions}\n            </select>\n            <div>\n              {filterParamItems}\n            </div>\n            <button onClick={this.addFilterParam}>Add</button>\n            <div>\n              \n            </div>\n          </div>\n        \n\n          <label>Columns Mapping</label>\n          <div>column name, display name, data type</div>\n\n          <label>Chart Options</label>\n          <select value={this.state.chartType} onChange={this.handleChartTypeChange}>\n            {chartOptionList}\n          </select>\n\n          <label><i class=\"fas fa-table\"></i> Table</label>\n          <div></div>\n\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\n          <div>Count \"users\" by \"last name\"</div>\n          <label>Aggr Key</label>\n          <input \n            type=\"text\" \n            name=\"aggrKey\" \n            value={this.state.aggrKey}\n            onChange={this.handleInputChange} \n          />\n\n          <label>By Aggr Value</label>\n          <input \n            type=\"text\" \n            name=\"aggrValue\" \n            value={this.state.aggrValue}\n            onChange={this.handleInputChange} \n          />\n          <button onClick={this.generateChart}>Generete Chart</button>\n\n          <ReactEcharts \n            option={this.state.chartOption} \n            style={{height: '350px', width: '100%'}}  \n            className='react_for_echarts' />\n\n        </form>\n        \n      </div>\n    )\n  };\n}\n\nexport default WidgetEditPanel;","import React from 'react';\nimport AceEditor from 'react-ace';\n\nimport 'brace/mode/mysql';\nimport 'brace/theme/xcode';\n\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\n\nimport axios from 'axios';\n\nimport * as webApi from '../api/WebApi';\nimport * as Util from '../api/Util';\nimport * as Constants from '../api/Constants';\n\nclass FilterEditPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {\n      jdbcDataSources: [],\n      filterId: null,\n      name: '',\n      type: Constants.SLICER,\n      data: {},\n      sqlQuery: '',\n      jdbcDataSourceId: null,\n      queryResult: [],\n      param: '',\n    };\n  }\n\n  fetchFilter = async (filterId) => {\n    this.setState(this.initialState);\n\n    const jdbcDataSources = await webApi.fetchDataSources();\n    this.setState({ \n      jdbcDataSources: jdbcDataSources \n    });\n\n    if (filterId === null) {\n      if (jdbcDataSources.length !== 0) {\n        this.setState({\n          jdbcDataSourceId: jdbcDataSources[0].id \n        });\n      }\n      this.setState({\n        filterId: null\n      })\n    } else {\n      axios.get('/ws/filter/' + filterId)\n        .then(res => {\n          const result = res.data;\n          const data = result.data;\n          this.setState({\n            filterId: filterId,\n            name: result.name,\n            type: result.type,\n            data: data\n          });\n\n          if (result.type === Constants.SLICER) {\n            this.setState({\n              sqlQuery: data.sqlQuery,\n              jdbcDataSourceId: data.jdbcDataSourceId,\n              param: data.param\n            });\n          }\n        });\n      \n    }\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleAceEditorChange = (newValue) => {\n    this.setState({\n      sqlQuery: newValue\n    });\n  }\n\n  handleDataSourceChange = (event) => {\n    this.setState({ \n      jdbcDataSourceId: event.target.value\n    });\n  }\n\n  handleTypeChange = (event) => {\n    this.setState({ \n      type: event.target.value\n    });\n  }\n\n  save = (event) => {\n    event.preventDefault();\n    const {\n      type\n    } = this.state;\n\n    const filter = {\n      id: this.state.filterId,\n      name: this.state.name,\n      type: this.state.type,\n      dashboardId: this.props.dashboardId\n    };\n\n    if (type === Constants.SLICER) {\n      filter.data = {\n        jdbcDataSourceId: this.state.jdbcDataSourceId,\n        sqlQuery: this.state.sqlQuery,\n        param: this.state.param\n      }\n    } else if (type === Constants.SINGLE_VALUE) {\n      filter.data = {\n        useQuery: false,\n        jdbcDataSourceId: this.state.jdbcDataSourceId,\n        sqlQuery: this.state.sqlQuery,\n        param: this.state.param,\n      }\n    }\n\n    axios.post('/ws/filter', filter)\n      .then(res => {\n        \n      });\n  }\n\n  runQuery = (event) => {\n    event.preventDefault();\n    const queryRequest ={\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\n      sqlQuery: this.state.sqlQuery\n    };\n\n    axios.post('/ws/jdbcquery/query', queryRequest)\n      .then(res => {\n        const result = res.data;\n        const queryResult = result;\n        this.setState({\n          queryResult: queryResult\n        });\n      });\n  }\n\n  render() {\n\n    const { \n      queryResult,\n      jdbcDataSources\n    } = this.state;\n\n    const dataSourceOptions = jdbcDataSources.map(ds =>\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\n    );\n\n    const typeOptions = Constants.FILTER_TYPES.map(t =>\n      <option value={t} key={t}>{t}</option>\n    );\n\n    const headers = [];\n    let queryResultItem;\n    if (!Util.isArrayEmpty(queryResult)) {\n      console.log('queryResult', queryResult);\n      const obj = queryResult[0];\n      const keys = Object.keys(obj);\n      for (const key of keys) {\n        headers.push({\n          Header: key,\n          accessor: key\n        })\n      }\n\n      queryResultItem = (\n        <ReactTable\n          data={this.state.queryResult}\n          columns={headers}\n          minRows={0}\n          showPagination={false}\n        />\n      );\n    } else {\n      queryResultItem = (\n        <div>{queryResult}</div>\n      );\n    }\n\n    return (\n      <div>\n        <h3>FilterEditPanel: {this.state.filterId}</h3>\n        <button onClick={this.save}>Save</button>\n        <button onClick={this.runQuery}>Run</button>\n\n        <form>\n          <label>Name</label>\n          <input \n            type=\"text\" \n            name=\"name\" \n            value={this.state.name}\n            onChange={this.handleInputChange} \n          />\n\n          <label>Type</label>\n          <select value={this.state.type} onChange={this.handleTypeChange}>\n            {typeOptions}\n          </select>\n\n          <label>DataSource</label>\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\n            {dataSourceOptions}\n          </select>\n        \n          <label>SQL Query</label>\n          <AceEditor\n            style={{ marginTop: '8px' }}\n            value={this.state.sqlQuery}\n            mode=\"mysql\"\n            theme=\"xcode\"\n            name=\"blah2\"\n            onChange={this.handleAceEditorChange}\n            height={'300px'}\n            width={'100%'}\n            fontSize={15}\n            showPrintMargin={false}\n            showGutter={true}\n            highlightActiveLine={true}\n            setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: false,\n              showLineNumbers: true,\n              tabSize: 2,\n            }}\n          />\n\n          <label>Result</label>\n          {queryResultItem}\n\n          <label>Param</label>\n          <input \n            type=\"text\" \n            name=\"param\" \n            value={this.state.param}\n            onChange={this.handleInputChange} \n          />\n\n        </form>\n\n      </div>\n    )\n  };\n}\n\nexport default FilterEditPanel;","\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport FilterViewPanel from '../components/FilterViewPanel';\nimport WidgetViewPanel from '../components/WidgetViewPanel';\nimport WidgetEditPanel from '../components/WidgetEditPanel';\nimport FilterEditPanel from '../components/FilterEditPanel';\nimport Modal from '../components/Modal';\n\nimport './Dashboard.css';\n\nimport * as webApi from '../api/WebApi';\nimport axios from 'axios';\n\nclass DashboardEditView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      showWidgetEditPanel: false,\n      showFilterEditPanel: false,\n      showFilterViewPanel: false,\n      isEditMode: false,\n      autoRefreshTimerId: '',\n      lastRefreshed: '',\n      jdbcDataSourceOptions: [],\n      dashboardId: 0,\n      name: '',\n      width: 0,\n      height: 0,\n      widgets: [],\n      filters: []\n    }\n\n    this.filterViewPanel = React.createRef();\n    this.filterEditPanel = React.createRef();\n    this.widgetViewPanel = React.createRef();\n    this.widgetEditPanel = React.createRef();\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    const dashboardId = id !== undefined ? id : null;\n    console.log('DashboardEditView', dashboardId);\n    if (dashboardId === null) {\n      this.setState({\n        dashboardId: null\n      });\n    } else {\n      axios.get(`/ws/dashboard/${dashboardId}`)\n        .then(res => {\n          const result = res.data;\n          this.setState({\n            dashboardId: result.id,\n            name: result.name,\n            width: result.width,\n            height: result.height,\n          });\n        });\n    }\n  }\n\n  componentWillUnmount() {\n    const { autoRefreshTimerId } = this.state;\n    if (autoRefreshTimerId) {\n      clearInterval(autoRefreshTimerId);\n    }\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  toggleAutoRefresh = () => {\n    const { autoRefreshTimerId } = this.state;\n    if (autoRefreshTimerId) {\n      clearInterval(autoRefreshTimerId);\n      this.setState({\n        autoRefreshTimerId: ''\n      });\n    } else {\n      const { \n        dashboardId,\n        width,\n        height\n      } = this.state;\n      const timerId = setInterval(() => {\n        this.widgetViewPanel.current.fetchWidgets(dashboardId, width, height, null);\n        const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\n        this.setState({\n          lastRefreshed: now\n        });\n      }, 5000);\n      this.setState({\n        autoRefreshTimerId: timerId\n      });\n    }\n  }\n\n  refresh = () => {\n    console.log('refresh');\n    const { \n      dashboardId,\n      width,\n      height\n    } = this.state;\n    this.filterViewPanel.current.fetchFilters(dashboardId);\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, width, height, null);\n  }\n\n  save = () => {\n    console.log('save');\n    const {\n      dashboardId,\n      name,\n      width,\n      height\n    } = this.state;\n\n    const dashboard = {\n      dashboardId: dashboardId,\n      name: name,\n      width: width,\n      height: height\n    };\n\n    this.setState({\n      isEditMode: false\n    });\n  }\n\n  edit = () => {\n    this.setState({\n      isEditMode: true\n    });\n  }\n\n  delete = () => {\n    const { dashboardId } = this.state;\n    console.log('delete', dashboardId);\n    axios.delete('/ws/dashboard/' + dashboardId)\n      .then(res => {\n        //this.fetchBoards();\n      });\n  }\n\n\n  openFilterEditPanel = (filterId) => {\n    this.filterEditPanel.current.fetchFilter(filterId);\n    this.setState({\n      showFilterViewPanel: false,\n      showFilterEditPanel: true\n    });\n  }\n\n  openWidgetEditPanel = (widgetId) => {\n    const { dashboardId } = this.state;\n    this.widgetEditPanel.current.fetchWidget(widgetId, dashboardId);\n    this.setState({\n      showWidgetEditPanel: true\n    });\n  }\n\n  applyFilters = (filterParams) => {\n    this.widgetViewPanel.current.queryWidgets(filterParams);\n  }\n\n  render() {\n    const {\n      autoRefreshTimerId,\n      lastRefreshed,\n      isEditMode\n    } = this.state;\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\n\n    let statusButtonPanel;\n    if (isEditMode) {\n      statusButtonPanel = (\n        <React.Fragment>\n          <button onClick={this.save}>Save</button>\n          <button onClick={this.delete}>Delete</button>\n          <button onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\n          <button onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\n        </React.Fragment>\n      );\n    } else {\n      statusButtonPanel = (\n        <React.Fragment>\n          <button onClick={this.edit}>Edit</button>\n          <button onClick={() => this.setState({ showFilterViewPanel: true })}>Show Filters</button>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <div>\n        <h3>\n          <input \n          type=\"text\" \n          name=\"name\" \n          value={this.state.name}\n          onChange={this.handleInputChange} />\n        </h3>\n        <button onClick={this.toggleAutoRefresh}>toggleAutoRefresh: {autoRefreshStatus} - {lastRefreshed}</button>\n        <button onClick={this.refresh}>Refresh</button>\n        \n        {statusButtonPanel}\n        \n        <div className=\"dashboard-content-widget-panel\">\n          <WidgetViewPanel \n            ref={this.widgetViewPanel} \n            onWidgetEdit={this.openWidgetEditPanel}\n          />\n        </div>\n        <div className=\"dashboard-content-filter-panel\">\n          <FilterViewPanel \n            ref={this.filterViewPanel} \n            onEdit={this.openFilterEditPanel}\n            onApplyFilters={this.applyFilters}\n          />\n        </div>\n\n        <Modal \n          show={this.state.showWidgetEditPanel}\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\n          modalClass={'lg-modal-panel'} >\n          <WidgetEditPanel \n            ref={this.widgetEditPanel} \n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\n            dashboardId={this.state.dashboardId}\n          />\n        </Modal>\n\n        <Modal \n          show={this.state.showFilterEditPanel}\n          onClose={() => this.setState({ showFilterEditPanel: false })}\n          modalClass={'lg-modal-panel'} >\n          <FilterEditPanel\n            ref={this.filterEditPanel}\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\n            dashboardId={this.state.dashboardId}\n          />\n        </Modal>\n\n      </div>\n    )\n  };\n}\n\nexport default withRouter(DashboardEditView);\n","\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport axios from 'axios';\nimport './Dashboard.css';\n\nimport { Route } from \"react-router-dom\";\nimport DashboardEditView from './DashboardEditView';\nimport Modal from '../components/Modal';\n\n\nclass Dashboard extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {\n      searchValue: '',\n      dashboards: [],\n      showEditPanel: false,\n      name: '',\n      width: 1200,\n      height: 800\n    };\n  }\n\n  componentDidMount() {\n    this.fetchBoards();\n  }\n\n  fetchBoards = () => {\n    axios.get('/ws/dashboard')\n      .then(res => {\n        const dashboards = res.data;\n        this.setState({ \n          dashboards: dashboards \n        });\n      });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  save = () => {\n    const {\n      name,\n      width,\n      height\n    } = this.state;\n\n    const dashboard = {\n      name: name,\n      width: width,\n      height: height\n    };\n\n    axios.post('/ws/dashboard', dashboard)\n      .then(res => {\n        const dashboardId = res.data;\n        this.setState({ \n          showEditPanel: false \n        });\n        this.fetchBoards();\n        this.props.history.push(`/dashboard/${dashboardId}`);\n      });\n  }\n\n  view = (dashboardId) => {\n    this.props.history.push(`/dashboard/${dashboardId}`);\n  }\n\n  render() {\n    const dashboardRows = this.state.dashboards.map((d, index) => \n      <div key={index} className=\"dashboard-item\" onClick={() => this.view(d.id)}>\n        <div>{d.id} {d.name}</div>\n      </div>\n    );\n\n    return (\n      <div>\n        <div className=\"dashboard-sidebar\">\n          <button onClick={() => this.setState({ showEditPanel: true })}>Add</button>\n          <label>Search</label>\n          <input \n            type=\"text\" \n            name=\"searchValue\" \n            value={this.state.searchValue}\n            placeholder=\"Dashboard\"\n            onChange={this.handleInputChange} />\n          {dashboardRows}\n        </div>\n        <div className=\"dashboard-content\">\n          <Route path=\"/dashboard/:id\" render={(props) => <DashboardEditView key={props.match.params.id} />} />\n        </div>\n\n        <Modal \n          show={this.state.showEditPanel}\n          onClose={() => this.setState({ showEditPanel: false })}\n          modalClass={'lg-modal-panel'} >\n          <div>New dashboard</div>\n          <button onClick={this.save}>Save</button>\n          <form>\n            <label>Name</label>\n            <input \n              type=\"text\" \n              name=\"name\" \n              value={this.state.name}\n              onChange={this.handleInputChange} />\n\n            <label>Width</label>\n            <input \n              type=\"text\" \n              name=\"width\" \n              value={this.state.width}\n              onChange={this.handleInputChange} />\n\n            <label>Height</label>\n            <input \n              type=\"text\" \n              name=\"height\" \n              value={this.state.height}\n              onChange={this.handleInputChange} />\n            \n          </form>\n        </Modal>\n\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Dashboard);\n","\nimport React, { Component } from 'react';\nimport ReactEcharts from 'echarts-for-react';\n\nconst CHART_COLORS = [\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\n];\n\nclass SingleTest extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  getOption = () => {\n    return {\n      color: CHART_COLORS,\n      title: {\n        text: 'Test'\n      },\n      tooltip : {\n        trigger: 'axis'\n      },\n      legend: {\n        data:['C1','C2','C3']\n      },\n      toolbox: {\n        feature: {\n          saveAsImage: {}\n        }\n      },\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n      },\n      xAxis : [\n        {\n          type : 'category',\n          boundaryGap : false,\n          data : ['Mon','Tue','Wed','Thu','Fri','Sat','Sun']\n        }\n      ],\n      yAxis : [\n        {\n          type : 'value'\n        }\n      ],\n      series : [\n        {\n          name:'C1',\n          type:'line',\n          stack: 'Total',\n          areaStyle: {normal: {}},\n          data:[120, 132, 101, 134, 90, 230, 210]\n        },\n        {\n          name:'C2',\n          type:'line',\n          stack: 'Total',\n          areaStyle: {normal: {}},\n          data:[220, 182, 191, 234, 290, 330, 310]\n        },\n        {\n          name:'C3',\n          type:'line',\n          stack: 'Total',\n          areaStyle: {normal: {}},\n          data:[150, 232, 201, 154, 190, 330, 410]\n        }\n      ]\n    };\n  };\n\n  onChartClick = (param, echarts) => {\n    console.log('onChartClick', param, echarts);\n  };\n\n  onChartLegendselectchanged = (param, echart) => {\n    console.log('onChartLegendselectchanged', param, echart);\n  };\n\n\n  render() {\n    let onEvents = {\n      'click': this.onChartClick,\n      'legendselectchanged': this.onChartLegendselectchanged\n    };\n\n    return (\n      <div>\n        <h5>SingleTest</h5>\n        <div style={{width: '500px'}}>\n          <ReactEcharts \n            option={this.getOption()} \n            style={{height: '350px', width: '100%'}}  \n            className='react_for_echarts'\n            onEvents={onEvents} />\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default SingleTest;","import React, { Component } from 'react';\nimport './App.css';\n\nimport { Route, Link, Switch } from \"react-router-dom\";\nimport DataSource from './views/DataSource';\nimport Dashboard from './views/Dashboard';\nimport SingleTest from './views/SingleTest';\n\nconst menuItems = ['datasource', 'dashboard', 'single-test'];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentMenuItem: 'dashboard'\n    }\n  }\n\n  handleClick = (menuItem) => {\n    this.setState({\n      menuItem: menuItem\n    });\n  }\n\n  render() {\n    const {\n      currentMenuItem\n    } = this.state;\n    \n    return (\n      <div className=\"app\">\n        <div className=\"app-nav\">\n          <div className=\"app-name\">Poli</div>\n          <ul className=\"app-nav-menu\">\n            <li>\n              <Link to=\"/datasource\" onClick={(e) => this.handleClick('datasource')}>\n                <i className=\"fas fa-database fa-fw\"></i>\n                <span className=\"app-nav-menu-text\">Data Source</span>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/dashboard\" onClick={(e) => this.handleClick('dashboard')}>\n                <i className=\"fas fa-chalkboard fa-fw\"></i>\n                <span className=\"app-nav-menu-text\">Dashboard</span>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/single-test\" onClick={(e) => this.handleClick('single-test')}>\n                <span className=\"app-nav-menu-text\">Single</span>\n              </Link>\n            </li>\n          </ul>\n        </div>\n        <div className=\"app-content\">\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route exact path=\"/datasource\" component={DataSource} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/single-test\" component={SingleTest} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/poli\">\n    <App />\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}