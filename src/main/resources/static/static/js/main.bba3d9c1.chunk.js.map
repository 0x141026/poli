{"version":3,"sources":["api/AuthStore.js","views/Login.js","api/WebApi.js","components/Modal.js","components/Toast.js","views/DataSource.js","components/Checkbox.js","components/Slicer.js","api/Util.js","components/NumberRange.js","api/Constants.js","components/FilterViewPanel.js","components/ColorPicker.js","components/GridDraggable.js","components/GridResizable.js","api/EchartsApi.js","components/TableWidget.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/Tabs.js","components/Select.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/DashboardFullScreenView.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["api_AuthStore","AuthStore","Object","classCallCheck","this","_sysRole","_username","sysRole","username","Login","props","_this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","tryLogin","axios","post","then","res","data","login","_this$state","state","password","user","history","push","errorMsg","react_default","a","createElement","Fragment","className","type","onChange","onClick","React","Component","withRouter","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","concat","onClose","index_es","icon","size","Toast","message","showToast","setTimeout","hide","_toastRef","assertThisInitialized","toastStatus","DataSource","save","showUpdatePassword","id","connectionUrl","driverClassName","ping","ds","put","closeEditPanel","catch","error","console","log","result","clearEditPanel","initialState","openEditPanel","showEditPanel","confirmDelete","_this$state$objectToD","objectToDelete","delete","closeConfirmDeletionPanel","openConfirmDeletionPanel","datasource","showConfirmDeletionPanel","toggleUpdatePassword","prevState","clearSearch","searchValue","jdbcDataSources","webApi","_this2","_this$state2","_this$state2$jdbcData","_this$state2$objectTo","mode","jdbcDataSourceItems","_loop","i","includes","key","length","placeholder","style","width","src_components_Modal","rows","margin","Checkbox","toggle","checked","_this$props2","checkmarkBoxStyle","backgroundColor","Slicer","isSelectAll","toggleSelectAll","newIsSelectAll","newCheckBoxes","toConsumableArray","checkBoxes","isChecked","filterId","handleSearchValueChange","indexOf","handleCheckBoxChange","index","findIndex","x","_this$props$checkBoxe","checkBoxItems","map","box","src_components_Checkbox","jsonToArray","json","array","JSON","parse","e","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","DEFAULT_FILTER_VIEW_WIDTH","DEFAULT_DASHBOARD_HEIGHT","FilterViewPanel","fetchFilters","dashboardId","filters","queryFilters","filter","Constants","queryRequest","queryResult","queryResultData","Util","f","newFilters","_arr","values","_i2","val","_arr2","_i3","renderFilterPanel","filterPanel","filterComponent","src_components_Slicer","onSlicerChange","onSingleValueChange","isEditMode","edit","fixedWidth","onEdit","applyFilters","_this$state$filters","filterParams","filterParam","_filter$checkBoxes","paramValues","j","checkBox","remark","param","onApplyFilters","splice","ColorPicker","handleClick","showPalette","handleClose","handleChange","color","rgb","rgba","r","g","b","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","WIDGET_BORDER","GridDraggable","onMouseDown","preventDefault","gridItemNode","ReactDOM","findDOMNode","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","CHART_COLORS","getPieOption","pieKey","pieValue","legend","series","row","tooltip","orient","center","radius","getPieOptionTemplate","TableWidget","_this$props$data","_this$props$columns","columns","_this$props$drillThro","drillThrough","columnHeaders","forEach","column","columnName","header","Header","accessor","d","Cell","href","es","defaultPageSize","previousText","nextText","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","instance","handleOriginal","drills","widgetDrillThrough","onChartClick","echarts","onChartLegendselectchanged","echart","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","_this$props$queryResu","widgetItem","src_components_TableWidget","chartOption","EchartsApi","echarts_for_react_lib_default","option","onEvents","_this$props2$style","_style$showBorder","showBorder","borderStyle","styles","border","marginRight","components_GridDraggable","components_GridResizable","GridLayout","_this$props$widgets","widgets","showGridlines","backgroundSize","backgroundImage","boxItems","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","isResizeToBase","preGridWidth","gridWidth","newWidgets","resizeWidgetsToBase","resizeWidgetsToActual","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryWidgets","params","w","handleHeightChange","onHeightChange","onBackgroundColorChange","saveWidgets","stringify","widgetViewWidth","components_ColorPicker","src_components_GridLayout","Tabs","handleTabClick","activeTab","_this$props$children","tabHeaders","tabContent","active","Select","handleOptionChange","_this$props$options","options","optionValue","optionDisplay","optionList","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","_result$data","sqlQuery","jdbcDataSourceId","runQuery","_x","_x2","objectSpread","handleAceEditorChange","newValue","handleIntegerOptionChange","intValue","onSave","addDrillThrough","_this$state3","drillColumnName","drillDashboardId","newDrills","removeDrillThrough","drill","generateChart","_this$state4","_this$state4$queryRes","renderChartPreview","_this$state5","_this$state5$queryRes","chartPreview","_this$state6","class","components_Select","_this$state7","_this$state7$jdbcData","_this$state7$drillDas","drillItems","columnItems","col","dataType","src_components_Tabs","react_ace_lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","FilterEditPanel","fetchFilter","useQuery","_this$state2$queryRes","requireSql","DashboardEditView","loadViewByDashboardName","url","location","search","URLSearchParams","dashboardName","showFilterViewPanel","pageWidth","getPageWidth","isReadOnly","refresh","toggleAutoRefresh","autoRefreshTimerId","clearInterval","refreshInterval","interval","timerId","setInterval","filterViewPanel","current","updateLastRefreshed","refreshWidgetView","refreshFilterView","widgetViewPanel","now","Date","toTimeString","replace","lastRefreshed","dashboard","onDashboardSave","cancelEdit","onSaveWidget","showWidgetEditPanel","onSaveFilter","showFilterEditPanel","toggleFilterViewPanel","resizePageLayout","openFilterEditPanel","filterEditPanel","openWidgetEditPanel","widgetEditPanel","fullScreen","window","open","onTableCellClick","onDashboardDelete","deleteDashboard","jdbcDataSourceOptions","createRef","match","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","editButtonPanel","_this3","autoRefreshStatus","fullScreenButtonPanel","controlButtons","components_WidgetViewPanel","ref","src_components_FilterViewPanel","src_components_WidgetEditPanel","src_components_FilterEditPanel","Dashboard","fetchBoards","view","activeDashboardId","_this$state$dashboard","dashboardRows","menuActive","Route","path","render","views_DashboardEditView","DashboardFullScreenView","dashboardEditView","wrappedComponentRef","comp","SYS_ROLES","User","fetchUsers","users","fetchGroups","groups","tempPassword","userGroups","userGroupId","initialEditPanelState","addUserGroup","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_React$createElement","_this$state3$users","_this$state3$groups","_this$state3$userGrou","userItems","userGroupItems","Group","fetchDashboards","group","groupDashboards","groupDashboardId","addGroupDashboard","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","MENU_ITEMS","link","UserManagement","handleMenuClick","menuLink","currentMenuLink","menuItems","menu","Link","to","Switch","component","Account","fetchUser","generateApiKey","confirmedPassword","alert","apiKey","Workspace","pathname","isAuthenticated","menuList","m","isAccountMenuActive","exact","src_components_Toast","PageNotFound","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","App","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.bba3d9c1.chunk.js","sourcesContent":["\r\nclass AuthStore {\r\n\r\n  constructor() {\r\n    this._sysRole = '';\r\n    this._username = '';\r\n  }\r\n\r\n  set sysRole(sysRole) {\r\n    this._sysRole = sysRole;\r\n  }\r\n\r\n  get sysRole() {\r\n    return this._sysRole;\r\n  }\r\n\r\n  set username(username) {\r\n    this._username = username;\r\n  }\r\n\r\n  get username() {\r\n    return this._username;\r\n  }\r\n\r\n  get isAuthenticated() {\r\n    return true; // this._sysRole !== '';\r\n  }\r\n}\r\n\r\nexport default new AuthStore();","\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AuthStore from '../api/AuthStore';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tryLogin();\r\n  }\r\n\r\n  tryLogin = () => {\r\n    axios.post('/auth/login/cookie')\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  login = () => {\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password'\r\n      });\r\n      return;\r\n    }\r\n\r\n    AuthStore.username = 'testuser';\r\n    AuthStore.sysRole = 'developer';\r\n    this.props.history.push('/workspace/dashboard');\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div className=\"login-app-title\">Poli</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <div className=\"long-panel-body\">\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n              <label className=\"form-label\">Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} />\r\n            </div>\r\n            <button className=\"button login-button\" onClick={this.login}>Login</button>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      modalClass = '',\r\n      title,\r\n      children\r\n    } = this.props;\r\n\r\n    const modalStatus = show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={`modal-panel ${modalClass}`}>\r\n          <div className=\"model-header row\">\r\n            <div className=\"model-title\">{title}</div>\r\n            <button className=\"model-close-button icon-button\" onClick={() => this.props.onClose()}>\r\n              <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          <div className='modal-body'>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Toast.css';\r\n\r\nclass Toast extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showToast: false,\r\n      message: ''\r\n    };\r\n\r\n    Toast._toastRef = this;\r\n  }\r\n\r\n  show = (message) => {\r\n    this.setState({ \r\n      showToast: true,\r\n      message: message\r\n    }, () => {\r\n      setTimeout(() => {\r\n        this.hide();\r\n      }, 3500);\r\n    });\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({ \r\n      showToast: false,\r\n      message: ''\r\n    });\r\n  }\r\n\r\n  static show = (message) => {\r\n    Toast._toastRef.show(message);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showToast,\r\n      message\r\n    } = this.state;\r\n\r\n    const toastStatus = showToast ? 'display-block' : 'display-none';\r\n\r\n    return (\r\n      <div className={`toast-container ${toastStatus}`}>\r\n        <button className=\"button\" onClick={this.hide}>X</button>\r\n        <div>\r\n          {message}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toast;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport './Datasource.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      showUpdatePassword: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataSources();\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      driverClassName,\r\n      username,\r\n      password,\r\n      name,\r\n      ping,\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      driverClassName: driverClassName,\r\n      username: username,\r\n      name: name,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      // New\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } \r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        Toast.show(result);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        driverClassName: ds.driverClassName,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/jdbcdatasource/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (datasource) => {\r\n    this.setState({\r\n      objectToDelete: datasource,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  clearSearch = () => {\r\n    this.setState({\r\n      searchValue: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      showConfirmDeletionPanel,\r\n      searchValue,\r\n      id,\r\n      jdbcDataSources = [],\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const jdbcDataSourceItems = [];\r\n    for (let i = 0; i < jdbcDataSources.length; i++) {\r\n      const ds = jdbcDataSources[i];\r\n      const name = ds.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        jdbcDataSourceItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {name}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.ping(ds.id)}>\r\n                  <FontAwesomeIcon icon=\"plug\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"searchValue\"\r\n          value={this.state.searchValue}\r\n          onChange={this.handleInputChange}\r\n          placeholder=\"Search...\"\r\n          style={{width: '200px'}}\r\n          />\r\n        <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n        <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n          <FontAwesomeIcon icon=\"plus\" /> New datasource\r\n        </button>\r\n        <div className=\"table-panel\">\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={mode} >\r\n\r\n          <div>\r\n            <label className=\"form-label\">Name <span className=\"required\">*</span></label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label className=\"form-label\">Connection Url</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label className=\"form-label\">Driver class name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"driverClassName\" \r\n              value={this.state.driverClassName}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label className=\"form-label\">Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            { mode === 'Edit' ? \r\n              (\r\n                <div style={{margin: '3px 0px 8px 0px'}}>\r\n                  <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n                </div>\r\n              ) : null\r\n            }\r\n            { mode === 'New' || showUpdatePassword ? \r\n              (\r\n                <div>\r\n                  <label className=\"form-label\">Password</label>\r\n                  <input \r\n                    type=\"password\" \r\n                    name=\"password\" \r\n                    value={this.state.password}\r\n                    onChange={this.handleInputChange} />\r\n                </div>\r\n              ) : null\r\n            }\r\n\r\n            <label className=\"form-label\" className=\"mt-3\">Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} />\r\n            <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    const {\r\n      name,\r\n      checked\r\n    } = this.props;\r\n\r\n    this.props.onChange(name, !checked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      checked\r\n    } = this.props;\r\n\r\n    const checkmarkBoxBgColor = checked ? '#000000' : '#FFFFFF';\r\n    const checkmarkBoxStyle = {\r\n      backgroundColor: checkmarkBoxBgColor\r\n    };\r\n\r\n    return (\r\n      <div className=\"checkbox-container\" onClick={this.toggle}>\r\n        <div className=\"checkbox-checkmark\">\r\n          <div className=\"checkbox-checkmark-box\" style={checkmarkBoxStyle}>\r\n          </div>\r\n        </div>\r\n        <div className=\"checkbox-label\">{value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport Checkbox from './Checkbox';\r\nimport './Slicer.css';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n    searchValue: ''\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    if (searchValue) {\r\n      const result = [];\r\n      const { checkBoxes } = this.props;\r\n      for (let i = 0; i < checkBoxes.length; i++) {\r\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\r\n          result.push(checkBoxes[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n\r\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      checkBoxes = []\r\n    } = this.props;\r\n    const checkBoxItems = checkBoxes.map((box, index) => \r\n      <Checkbox \r\n        key={index} \r\n        name={box.value} \r\n        value={box.value} \r\n        checked={box.isChecked} \r\n        onChange={this.handleCheckBoxChange} \r\n      />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.toggleSelectAll}>Select All {this.state.isSelectAll}</button>\r\n        <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.searchValue}\r\n            onChange={this.handleSearchValueChange}\r\n            placeholder=\"Search...\"\r\n          />\r\n        \r\n        <div className=\"slicer-body\">\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};\r\n\r\nexport const jsonToArray = (json) => {\r\n  let array;\r\n  try {\r\n    array = JSON.parse(json);\r\n  } catch(e) {\r\n    array = [];\r\n  }\r\n  return array;\r\n}\r\n","import React from 'react';\r\n\r\nclass NumberRange extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        min\r\n        <input type=\"number\" name=\"min\" />\r\n        max\r\n        <input type=\"number\" name=\"max\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberRange;","/**\r\n * Constants\r\n */\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\r\n\r\nexport const SYS_ROLE_ADMIN = 'admin';\r\nexport const SYS_ROLE_DEVELOPER = 'developer';\r\nexport const SYS_ROLE_VIEWER = 'viewer';\r\n\r\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;","import React, { Component } from 'react';\r\nimport Slicer from \"./Slicer\";\r\nimport NumberRange from \"./NumberRange\";\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './FilterViewPanel.css';\r\nimport Modal from '../components/Modal';\r\n\r\nclass FilterViewPanel extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      dashboardId: null,\r\n      filters: [],\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {}\r\n    };\r\n  }\r\n\r\n  fetchFilters = (dashboardId) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      dashboardId: dashboardId\r\n    })\r\n\r\n    axios.get('/ws/filter/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          filters: result,\r\n        }, this.queryFilters);\r\n      });\r\n  }\r\n\r\n  queryFilters = () => {\r\n    const { filters } = this.state;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === Constants.SLICER) {\r\n        const queryRequest = filter.data;\r\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\r\n          .then(res => {\r\n            const queryResult = res.data;\r\n            const queryResultData = Util.jsonToArray(queryResult.data);\r\n\r\n            const index = filters.findIndex(f => f.id === queryResult.id);\r\n            const newFilters = [...this.state.filters];\r\n            newFilters[index].queryResult = queryResult;\r\n            const type = newFilters[index].type;\r\n            if (type === Constants.SLICER) {\r\n              const checkBoxes = [];\r\n              for (let i = 0; i < queryResultData.length; i++) {\r\n                const values = Object.values(queryResultData[i]);\r\n                for (const val of values) {\r\n                  checkBoxes.push({\r\n                    value: val,\r\n                    isChecked: false\r\n                  });\r\n                }\r\n              }\r\n\r\n              newFilters[index].checkBoxes = checkBoxes;\r\n            } else if (type === Constants.SINGLE_VALUE) {\r\n              const values = Object.values(queryResultData);\r\n              let value = '';\r\n              for (const val of values) {\r\n                value = val;\r\n                break;\r\n              }\r\n              newFilters[index].value = value;\r\n            }\r\n\r\n            this.setState({\r\n              filters: newFilters\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderFilterPanel = () => {\r\n    const filterPanel = [];\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      let filterComponent = (<div>NONE</div>);\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        filterComponent = (\r\n          <Slicer \r\n            key={i} \r\n            filterId={filter.id} \r\n            checkBoxes={checkBoxes} \r\n            onChange={this.onSlicerChange} \r\n          />\r\n        );\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterComponent = (\r\n          <input \r\n            type=\"text\"  \r\n            value={filter.value}\r\n            onChange={(event) => this.onSingleValueChange(filter.id, event)} \r\n          />\r\n        );\r\n      }\r\n\r\n      filterPanel.push(\r\n        (\r\n          <div className=\"filter-card\">\r\n            <div className=\"filter-card-title\">\r\n              {filter.title}\r\n\r\n              { this.props.isEditMode ? \r\n                (\r\n                  <div className=\"icon-button-group\">\r\n                    <div className=\"inline-block\" onClick={() => this.edit(filter.id)}>\r\n                      <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n                    </div>\r\n                    <div className=\"inline-block\" onClick={() => this.openConfirmDeletionPanel(filter.id)}>\r\n                      <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n                    </div>\r\n                  </div>\r\n                ): null \r\n              }\r\n            </div>\r\n            <div>\r\n              {filterComponent}\r\n            </div>\r\n          </div>\r\n        )\r\n      );\r\n    }\r\n    return filterPanel;\r\n  }\r\n\r\n  edit = (filterId) => {\r\n    this.props.onEdit(filterId);\r\n  }\r\n\r\n  onSlicerChange = (filterId, checkBoxes) => {\r\n    const index = this.state.filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...this.state.filters];\r\n    newFilters[index].checkBoxes = [...checkBoxes];\r\n    this.setState({\r\n      filters: newFilters\r\n    });  \r\n  }\r\n\r\n  onSingleValueChange = (filterId, event) => {\r\n    const { filters } = this.state;\r\n    const value = event.target.value;\r\n    const index = filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...filters];\r\n    newFilters[index].value = value;\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n  }\r\n\r\n  applyFilters = () => {\r\n    const { \r\n      filters = []\r\n    } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      const filterParam = {};\r\n      if (filter.type === Constants.SLICER) {\r\n        const { \r\n          checkBoxes = []\r\n        } = filter;\r\n        const paramValues = [];\r\n        for (let j = 0; j < checkBoxes.length; j++) {\r\n          const checkBox = checkBoxes[j];\r\n          if (checkBox.isChecked) {\r\n            paramValues.push(checkBox.value);\r\n          }\r\n        }\r\n        filterParam.value = paramValues;\r\n        if (paramValues.length === checkBoxes.length) {\r\n          filterParam.remark = 'select all';\r\n        }\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterParam.value = filter.value;\r\n      }\r\n      filterParam.param = filter.data.param;\r\n      filterParam.type = filter.type;\r\n      filterParams.push(filterParam);\r\n    }\r\n\r\n    this.props.onApplyFilters(filterParams);\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete\r\n    } = this.state;\r\n    const filterId = objectToDelete;\r\n    axios.delete(`/ws/filter/${filterId}`)\r\n      .then(res => {\r\n        const index = this.state.filters.findIndex(f => f.id === filterId);\r\n        const newFilters = [...this.state.filters];\r\n        newFilters.splice(index, 1);\r\n        this.setState({\r\n          filters: newFilters\r\n        });\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (filterId) => {\r\n    this.setState({\r\n      objectToDelete: filterId,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n    const style = {};\r\n    if (show) {\r\n      style.width = Constants.DEFAULT_FILTER_VIEW_WIDTH + 'px';\r\n    } else {\r\n      style.width = '0px';\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-filter-panel\" style={style}>\r\n        <div>Filters</div>\r\n        <button className=\"button\" onClick={this.applyFilters}>Run</button>\r\n        <div className=\"filter-view-panel\">\r\n          {this.renderFilterPanel()}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete this filter?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterViewPanel;","import React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPalette: false\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      showPalette: !prevState.showPalette\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      showPalette: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    const rgb = color.rgb;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    this.props.onChange(rgba);\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: this.props.value\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: '2'\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.showPalette ? \r\n          (\r\n            <div style={popover}>\r\n              <div style={cover} onClick={this.handleClose} />\r\n              <ChromePicker color={this.props.value} onChange={this.handleChange} />\r\n            </div>\r\n          ) : null }\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","import * as Util from '../api/Util';\r\n\r\nconst CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOptionTemplate = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      type: 'scroll',\r\n      orient: 'vertical',\r\n      data: legend,\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['40%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport const getPieOption = (queryResultData, pieKey, pieValue) => {\r\n  let legend = [];\r\n  let series = [];\r\n  for (let i = 0; i < queryResultData.length; i++) {\r\n    const row = queryResultData[i];\r\n    legend.push(row[pieKey]);\r\n    series.push({\r\n      name: row[pieKey],\r\n      value: row[pieValue]\r\n    });  \r\n  }\r\n  return getPieOptionTemplate(legend, series);\r\n}\r\n","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport './TableWidget.css';\r\n\r\nclass TableWidget extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  render() {   \r\n    const {\r\n      data = [],\r\n      columns = [],\r\n      drillThrough = [],\r\n      error\r\n    } = this.props;\r\n\r\n    const columnHeaders = [];\r\n    columns.forEach(column => {\r\n      const columnName = column.name;\r\n      const header = {\r\n        Header: columnName,\r\n        accessor: columnName\r\n      };\r\n      if (drillThrough.length > 0) {\r\n        const index = drillThrough.findIndex(d => d.columnName === columnName);\r\n        if (index !== -1) {\r\n          const dashboardId = drillThrough[index].dashboardId;\r\n          header.Cell = (props => <a href={`/poli/workspace/dashboard/${dashboardId}?${columnName}=${props.value}`}>{props.value}</a>);\r\n        }\r\n      }\r\n\r\n      columnHeaders.push(header);\r\n    });\r\n\r\n    if (error) {\r\n      return (\r\n        <div>\r\n          {error}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ReactTable\r\n        data={data}\r\n        columns={columnHeaders}\r\n        defaultPageSize={10}\r\n        previousText={'Prev'}\r\n        nextText={'Next'}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableWidget;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport TableWidget from './TableWidget';\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough || []; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        const index = drills.findIndex(d => d.columnName === header);\r\n        if (index !== -1) {\r\n          const dashboardId = drills[index].dashboardId;\r\n          this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      chartType,\r\n      queryResult = {},\r\n      drillThrough,\r\n      data = {}\r\n    } = this.props;\r\n\r\n    const queryResultData = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    let widgetItem = (<div></div>);\r\n    if (chartType === Constants.TABLE) {\r\n      widgetItem = (\r\n        <TableWidget\r\n          data={queryResultData}\r\n          columns={columns}\r\n          error={error}\r\n          drillThrough={drillThrough}\r\n        />\r\n      );\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        pieKey,\r\n        pieValue\r\n      } = data;\r\n      const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\r\n      widgetItem = (\r\n        <ReactEcharts \r\n          option={chartOption}   \r\n          className=\"echarts\"\r\n          onEvents={onChartEvents}  \r\n        />\r\n      );\r\n    } \r\n\r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      title,\r\n      isEditMode,\r\n      style = {}\r\n    } = this.props;\r\n\r\n    const { \r\n      showBorder = false \r\n    } = style;\r\n\r\n    const borderStyle = showBorder ? '2px solid #4b4f56' : '2px solid #FFFFFF';\r\n\r\n    let styles = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: 1,\r\n      border: borderStyle\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {title}\r\n\r\n          { isEditMode ? (\r\n            <div className=\"float-right\" style={{marginRight: '20px'}}>\r\n              <div className=\"inline-block\" onClick={() => this.editWidget(id)}>\r\n                <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n              </div>\r\n              <div className=\"inline-block\" onClick={() => this.removeWidget(id)}>\r\n                <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid-box-file-button-group\">\r\n              <div className=\"inline-block\" onClick={() => this.exportJson(id)}>\r\n                <FontAwesomeIcon icon=\"file-export\" fixedWidth />\r\n              </div>\r\n              \r\n              <div className=\"inline-block\" onClick={() => this.exportCsv(id)}>\r\n                <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { isEditMode ? (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} />\r\n        ): null}\r\n\r\n        { isEditMode ? (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} />\r\n        ): null}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(GridItem);","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      backgroundColor,\r\n      widgets = [],\r\n      showGridlines\r\n    } = this.props;\r\n\r\n    let style = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      backgroundColor: backgroundColor\r\n    };\r\n\r\n    if (showGridlines) {\r\n      style.backgroundSize = '15px 15px';\r\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={style} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ColorPicker from './ColorPicker';\r\nimport Checkbox from './Checkbox';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\nimport Modal from '../components/Modal';\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      snapToGrid: false,\r\n      showGridlines: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  resizeGrid = (width, isResizeToBase) => {\r\n    const preGridWidth = this.state.gridWidth;\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n    if (isResizeToBase) {\r\n      this.resizeWidgetsToBase(newWidgets, preGridWidth);\r\n    }\r\n\r\n    const gridWidth = width - 10;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return Math.round(num * gridWidth / BASE_WIDTH);\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Math.round(num * BASE_WIDTH / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, width, filterParams) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get('/ws/widget/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(width, false);\r\n          this.queryWidgets(filterParams);\r\n        });\r\n      });\r\n  }\r\n\r\n  queryWidgets = (filterParams) => {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      axios.post('/ws/jdbcquery/widget/' + widget.id, params)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const index = widgets.findIndex(w => w.id === result.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = result;\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    this.setState({\r\n      [name]: isChecked\r\n    });\r\n  }\r\n\r\n  handleHeightChange = (event) => {\r\n    this.props.onHeightChange(event.target.value);\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    this.props.onBackgroundColorChange(color);\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete\r\n    } = this.state;\r\n    const widgetId = objectToDelete;\r\n    axios.delete(`/ws/widget/${widgetId}`)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (widgetId) => {\r\n    this.setState({\r\n      objectToDelete: widgetId,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { widgetViewWidth } = this.props;\r\n    const style = {\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {this.props.isEditMode ?\r\n        (\r\n          <div className=\"dashboard-attribute-edit-panel\">\r\n            <div className=\"inline-block\">Height:</div>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.props.height}\r\n              onChange={this.handleHeightChange} \r\n              className=\"inline-block\" \r\n              style={{width: '200px'}}\r\n              />\r\n\r\n            <div>\r\n              Background Color\r\n              <ColorPicker value={this.props.backgroundColor} onChange={this.onBackgroundColorChange} />\r\n            </div>\r\n\r\n            <Checkbox name=\"snapToGrid\" value=\"Snap to grid\" checked={this.state.snapToGrid} onChange={this.handleCheckBoxChange} />\r\n            <Checkbox name=\"showGridlines\" value=\"Show gridlines\" checked={this.state.showGridlines} onChange={this.handleCheckBoxChange} />\r\n  \r\n          </div>\r\n        ) : null}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          backgroundColor={this.props.backgroundColor}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.openConfirmDeletionPanel} />\r\n        \r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete this widget?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","import React from 'react';\r\nimport './Tabs.css';\r\n\r\nclass Tabs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const activeTab = this.props.activeTab;\r\n    this.setState({\r\n      activeTab: activeTab\r\n    });\r\n  }\r\n\r\n  handleTabClick = (title) => {\r\n    this.setState({\r\n      activeTab: title\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children = []\r\n    } = this.props;\r\n\r\n    const {\r\n      activeTab\r\n    } = this.state;\r\n\r\n    const tabHeaders = [];\r\n    let tabContent = null;\r\n    for (let i = 0; i < children.length; i++) {\r\n      const title = children[i].props.title;\r\n      let active = '';\r\n      if (title === activeTab) {\r\n        active = 'tab-header-active';\r\n        tabContent = children[i].props.children;\r\n      }\r\n      \r\n      tabHeaders.push(\r\n        <li className={`tab-header-item ${active}`} key={i} onClick={() => this.handleTabClick(title)}>{title}</li>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"tab-container\">\r\n        <ul className=\"tab-header\">\r\n          {tabHeaders}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {tabContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Select extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    optionDisplay: PropTypes.string,\r\n    optionValue: PropTypes.string\r\n  };\r\n\r\n  handleOptionChange = (event) => {\r\n    const name = this.props.name;\r\n    const value = event.target.value;\r\n    this.props.onChange(name, value);\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      value,\r\n      options = [],\r\n      optionValue,\r\n      optionDisplay\r\n    } = this.props;\r\n\r\n    const optionList = [];\r\n    optionList.push(\r\n      <option value=\"\" key=\"\"></option>\r\n    );\r\n    options.forEach((option, index) => {\r\n      let value;\r\n      let display;\r\n      if (optionValue && optionDisplay) {\r\n        // The options contain objects.\r\n        value = option[optionValue];\r\n        display = option[optionDisplay];\r\n      } else {\r\n        // The options contain string or number.\r\n        value = option;\r\n        display = option;\r\n      }\r\n      \r\n      optionList.push(\r\n        <option value={value} key={index}>{display}</option>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <select value={value} onChange={this.handleOptionChange}>\r\n        {optionList}\r\n      </select>\r\n    )\r\n  };\r\n}\r\n\r\nexport default Select;","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport TableWidget from './TableWidget';\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nimport './WidgetEditPanel.css';\r\n\r\nimport Checkbox from './Checkbox';\r\nimport Tabs from '../components/Tabs';\r\nimport Select from '../components/Select';\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      title: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: {},\r\n      chartType: Constants.TABLE,\r\n      style: {\r\n        showBorder: false\r\n      },\r\n      pieKey: '',\r\n      pieValue: '',\r\n      chartOption: {},\r\n      drills: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId, dashboardId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { chartType } = result;\r\n          if (chartType === Constants.PIE) {\r\n            const {\r\n              pieKey,\r\n              pieValue\r\n            } = result.data;\r\n            this.setState({\r\n              pieKey: pieKey,\r\n              pieValue: pieValue\r\n            });\r\n          }\r\n\r\n          this.setState({\r\n            widgetId: widgetId,\r\n            title: result.title,\r\n            x: result.x,\r\n            y: result.y,\r\n            width: result.width,\r\n            height: result.height,\r\n            sqlQuery: result.sqlQuery,\r\n            chartType: result.chartType,\r\n            jdbcDataSourceId: result.jdbcDataSourceId,\r\n            drills: result.drillThrough,\r\n            style: result.style\r\n          }, () => {\r\n            this.runQuery();\r\n          });\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    if (name === 'showBorder') {\r\n      const style = {...this.state.style};\r\n      style.showBorder = isChecked;\r\n      this.setState({\r\n        style: style\r\n      });\r\n    }\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      widgetId,\r\n      title,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      chartType,\r\n      drills,\r\n      style\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      title: title,\r\n      dashboardId: this.props.dashboardId,\r\n      chartType: chartType,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      drillThrough: drills,\r\n      style: style\r\n    }\r\n\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const {\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n      widget.data = {\r\n        pieKey: pieKey,\r\n        pieValue: pieValue\r\n      }\r\n    }\r\n\r\n    if (widgetId === null) {\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          queryResult: result\r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = () => {\r\n    const { \r\n      drills,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const filterId = this.state.filterId;\r\n    const index = drills.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill) => {\r\n    const { drills } = this.state;\r\n    const index = drills.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.splice(index, 1);\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = () => {\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        pieKey, \r\n        pieValue, \r\n        queryResult = {}\r\n      } = this.state;\r\n      console.log(\"generateChart\", pieKey, pieValue);\r\n      const data = Util.jsonToArray(queryResult.data);\r\n      const chartOption = EchartsApi.getPieOption(data, pieKey, pieValue);\r\n      this.setState({\r\n        chartOption: chartOption\r\n      });\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      queryResult = {},\r\n    } = this.state;\r\n    const columns = queryResult.columns || [];\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        chartOption,\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n\r\n      chartPreview = (\r\n        <div>\r\n          <label className=\"form-label\"><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label className=\"form-label\">Aggr Key (string)</label>\r\n          <Select\r\n            name={'pieKey'}\r\n            value={pieKey}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n            />\r\n\r\n\r\n          <label className=\"form-label\">By Aggr Value (number)</label>\r\n          <Select\r\n            name={'pieValue'}\r\n            value={pieValue}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n            />\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      queryResult,\r\n      jdbcDataSources = [],\r\n      drills,\r\n      drillDashboards = []\r\n    } = this.state;\r\n\r\n    const data = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    const drillItems = (drills || []).map(drill =>\r\n      <div key={drill.columnName}>\r\n        <div>Column: {drill.columnName}</div>\r\n        <div>Dashboard: {drill.dashboardId}</div>\r\n        <button onClick={() => this.removeDrillThrough(drill)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const columnItems = columns.map(col =>\r\n      <div key={col.name}>{col.name} {col.dataType}</div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        \r\n        <div className=\"form-panel\">\r\n          <Tabs activeTab=\"basic\">\r\n            <div title=\"basic\">\r\n              <label className=\"form-label\">Title</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"title\" \r\n                value={this.state.title}\r\n                onChange={this.handleInputChange} \r\n              />\r\n\r\n              <Checkbox name=\"showBorder\" value=\"Show border\" checked={this.state.style.showBorder} onChange={this.handleCheckBoxChange} />\r\n            </div>\r\n\r\n            <div title=\"Query\">\r\n              <label className=\"form-label\">DataSource</label>\r\n              <Select\r\n                name={'jdbcDataSourceId'}\r\n                value={this.state.jdbcDataSourceId}\r\n                onChange={this.handleIntegerOptionChange}\r\n                options={jdbcDataSources}\r\n                optionDisplay={'name'}\r\n                optionValue={'id'}\r\n                />\r\n            \r\n              <label className=\"form-label\">SQL Query</label>\r\n              <AceEditor\r\n                style={{ marginTop: '8px' }}\r\n                value={this.state.sqlQuery}\r\n                mode=\"mysql\"\r\n                theme=\"xcode\"\r\n                name=\"blah2\"\r\n                onChange={this.handleAceEditorChange}\r\n                height={'300px'}\r\n                width={'100%'}\r\n                fontSize={15}\r\n                showPrintMargin={false}\r\n                showGutter={true}\r\n                highlightActiveLine={true}\r\n                setOptions={{\r\n                  showLineNumbers: true,\r\n                  tabSize: 2\r\n                }}\r\n              />\r\n\r\n              <div className=\"mt-3\">\r\n                <button className=\"button\" onClick={this.runQuery}>Run Query</button>\r\n              </div>\r\n\r\n              <label className=\"form-label\">Result</label>\r\n              <TableWidget\r\n                data={data}\r\n                columns={columns}\r\n                error={error}\r\n              />\r\n\r\n              <label className=\"form-label\">Columns Mapping</label>\r\n              <div>\r\n                {columnItems}\r\n              </div>\r\n            </div>\r\n\r\n            <div title=\"Chart\">\r\n              <label className=\"form-label\">Chart Options</label>\r\n              <Select\r\n                name={'chartType'}\r\n                value={this.state.chartType}\r\n                onChange={this.handleOptionChange}\r\n                options={Constants.CHART_TYPES}\r\n              />\r\n              <label className=\"form-label\">Preview</label>\r\n              {this.renderChartPreview()}  \r\n            </div>\r\n\r\n            <div title=\"Drill through\">\r\n              <label className=\"form-label\">Drill through</label>\r\n              <label className=\"form-label\">Column</label>\r\n              <Select\r\n                name={'drillColumnName'}\r\n                value={this.state.drillColumnName}\r\n                options={columns}\r\n                onChange={this.handleOptionChange}\r\n                optionDisplay={'name'}\r\n                optionValue={'name'}\r\n              />\r\n\r\n              <label className=\"form-label\">Dashboard</label>\r\n              <Select\r\n                name={'drillDashboardId'}\r\n                value={this.state.drillDashboardId}\r\n                options={drillDashboards}\r\n                onChange={this.handleIntegerOptionChange}\r\n                optionDisplay={'name'}\r\n                optionValue={'id'}\r\n              />\r\n              <div>\r\n                {drillItems}\r\n              </div>\r\n              <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\r\n            </div>\r\n          </Tabs>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","import React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\nimport TableWidget from './TableWidget';\r\nimport Select from './Select';\r\n\r\n\r\nimport './FilterEditPanel.css';\r\n\r\nclass FilterEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      filterId: null,\r\n      title: '',\r\n      type: Constants.SLICER,\r\n      data: {},\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: {},\r\n      param: '',\r\n    };\r\n  }\r\n\r\n  fetchFilter = async (filterId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    if (filterId === null) {\r\n      this.setState({\r\n        filterId: null\r\n      })\r\n    } else {\r\n      axios.get('/ws/filter/' + filterId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { \r\n            data,\r\n            type\r\n          } = result;\r\n          this.setState({\r\n            filterId: filterId,\r\n            title: result.title,\r\n            type: result.type,\r\n            jdbcDataSourceId: result.jdbcDataSourceId,\r\n            data: data\r\n          });\r\n\r\n          if (type === Constants.SLICER) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              param: data.param\r\n            });\r\n          } else if (type === Constants.SINGLE_VALUE) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              param: data.param\r\n            });\r\n          }\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({ \r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      filterId,\r\n      title,\r\n      type,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      param\r\n    } = this.state;\r\n\r\n    const filter = {\r\n      title: title,\r\n      type: type,\r\n      dashboardId: this.props.dashboardId,\r\n      jdbcDataSourceId: jdbcDataSourceId\r\n    };\r\n\r\n    if (type === Constants.SLICER) {\r\n      filter.data = {\r\n        sqlQuery: sqlQuery,\r\n        param: param\r\n      }\r\n    } else if (type === Constants.SINGLE_VALUE) {\r\n      filter.data = {\r\n        useQuery: false,\r\n        sqlQuery: sqlQuery,\r\n        param: param,\r\n      }\r\n    }\r\n\r\n    if (filterId === null) {\r\n      axios.post('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      filter.id = filterId;\r\n      axios.put('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { \r\n      queryResult = {},\r\n      jdbcDataSources = [],\r\n      type\r\n    } = this.state;\r\n\r\n    const data = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    const requireSql = type === Constants.SLICER;\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        <button className=\"button\" onClick={this.runQuery}>Run</button>\r\n\r\n        <div className=\"form-panel\">\r\n          <label className=\"form-label\">Title</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"title\" \r\n            value={this.state.title}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label className=\"form-label\">Type</label>\r\n          <Select\r\n            name={'type'} \r\n            value={this.state.type} \r\n            onChange={this.handleOptionChange}\r\n            options={Constants.FILTER_TYPES}\r\n          />\r\n\r\n          {\r\n            requireSql ?\r\n            (\r\n              <React.Fragment>\r\n                <label className=\"form-label\">DataSource</label>\r\n                <Select\r\n                  name={'jdbcDataSourceId'} \r\n                  value={this.state.jdbcDataSourceId} \r\n                  onChange={this.handleIntegerOptionChange}\r\n                  options={jdbcDataSources}\r\n                  optionDisplay={'name'}\r\n                  optionValue={'id'}\r\n                />\r\n    \r\n                <label className=\"form-label\">SQL Query</label>\r\n                <AceEditor\r\n                  style={{marginTop: '8px'}}\r\n                  value={this.state.sqlQuery}\r\n                  mode=\"mysql\"\r\n                  theme=\"xcode\"\r\n                  name=\"blah2\"\r\n                  onChange={this.handleAceEditorChange}\r\n                  height={'300px'}\r\n                  width={'100%'}\r\n                  fontSize={15}\r\n                  showPrintMargin={false}\r\n                  showGutter={true}\r\n                  highlightActiveLine={true}\r\n                  setOptions={{\r\n                    showLineNumbers: true,\r\n                    tabSize: 2\r\n                  }}\r\n                />\r\n\r\n                <label className=\"form-label\">Result</label>\r\n                <TableWidget\r\n                  data={data}\r\n                  columns={columns}\r\n                  error={error}\r\n                />\r\n              </React.Fragment>\r\n            ) : null\r\n          }\r\n\r\n          <label className=\"form-label\">Param</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"param\" \r\n            value={this.state.param}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport FilterViewPanel from '../components/FilterViewPanel';\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\nimport FilterEditPanel from '../components/FilterEditPanel';\r\n\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showFilterEditPanel: false,\r\n      showFilterViewPanel: true,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      isEditMode: false,\r\n      isReadOnly: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      refreshInterval: 15,\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      style: {},\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.filterViewPanel = React.createRef();\r\n    this.filterEditPanel = React.createRef();\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    console.log('DashboardEditView', dashboardId);\r\n\r\n    const url = this.props.location.search;\r\n    console.log('url', url);\r\n    const params = new URLSearchParams(url);\r\n    console.log('params', params);\r\n    for(let pair of params.entries()) {\r\n      console.log(pair[0]+ ', '+ pair[1]); \r\n    } \r\n\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = this.state.showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    console.log('componentDidMount', pageWidth, widgetViewWidth);\r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const result = res.data;\r\n            this.setState({\r\n              dashboardId: result.id,\r\n              name: result.name,\r\n              style: result.style\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = () => {\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    const dashboardName = params.get('name');\r\n    const showFilter = params.get('showFilter');\r\n\r\n    const showFilterViewPanel = showFilter == 'true';\r\n\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    \r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth,\r\n      isReadOnly: true,\r\n      name: dashboardName,\r\n      showFilterViewPanel: showFilterViewPanel\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            style: result.style\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth - 40;\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const { refreshInterval } = this.state;\r\n      let interval = parseInt(refreshInterval, 10) || 15;\r\n      interval = interval < 1 ? 1 : interval;\r\n      const timerId = setInterval(() => {\r\n        this.filterViewPanel.current.applyFilters();\r\n        this.updateLastRefreshed();\r\n      }, interval * 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    this.refreshWidgetView();\r\n    this.refreshFilterView();\r\n    this.updateLastRefreshed();\r\n  }\r\n\r\n  refreshFilterView = () => {\r\n    const { \r\n      dashboardId\r\n    } = this.state;\r\n    this.filterViewPanel.current.fetchFilters(dashboardId);\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n  } \r\n\r\n  updateLastRefreshed = () => {\r\n    const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\r\n    this.setState({\r\n      lastRefreshed: now\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    console.log('save');\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      style\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      style: style\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.widgetViewPanel.current.saveWidgets();\r\n\r\n    this.props.onDashboardSave(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  onSaveFilter = () => {\r\n    this.setState({ \r\n      showFilterEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  toggleFilterViewPanel = () => {\r\n    const { \r\n      showFilterViewPanel\r\n    } = this.state;\r\n    this.resizePageLayout(!showFilterViewPanel);\r\n  }\r\n\r\n  resizePageLayout = (showFilterViewPanel) => {\r\n    const pageWidth = this.getPageWidth();;\r\n    let widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    this.widgetViewPanel.current.resizeGrid(widgetViewWidth, true);\r\n\r\n    this.setState({\r\n      showFilterViewPanel: showFilterViewPanel,\r\n      widgetViewWidth: widgetViewWidth\r\n    }); \r\n  }\r\n\r\n  openFilterEditPanel = (filterId) => {\r\n    this.filterEditPanel.current.fetchFilter(filterId);\r\n    this.setState({\r\n      showFilterEditPanel: true\r\n    });\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    const { dashboardId } = this.state;\r\n    this.widgetEditPanel.current.fetchWidget(widgetId, dashboardId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/workspace/dashboard/view?name=${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onTableCellClick = () => {\r\n    this.props.history.push(`/workspace/dashboard/drill?name=&`);\r\n  }\r\n\r\n  onHeightChange = (height) => {\r\n    const style = {...this.state.style};\r\n    style.height = height;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    const style = {...this.state.style};\r\n    style.backgroundColor = color;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {},\r\n    } = this.state;\r\n    const dashboardId = objectToDelete.id;\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        this.props.onDashboardDelete(dashboardId);\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  deleteDashboard = () => {\r\n    const { \r\n      dashboardId,\r\n      name\r\n    } = this.state;\r\n    const dashboard = {\r\n      id: dashboardId,\r\n      name: name\r\n    }\r\n    this.openConfirmDeletionPanel(dashboard);\r\n  }\r\n\r\n  openConfirmDeletionPanel = (dashboard) => {\r\n    this.setState({\r\n      objectToDelete: dashboard,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      lastRefreshed,\r\n      isEditMode,\r\n      isReadOnly\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel = null;\r\n    const controlButtons = (\r\n      <React.Fragment>\r\n        <span className=\"mr-3\">Last refreshed: {lastRefreshed}</span>\r\n        {\r\n          autoRefreshStatus === 'OFF' ? \r\n          (\r\n            <input \r\n              type=\"text\" \r\n              name=\"refreshInterval\" \r\n              value={this.state.refreshInterval}\r\n              onChange={this.handleInputChange}\r\n              className=\"inline-block\" \r\n              style={{width: '50px'}}\r\n            />\r\n          ) : null\r\n        }\r\n        <button className=\"button square-button mr-3\" onClick={this.toggleAutoRefresh}>\r\n          {\r\n            autoRefreshStatus === 'ON' ? \r\n            (\r\n              <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\r\n            ) : \r\n            (\r\n              <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\r\n            )\r\n          }\r\n        </button>\r\n        \r\n        <button className=\"button mr-3\" onClick={this.toggleFilterViewPanel}>Show Filters</button>\r\n        <button className=\"button square-button\" onClick={this.refresh}>\r\n          <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n\r\n    if (!isReadOnly) {\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button mr-3\" onClick={this.cancelEdit}>Cancel</button>\r\n            <button className=\"button mr-3\" onClick={this.save}>Save</button>\r\n            <button className=\"button mr-3\" onClick={this.deleteDashboard}>Delete</button>\r\n            <button className=\"button mr-3\" onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\r\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button square-button mr-3\" onClick={this.fullScreen}>\r\n              <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={this.edit}>Edit</button>\r\n            {controlButtons}\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      fullScreenButtonPanel = controlButtons;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-menu-panel row\">\r\n          <div className=\"float-left\">\r\n            {\r\n              isReadOnly || !isEditMode ?\r\n              (\r\n                <div className=\"dashboard-name\">\r\n                  {this.state.name}\r\n                </div>\r\n              ) :(\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"name\" \r\n                  value={this.state.name}\r\n                  onChange={this.handleInputChange} \r\n                  className=\"dashboard-name\"\r\n                  />\r\n              )\r\n            }\r\n            \r\n          </div>\r\n          <div className=\"float-right\">\r\n            {fullScreenButtonPanel}\r\n            {editButtonPanel}\r\n          </div>\r\n        </div>\r\n\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          isEditMode={this.state.isEditMode}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          onHeightChange={this.onHeightChange}\r\n          onBackgroundColorChange={this.onBackgroundColorChange}\r\n          {...this.state.style}\r\n        />\r\n        <FilterViewPanel \r\n          ref={this.filterViewPanel} \r\n          onEdit={this.openFilterEditPanel}\r\n          onApplyFilters={this.applyFilters}\r\n          isEditMode={this.state.isEditMode}\r\n          show={this.state.showFilterViewPanel}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'dashboard-edit-widget-dialog'} \r\n          title={'Widget Edit'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showFilterEditPanel}\r\n          onClose={() => this.setState({ showFilterEditPanel: false })}\r\n          modalClass={'dashboard-edit-filter-dialog'} \r\n          title={'Filter Edit'}>\r\n          <FilterEditPanel\r\n            ref={this.filterEditPanel}\r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveFilter}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {this.state.objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\nimport './Dashboard.css';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as Constants from '../api/Constants';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      activeDashboardId: 0,\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false,\r\n      name: ''\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      style: {\r\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\r\n        backgroundColor: 'rgba(233, 235, 238, 1)'\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.closeEditPanel();\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.setState({\r\n      activeDashboardId: dashboardId\r\n    });\r\n    this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n  }\r\n\r\n  onDashboardSave = (dashboardId) => {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  onDashboardDelete = (dashboardId) => {\r\n    this.fetchBoards();\r\n    this.setState({\r\n      activeDashboardId: 0\r\n    });\r\n    this.props.history.push('/workspace/dashboard');\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dashboards = [],\r\n      activeDashboardId,\r\n      searchValue\r\n    } = this.state;\r\n\r\n    \r\n    const dashboardRows = [];\r\n    for (let i = 0; i < dashboards.length; i++) {\r\n      const dashboard = dashboards[i];\r\n      const name = dashboard.name;\r\n      const menuActive = activeDashboardId === dashboard.id ? 'dashboard-menu-item-active' : '';\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        dashboardRows.push(\r\n          (\r\n            <div key={i} className={`dashboard-menu-item ellipsis ${menuActive}`} onClick={() => this.view(dashboard.id)}>\r\n              {name}\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dashboard-sidebar\">\r\n          <div style={{margin: '5px'}}>\r\n            <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\r\n              <FontAwesomeIcon icon=\"plus\" /> New\r\n            </button>\r\n            <input \r\n              type=\"text\" \r\n              name=\"searchValue\" \r\n              value={this.state.searchValue}\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleInputChange} />\r\n          </div>\r\n          <div>\r\n            {dashboardRows}\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route \r\n            path=\"/workspace/dashboard/:id\" \r\n            render={(props) => <DashboardEditView key={props.match.params.id} onDashboardSave={this.onDashboardSave} onDashboardDelete={this.onDashboardDelete} />} \r\n            />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'small-modal-panel'} \r\n          title={'New'} >\r\n          <div>\r\n            <label className=\"form-label\">Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              />\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.dashboardEditView.loadViewByDashboardName();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView wrappedComponentRef={comp => (this.dashboardEditView = comp)} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst SYS_ROLES = ['developer', 'viewer'];\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      searchValue: '',\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      this.setState({\r\n        id: user.id,\r\n        username: user.username,\r\n        name: user.name,\r\n        tempPassword: '',\r\n        sysRole: user.sysRole,\r\n        userGroups: user.userGroups\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      userGroupId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: sysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/user/' + id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n      });\r\n  }\r\n\r\n  addUserGroup = () => {\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId) => {\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      users = [],\r\n      groups = [],\r\n      userGroups = []\r\n    } = this.state;\r\n\r\n    const userItems = users.map(user => \r\n      <div key={user.id} className=\"user-card\">\r\n        <p>\r\n          {user.username}\r\n          {user.name}\r\n          {user.sysRole}\r\n          <button className=\"button\" onClick={() => this.openEditPanel(user)}>update</button>\r\n          <button className=\"button\" onClick={() => this.delete(user.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups.length; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups.length; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId}>\r\n                <div>Group: {groups[j].name}</div>\r\n                <button className=\"button\" onClick={() => this.removeUserGroup(groupId)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>User</div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"searchValue\"\r\n          value={this.state.searchValue}\r\n          onChange={this.handleInputChange}\r\n          placeholder=\"Search...\"\r\n          style={{width: '200px'}}\r\n        />\r\n        <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n        <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n          <FontAwesomeIcon icon=\"plus\" /> New User\r\n        </button>\r\n        <div className=\"row\">\r\n          {userItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'} \r\n          title={'User'} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label className=\"form-label\">Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label className=\"form-label\">Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label className=\"form-label\">Temp password</label>\r\n            <input \r\n              type=\"password\" \r\n              name=\"tempPassword\" \r\n              value={this.state.tempPassword}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            <label className=\"form-label\">System Role</label>\r\n            <Select\r\n              name={'sysRole'}\r\n              value={this.state.sysRole}\r\n              onChange={this.handleOptionChange}\r\n              options={SYS_ROLES}\r\n            />\r\n            \r\n            <br/>\r\n            \r\n            <label className=\"form-label\">Groups</label>\r\n            <Select\r\n              name={'userGroupId'}\r\n              value={this.state.userGroupId}\r\n              onChange={this.handleIntegerOptionChange}\r\n              options={groups}\r\n              optionDisplay={'name'}\r\n              optionValue={'id'}\r\n            />\r\n            <button className=\"button\" onClick={this.addUserGroup}>Add</button>\r\n            <div>\r\n              {userGroupItems}\r\n            </div>\r\n\r\n            <button className=\"button\" className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      this.setState({\r\n        id: group.id,\r\n        name: group.name,\r\n        groupDashboards: group.groupDashboards\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      groupDashboardId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/group/' + id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n      });\r\n  }\r\n\r\n  addGroupDashboard= () => {\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    console.log('addGroupDashboard', groupDashboardId);\r\n    console.log('addGroupDashboard', groupDashboards);\r\n\r\n    if (groupDashboardId) {\r\n      const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n      if (index === -1) {\r\n        const newGroupDashboards = [...groupDashboards];\r\n        newGroupDashboards.push(groupDashboardId);\r\n        this.setState({\r\n          groupDashboards: newGroupDashboards\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId) => {\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const groupItems = groups.map(group => \r\n      <div key={group.id} className=\"group-card\">\r\n        <p>\r\n          {group.name}\r\n          <button className=\"button\" onClick={() => this.openEditPanel(group)}>update</button>\r\n          <button className=\"button\" onClick={() => this.delete(group.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards.length; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards.length; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId}>\r\n                <div>Name: {dashboards[j].name}</div>\r\n                <button className=\"button\" onClick={() => this.removeGroupDashboard(dashboardId)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"searchValue\"\r\n          value={this.state.searchValue}\r\n          onChange={this.handleInputChange}\r\n          placeholder=\"Search...\"\r\n          style={{width: '200px'}}\r\n          />\r\n        <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n        <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n          <FontAwesomeIcon icon=\"plus\" /> New Group\r\n        </button>\r\n        <div className=\"row\">\r\n          {groupItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'} \r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label className=\"form-label\">Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            <label className=\"form-label\">Dashboards</label>\r\n            <Select\r\n              name={'groupDashboardId'}\r\n              value={this.state.groupDashboardId}\r\n              onChange={this.handleIntegerOptionChange}\r\n              options={dashboards}\r\n              optionDisplay={'name'}\r\n              optionValue={'id'}\r\n            />\r\n            <button className=\"button\" onClick={this.addGroupDashboard}>Add</button>\r\n            <div>\r\n              {groupDashboardItems}\r\n            </div>\r\n            \r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\nimport { Route, Link, Switch } from \"react-router-dom\";\r\nimport User from './User';\r\nimport Group from './Group';\r\nimport './UserManagement.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/user-management/group',\r\n    value: 'Group',\r\n    icon: 'fa-user-cog',\r\n  },\r\n  {\r\n    link: '/workspace/user-management/user',\r\n    value: 'User',\r\n    icon: 'fa-users'\r\n  }\r\n];\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '',\r\n    }\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let menuItems = [];\r\n    for (let i = 0; i < MENU_ITEMS.length; i++) {\r\n      const menu = MENU_ITEMS[i];\r\n      const active = this.state.currentMenuLink === menu.link ? 'nav-menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li className={active} key={i}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"app-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <ul className=\"nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/workspace/user-management/user\" component={User} />\r\n            <Route path=\"/workspace/user-management/group\" component={Group} />\r\n          </Switch>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        alert('confirm password');\r\n        return;\r\n      }\r\n      \r\n      user.password = password;\r\n    }\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>Account</div>\r\n        <div className=\"form-panel\">   \r\n          <label className=\"form-label\">Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label className=\"form-label\">Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label className=\"form-label\">System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label className=\"form-label\">API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button className=\"button\" onClick={this.generateApiKey}>Generate new API Key</button>\r\n          <br/>\r\n\r\n          <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n          {\r\n            showUpdatePassword ?\r\n            (\r\n              <React.Fragment>\r\n                <br/>\r\n                <label className=\"form-label\">Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label className=\"form-label\">Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n            ) : null\r\n          }\r\n\r\n          <br/>\r\n          <button className=\"button\" onClick={this.save}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","import React from 'react';\r\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\n\r\nimport Toast from '../components/Toast';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport AuthStore from '../api/AuthStore';\r\nimport './Workspace.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data source',\r\n    icon: 'database'\r\n  }, \r\n  {\r\n    link: '/workspace/user-management',\r\n    value: 'User Management',\r\n    icon: 'users-cog'\r\n  }\r\n];\r\n\r\nconst ACCOUNT_MENU_LINK = '/workspace/account';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard',\r\n      username: '',\r\n      sysRole: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Workspace - componentDidMount');\r\n    const pathname = this.props.location.pathname;\r\n    // TODO: fetch user information\r\n    this.setState({\r\n      currentMenuLink: pathname,\r\n    });\r\n    if (AuthStore.isAuthenticated) {\r\n      const sysRole = AuthStore.sysRole;\r\n      this.setState({\r\n        sysRole: sysRole\r\n      });\r\n    } else {\r\n      // Try login. If not, redirect\r\n    }\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n      sysRole\r\n    } = this.state;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.name === 'dashboard' || m.name === 'account');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li key={menu.link} className={active}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"workspace-nav\">  \r\n          <div className=\"workspace-name\">Poli</div>\r\n          <ul className=\"workspace-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div className=\"workspace-account-menu\">\r\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\r\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\r\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\r\n                <span className=\"workspace-nav-menu-text\">Account</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"workspace-logout-button inline-block\">\r\n              <Link to=\"/login\">\r\n                <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"workspace-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route exact path=\"/workspace/dashboard/view\" component={DashboardFullScreenView} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n            <Route path=\"/workspace/dashboard\" component={Dashboard} />\r\n            <Route path=\"/workspace/user-management\" component={UserManagement} />\r\n          </Switch>\r\n        </div>\r\n        <Toast />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Workspace);\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, Component } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\n\r\nimport AuthStore from './api/AuthStore';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv\r\n} from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('App - componentDidMount', AuthStore.isAuthenticated);\r\n  }\r\n   \r\n  render() {\r\n    console.log('App - render', AuthStore.isAuthenticated);\r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <PrivateRoute authenticated={AuthStore.isAuthenticated} path='/workspace' component={Workspace} />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} />\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}