{"version":3,"sources":["views/Overview.js","api/WebApi.js","views/DataSources.js","views/Dashboards.js","components/GridDraggable.js","components/GridResizable.js","components/GridItem.js","components/GridLayout.js","views/Test.js","views/EditDataSource.js","components/QuerySlicer.js","components/NumberRange.js","components/FilterViewPanel.js","components/WidgetViewPanel.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/SingleTest.js","App.js","index.js"],"names":["Overview","react_default","a","createElement","Component","fetchDataSources","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","get","abrupt","sent","stop","this","apply","arguments","_ref3","_callee3","url","response","_context3","axios","data","t0","_x2","DataSources","state","jdbcDataSources","showEditPanel","id","name","connectionUrl","username","password","type","ping","handleInputChange","event","target","value","_this","setState","defineProperty","save","preventDefault","ds","post","then","res","initData","update","console","log","put","delete","concat","clearEditPanel","showDeletePanel","webApi","_this2","filterDrawerClass","jdbcDataSourceItems","map","index","key","onClick","mode","className","onChange","row","Dashboard","dashboards","fetchBoards","dashboard","dashboardId","props","history","push","jump","panelClass","dashboardRows","d","withRouter","GridDraggable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onMouseDown","gridItemNode","ReactDOM","findDOMNode","assertThisInitialized","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","i","length","style","zIndex","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","width","boxHeight","height","Math","floor","left","top","React","GridResizable","prevWidth","prevHeight","GridItem","x","y","styles","backgroundColor","position","title","components_GridDraggable","es","firstName","lastName","columns","Header","accessor","defaultPageSize","components_GridResizable","GridLayout","snapToGrid","showGridlines","margin","border","backgroundSize","backgroundImage","boxItems","box","components_GridItem","Test","selectedOption","newValue","submit","handleChange","lib_default","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","components_GridLayout","PureComponent","EditDataSource","router","reset","initialState","match","params","undefined","QuerySlicer","isSelectAll","isChecked","checked","newCheckBox","toConsumableArray","checkBoxes","find","filterId","toggleSelectAll","newIsSelectAll","newCheckBoxes","prevState","NumberRange","FilterViewPanel","fetchFilters","result","filters","queryFilters","filter","queryRequest","findIndex","f","newFilters","queryResult","JSON","parse","renderFilterPanel","filterPanel","Array","isArray","values","_i2","val","components_QuerySlicer","onQuerySlicerChange","components_NumberRange","run","WidgetViewPanel","fetchWidgets","widgets","queryWidgets","widget","w","newWidgets","widgetItems","headers","obj","keys","_i","minRows","showPagination","CHART_TYPES","WidgetEditPanel","fetchWidget","jdbcDataSourceId","widgetId","_x","handleAceEditorChange","sqlQuery","handleDataSourceChange","close","onClose","runQuery","queryResultItem","show","dataSourceOptions","chartOptionList","o","marginTop","optionValue","handleOptionChange","class","TYPES","FilterEditPanel","fetchFilter","handleTypeChange","typeOptions","t","DashboardEditView","refresh","filterViewPanel","current","widgetViewPanel","showFilterEditPanel","filterEditPanel","showWidgetEditPanel","widgetEditPanel","jdbcDataSourceOptions","createRef","components_FilterViewPanel","ref","components_WidgetViewPanel","components_WidgetEditPanel","components_FilterEditPanel","SingleTest","App","handleClick","e","toggleMenu","menuMin","Link","to","Route","exact","path","component","Dashboards","render","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.573c33e4.chunk.js","sourcesContent":["\nimport React, { Component } from 'react';\n\nclass Overview extends Component {\n\n  render() {\n    return (\n      <div>\n        <h1>Overview</h1>     \n        <h5>Number of data sources</h5>\n        <h5>Number of dashboards</h5>\n      </div>\n    );\n  }\n}\n\nexport default Overview;\n","import axios from 'axios';\n\nconst JSON_HEADER = {\n  headers: {\n    'Content-Type': 'application/json',\n  }\n};\n\nexport const fetchDataSources = async () => {\n  return await get('/ws/jdbcdatasource');\n};\n\nexport const fetchDashboardById = async (id) => {\n  return await get(`/ws/dashboard/${id}`);\n}\n\n\nconst get = async (url) => {\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (e) {\n    return [];\n  }\n} \n\n\n","\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport * as webApi from '../api/WebApi';\n\nclass DataSources extends Component {\n\n  state = { \n    jdbcDataSources: [],\n    showEditPanel: false,\n    id: null,\n    name: '',\n    connectionUrl: '',\n    username: '',\n    password: '',\n    type: '',\n    ping: ''\n  };\n\n  componentDidMount() {\n    // Fetch all datasources\n    this.initData();\n    \n  }\n\n  async initData() {\n    const jdbcDataSources = await webApi.fetchDataSources();\n    this.setState({ \n      jdbcDataSources: jdbcDataSources \n    });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  save = (event) => {\n    event.preventDefault();\n    const ds = {\n      connectionUrl: this.state.connectionUrl,\n      username: this.state.username,\n      password: this.state.password,\n      name: this.state.name,\n      type: this.state.password,\n      ping: this.state.ping\n    };\n\n    axios.post('/ws/jdbcdatasource', ds)\n      .then(res => {\n        this.initData();\n      });\n  }\n\n  update = (ds) => {\n    console.log('update', ds);\n\n    axios.put('/ws/jdbcdatasource', ds)\n      .then(res => {\n        this.initData();\n      });\n  }\n\n  delete = (id) => {\n    console.log('delete', id);\n    axios.delete('/ws/jdbcdatasource/' + id)\n      .then(res => {\n        this.initData();\n      });\n  }\n\n  ping = (id) => {\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\n      .then(res => {\n        console.log('ping', res.data);\n      });\n  }\n\n  clearEditPanel = () => {\n    this.setState({\n      id: null,\n      connectionUrl: '',\n      username: '',\n      password: '',\n      name: '',\n      type: '',\n      ping: ''\n    });\n  }\n\n  showEditPanel = (ds) => {\n    if (ds !== null) {\n      this.setState({\n        id: ds.id,\n        connectionUrl: ds.connectionUrl,\n        username: ds.username,\n        password: ds.password,\n        name: ds.name,\n        type: ds.type,\n        ping: ds.ping\n      });\n    } else {\n      this.clearEditPanel();\n    }\n    \n    this.setState({\n      showEditPanel: true\n    }); \n  }\n\n  showDeletePanel = () => {\n\n  }\n\n  render() {\n\n    const filterDrawerClass = this.state.showEditPanel ? 'right-drawer display-block' : 'right-drawer display-none';\n\n    const jdbcDataSourceItems = this.state.jdbcDataSources.map((ds, index) => \n      <tr key={index}>\n        <td>{ds.name}</td>\n        <td>{ds.connectionUrl}</td>\n        <td>{ds.type}</td>\n        <td>{ds.username}</td>\n        <td>{ds.ping}</td>\n        <td><button onClick={() => this.showEditPanel(ds)}>update</button></td>\n        <td><button onClick={() => this.delete(ds.id)}>delete</button></td>\n        <td><button onClick={() => this.ping(ds.id)}>ping</button></td>\n      </tr>\n    );\n\n    const mode = this.state.id === null ? 'New' : 'Update';\n\n    return (\n      <div>\n        <h1>Data Sources</h1>\n        <div>\n          <h2>Table</h2>\n\n          <table>\n            <thead>\n            </thead>\n            <tbody>\n              {jdbcDataSourceItems}\n            </tbody>\n          </table>\n\n        </div>\n        <button onClick={() => this.showEditPanel(null)}>\n          Add\n        </button>\n\n        <div className={filterDrawerClass}>\n          <h3>{mode}</h3>\n          <button onClick={() => this.setState({showEditPanel: false })}>Close</button>\n          <form>\n            <label>Name</label>\n            <input \n              type=\"text\" \n              name=\"name\" \n              value={this.state.name}\n              onChange={this.handleInputChange} />\n\n            <label>Connection Url</label>\n            <textarea\n              row=\"3\"\n              type=\"text\" \n              name=\"connectionUrl\" \n              value={this.state.connectionUrl}\n              onChange={this.handleInputChange} >\n            </textarea>\n\n            <label>Username</label>\n            <input \n              type=\"text\" \n              name=\"username\" \n              value={this.state.username}\n              onChange={this.handleInputChange} />\n\n            <label>Password</label>\n            <input \n              type=\"password\" \n              name=\"password\" \n              value={this.state.password}\n              onChange={this.handleInputChange} />\n\n            <label>Type</label>\n            <input \n              type=\"text\" \n              name=\"type\" \n              value={this.state.type}\n              onChange={this.handleInputChange} />\n\n            <label>Ping</label>\n            <input \n              type=\"text\" \n              name=\"ping\" \n              value={this.state.ping}\n              onChange={this.handleInputChange} />\n          </form>\n\n          <div>\n            <button onClick={this.save}>Save</button>\n            <button onClick={this.ping}>Ping</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DataSources;\n","\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport axios from 'axios';\n\n\nclass Dashboard extends Component {\n\n  state = { \n    dashboards: [],\n    showEditPanel: false,\n    name: ''\n  };\n\n  componentDidMount() {\n    this.fetchBoards();\n  }\n\n  fetchBoards = () => {\n    axios.get('/ws/dashboard')\n      .then(res => {\n        const dashboards = res.data;\n        this.setState({ \n          dashboards: dashboards \n        });\n      });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  save = () => {\n    const dashboard = {\n      name: this.state.name\n    };\n\n    axios.post('/ws/dashboard', dashboard)\n      .then(res => {\n        const dashboardId = res.data;\n        this.props.history.push(`/dashboard/edit/${dashboardId}`);\n      });\n  }\n\n  update = (dashboardId) => {\n    this.props.history.push(`/dashboard/edit/${dashboardId}`);\n  }\n\n  delete = (dashboardId) => {\n    console.log('delete', dashboardId);\n    axios.delete('/ws/dashboard/' + dashboardId)\n      .then(res => {\n        this.fetchBoards();\n      });\n  }\n\n  jump = () => {\n    this.props.history.push('/overview');\n  }\n\n  render() {\n    const panelClass = this.state.showEditPanel ? 'right-drawer display-block' : 'right-drawer display-none';\n\n    const dashboardRows = this.state.dashboards.map((d, index) => \n      <tr key={index}>\n        <td>{d.id}</td>\n        <td>{d.name}</td>\n        <td><button onClick={() => this.update(d.id)}>update</button></td>\n        <td><button onClick={() => this.delete(d.id)}>delete</button></td>\n      </tr>\n    );\n\n    return (\n      <div>\n        Board\n        <button onClick={this.jump}>Overview</button>\n        <button onClick={() => this.setState({ showEditPanel: true })}>Add</button>\n\n        <table>\n          <thead>\n          </thead>\n          <tbody>\n            {dashboardRows}\n          </tbody>\n        </table>\n\n        <div className={panelClass}>\n          <div>New dashboard</div>\n          <button onClick={() => this.setState({showEditPanel: false })}>Close</button>\n          <button onClick={this.save}>Save</button>\n          <form>\n            <label>Name</label>\n            <input \n              type=\"text\" \n              name=\"name\" \n              value={this.state.name}\n              onChange={this.handleInputChange} />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Dashboard);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass GridDraggable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      xOffset: 0,\n      yOffset: 0\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\n    const yOffset = event.clientY - gridItemNode.offsetTop;\n\n    let boxes = document.getElementsByClassName(\"grid-box\");\n    for (let i = 0; i < boxes.length; i++) {\n        boxes[i].style.zIndex = 2;\n    }\n    gridItemNode.style.zIndex = 3;\n\n    \n    const { ownerDocument } = gridItemNode;\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\n    this.setState({\n      xOffset: xOffset,\n      yOffset: yOffset\n    });\n\n    this.props.onMouseDown('drag');\n  }\n\n  onMouseUp = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n    this.props.onMouseUp();\n  }\n\n  onMouseMove = (event) => {\n    console.log('GridDraggable onMouseMove', event);\n    event.preventDefault();\n    if (this.props.mode !== 'drag') {\n      return; \n    }\n\n    let gridCell = 5;\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    let currentX = event.clientX - this.state.xOffset;\n    let currentY = event.clientY - this.state.yOffset;\n    \n    const containerNode = gridItemNode.parentNode;\n    const containerWidth = containerNode.clientWidth;\n    const containerHeight = containerNode.clientHeight;\n    \n    let boxWidth = parseInt(gridItemNode.style.width, 10) + 4;\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + 4;\n\n\n    if (currentX < 0) {\n      currentX = 0;\n    }\n    if (currentY < 0) {\n      currentY = 0;\n    }\n    if (currentX + boxWidth > containerWidth) {\n      currentX = containerWidth - boxWidth;\n    }\n    if (currentY + boxHeight > containerHeight) {\n      currentY = containerHeight - boxHeight;\n    }\n    \n\n    currentX = Math.floor(currentX / gridCell) * gridCell;\n    currentY = Math.floor(currentY / gridCell) * gridCell;\n\n    gridItemNode.style.left = currentX + 'px';\n    gridItemNode.style.top = currentY + 'px';\n  }\n\n  render() {\n    return (\n      <div className=\"grid-draggable\"\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp} >\n      </div>\n    )\n  }\n}\n\nexport default GridDraggable;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass GridResizable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      xOffset: 0,\n      yOffset: 0,\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (event) => {\n    console.log('onMouseDown', event);\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    const xOffset = event.clientX;\n    const yOffset = event.clientY;\n    \n    const { ownerDocument } = thisNode;\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\n    this.setState({\n      xOffset: xOffset,\n      yOffset: yOffset\n    });\n\n    this.props.onMouseDown('resize');\n  }\n\n  onMouseUp = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n    this.props.onMouseUp();\n  }\n\n  onMouseMove = (event) => {\n    console.log('GridResizer onMouseMove', event);\n    event.preventDefault();\n\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\n\n    let currentX = event.clientX - this.state.xOffset;\n    let currentY = event.clientY - this.state.yOffset;\n\n    gridItemNode.style.width = Math.floor(prevWidth + currentX) + 'px';\n    gridItemNode.style.height = Math.floor(prevHeight + currentY) + 'px';\n\n    const xOffset = event.clientX;\n    const yOffset = event.clientY;\n    this.setState({\n      xOffset: xOffset,\n      yOffset: yOffset\n    });\n  }\n\n  render() {\n    return (\n      <div \n        className=\"grid-resizable\"\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp} >\n      </div>\n    )\n  }\n}\n\nexport default GridResizable;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GridDraggable from './GridDraggable';\nimport GridResizable from './GridResizable';\n\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\n\nclass GridItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      x: this.props.x,\n      y: this.props.y,\n      mode: ''\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (mode) => {\n    console.log('GridItem onMouseDown', mode);\n    this.setState({\n      mode: mode\n    });\n  }\n\n  onMouseUp = () => {\n    console.log('GridItem onMouseUp');\n    this.setState({\n      mode: ''\n    });\n  }\n\n  onMouseMove = (event, mode, state) => {\n    console.log('GridItem onMouseMove', event);\n    event.preventDefault();   \n  }\n\n  render() {\n    let styles = {\n      left: this.state.x,\n      top: this.state.y,\n      width: this.props.width,\n      height: this.props.height,\n      backgroundColor: '#f1f1f1',\n      position: 'absolute',\n      zIndex: 1\n    };\n\n    const data = [\n      {firstName: 'a1', lastName: 'b1'},\n      {firstName: 'a2', lastName: 'b2'},\n      {firstName: 'a3', lastName: 'b3'}\n    ];\n\n    return (\n      <div className=\"grid-box\" style={styles}>\n        <div className=\"grid-box-title\">\n          {this.props.title}\n        </div>\n        <GridDraggable \n          onMouseUp={this.onMouseUp}\n          onMouseDown={this.onMouseDown}\n          onMouseMove={this.onMouseMove}\n          mode={this.state.mode} />\n          \n          <ReactTable\n            data={data}\n            columns={[\n              {\n                Header: \"First Name\",\n                accessor: \"firstName\"\n              },\n              {\n                Header: \"Last Name\",\n                accessor: \"lastName\"\n              },\n            ]}\n            defaultPageSize={10}\n          />\n        <GridResizable \n          onMouseUp={this.onMouseUp}\n          onMouseDown={this.onMouseDown}\n          onMouseMove={this.onMouseMove}\n          mode={this.state.mode} />\n      </div>\n    )\n  }\n}\n\nexport default GridItem;","import React from 'react';\n\nimport GridItem from './GridItem';\n\nconst boxes = [\n   {\n    title: 'title1',\n    x: 0,\n    y: 0,\n    width: 100,\n    height: 100\n  },\n  {\n    title: 'title2',\n    x: 100,\n    y: 100,\n    width: 100,\n    height: 100\n  }\n];\n\nclass GridLayout extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      boxes: [],\n      snapToGrid: false,\n      showGridlines: true,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      boxes: boxes\n    });\n  }\n\n  render() {\n    const width = 600;\n    const height = 400;\n\n    let styles = {\n      width: width,\n      height: height,\n      position: 'relative',\n      margin: '20px',\n      border: '1px solid blue'\n    };\n\n    if (this.state.showGridlines) {\n      styles.backgroundSize = '20px 20px';\n      styles.backgroundImage = 'linear-gradient(to right, grey 1px, transparent 1px), linear-gradient(to bottom, grey 1px, transparent 1px)';\n    }\n\n    const boxItems = this.state.boxes.map((box, index) => \n      <GridItem\n        key={index}\n        x={box.x}\n        y={box.y}\n        width={box.width}\n        height={box.height}\n        title={box.title}\n      />\n    );\n\n\n    return (\n      <div\n        style={styles} >\n        {boxItems}\n      </div>\n    )\n  }\n}\n\nexport default GridLayout;","\nimport React from 'react';\nimport AceEditor from 'react-ace';\n\nimport 'brace/mode/mysql';\nimport 'brace/theme/xcode';\n\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nimport GridLayout from '../components/GridLayout';\n\nconst options = [\n  { value: 'chocolate', label: 'Chocolate' },\n  { value: 'strawberry', label: 'Strawberry' },\n  { value: 'vanilla', label: 'Vanilla' }\n];\n\nclass Test extends React.PureComponent {\n\n  state = {\n    selectedOption: null,\n    data: [\n      {firstName: 'a1', lastName: 'b1'},\n      {firstName: 'a2', lastName: 'b2'},\n      {firstName: 'a3', lastName: 'b3'}\n    ]\n  }\n\n  onChange = (newValue) => {\n    console.log('change',newValue);\n  }\n\n  submit = () => {\n    console.log('submit', );\n  }\n\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption });\n    console.log(`Option selected:`, selectedOption);\n  }\n\n  render() {\n    const { selectedOption } = this.state;\n    const { data } = this.state;\n\n    return (\n      <div>\n        <AceEditor\n          mode=\"mysql\"\n          theme=\"xcode\"\n          name=\"blah2\"\n          onChange={this.onChange}\n          height={'300px'}\n          width={'300px'}\n          fontSize={18}\n          showPrintMargin={false}\n          showGutter={true}\n          highlightActiveLine={true}\n          setOptions={{\n            enableBasicAutocompletion: true,\n            enableLiveAutocompletion: true,\n            enableSnippets: false,\n            showLineNumbers: true,\n            tabSize: 2,\n            }}\n          />\n          <button onClick={this.submit}>Submit</button>\n\n          <ReactTable\n            data={data}\n            columns={[\n              {\n                Header: \"First Name\",\n                accessor: \"firstName\"\n              },\n              {\n                Header: \"Last Name\",\n                accessor: \"lastName\"\n              },\n            ]}\n            defaultPageSize={10}\n          />\n\n          <GridLayout />\n      </div>\n    )\n  }\n}\n\nexport default Test;\n","\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass EditDataSource extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {\n      id: 0,\n      name: '',\n      connectionUrl: '',\n      username: '',\n      password: '',\n      type: '',\n      ping: '',\n      mode: ''\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    console.log(\"id\", id);\n    let mode = 'Edit';\n    if (id === undefined) {\n      mode = 'New';\n    }\n    this.setState({\n      mode: mode\n    });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  save = (event) => {\n    event.preventDefault();\n    const ds = {\n      connectionUrl: this.state.connectionUrl,\n      username: this.state.username,\n      password: this.state.password,\n      name: this.state.name,\n      type: this.state.password,\n      ping: this.state.ping\n    };\n\n    const { router } = this.props;\n\n    axios.post('/ws/jdbcdatasource', ds)\n      .then(res => {\n        this.reset();\n        router.push('/datasources');\n      });\n  }\n\n  reset = () => {\n    this.setState(this.initialState);\n  }\n\n  ping = () => {\n    \n  }\n\n  render() {\n\n    return (\n      <div>\n        <h1>{this.state.mode} Data Source</h1>\n        \n\n        \n\n        <div>\n          <button type=\"primary\" onClick={this.save}>Save</button>\n          <button type=\"primary\" onClick={this.ping}>Ping</button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default EditDataSource;\n","import React from 'react';\n\nclass QuerySlicer extends React.Component {\n\n  state = {\n    isSelectAll: false,\n  }\n\n  handleChange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const isChecked = target.checked;\n\n    const newCheckBoxes = [...this.props.checkBoxes];\n    const newCheckBox = newCheckBoxes.find(x => x.value === name);\n    newCheckBox.isChecked = isChecked;\n\n    this.props.onChange(this.props.filterId, newCheckBox);\n  }\n\n  toggleSelectAll = () => {\n    const newIsSelectAll = !this.state.isSelectAll;\n    const newCheckBoxes = [...this.props.checkBoxes];\n    for (let i = 0; i < newCheckBoxes.length; i++) {\n      newCheckBoxes[i].isChecked = newIsSelectAll;\n    }\n    this.props.onChange(this.props.filterId, newCheckBoxes);\n\n    this.setState(prevState => ({\n      isSelectAll: !prevState.isSelectAll\n    }));\n  }\n\n  render() {\n\n    const checkBoxes = this.props.checkBoxes.map((box, index) => \n      <div key={index}>\n        <input \n          type=\"checkbox\" \n          name={box.value} \n          value={box.value} \n          checked={box.isChecked} \n          onChange={this.handleChange}\n          />\n          {box.value}\n        <br/>\n      </div>\n    );\n\n    return (\n      <div>\n        <button onClick={this.toggleSelectAll}>Toggle Select All {this.state.isSelectAll}</button>\n        <div>\n          {checkBoxes}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QuerySlicer;\n","import React from 'react';\n\nclass NumberRange extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        min\n        <input type=\"number\" name=\"min\" />\n        max\n        <input type=\"number\" name=\"max\" />\n      </div>\n    );\n  }\n}\n\nexport default NumberRange;","import React, { Component } from 'react';\nimport QuerySlicer from \"./QuerySlicer\";\nimport NumberRange from \"./NumberRange\";\n\nimport axios from 'axios';\n\n\nclass FilterViewPanel extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      filters: []\n    };\n  }\n\n  fetchFilters = (dashboardId) => {\n    if (dashboardId === null) {\n      return;\n    }\n\n    axios.get('/ws/filter/dashboard/' + dashboardId)\n      .then(res => {\n        const result = res.data;\n        this.setState({\n          filters: result,\n        }, this.queryFilters);\n      });\n  }\n\n  queryFilters = () => {\n    const filters = this.state.filters;\n    for (let i = 0; i < filters.length; i++) {\n      const filter = filters[i];\n      if (filter.type === 'slicer') {\n        const queryRequest = filter.data;\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\n          .then(res => {\n            const result = res.data;\n            const index = filters.findIndex(f => f.id === result.id);\n            const newFilters = [...this.state.filters];\n            newFilters[index].queryResult = JSON.parse(result.data);\n            this.setState({\n              filters: newFilters\n            });\n          });\n      }\n    }\n  }\n\n\n  renderFilterPanel = () => {\n    console.log('renderFilterPanel');\n    const filterPanel = [];\n    const filters = this.state.filters;\n    for (let i = 0; i < filters.length; i++) {\n      const filter = filters[i];\n      if (filter.type === 'slicer') {\n        console.log('11111');\n\n        const queryResult = filter.queryResult;\n        const checkBoxes = [];\n        if (queryResult !== undefined \n          && queryResult.length !== 0 \n          && Array.isArray(queryResult)) {\n          for (let i = 0; i < queryResult.length; i++) {\n            const values = Object.values(queryResult[i]);\n            for (const val of values) {\n              checkBoxes.push({\n                value: val,\n                isChecked: false\n              });\n            }\n          }\n\n          filterPanel.push(\n            (\n              <div className=\"filterCard\">\n                <div>{filter.name}</div>\n                <div>\n                  <QuerySlicer \n                    key={i} \n                    filterId={filter.id} \n                    checkBoxes={checkBoxes} \n                    onChange={this.onQuerySlicerChange} \n                  />\n                </div>\n              </div>\n            )\n          );\n        }\n      } else if (filter.type === 'number-range') {\n        filterPanel.push(<NumberRange key={i} />);\n      } else if (filter.type === 'date-range') {\n\n      }\n    }\n    return filterPanel;\n  }\n\n  onQuerySlicerChange = (filterId, checkBoxes) => {\n    console.log('onQuerySlicerChange', filterId, checkBoxes);\n\n    const filter = this.state.filters.find(f => f.id === filterId);\n\n    const checked = [];\n    for (let i = 0; i < checkBoxes.length; i++) {\n      if (checkBoxes[i].isChecked) {\n        checked.push(checkBoxes[i]);\n      }\n    }\n\n    // const isSelectAll = checked.length === checkBoxes.length;    \n  }\n\n\n  run = () => {\n    console.log('run');\n  \n    // TODO: call props\n  }\n\n  render() {\n    return (\n      <div className=\"testPanel\">\n        <h5>FilterViewPanel</h5>\n        <button onClick={this.run}>Run</button>\n        <div className=\"filterViewPanel\">\n          {this.renderFilterPanel()}\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default FilterViewPanel;","\nimport React from 'react';\nimport axios from 'axios';\n\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nclass WidgetViewPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dashboardId: null,\n      widgets: []\n    };\n  }\n\n  fetchWidgets = (dashboardId) => {\n    if (dashboardId === null) {\n      return;\n    }\n\n    axios.get('/ws/widget/dashboard/' + dashboardId)\n      .then(res => {\n        const result = res.data;\n        this.setState({\n          widgets: result,\n        }, this.queryWidgets);\n      });\n  }\n\n  queryWidgets() {\n    const widgets = this.state.widgets;\n    for (let i = 0; i < widgets.length; i++) {\n      const widget = widgets[i];\n      axios.get('/ws/jdbcquery/widget/' + widget.id)\n        .then(res => {\n          const result = res.data;\n          const index = widgets.findIndex(w => w.id === result.id);\n          const newWidgets = [...this.state.widgets];\n          newWidgets[index].queryResult = JSON.parse(result.data);\n          this.setState({\n            widgets: newWidgets\n          });\n        });\n    }\n  }\n\n  render() {\n\n    const widgetItems = this.state.widgets.map((widget, index) => {\n      \n      const headers = [];\n      const queryResult = widget.queryResult;\n      if (queryResult !== undefined && Array.isArray(queryResult)) {\n        const obj = queryResult[0];\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n          headers.push({\n            Header: key,\n            accessor: key\n          })\n        }\n      }\n\n      return (\n        <div key={index}>\n          <ReactTable\n            data={queryResult}\n            columns={headers}\n            minRows={0}\n            showPagination={false}\n          />\n        </div>);\n    });\n\n    return (\n      <div className=\"testPanel\">\n        <h3>WidgetViewPanel</h3>\n        {widgetItems}\n      </div>\n    )\n  };\n}\n\nexport default WidgetViewPanel;","\nimport React from 'react';\n\nimport AceEditor from 'react-ace';\n\nimport 'brace/mode/mysql';\nimport 'brace/theme/xcode';\n\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\n\nimport axios from 'axios';\n\nimport * as webApi from '../api/WebApi';\n\nconst CHART_TYPES = ['table', 'pie'];\n\nclass WidgetEditPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      jdbcDataSources: [],\n      widgetId: null,\n      name: '',\n      sqlQuery: '',\n      jdbcDataSourceId: null,\n      queryResult: []\n    };\n  }\n\n  componentDidMount() {\n    console.log('WidgetEditPanel', 'componentDidMount');\n  }\n\n  fetchWidget = async (id) => {\n    const jdbcDataSources = await webApi.fetchDataSources();\n    this.setState({ \n      jdbcDataSources: jdbcDataSources \n    });\n\n    if (id === null) {\n      if (jdbcDataSources.length !== 0) {\n        this.setState({\n          jdbcDataSourceId: jdbcDataSources[0].id \n        });\n      }\n      this.setState({\n        widgetId: null\n      })\n    } else {\n      this.setState({\n        widgetId: id\n      })\n    }\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleAceEditorChange = (newValue) => {\n    this.setState({\n      sqlQuery: newValue\n    });\n  }\n\n  handleDataSourceChange = (event) => {\n    this.setState({ \n      jdbcDataSourceId: event.target.value\n    });\n  }\n\n  save = (event) => {\n    event.preventDefault();\n    const widget ={\n      id: this.state.widgetId,\n      name: this.state.name,\n      dashboardId: this.props.dashboardId,\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\n      sqlQuery: this.state.sqlQuery\n    };\n    \n    axios.post('/ws/widget', widget)\n      .then(res => {\n        \n      });\n  }\n\n  close = () => {\n    this.props.onClose();\n  }\n\n  runQuery = (event) => {\n    event.preventDefault();\n    const queryRequest ={\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\n      sqlQuery: this.state.sqlQuery\n    };\n\n    axios.post('/ws/jdbcquery/query', queryRequest)\n      .then(res => {\n        const result = res.data;\n        const queryResult = result;\n        this.setState({\n          queryResult: queryResult\n        });\n      });\n  }\n\n  render() {\n    const panelClass = this.props.show ? 'right-drawer display-block' : 'right-drawer display-none';\n\n    const dataSourceOptions = this.state.jdbcDataSources.map(ds =>\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\n    );\n\n    const chartOptionList = CHART_TYPES.map(o =>\n      <option value={o} key={o}>{o}</option>\n    );\n\n\n    const headers = [];\n    const queryResult = this.state.queryResult;\n    let queryResultItem;\n    if (queryResult !== undefined && queryResult.length !== 0 && Array.isArray(queryResult)) {\n      const obj = queryResult[0];\n      const keys = Object.keys(obj);\n      for (const key of keys) {\n        headers.push({\n          Header: key,\n          accessor: key\n        })\n      }\n\n      queryResultItem = (\n        <ReactTable\n          data={this.state.queryResult}\n          columns={headers}\n          minRows={0}\n          showPagination={false}\n        />\n      );\n    } else {\n      queryResultItem = (\n        <div>{queryResult}</div>\n      );\n    }\n\n    return (\n      <div className={panelClass}>\n        <h3>WidgetEditPanel</h3>\n        <button onClick={() => this.props.onClose()}>Close</button>\n        <button onClick={this.save}>Save</button>\n        <button onClick={this.runQuery}>Run Query</button>\n\n        <form>\n          <label>Name</label>\n          <input \n            type=\"text\" \n            name=\"name\" \n            value={this.state.name}\n            onChange={this.handleInputChange} \n          />\n\n          <label>DataSource</label>\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\n            {dataSourceOptions}\n          </select>\n        \n          <label>SQL Query</label>\n          <AceEditor\n            style={{ marginTop: '8px' }}\n            value={this.state.sqlQuery}\n            mode=\"mysql\"\n            theme=\"xcode\"\n            name=\"blah2\"\n            onChange={this.handleAceEditorChange}\n            height={'300px'}\n            width={'100%'}\n            fontSize={15}\n            showPrintMargin={false}\n            showGutter={true}\n            highlightActiveLine={true}\n            setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: false,\n              showLineNumbers: true,\n              tabSize: 2,\n            }}\n          />\n\n          <label>Result</label>\n          {queryResultItem}\n\n          <label>Columns Mapping</label>\n          <div>column name, display name, data type</div>\n\n          <label>Chart Options</label>\n          <select value={this.state.optionValue} onChange={this.handleOptionChange}>\n            {chartOptionList}\n          </select>\n\n          <label><i class=\"fas fa-table\"></i> Table</label>\n          <div></div>\n\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\n          <div>Count \"users\" by \"last name\"</div>\n\n\n        </form>\n        \n      </div>\n    )\n  };\n}\n\nexport default WidgetEditPanel;","import React from 'react';\nimport AceEditor from 'react-ace';\n\nimport 'brace/mode/mysql';\nimport 'brace/theme/xcode';\n\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\n\nimport axios from 'axios';\n\nimport * as webApi from '../api/WebApi';\n\nconst QUERY_SLICER = 'slicer'\nconst TYPES = [QUERY_SLICER];\n\nclass FilterEditPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      jdbcDataSources: [],\n      filterId: null,\n      name: '',\n      type: 'slicer',\n      data: {},\n      sqlQuery: '',\n      jdbcDataSourceId: null,\n      queryResult: []\n    };\n  }\n\n  fetchFilter = async (id) => {\n    const jdbcDataSources = await webApi.fetchDataSources();\n    this.setState({ \n      jdbcDataSources: jdbcDataSources \n    });\n\n    if (id === null) {\n      if (jdbcDataSources.length !== 0) {\n        this.setState({\n          jdbcDataSourceId: jdbcDataSources[0].id \n        });\n      }\n      this.setState({\n        filterId: null\n      })\n    } else {\n      this.setState({\n        filterId: id\n      })\n    }\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleAceEditorChange = (newValue) => {\n    this.setState({\n      sqlQuery: newValue\n    });\n  }\n\n  handleDataSourceChange = (event) => {\n    this.setState({ \n      jdbcDataSourceId: event.target.value\n    });\n  }\n\n  handleTypeChange = (event) => {\n    this.setState({ \n      type: event.target.value\n    });\n  }\n\n  save = (event) => {\n    event.preventDefault();\n    const filter ={\n      id: this.state.filterId,\n      name: this.state.name,\n      type: this.state.type,\n      dashboardId: this.props.dashboardId,\n      data: {\n        jdbcDataSourceId: this.state.jdbcDataSourceId,\n        sqlQuery: this.state.sqlQuery\n      }\n    };\n    \n    axios.post('/ws/filter', filter)\n      .then(res => {\n        \n      });\n  }\n\n  runQuery = (event) => {\n    event.preventDefault();\n    const queryRequest ={\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\n      sqlQuery: this.state.sqlQuery\n    };\n\n    axios.post('/ws/jdbcquery/query', queryRequest)\n      .then(res => {\n        const result = res.data;\n        const queryResult = result;\n        this.setState({\n          queryResult: queryResult\n        });\n      });\n  }\n\n  render() {\n    const panelClass = this.props.show ? 'right-drawer display-block' : 'right-drawer display-none';\n    const dataSourceOptions = this.state.jdbcDataSources.map(ds =>\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\n    );\n\n    const typeOptions = TYPES.map(t =>\n      <option value={t} key={t}>{t}</option>\n    );\n\n    const headers = [];\n    const queryResult = this.state.queryResult;\n    let queryResultItem;\n    if (queryResult !== undefined && queryResult.length !== 0 && Array.isArray(queryResult)) {\n      const obj = queryResult[0];\n      const keys = Object.keys(obj);\n      for (const key of keys) {\n        headers.push({\n          Header: key,\n          accessor: key\n        })\n      }\n\n      queryResultItem = (\n        <ReactTable\n          data={this.state.queryResult}\n          columns={headers}\n          minRows={0}\n          showPagination={false}\n        />\n      );\n    } else {\n      queryResultItem = (\n        <div>{queryResult}</div>\n      );\n    }\n\n    return (\n      <div className={panelClass}>\n        <h3>FilterEditPanel</h3>\n        <button onClick={() => this.props.onClose()}>Close</button>\n        <button onClick={this.save}>Save</button>\n        <button onClick={this.runQuery}>Run</button>\n\n        <form>\n          <label>Name</label>\n          <input \n            type=\"text\" \n            name=\"name\" \n            value={this.state.name}\n            onChange={this.handleInputChange} \n          />\n\n          <label>Type</label>\n          <select value={this.state.type} onChange={this.handleTypeChange}>\n            {typeOptions}\n          </select>\n\n          <label>DataSource</label>\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\n            {dataSourceOptions}\n          </select>\n        \n          <label>SQL Query</label>\n          <AceEditor\n            style={{ marginTop: '8px' }}\n            value={this.state.sqlQuery}\n            mode=\"mysql\"\n            theme=\"xcode\"\n            name=\"blah2\"\n            onChange={this.handleAceEditorChange}\n            height={'300px'}\n            width={'100%'}\n            fontSize={15}\n            showPrintMargin={false}\n            showGutter={true}\n            highlightActiveLine={true}\n            setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: false,\n              showLineNumbers: true,\n              tabSize: 2,\n            }}\n          />\n\n          <label>Result</label>\n          {queryResultItem}\n\n        </form>\n\n      </div>\n    )\n  };\n}\n\nexport default FilterEditPanel;","\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport FilterViewPanel from '../components/FilterViewPanel';\nimport WidgetViewPanel from '../components/WidgetViewPanel';\nimport WidgetEditPanel from '../components/WidgetEditPanel';\nimport FilterEditPanel from '../components/FilterEditPanel';\n\nimport * as webApi from '../api/WebApi';\nimport axios from 'axios';\n\nconst FILTER_TYPES = [\n  { value: 'slicer', label: 'Slicer' },\n  { value: 'number-range', label: 'Number Range' },\n  { value: 'date-range', label: 'Date Range' }\n];\n\n\nconst mockDataSources = [{\n    name: 'ds1',\n    id: 1\n  }, {\n    name: 'ds2',\n    id: 2\n  }\n]\n\nconst mockDashboard = {\n  dashboardId: 1,\n  filters: [\n    {\n      type: 'slicer',\n      id: 1,\n      dashboardId: 1,\n      data: {\n        dataSourceId: 2,\n        sqlQuery: 'select name from table',\n        display: 'Name',\n        columns: [{\n            name: 'name',\n            param: 'name'\n          },\n          {\n            name: 'b',\n            param: ':column b'\n          }\n        ]\n      },\n      queryResult: ['s1', 's2', 's3']\n    }\n  ],\n  widgets: []\n}\n\n\nclass DashboardEditView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      showWidgetEditPanel: false,\n      showFilterEditPanel: false,\n      jdbcDataSourceOptions: [],\n      dashboardId: 0,\n      name: '',\n      widgets: [],\n      filters: []\n    }\n\n    this.filterViewPanel = React.createRef();\n    this.filterEditPanel = React.createRef();\n    this.widgetViewPanel = React.createRef();\n    this.widgetEditPanel = React.createRef();\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    const dashboardId = id !== undefined ? id : null;\n    this.setState({\n      dashboardId: dashboardId\n    })\n  }\n\n  refresh = () => {\n    console.log('refresh');\n    const { dashboardId } = this.state;\n    this.filterViewPanel.current.fetchFilters(dashboardId);\n    this.widgetViewPanel.current.fetchWidgets(dashboardId);\n  }\n\n  showFilterEditPanel = (filter) => {\n    this.filterEditPanel.current.fetchFilter(null);\n    this.setState({\n      showFilterEditPanel: true\n    });\n  }\n\n  showWidgetEditPanel = (widget) => {\n    this.widgetEditPanel.current.fetchWidget(null);\n    this.setState({\n      showWidgetEditPanel: true\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>DashboardEditView</h3>\n        <button onClick={this.refresh}>Refresh</button>\n        <button onClick={() => this.showFilterEditPanel(null)}>Add Filter</button>\n        <button onClick={() => this.showWidgetEditPanel(null)}>Add Widget</button>\n        <FilterViewPanel \n          ref={this.filterViewPanel} \n        />\n        <WidgetViewPanel \n          ref={this.widgetViewPanel} \n        />\n        <WidgetEditPanel \n          ref={this.widgetEditPanel} \n          show={this.state.showWidgetEditPanel}\n          onClose={() => this.setState({ showWidgetEditPanel: false})}\n          jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\n          dashboardId={this.state.dashboardId}\n        />\n        <FilterEditPanel\n          ref={this.filterEditPanel}\n          show={this.state.showFilterEditPanel}\n          onClose={() => this.setState({ showFilterEditPanel: false})}\n          jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\n          dashboardId={this.state.dashboardId}\n        />\n      </div>\n    )\n  };\n}\n\nexport default withRouter(DashboardEditView);\n","\nimport React, { Component } from 'react';\nimport FilterViewPanel from '../components/FilterViewPanel';\n\nclass SingleTest extends Component {\n\n  constructor(props) {\n    super(props);\n    this.filterViewPanel = React.createRef();\n  }\n\n  refresh = () => {\n    console.log('refresh');\n    this.filterViewPanel.current.fetchFilters();\n  }\n\n  render() {\n    return (\n      <div>\n        <h5>SingleTest</h5>\n        <FilterViewPanel ref={this.filterViewPanel}/>\n        <button onClick={this.refresh}>Refresh</button>\n      </div>\n    )\n  };\n}\n\nexport default SingleTest;","import React, { Component } from 'react';\nimport './App.css';\n\nimport { Route, Link } from \"react-router-dom\";\nimport Overview from './views/Overview';\nimport DataSources from './views/DataSources';\nimport Dashboards from './views/Dashboards';\nimport Test from './views/Test';\nimport EditDataSource from './views/EditDataSource';\nimport DashboardEditView from './views/DashboardEditView';\n\nimport SingleTest from './views/SingleTest';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: 'overview',\n      menuMin: ''\n    }\n  }\n\n  componentDidMount() {\n  }\n\n  handleClick = (e) => {\n    this.setState({\n      current: e.key,\n    });\n  }\n\n  toggleMenu = () => {\n    const menuMin = this.state.menuMin === '' ? 'menu-min' : '';\n    this.setState({\n      menuMin: menuMin\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Nav\">\n          <div className=\"Nav_title-bar\">\n            <div className=\"Nav_title\">Poli</div>\n          </div>\n          <div className=\"Nav_menu\">\n            <ul className=\"menu\">\n              <li>\n                <Link to=\"/overview\">\n                  <i className=\"fas fa-heartbeat fa-fw\"></i>\n                  <span className=\"menu-text\">Overview</span>\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/datasources\">\n                  <i className=\"fas fa-database fa-fw\"></i>\n                  <span className=\"menu-text\">Data Sources</span>\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/dashboards\">\n                  <i className=\"fas fa-chalkboard fa-fw\"></i>\n                  <span className=\"menu-text\">Dashboards</span>\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/test\">Test</Link>\n              </li>\n              <li>\n                <Link to=\"/single-test\">SingleTest</Link>\n              </li>\n              \n            </ul>\n            <div className=\"Nav__toggle-menu\">\n              <div onClick={this.toggleMenu}>toggle</div>\n            </div>\n          </div>\n        </div>\n        <div className={`Status_bar ${this.state.menuMin}`}>\n        </div>\n        <div className={`Content ${this.state.menuMin}`}>\n          <Route exact path=\"/\" component={Overview} />\n          <Route exact path=\"/overview\" component={Overview} />\n          <Route exact path=\"/datasources\" component={DataSources} />\n          <Route exact path=\"/dashboards\" component={Dashboards} />\n          <Route exact path=\"/test\" component={Test} />\n          <Route exact path=\"/datasources/new\" component={EditDataSource} />\n          <Route exact path=\"/datasources/edit/:id\" component={EditDataSource} />\n          <Route exact path=\"/dashboard/new\" component={DashboardEditView} />\n          <Route exact path=\"/dashboard/edit/:id\" component={DashboardEditView} />\n          <Route exact path=\"/single-test\" component={SingleTest} />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/poli\">\n    <App />\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}