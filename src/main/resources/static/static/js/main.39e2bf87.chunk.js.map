{"version":3,"sources":["api/WebApi.js","components/Modal.js","views/DataSource.js","components/Slicer.js","api/Util.js","components/NumberRange.js","api/Constants.js","components/FilterViewPanel.js","components/ColorPicker.js","components/GridDraggable.js","components/GridResizable.js","api/EchartsApi.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/SingleTest.js","App.js","index.js"],"names":["fetchDataSources","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","t0","stop","this","apply","arguments","fetchFiltersByDashboardId","_ref3","_callee3","dashboardId","_context3","concat","_x2","_ref4","_callee4","url","_context4","_x3","Modal","_this","modalStatus","props","show","react_default","createElement","className","modalClass","onClick","onClose","children","React","Component","DataSource","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","target","value","name","setState","defineProperty","save","preventDefault","_this$state","state","showUpdatePassword","id","connectionUrl","username","password","ds","type","ping","put","then","res","post","closeEditPanel","delete","console","log","clearEditPanel","initialState","openEditPanel","showEditPanel","openDeletePanel","toggleUpdatePassword","prevState","jdbcDataSources","webApi","mode","_this2","_this$state2","jdbcDataSourceItems","map","index","key","passwordInput","onChange","placeholder","components_Modal","row","Slicer","isSelectAll","searchValue","handleChange","isChecked","checked","newCheckBoxes","toConsumableArray","checkBoxes","findIndex","x","filterId","toggleSelectAll","newIsSelectAll","i","length","handleSearchValueChange","result","indexOf","push","checkBoxItems","undefined","box","isArrayEmpty","array","Array","isArray","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","FilterViewPanel","fetchFilters","filters","queryFilters","filter","Constants","queryRequest","queryResult","JSON","parse","f","newFilters","Util","values","_i2","val","_i3","renderFilterPanel","filterPanel","_loop","filterComponent","components_Slicer","onSlicerChange","onSingleValueChange","isEditMode","edit","remove","onEdit","splice","applyFilters","filterParams","filterParam","paramValues","j","checkBox","remark","param","onApplyFilters","ColorPicker","displayColorPicker","color","r","g","b","handleClick","handleClose","rgb","width","height","borderRadius","background","style","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","WIDGET_BORDER","GridDraggable","onMouseDown","gridItemNode","ReactDOM","findDOMNode","assertThisInitialized","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","class","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","CHART_COLORS","getPieOption","legend","series","tooltip","orient","center","radius","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTdPropsChange","rowInfo","column","instance","e","handleOriginal","renderWidgetContent","_this$props","chartType","widgetItem","headers","obj","keys","_i","Header","accessor","es","columns","minRows","showPagination","getTdProps","_this$props$data","chartOption","EchartsApi","echarts_for_react_lib_default","option","styles","marginRight","components_GridDraggable","components_GridResizable","GridLayout","showGridlines","backgroundSize","backgroundImage","boxItems","widgets","components_GridItem","assign","WidgetViewPanel","resizeGrid","gridWidth","widgetViewPanel","current","newWidgets","resizeWidgetsToActual","resizeWidgetsToBase","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryWidgets","params","w","saveWidgets","stringify","createRef","ref","components_ColorPicker","src_components_GridLayout","WidgetEditPanel","fetchWidget","jdbcDataSourceId","sqlQuery","_x","handleAceEditorChange","newValue","handleDataSourceChange","handleChartTypeChange","aggrKey","aggrValue","onSave","runQuery","addFilterParam","newFilterParams","removeFilterParam","handleFilterChange","generateChart","_this$state3","queryResultItem","dataSourceOptions","filterOptions","filterParamItems","chartOptionList","o","react_ace_lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","FilterEditPanel","fetchFilter","handleTypeChange","useQuery","typeOptions","t","DashboardEditView","toggleAutoRefresh","autoRefreshTimerId","clearInterval","timerId","setInterval","refreshWidgetView","now","Date","toTimeString","replace","lastRefreshed","refresh","refreshFilterView","filterViewPanel","dashboard","onSaveDashboard","cancelEdit","onSaveWidget","showWidgetEditPanel","onSaveFilter","showFilterEditPanel","openFilterEditPanel","filterEditPanel","openWidgetEditPanel","widgetEditPanel","jdbcDataSourceOptions","match","statusButtonPanel","_this3","autoRefreshStatus","Fragment","components_WidgetViewPanel","components_FilterViewPanel","components_WidgetEditPanel","components_FilterEditPanel","withRouter","Dashboard","fetchBoards","dashboards","history","view","dashboardRows","d","Route","path","render","views_DashboardEditView","SingleTest","getOption","title","text","trigger","toolbox","feature","saveAsImage","grid","containLabel","xAxis","boundaryGap","yAxis","stack","areaStyle","normal","onChartClick","echarts","onChartLegendselectchanged","echart","onEvents","click","legendselectchanged","App","menuItem","currentMenuItem","Link","to","Switch","exact","component","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.39e2bf87.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n} \r\n\r\n\r\n","import React from 'react';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const modalStatus = this.props.show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={this.props.modalClass}>\r\n          <button onClick={() => this.props.onClose()}>Close</button>\r\n          <div className='modal-body'>\r\n            {this.props.children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      username: '',\r\n      password: '',\r\n      type: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      username: '',\r\n      password: '',\r\n      type: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Fetch all datasources\r\n    this.fetchDataSources();\r\n    \r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      username,\r\n      password,\r\n      name,\r\n      type,\r\n      ping,\r\n    } = this.state;\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      username: username,\r\n      name: name,\r\n      type: type,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.fetchDataSources();\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      // New\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    console.log('delete', id);\r\n    axios.delete('/ws/jdbcdatasource/' + id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n      });\r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        console.log('ping', res.data);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        type: ds.type,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  openDeletePanel = () => {\r\n\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      id,\r\n      jdbcDataSources\r\n    } = this.state;\r\n\r\n    const jdbcDataSourceItems = jdbcDataSources.map((ds, index) => \r\n      <div key={index} className=\"datasource-panel\">\r\n        <p>\r\n          {ds.name}\r\n          {ds.connectionUrl}\r\n          {ds.username}\r\n          {ds.ping}\r\n          <button onClick={() => this.openEditPanel(ds)}>update</button>\r\n          <button onClick={() => this.delete(ds.id)}>delete</button>\r\n          <button onClick={() => this.ping(ds.id)}>ping</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    let mode;\r\n    let passwordInput = (\r\n      <div>\r\n        <label>Password</label>\r\n        <input \r\n          type=\"password\" \r\n          name=\"password\" \r\n          value={this.state.password}\r\n          onChange={this.handleInputChange} />\r\n      </div>\r\n    );\r\n    if (id === null) {\r\n      mode = 'New';\r\n    } else {\r\n      mode = 'Update';\r\n      if (!showUpdatePassword) {\r\n        passwordInput = (\r\n          <button onClick={this.toggleUpdatePassword}>Update password</button>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Data Sources</h1>\r\n        <input\r\n          type=\"text\"\r\n          name=\"searchValue\"\r\n          placeholder=\"Data source name...\"\r\n          />\r\n        <div className=\"row\">\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n        <button onClick={() => this.openEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'lg-modal-panel'} >\r\n\r\n          <div>\r\n            <h3>{mode}</h3>\r\n            <form>\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Connection Url</label>\r\n              <textarea\r\n                row=\"3\"\r\n                type=\"text\" \r\n                name=\"connectionUrl\" \r\n                value={this.state.connectionUrl}\r\n                onChange={this.handleInputChange} >\r\n              </textarea>\r\n\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n              \r\n              {passwordInput}\r\n              <br/>\r\n\r\n              <label>Type</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"type\" \r\n                value={this.state.type}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Ping</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"ping\" \r\n                value={this.state.ping}\r\n                onChange={this.handleInputChange} />\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","import React from 'react';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n    searchValue: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const isChecked = target.checked;\r\n\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    if (searchValue) {\r\n      const result = [];\r\n      const { checkBoxes } = this.props;\r\n      for (let i = 0; i < checkBoxes.length; i++) {\r\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\r\n          result.push(checkBoxes[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n\r\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\r\n    // TODO: If value is too long, add.. to the end.\r\n  }\r\n\r\n  render() {\r\n    const checkBoxes = this.props.checkBoxes;\r\n    let checkBoxItems = [];\r\n    if (checkBoxes !== undefined && checkBoxes.length !== 0) {\r\n      checkBoxItems = this.props.checkBoxes.map((box, index) => \r\n        <div key={index}>\r\n          <input \r\n            type=\"checkbox\" \r\n            name={box.value} \r\n            value={box.value} \r\n            checked={box.isChecked} \r\n            onChange={this.handleChange}\r\n            />\r\n            {box.value}\r\n          <br/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button onClick={this.toggleSelectAll}>Toggle Select All {this.state.isSelectAll}</button>\r\n        <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.searchValue}\r\n            onChange={this.handleSearchValueChange} \r\n          />\r\n        \r\n        <div>\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};","import React from 'react';\r\n\r\nclass NumberRange extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        min\r\n        <input type=\"number\" name=\"min\" />\r\n        max\r\n        <input type=\"number\" name=\"max\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberRange;","/**\r\n * Constants\r\n */\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];","import React, { Component } from 'react';\r\nimport Slicer from \"./Slicer\";\r\nimport NumberRange from \"./NumberRange\";\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nclass FilterViewPanel extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      dashboardId: null,\r\n      filters: []\r\n    };\r\n  }\r\n\r\n  fetchFilters = (dashboardId) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      dashboardId: dashboardId\r\n    })\r\n\r\n    axios.get('/ws/filter/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          filters: result,\r\n        }, this.queryFilters);\r\n      });\r\n  }\r\n\r\n  queryFilters = () => {\r\n    const { filters } = this.state;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === Constants.SLICER) {\r\n        const queryRequest = filter.data;\r\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\r\n          .then(res => {\r\n            const result = res.data;\r\n            const queryResult = JSON.parse(result.data);\r\n\r\n            const index = filters.findIndex(f => f.id === result.id);\r\n            const newFilters = [...this.state.filters];\r\n            newFilters[index].queryResult = queryResult;\r\n            const type = newFilters[index].type;\r\n            if (type === Constants.SLICER) {\r\n              const checkBoxes = [];\r\n              if (!Util.isArrayEmpty(queryResult)) {\r\n                for (let i = 0; i < queryResult.length; i++) {\r\n                  const values = Object.values(queryResult[i]);\r\n                  for (const val of values) {\r\n                    checkBoxes.push({\r\n                      value: val,\r\n                      isChecked: false\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n\r\n              newFilters[index].checkBoxes = checkBoxes;\r\n            } else if (type === Constants.SINGLE_VALUE) {\r\n              const values = Object.values(queryResult);\r\n              let value = '';\r\n              for (const val of values) {\r\n                value = val;\r\n                break;\r\n              }\r\n              newFilters[index].value = value;\r\n            }\r\n\r\n            this.setState({\r\n              filters: newFilters\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderFilterPanel = () => {\r\n    const filterPanel = [];\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      let filterComponent = (<div>NONE</div>);\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        filterComponent = (\r\n          <Slicer \r\n            key={i} \r\n            filterId={filter.id} \r\n            checkBoxes={checkBoxes} \r\n            onChange={this.onSlicerChange} \r\n          />\r\n        );\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterComponent = (\r\n          <input \r\n            type=\"text\"  \r\n            value={filter.value}\r\n            onChange={(event) => this.onSingleValueChange(filter.id, event)} \r\n          />\r\n        );\r\n      }\r\n\r\n      filterPanel.push(\r\n          (\r\n            <div className=\"filter-card\">\r\n              <div className=\"filter-card-title\">\r\n                {filter.name}\r\n\r\n                { this.props.isEditMode ? \r\n                  (\r\n                    <div className=\"icon-button-group\">\r\n                      <div className=\"icon-btn\" onClick={() => this.edit(filter.id)}>\r\n                        <i className=\"fas fa-edit fa-fw\"></i>\r\n                      </div>\r\n                      <div className=\"icon-btn\" onClick={() => this.remove(filter.id)}>\r\n                        <i className=\"fas fa-trash-alt fa-fw\"></i>\r\n                      </div>\r\n                    </div>\r\n                  ): null \r\n                }\r\n              </div>\r\n              <div>\r\n                {filterComponent}\r\n              </div>\r\n            </div>\r\n          )\r\n        );\r\n    }\r\n    return filterPanel;\r\n  }\r\n\r\n  edit = (filterId) => {\r\n    this.props.onEdit(filterId);\r\n  }\r\n\r\n  remove = (filterId) => {\r\n    axios.delete('/ws/filter/' + filterId)\r\n      .then(res => {\r\n        const index = this.state.filters.findIndex(f => f.id === filterId);\r\n        const newFilters = [...this.state.filters];\r\n        newFilters.splice(index, 1);\r\n        this.setState({\r\n          filters: newFilters\r\n        });\r\n      });\r\n  }\r\n\r\n  onSlicerChange = (filterId, checkBoxes) => {\r\n    const index = this.state.filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...this.state.filters];\r\n    newFilters[index].checkBoxes = [...checkBoxes];\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n\r\n    // TODO: select all.\r\n    // const isSelectAll = checked.length === checkBoxes.length;    \r\n  }\r\n\r\n  onSingleValueChange = (filterId, event) => {\r\n    const { filters } = this.state;\r\n    const value = event.target.value;\r\n    const index = filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...filters];\r\n    newFilters[index].value = value;\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n  }\r\n\r\n  applyFilters = () => {\r\n    console.log('applyFilters');\r\n    const { filters } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      const filterParam = {};\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        const paramValues = [];\r\n        for (let j = 0; j < checkBoxes.length; j++) {\r\n          const checkBox = checkBoxes[j];\r\n          if (checkBox.isChecked) {\r\n            paramValues.push(checkBox.value);\r\n          }\r\n        }\r\n        filterParam.value = paramValues;\r\n        if (paramValues.length === checkBoxes.length) {\r\n          filterParam.remark = 'select all';\r\n        }\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterParam.value = filter.value;\r\n      }\r\n      filterParam.param = filter.data.param;\r\n      filterParam.type = filter.type;\r\n      filterParams.push(filterParam);\r\n    }\r\n\r\n    this.props.onApplyFilters(filterParams);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dashboard-content-filter-panel\">\r\n        <h5>FilterViewPanel</h5>\r\n        <button onClick={this.applyFilters}>Run</button>\r\n        <div className=\"filterViewPanel\">\r\n          {this.renderFilterPanel()}\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterViewPanel;","import React, { Component } from 'react';\r\nimport { ChromePicker  } from 'react-color';\r\n\r\nclass ColorPicker extends Component {\r\n   state = {\r\n    displayColorPicker: false,\r\n    color: {\r\n      r: '241',\r\n      g: '112',\r\n      b: '19',\r\n      a: '1',\r\n    },\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      displayColorPicker: !prevState.displayColorPicker\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      displayColorPicker: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    this.setState({ \r\n      color: color.rgb \r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: `rgba(${ this.state.color.r }, ${ this.state.color.g }, ${ this.state.color.b }, ${ this.state.color.a })`\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: '2'\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.displayColorPicker ? <div style={popover}>\r\n          <div style={cover} onClick={this.handleClose}/>\r\n          <ChromePicker color={this.state.color} onChange={this.handleChange} />\r\n        </div> : null }\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <i class=\"fas fa-expand-arrows-alt fa-fw\"></i>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <i class=\"fas fa-compress fa-fw\"></i>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","const CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOption = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      data: legend,\r\n      orient: 'vertical',\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['50%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n\r\n        // IMPORTANT! React-Table uses onClick internally to trigger\r\n        // events like expanding SubComponents and pivots.\r\n        // By default a custom 'onClick' handler will override this functionality.\r\n        // If you want to fire the original onClick handler, call the\r\n        // 'handleOriginal' function.\r\n        if (handleOriginal) {\r\n          handleOriginal();\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  renderWidgetContent = () => {\r\n    const { \r\n      chartType,\r\n      queryResult \r\n    } = this.props;\r\n    let widgetItem = (<div>NONE</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n      const headers = [];\r\n      if (!Util.isArrayEmpty(queryResult)) {\r\n        const obj = queryResult[0];\r\n        const keys = Object.keys(obj);\r\n        for (const key of keys) {\r\n          headers.push({\r\n            Header: key,\r\n            accessor: key\r\n          })\r\n        }\r\n      }\r\n\r\n      widgetItem = (\r\n        <ReactTable\r\n          data={queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n          getTdProps={this.onTdPropsChange}\r\n        />\r\n      );\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        name,\r\n        value\r\n      } = this.props.data;\r\n      if (!Util.isArrayEmpty(queryResult)) {\r\n        let legend = [];\r\n        let series = [];\r\n        for (let i = 0; i < queryResult.length; i++) {\r\n          const row = queryResult[i];\r\n          legend.push(row[name]);\r\n          series.push({\r\n            name: row[name],\r\n            value: row[value]\r\n          });\r\n        }\r\n        const chartOption = EchartsApi.getPieOption(legend, series);\r\n        widgetItem = (\r\n          <ReactEcharts \r\n            option={chartOption}   \r\n            className=\"echarts\" />\r\n        );\r\n      }\r\n      \r\n    } \r\n\r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    let styles = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: 1\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {this.props.name}\r\n\r\n          { this.props.isEditMode ? (\r\n            <div className=\"icon-button-group\" style={{marginRight: '20px'}}>\r\n              <div className=\"icon-btn\" onClick={() => this.editWidget(this.props.id)}>\r\n                <i className=\"fas fa-edit fa-fw\"></i>\r\n              </div>\r\n              <div className=\"icon-btn\" onClick={() => this.removeWidget(this.props.id)}>\r\n                <i className=\"fas fa-trash-alt fa-fw\"></i>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"icon-button-group\" style={{marginRight: '20px'}}>\r\n              <div className=\"icon-btn\" onClick={() => this.exportJson(this.props.id)}>\r\n                <i class=\"fas fa-file-export fa-fw\"></i>\r\n              </div>\r\n              <div className=\"icon-btn\" onClick={() => this.exportCsv(this.props.id)}>\r\n                <i className=\"fas fa-file-csv fa-fw\"></i>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { this.props.isEditMode ? (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} />\r\n        ): null}\r\n\r\n        { this.props.isEditMode ? (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} />\r\n        ): null}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridItem;","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let styles = {\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px'\r\n    };\r\n\r\n    if (this.props.showGridlines) {\r\n      styles.backgroundSize = '15px 15px';\r\n      styles.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = this.props.widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={styles} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport ColorPicker from './ColorPicker';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      width: 1200,\r\n      height: 600,\r\n      snapToGrid: false,\r\n      showGridlines: true\r\n    };\r\n\r\n    this.widgetViewPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  resizeGrid = () => {\r\n    const thisNode = this.widgetViewPanel.current;\r\n    const gridWidth = thisNode.clientWidth;\r\n    this.setState({\r\n      gridWidth: gridWidth - 20,\r\n    }, () => {\r\n      const { widgets } = this.state;\r\n      const newWidgets = [...widgets];\r\n      this.resizeWidgetsToActual(newWidgets);\r\n      this.setState({\r\n        widgets: newWidgets\r\n      });\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x);\r\n      const baseWidth = this.scaleToBase(widgets[i].width);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num) => {\r\n    const {\r\n      width,\r\n      gridWidth\r\n    } = this.state;\r\n    return Math.round(num * gridWidth / width);\r\n  }\r\n\r\n  scaleToBase = (num) => {\r\n    const {\r\n      width,\r\n      gridWidth\r\n    } = this.state;\r\n    return Math.round(num * width / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, width, filterParams) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get('/ws/widget/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result,\r\n          width: width\r\n        }, () => {\r\n          this.resizeGrid();\r\n          this.queryWidgets(filterParams);\r\n        });\r\n      });\r\n  }\r\n\r\n  queryWidgets = (filterParams) => {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      axios.post('/ws/jdbcquery/widget/' + widget.id, params)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const index = widgets.findIndex(w => w.id === result.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = JSON.parse(result.data);\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const isChecked = target.checked;\r\n    this.setState({\r\n      [name]: isChecked\r\n    })\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    this.resizeWidgetsToBase(newWidgets);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    console.log('onWidgetMove', widget);\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });\r\n  }\r\n\r\n  onWidgetRemove = (widgetId) => {\r\n    axios.delete('/ws/widget/' + widgetId)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        ref={this.widgetViewPanel} \r\n        className=\"testPanel\">\r\n\r\n        {this.props.isEditMode ?\r\n        (\r\n          <div>\r\n            <input \r\n            type=\"checkbox\" \r\n            name=\"snapToGrid\"\r\n            value=\"snapToGrid\"\r\n            checked={this.state.snapToGrid} \r\n            onChange={this.handleChange} />\r\n            snapToGrid\r\n            <br/>\r\n            <input \r\n              type=\"checkbox\" \r\n              name=\"showGridlines\"\r\n              value=\"showGridlines\"\r\n              checked={this.state.showGridlines} \r\n              onChange={this.handleChange} />\r\n              showGridlines\r\n            <br/>\r\n\r\n            <label>Background Color</label>\r\n            \r\n            <ColorPicker />\r\n\r\n          </div>\r\n        ) : null}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.onWidgetRemove} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      filters: [],\r\n      widgetId: null,\r\n      name: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: null,\r\n      queryResult: [],\r\n      filterId: null,\r\n      filterParams: [],\r\n      chartType: Constants.TABLE,\r\n      aggrKey: '',\r\n      aggrValue: '',\r\n      chartOption: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId, dashboardId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    const filters = await webApi.fetchFiltersByDashboardId(dashboardId);\r\n    this.setState({ \r\n      filters: filters \r\n    });\r\n\r\n    if (widgetId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n\r\n      if (filters.length !== 0) {\r\n        this.setState({\r\n          filterId: filters[0].id\r\n        });\r\n      }\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            widgetId: widgetId,\r\n            name: result.name,\r\n            x: result.x,\r\n            y: result.y,\r\n            width: result.width,\r\n            height: result.height,\r\n            sqlQuery: result.sqlQuery,\r\n            chartType: result.chartType,\r\n            jdbcDataSourceId: result.jdbcDataSourceId,\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    const jdbcDataSourceId = parseInt(event.target.value, 10);\r\n    this.setState({ \r\n      jdbcDataSourceId: jdbcDataSourceId\r\n    });\r\n  }\r\n\r\n  handleChartTypeChange = (event) => {\r\n    this.setState({ \r\n      chartType: event.target.value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      widgetId,\r\n      name,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      chartType,\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      name: name,\r\n      dashboardId: this.props.dashboardId,\r\n      chartType: chartType,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery\r\n    }\r\n\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const {\r\n        aggrKey,\r\n        aggrValue\r\n      } = this.state;\r\n      widget.data = {\r\n        name: aggrKey,\r\n        value: aggrValue\r\n      }\r\n    }\r\n\r\n    if (widgetId === null) {\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  addFilterParam = (event) => {\r\n    event.preventDefault();\r\n    const filterId = this.state.filterId;\r\n    const index = this.state.filterParams.findIndex(f => f === filterId);\r\n    if (index === -1) {\r\n      const newFilterParams = [...this.state.filterParams];\r\n      newFilterParams.push(filterId);\r\n      this.setState({\r\n        filterParams: newFilterParams\r\n      });\r\n    } \r\n  }\r\n\r\n  removeFilterParam = (filterId, event) => {\r\n    event.preventDefault();\r\n    const index = this.state.filterParams.findIndex(f => f === filterId);\r\n    if (index !== -1) {\r\n      const newFilterParams = [...this.state.filterParams];\r\n      newFilterParams.splice(index, 1);\r\n      this.setState({\r\n        filterParams: newFilterParams\r\n      });\r\n    } \r\n  }\r\n\r\n  handleFilterChange = (event) => {\r\n    this.setState({ \r\n      filterId: event.target.value\r\n    });\r\n  }\r\n\r\n  generateChart = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        aggrKey, \r\n        aggrValue, \r\n        queryResult \r\n      } = this.state;\r\n      if (!Util.isArrayEmpty(queryResult)) {\r\n        let legend = [];\r\n        let series = [];\r\n        for (let i = 0; i < queryResult.length; i++) {\r\n          const row = queryResult[i];\r\n          legend.push(row[aggrKey]);\r\n          series.push({\r\n            name: row[aggrKey],\r\n            value: row[aggrValue]\r\n          });\r\n        }\r\n        const chartOption = EchartsApi.getPieOption(legend, series);\r\n        this.setState({\r\n          chartOption: chartOption\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const dataSourceOptions = this.state.jdbcDataSources.map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const filterOptions = this.state.filters.map(f =>\r\n      <option value={f.id} key={f.id}>{f.id}</option>\r\n    );\r\n\r\n    const filterParamItems = this.state.filterParams.map(f =>\r\n      <div key={f}>\r\n        <div>value: {f}</div>\r\n        <button onClick={(event) => this.removeFilterParam(f, event)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const chartOptionList = Constants.CHART_TYPES.map(o =>\r\n      <option value={o} key={o}>{o}</option>\r\n    );\r\n\r\n    const headers = [];\r\n    const queryResult = this.state.queryResult;\r\n    let queryResultItem;\r\n    if (!Util.isArrayEmpty(queryResult)) {\r\n      const obj = queryResult[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        });\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={this.state.queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResult}</div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>WidgetEditPanel: {this.state.widgetId}</h3>\r\n        <button onClick={this.save}>Save</button>\r\n        <button onClick={this.runQuery}>Run Query</button>\r\n\r\n        <form>\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>DataSource</label>\r\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n            {dataSourceOptions}\r\n          </select>\r\n        \r\n          <label>SQL Query</label>\r\n          <AceEditor\r\n            style={{ marginTop: '8px' }}\r\n            value={this.state.sqlQuery}\r\n            mode=\"mysql\"\r\n            theme=\"xcode\"\r\n            name=\"blah2\"\r\n            onChange={this.handleAceEditorChange}\r\n            height={'300px'}\r\n            width={'100%'}\r\n            fontSize={15}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              showLineNumbers: true,\r\n              tabSize: 2\r\n            }}\r\n          />\r\n\r\n          <label>Result</label>\r\n          {queryResultItem}\r\n\r\n          <label>Filter Params</label>\r\n          <div>\r\n            <select value={this.state.filterId} onChange={this.handleFilterChange}>\r\n              {filterOptions}\r\n            </select>\r\n            <div>\r\n              {filterParamItems}\r\n            </div>\r\n            <button onClick={this.addFilterParam}>Add</button>\r\n            <div>\r\n              \r\n            </div>\r\n          </div>\r\n        \r\n\r\n          <label>Columns Mapping</label>\r\n          <div>column name, display name, data type</div>\r\n\r\n          <label>Chart Options</label>\r\n          <select value={this.state.chartType} onChange={this.handleChartTypeChange}>\r\n            {chartOptionList}\r\n          </select>\r\n\r\n          <label><i class=\"fas fa-table\"></i> Table</label>\r\n          <div></div>\r\n\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label>Aggr Key</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"aggrKey\" \r\n            value={this.state.aggrKey}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>By Aggr Value</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"aggrValue\" \r\n            value={this.state.aggrValue}\r\n            onChange={this.handleInputChange} \r\n          />\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n\r\n          <ReactEcharts \r\n            option={this.state.chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n\r\n        </form>\r\n        \r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","import React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nclass FilterEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      filterId: null,\r\n      name: '',\r\n      type: Constants.SLICER,\r\n      data: {},\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: null,\r\n      queryResult: [],\r\n      param: '',\r\n    };\r\n  }\r\n\r\n  fetchFilter = async (filterId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    if (filterId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n      this.setState({\r\n        filterId: null\r\n      })\r\n    } else {\r\n      axios.get('/ws/filter/' + filterId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { \r\n            data,\r\n            type\r\n          } = result;\r\n          this.setState({\r\n            filterId: filterId,\r\n            name: result.name,\r\n            type: result.type,\r\n            data: data\r\n          });\r\n\r\n          if (type === Constants.SLICER) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          } else if (type === Constants.SINGLE_VALUE) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          }\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    this.setState({ \r\n      jdbcDataSourceId: event.target.value\r\n    });\r\n  }\r\n\r\n  handleTypeChange = (event) => {\r\n    this.setState({ \r\n      type: event.target.value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      filterId,\r\n      name,\r\n      type,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      param\r\n    } = this.state;\r\n\r\n    const filter = {\r\n      name: name,\r\n      type: type,\r\n      dashboardId: this.props.dashboardId\r\n    };\r\n\r\n    if (type === Constants.SLICER) {\r\n      filter.data = {\r\n        jdbcDataSourceId: jdbcDataSourceId,\r\n        sqlQuery: sqlQuery,\r\n        param: param\r\n      }\r\n    } else if (type === Constants.SINGLE_VALUE) {\r\n      filter.data = {\r\n        useQuery: false,\r\n        jdbcDataSourceId: jdbcDataSourceId,\r\n        sqlQuery: sqlQuery,\r\n        param: param,\r\n      }\r\n    }\r\n\r\n    if (filterId === null) {\r\n      axios.post('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      filter.id = filterId;\r\n      axios.put('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { \r\n      queryResult,\r\n      jdbcDataSources\r\n    } = this.state;\r\n\r\n    const dataSourceOptions = jdbcDataSources.map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const typeOptions = Constants.FILTER_TYPES.map(t =>\r\n      <option value={t} key={t}>{t}</option>\r\n    );\r\n\r\n    const headers = [];\r\n    let queryResultItem;\r\n    if (!Util.isArrayEmpty(queryResult)) {\r\n      console.log('queryResult', queryResult);\r\n      const obj = queryResult[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        })\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={this.state.queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResult}</div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>FilterEditPanel: {this.state.filterId}</h3>\r\n        <button onClick={this.save}>Save</button>\r\n        <button onClick={this.runQuery}>Run</button>\r\n\r\n        <form>\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>Type</label>\r\n          <select value={this.state.type} onChange={this.handleTypeChange}>\r\n            {typeOptions}\r\n          </select>\r\n\r\n          <label>DataSource</label>\r\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n            {dataSourceOptions}\r\n          </select>\r\n        \r\n          <label>SQL Query</label>\r\n          <AceEditor\r\n            style={{ marginTop: '8px' }}\r\n            value={this.state.sqlQuery}\r\n            mode=\"mysql\"\r\n            theme=\"xcode\"\r\n            name=\"blah2\"\r\n            onChange={this.handleAceEditorChange}\r\n            height={'300px'}\r\n            width={'100%'}\r\n            fontSize={15}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              showLineNumbers: true,\r\n              tabSize: 2\r\n            }}\r\n          />\r\n\r\n          <label>Result</label>\r\n          {queryResultItem}\r\n\r\n          <label>Param</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"param\" \r\n            value={this.state.param}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterEditPanel;","\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport FilterViewPanel from '../components/FilterViewPanel';\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\nimport FilterEditPanel from '../components/FilterEditPanel';\r\nimport Modal from '../components/Modal';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showFilterEditPanel: false,\r\n      isEditMode: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      width: 0,\r\n      height: 0,\r\n    }\r\n\r\n    this.filterViewPanel = React.createRef();\r\n    this.filterEditPanel = React.createRef();\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    console.log('DashboardEditView', dashboardId);\r\n    if (dashboardId === null) {\r\n      this.setState({\r\n        dashboardId: null\r\n      });\r\n    } else {\r\n      axios.get(`/ws/dashboard/${dashboardId}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            width: result.width,\r\n            height: result.height,\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const timerId = setInterval(() => {\r\n        this.refreshWidgetView();\r\n        const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\r\n        this.setState({\r\n          lastRefreshed: now\r\n        });\r\n      }, 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    console.log('refresh');\r\n    this.refreshWidgetView();\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  refreshFilterView = () => {\r\n    const { \r\n      dashboardId\r\n    } = this.state;\r\n    this.filterViewPanel.current.fetchFilters(dashboardId);\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      width,\r\n      height\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, width, null);\r\n  } \r\n\r\n  save = () => {\r\n    console.log('save');\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      width,\r\n      height\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      width: width,\r\n      height: height\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.widgetViewPanel.current.saveWidgets();\r\n\r\n    this.props.onSaveDashboard(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  delete = () => {\r\n    const { dashboardId } = this.state;\r\n    console.log('delete', dashboardId);\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        //this.fetchBoards();\r\n      });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  onSaveFilter = () => {\r\n    this.setState({ \r\n      showFilterEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  openFilterEditPanel = (filterId) => {\r\n    this.filterEditPanel.current.fetchFilter(filterId);\r\n    this.setState({\r\n      showFilterEditPanel: true\r\n    });\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    const { dashboardId } = this.state;\r\n    this.widgetEditPanel.current.fetchWidget(widgetId, dashboardId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      lastRefreshed,\r\n      isEditMode\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let statusButtonPanel;\r\n    if (isEditMode) {\r\n      statusButtonPanel = (\r\n        <React.Fragment>\r\n          <button onClick={this.cancelEdit}>Cancel</button>\r\n          <button onClick={this.save}>Save</button>\r\n          <button onClick={this.delete}>Delete</button>\r\n          <button onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\r\n          <button onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      statusButtonPanel = (\r\n        <React.Fragment>\r\n          <button onClick={this.edit}>Edit</button>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n           <div className=\"inline-block\">Name:</div>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n            className=\"inline-block\" \r\n            style={{width: '200px'}}\r\n            />\r\n\r\n          <div className=\"inline-block\">H:</div>\r\n          <input \r\n            type=\"text\" \r\n            name=\"height\" \r\n            value={this.state.height}\r\n            onChange={this.handleInputChange} \r\n            className=\"inline-block\" \r\n            style={{width: '200px'}}\r\n            />\r\n        </div>\r\n        \r\n        <button onClick={this.toggleAutoRefresh}>AUTO: {autoRefreshStatus} - {lastRefreshed}</button>\r\n        <button onClick={this.refresh}>Refresh</button>\r\n        \r\n        {statusButtonPanel}\r\n        \r\n        <div className=\"dashboard-content-widget-panel\">\r\n          <WidgetViewPanel \r\n            ref={this.widgetViewPanel} \r\n            onWidgetEdit={this.openWidgetEditPanel}\r\n            isEditMode={this.state.isEditMode}\r\n            height={this.state.height}\r\n          />\r\n        </div>\r\n        <FilterViewPanel \r\n          ref={this.filterViewPanel} \r\n          onEdit={this.openFilterEditPanel}\r\n          onApplyFilters={this.applyFilters}\r\n          isEditMode={this.state.isEditMode}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'lg-modal-panel'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showFilterEditPanel}\r\n          onClose={() => this.setState({ showFilterEditPanel: false })}\r\n          modalClass={'lg-modal-panel'} >\r\n          <FilterEditPanel\r\n            ref={this.filterEditPanel}\r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveFilter}\r\n          />\r\n        </Modal>\r\n\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\nimport './Dashboard.css';\r\n\r\nimport { Route } from \"react-router-dom\";\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      name: '',\r\n      width: 1200,\r\n      height: 800\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name,\r\n      width,\r\n      height\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      width: width,\r\n      height: height\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.setState({ \r\n          showEditPanel: false \r\n        });\r\n        this.fetchBoards();\r\n        this.props.history.push(`/dashboards/${dashboardId}`);\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.props.history.push(`/dashboards/${dashboardId}`);\r\n  }\r\n\r\n  onSaveDashboard = (dashboardId) => {\r\n    console.log('onSaveDashboard', dashboardId);\r\n    this.fetchBoards();\r\n  }\r\n\r\n  render() {\r\n    const dashboardRows = this.state.dashboards.map((d, index) => \r\n      <div key={index} className=\"dashboard-menu-item\" onClick={() => this.view(d.id)}>\r\n        <div>{d.id} {d.name}</div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dashboard-sidebar\">\r\n          <button onClick={() => this.setState({ showEditPanel: true })}>Add</button>\r\n          <label>Search</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"searchValue\" \r\n            value={this.state.searchValue}\r\n            placeholder=\"Dashboard\"\r\n            onChange={this.handleInputChange} />\r\n          {dashboardRows}\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route path=\"/dashboards/:id\" render={(props) => <DashboardEditView key={props.match.params.id} onSaveDashboard={this.onSaveDashboard} />} />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'lg-modal-panel'} >\r\n          <div>New dashboard</div>\r\n          <button onClick={this.save}>Save</button>\r\n          <form>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              style={{width: '200px'}}\r\n              />\r\n\r\n            <label>Width</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"width\" \r\n              value={this.state.width}\r\n              onChange={this.handleInputChange} \r\n              style={{width: '100px'}}\r\n              />\r\n\r\n            <label>Height</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.state.height}\r\n              onChange={this.handleInputChange} \r\n              style={{width: '100px'}}\r\n              />\r\n            \r\n          </form>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React, { Component } from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nclass SingleTest extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  getOption = () => {\r\n    return {\r\n      color: CHART_COLORS,\r\n      title: {\r\n        text: 'Test'\r\n      },\r\n      tooltip : {\r\n        trigger: 'axis'\r\n      },\r\n      legend: {\r\n        data:['C1','C2','C3']\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          saveAsImage: {}\r\n        }\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      xAxis : [\r\n        {\r\n          type : 'category',\r\n          boundaryGap : false,\r\n          data : ['Mon','Tue','Wed','Thu','Fri','Sat','Sun']\r\n        }\r\n      ],\r\n      yAxis : [\r\n        {\r\n          type : 'value'\r\n        }\r\n      ],\r\n      series : [\r\n        {\r\n          name:'C1',\r\n          type:'line',\r\n          stack: 'Total',\r\n          areaStyle: {normal: {}},\r\n          data:[120, 132, 101, 134, 90, 230, 210]\r\n        },\r\n        {\r\n          name:'C2',\r\n          type:'line',\r\n          stack: 'Total',\r\n          areaStyle: {normal: {}},\r\n          data:[220, 182, 191, 234, 290, 330, 310]\r\n        },\r\n        {\r\n          name:'C3',\r\n          type:'line',\r\n          stack: 'Total',\r\n          areaStyle: {normal: {}},\r\n          data:[150, 232, 201, 154, 190, 330, 410]\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n\r\n  render() {\r\n    let onEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h5>SingleTest</h5>\r\n        <div style={{width: '500px'}}>\r\n          <ReactEcharts \r\n            option={this.getOption()} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts'\r\n            onEvents={onEvents} />\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default SingleTest;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport { Route, Link, Switch } from \"react-router-dom\";\r\nimport DataSource from './views/DataSource';\r\nimport Dashboard from './views/Dashboard';\r\nimport SingleTest from './views/SingleTest';\r\n\r\nconst menuItems = ['datasource', 'dashboard', 'single-test'];\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuItem: 'dashboard'\r\n    }\r\n  }\r\n\r\n  handleClick = (menuItem) => {\r\n    this.setState({\r\n      menuItem: menuItem\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuItem\r\n    } = this.state;\r\n    \r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"app-nav\">\r\n          <div className=\"app-name\">Poli</div>\r\n          <ul className=\"app-nav-menu\">\r\n            <li>\r\n              <Link to=\"/datasources\" onClick={(e) => this.handleClick('datasource')}>\r\n                <i className=\"fas fa-database fa-fw\"></i>\r\n                <span className=\"app-nav-menu-text\">Data Source</span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/dashboards\" onClick={(e) => this.handleClick('dashboard')}>\r\n                <i className=\"fas fa-chalkboard fa-fw\"></i>\r\n                <span className=\"app-nav-menu-text\">Dashboard</span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/single-test\" onClick={(e) => this.handleClick('single-test')}>\r\n                <span className=\"app-nav-menu-text\">Single</span>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"app-content\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Dashboard} />\r\n            <Route exact path=\"/datasources\" component={DataSource} />\r\n            <Route path=\"/dashboards\" component={Dashboard} />\r\n            <Route exact path=\"/single-test\" component={SingleTest} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}