{"version":3,"sources":["views/Login.js","views/ChangeTempPassword.js","api/WebApi.js","components/Modal.js","components/Toast.js","views/DataSource.js","components/ColorPicker.js","components/Checkbox.js","api/Util.js","api/EchartsApi.js","api/Constants.js","components/GridDraggable.js","components/GridResizable.js","components/TableWidget.js","components/Slicer.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/Tabs.js","components/Select.js","components/WidgetEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/DashboardFullScreenView.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","handleKeyPress","keyCode","login","_this$state","state","username","password","user","axios","post","then","res","loginResponse","data","error","errorMsg","onLoginSuccess","_this2","isAuthenticated","sysRole","console","log","react_default","a","createElement","Fragment","className","type","onChange","onKeyDown","onClick","React","Component","withRouter","ChangeTempPassword","changePassword","confirmedPassword","history","push","class","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","concat","onClose","react_fontawesome_index_es","icon","size","Toast","message","showToast","setTimeout","hide","_toastRef","assertThisInitialized","toastStatus","DataSource","save","showUpdatePassword","id","connectionUrl","driverClassName","ping","ds","put","closeEditPanel","catch","result","clearEditPanel","initialState","openEditPanel","showEditPanel","confirmDelete","_this$state$objectToD","objectToDelete","delete","closeConfirmDeletionPanel","openConfirmDeletionPanel","datasource","showConfirmDeletionPanel","toggleUpdatePassword","prevState","clearSearch","searchValue","jdbcDataSources","webApi","_this$state2","_this$state2$jdbcData","_this$state2$objectTo","mode","jdbcDataSourceItems","_loop","i","includes","key","length","placeholder","style","width","src_components_Modal","rows","margin","ColorPicker","handleClick","showPalette","handleClose","handleChange","color","rgb","rgba","r","g","b","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","Checkbox","toggle","checked","_this$props2","checkmarkBoxStyle","backgroundColor","jsonToArray","json","array","JSON","parse","e","CHART_COLORS","getPieOption","queryResultData","pieKey","pieValue","legend","series","row","tooltip","orient","center","radius","getPieOptionTemplate","CHART","FILTER","WIDGET_TYPES","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","DEFAULT_DASHBOARD_HEIGHT","WIDGET_BORDER","GridDraggable","onMouseDown","preventDefault","gridItemNode","ReactDOM","findDOMNode","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","fixedWidth","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","TableWidget","goToLink","link","onTableTdClick","_this$props$data","_this$props$columns","columns","_this$props$drillThro","drillThrough","columnHeaders","forEach","column","columnName","header","Header","accessor","index","findIndex","d","dashboardId","Cell","es","defaultPageSize","previousText","nextText","Slicer","isSelectAll","toggleSelectAll","newIsSelectAll","newCheckBoxes","toConsumableArray","checkBoxes","isChecked","filterId","handleSearchValueChange","indexOf","handleCheckBoxChange","x","_this$props$checkBoxe","checkBoxItems","map","box","src_components_Checkbox","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","instance","handleOriginal","drills","widgetDrillThrough","onChartClick","param","echarts","onChartLegendselectchanged","echart","onSlicerChange","onWidgetFilterInputChange","onSingleValueChange","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","filterType","_this$props$queryResu","queryResult","Util","widgetItem","Constants","src_components_TableWidget","chartOption","EchartsApi","echarts_for_react_lib_default","option","onEvents","src_components_Slicer","isEditMode","_this$props2$style","_style$showBorder","showBorder","borderStyle","showTitle","styles","border","marginRight","components_GridDraggable","components_GridResizable","GridLayout","_this$props$widgets","widgets","showGridlines","backgroundSize","backgroundImage","boxItems","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","viewWidth","newWidgets","gridWidth","resizeWidgetsToActual","resizeWidgetsToBase","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryFilters","queryCharts","handleHeightChange","onHeightChange","onBackgroundColorChange","saveWidgets","stringify","w","splice","_this$state$widgets","getFilterParams","_this$state$widgets2","filterParams","filterParam","_widget$checkBoxes","paramValues","j","checkBox","remark","queryParameter","_widgets$i","queryChart","_widgets$i2","queryFilter","params","_this3","_arr","values","_i","val","widgetViewWidth","components_ColorPicker","src_components_GridLayout","Tabs","handleTabClick","activeTab","tabHeaders","tabContent","active","Select","handleOptionChange","_this$props$options","options","optionValue","optionDisplay","_this$props$allowEmpt","allowEmpty","optionList","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","_widget$data","sqlQuery","jdbcDataSourceId","runQuery","_x","objectSpread","handleAceEditorChange","newValue","handleIntegerOptionChange","intValue","_this$state3","_this$state4","onSave","queryRequest","addDrillThrough","_this$state5","drillColumnName","drillDashboardId","newDrillThrough","removeDrillThrough","drill","generateChart","_this$state6","_this$state6$queryRes","renderChartPreview","_this$state7","_this$state7$queryRes","chartPreview","_this$state8","components_Select","_this$state9","_this$state9$jdbcData","_this$state9$drillThr","_this$state9$drillDas","drillItems","columnItems","col","dataType","showQueryTab","src_components_Tabs","react_ace_lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","DashboardEditView","loadViewByDashboardName","url","location","search","dashboardName","URLSearchParams","getPageWidth","isReadOnly","refresh","toggleAutoRefresh","autoRefreshTimerId","clearInterval","refreshInterval","interval","timerId","setInterval","queryWidgets","updateLastRefreshed","refreshWidgetView","widgetViewPanel","current","now","Date","toTimeString","replace","lastRefreshed","dashboard","onDashboardSave","edit","cancelEdit","onSaveWidget","showWidgetEditPanel","openWidgetEditPanel","widgetEditPanel","applyFilters","fullScreen","window","open","onTableCellClick","onDashboardDelete","deleteDashboard","jdbcDataSourceOptions","createRef","match","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","editButtonPanel","autoRefreshStatus","fullScreenButtonPanel","controlButtons","components_WidgetViewPanel","ref","src_components_WidgetEditPanel","Dashboard","fetchBoards","view","activeDashboardId","pathname","Number","substring","_this$state$dashboard","showEdit","dashboardRows","menuActive","Route","path","render","views_DashboardEditView","SYS_ROLES","User","fetchUsers","users","fetchGroups","groups","tempPassword","userGroups","userGroupId","initialEditPanelState","addUserGroup","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_this$state3$users","_this$state3$groups","_this$state3$userGrou","userItems","userGroupItems","Group","fetchDashboards","group","groupDashboards","groupDashboardId","addGroupDashboard","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","UserManagement","views_Group","views_User","Account","fetchUser","apiKey","generateApiKey","DashboardFullScreenView","dashboardEditView","wrappedComponentRef","comp","MENU_ITEMS","Workspace","handleMenuClick","menuLink","currentMenuLink","logout","onLogout","menuItem","find","m","startsWith","menuItems","menuList","filter","menu","Link","to","isAccountMenuActive","Switch","exact","component","src_views_Dashboard","src_components_Toast","PageNotFound","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","faCircleNotch","App","isAuthorizing","directUrl","currentPath","spin","src_views_Login","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.7c0bf406.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { sysRole } = this.props;\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n    console.log('Login - componentDidMount', isAuthenticated);\r\n    if (!isAuthenticated) {\r\n      axios.post('/auth/login/cookie')\r\n        .then(res => {\r\n          const loginResponse = res.data;\r\n          if (!loginResponse.error) {\r\n            this.props.onLoginSuccess(loginResponse);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.keyCode === 13) {\r\n      this.login();\r\n    }\r\n  }\r\n\r\n  login = () => {\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password'\r\n      });\r\n      return;\r\n    }\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const loginResponse = res.data;\r\n        if (loginResponse.error) {\r\n          this.setState({\r\n            errorMsg: loginResponse.error\r\n          });\r\n        } else {\r\n          this.props.onLoginSuccess(loginResponse);\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    console.log('Login - render');\r\n    \r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div className=\"login-app-title\">Poli</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <div className=\"long-panel-body\">\r\n            <div className=\"form-group\">\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n              <label>Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n            </div>\r\n            <button className=\"button login-button\" onClick={this.login}>Login</button>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ChangeTempPassword extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n      console.log('ChangeTempPassword - componentDidMount');\r\n  }\r\n\r\n  changePassword = () => {\r\n    const {\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    if (password && confirmedPassword\r\n        && password === confirmedPassword) {\r\n      const user = {\r\n        password: password\r\n      }\r\n\r\n      axios.post('/auth/login/changepassword', user)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.props.history.push('/workspace/dashboard');\r\n        });\r\n    } else {\r\n      this.setState({\r\n        errorMsg: `Those passwords didn't match.`\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <label>{this.state.errorMsg}</label>\r\n        <div class=\"form-group\">\r\n          <label>New password</label>\r\n          <input \r\n            type=\"password\" \r\n            name=\"password\" \r\n            value={this.state.username}\r\n            onChange={this.handleInputChange} />\r\n          <label>Confirm password</label>\r\n          <input \r\n            type=\"password\" \r\n            name=\"confirmedPassword\" \r\n            value={this.state.confirmedPassword}\r\n            onChange={this.handleInputChange} />\r\n          <button onClick={this.changePassword}>Change</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ChangeTempPassword);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      modalClass = '',\r\n      title,\r\n      children\r\n    } = this.props;\r\n\r\n    const modalStatus = show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={`modal-panel ${modalClass}`}>\r\n          <div className=\"model-header row\">\r\n            <div className=\"model-title\">{title}</div>\r\n            <button className=\"model-close-button icon-button\" onClick={() => this.props.onClose()}>\r\n              <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          <div className='modal-body'>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Toast.css';\r\n\r\nclass Toast extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showToast: false,\r\n      message: ''\r\n    };\r\n\r\n    Toast._toastRef = this;\r\n  }\r\n\r\n  show = (message) => {\r\n    this.setState({ \r\n      showToast: true,\r\n      message: message\r\n    }, () => {\r\n      setTimeout(() => {\r\n        this.hide();\r\n      }, 3500);\r\n    });\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({ \r\n      showToast: false,\r\n      message: ''\r\n    });\r\n  }\r\n\r\n  static show = (message) => {\r\n    Toast._toastRef.show(message);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showToast,\r\n      message\r\n    } = this.state;\r\n\r\n    const toastStatus = showToast ? 'display-block' : 'display-none';\r\n\r\n    return (\r\n      <div className={`toast-container ${toastStatus}`}>\r\n        <button className=\"button\" onClick={this.hide}>X</button>\r\n        <div>\r\n          {message}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toast;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport './Datasource.css';\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      showUpdatePassword: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataSources();\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      driverClassName,\r\n      username,\r\n      password,\r\n      name,\r\n      ping,\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      driverClassName: driverClassName,\r\n      username: username,\r\n      name: name,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword && password) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } \r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        Toast.show(result);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        driverClassName: ds.driverClassName,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/jdbcdatasource/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (datasource) => {\r\n    this.setState({\r\n      objectToDelete: datasource,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  clearSearch = () => {\r\n    this.setState({\r\n      searchValue: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      showConfirmDeletionPanel,\r\n      searchValue,\r\n      id,\r\n      jdbcDataSources = [],\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const jdbcDataSourceItems = [];\r\n    for (let i = 0; i < jdbcDataSources.length; i++) {\r\n      const ds = jdbcDataSources[i];\r\n      const name = ds.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        jdbcDataSourceItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {name}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.ping(ds.id)}>\r\n                  <FontAwesomeIcon icon=\"plug\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchValue\"\r\n            value={this.state.searchValue}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Search...\"\r\n            style={{width: '200px'}}\r\n            />\r\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New datasource\r\n          </button>\r\n          </div>\r\n        <div className=\"table-panel\">\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Name <span className=\"required\">*</span></label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Connection Url</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label>Driver class name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"driverClassName\" \r\n              value={this.state.driverClassName}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            { mode === 'Edit' ? \r\n              (\r\n                <div style={{margin: '3px 0px 8px 0px'}}>\r\n                  <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n                </div>\r\n              ) : null\r\n            }\r\n            { mode === 'New' || showUpdatePassword ? \r\n              (\r\n                <div>\r\n                  <label>Password</label>\r\n                  <input \r\n                    type=\"password\" \r\n                    name=\"password\" \r\n                    value={this.state.password}\r\n                    onChange={this.handleInputChange} />\r\n                </div>\r\n              ) : null\r\n            }\r\n\r\n            <label>Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} />\r\n            <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","import React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPalette: false\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      showPalette: !prevState.showPalette\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      showPalette: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    const rgb = color.rgb;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    this.props.onChange(rgba);\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: this.props.value\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: '2'\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.showPalette ? \r\n          (\r\n            <div style={popover}>\r\n              <div style={cover} onClick={this.handleClose} />\r\n              <ChromePicker color={this.props.value} onChange={this.handleChange} />\r\n            </div>\r\n          ) : null }\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    const {\r\n      name,\r\n      checked\r\n    } = this.props;\r\n\r\n    this.props.onChange(name, !checked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      checked\r\n    } = this.props;\r\n\r\n    const checkmarkBoxBgColor = checked ? '#000000' : '#FFFFFF';\r\n    const checkmarkBoxStyle = {\r\n      backgroundColor: checkmarkBoxBgColor\r\n    };\r\n\r\n    return (\r\n      <div className=\"checkbox-container\" onClick={this.toggle}>\r\n        <div className=\"checkbox-checkmark\">\r\n          <div className=\"checkbox-checkmark-box\" style={checkmarkBoxStyle}>\r\n          </div>\r\n        </div>\r\n        <div className=\"checkbox-label\">{value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};\r\n\r\nexport const jsonToArray = (json) => {\r\n  let array;\r\n  try {\r\n    array = JSON.parse(json);\r\n  } catch(e) {\r\n    array = [];\r\n  }\r\n  return array;\r\n}\r\n","import * as Util from '../api/Util';\r\n\r\nconst CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOptionTemplate = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      type: 'scroll',\r\n      orient: 'vertical',\r\n      data: legend,\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['40%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport const getPieOption = (queryResultData, pieKey, pieValue) => {\r\n  let legend = [];\r\n  let series = [];\r\n  for (let i = 0; i < queryResultData.length; i++) {\r\n    const row = queryResultData[i];\r\n    legend.push(row[pieKey]);\r\n    series.push({\r\n      name: row[pieKey],\r\n      value: row[pieValue]\r\n    });  \r\n  }\r\n  return getPieOptionTemplate(legend, series);\r\n}\r\n","/**\r\n * Constants\r\n */\r\nexport const CHART = 'chart';\r\nexport const FILTER = 'filter';\r\nexport const WIDGET_TYPES = [CHART, FILTER];\r\n\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\r\n\r\nexport const SYS_ROLE_ADMIN = 'admin';\r\nexport const SYS_ROLE_DEVELOPER = 'developer';\r\nexport const SYS_ROLE_VIEWER = 'viewer';\r\n\r\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport './TableWidget.css';\r\n\r\nclass TableWidget extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  goToLink = (link) => {\r\n    this.props.onTableTdClick(link);\r\n  }\r\n\r\n  render() {   \r\n    const {\r\n      data = [],\r\n      columns = [],\r\n      drillThrough = [],\r\n      error\r\n    } = this.props;\r\n\r\n    const columnHeaders = [];\r\n    columns.forEach(column => {\r\n      const columnName = column.name;\r\n      const header = {\r\n        Header: columnName,\r\n        accessor: columnName\r\n      };\r\n      if (drillThrough.length > 0) {\r\n        const index = drillThrough.findIndex(d => d.columnName === columnName);\r\n        if (index !== -1) {\r\n          const dashboardId = drillThrough[index].dashboardId;\r\n          header.Cell = (props => \r\n            <span className=\"link-label\" \r\n              onClick={() => this.goToLink(`/workspace/dashboard/${dashboardId}?${columnName}=${props.value}`)}>\r\n              {props.value}\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n\r\n      columnHeaders.push(header);\r\n    });\r\n\r\n    if (error) {\r\n      return (\r\n        <div>\r\n          {error}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ReactTable\r\n        data={data}\r\n        columns={columnHeaders}\r\n        defaultPageSize={10}\r\n        previousText={'Prev'}\r\n        nextText={'Next'}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableWidget;\r\n","import React from 'react';\r\nimport Checkbox from './Checkbox';\r\nimport './Slicer.css';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n    searchValue: ''\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    if (searchValue) {\r\n      const result = [];\r\n      const { checkBoxes } = this.props;\r\n      for (let i = 0; i < checkBoxes.length; i++) {\r\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\r\n          result.push(checkBoxes[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n\r\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      checkBoxes = []\r\n    } = this.props;\r\n    const checkBoxItems = checkBoxes.map((box, index) => \r\n      <Checkbox \r\n        key={index} \r\n        name={box.value} \r\n        value={box.value} \r\n        checked={box.isChecked} \r\n        onChange={this.handleCheckBoxChange} \r\n      />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.toggleSelectAll}>Select All {this.state.isSelectAll}</button>\r\n        <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.searchValue}\r\n            onChange={this.handleSearchValueChange}\r\n            placeholder=\"Search...\"\r\n          />\r\n        \r\n        <div className=\"slicer-body\">\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\nimport TableWidget from './TableWidget';\r\nimport Slicer from \"./Slicer\";\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough || []; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        const index = drills.findIndex(d => d.columnName === header);\r\n        if (index !== -1) {\r\n          const dashboardId = drills[index].dashboardId;\r\n          this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  onTableTdClick = (link) => {\r\n    this.props.history.push(link);\r\n  }\r\n\r\n  onSlicerChange = (widgetId, checkBoxes) => {\r\n    const data = {\r\n      checkBoxes: checkBoxes\r\n    };\r\n    this.props.onWidgetFilterInputChange(widgetId, data);\r\n  }\r\n\r\n  onSingleValueChange = (widgetId, event) => {\r\n    const value = event.target.value;\r\n    const data = {\r\n      value: value\r\n    };\r\n    this.props.onWidgetFilterInputChange(widgetId, data);\r\n  }\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      id,\r\n      type,\r\n      chartType,\r\n      filterType,\r\n      queryResult = {},\r\n      drillThrough,\r\n      data = {},\r\n      checkBoxes,\r\n      value\r\n    } = this.props;\r\n\r\n    const queryResultData = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    let widgetItem = (<div></div>);\r\n    if (type === Constants.CHART) {\r\n      if (chartType === Constants.TABLE) {\r\n        widgetItem = (\r\n          <TableWidget\r\n            data={queryResultData}\r\n            columns={columns}\r\n            error={error}\r\n            drillThrough={drillThrough}\r\n            onTableTdClick={this.onTableTdClick}\r\n          />\r\n        );\r\n      } else if (chartType === Constants.PIE) {\r\n        const { \r\n          pieKey,\r\n          pieValue\r\n        } = data;\r\n        const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\r\n        widgetItem = (\r\n          <ReactEcharts \r\n            option={chartOption}   \r\n            className=\"echarts\"\r\n            onEvents={onChartEvents}  \r\n          />\r\n        );\r\n      } \r\n    } else if (type === Constants.FILTER) {\r\n      if (filterType === Constants.SLICER) {\r\n        widgetItem = (\r\n          <Slicer \r\n            filterId={id} \r\n            checkBoxes={checkBoxes} \r\n            onChange={this.onSlicerChange} \r\n          />\r\n        );\r\n      } else if (filterType === Constants.SINGLE_VALUE) {\r\n        widgetItem = (\r\n          <input \r\n            type=\"text\"  \r\n            value={value}\r\n            onChange={(event) => this.onSingleValueChange(id, event)} \r\n          />\r\n        );\r\n      }\r\n    }\r\n    \r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      title,\r\n      isEditMode,\r\n      style = {}\r\n    } = this.props;\r\n\r\n    const { \r\n      showBorder = false,\r\n      showTitle = true\r\n    } = style;\r\n\r\n    const borderStyle = showBorder ? '2px solid #4b4f56' : '2px solid #FFFFFF';\r\n\r\n    let styles = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: 1,\r\n      border: borderStyle\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {title}\r\n\r\n          { isEditMode ? (\r\n            <div className=\"float-right\" style={{marginRight: '20px'}}>\r\n              <div className=\"inline-block\" onClick={() => this.editWidget(id)}>\r\n                <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n              </div>\r\n              <div className=\"inline-block\" onClick={() => this.removeWidget(id)}>\r\n                <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid-box-file-button-group\">\r\n              <div className=\"inline-block\" onClick={() => this.exportJson(id)}>\r\n                <FontAwesomeIcon icon=\"file-export\" fixedWidth />\r\n              </div>\r\n              \r\n              <div className=\"inline-block\" onClick={() => this.exportCsv(id)}>\r\n                <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { isEditMode && (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} />\r\n        )}\r\n\r\n        { isEditMode && (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} />\r\n        )}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(GridItem);","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      backgroundColor,\r\n      widgets = [],\r\n      showGridlines\r\n    } = this.props;\r\n\r\n    let style = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      backgroundColor: backgroundColor\r\n    };\r\n\r\n    if (showGridlines) {\r\n      style.backgroundSize = '15px 15px';\r\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n        onWidgetFilterInputChange={this.props.onWidgetFilterInputChange}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={style} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ColorPicker from './ColorPicker';\r\nimport Checkbox from './Checkbox';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\nimport Modal from '../components/Modal';\r\nimport * as Constants from '../api/Constants';\r\n\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      snapToGrid: false,\r\n      showGridlines: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  resizeGrid = (viewWidth) => {\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n\r\n    const gridWidth = viewWidth - 10;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return Math.round(num * gridWidth / BASE_WIDTH);\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Math.round(num * BASE_WIDTH / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, viewWidth) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get(`/ws/widget/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(viewWidth);\r\n          this.queryFilters();\r\n          this.queryCharts();\r\n        });\r\n      });\r\n  }\r\n \r\n  queryCharts() {\r\n    const filterParams = this.getFilterParams();\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const {\r\n        id,\r\n        type,\r\n      } = widgets[i];\r\n      if (type === Constants.CHART) {\r\n        this.queryChart(id, filterParams);\r\n      }\r\n    }\r\n  }\r\n\r\n  queryFilters() {\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const {\r\n        id,\r\n        type,\r\n        filterType\r\n      }  = widgets[i];\r\n      if (type === Constants.FILTER) {\r\n        this.queryFilter(id, filterType);\r\n      }\r\n    }\r\n  }\r\n\r\n  queryChart(widgetId, filterParams) {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    axios.post(`/ws/jdbcquery/widget/${widgetId}`, params)\r\n      .then(res => {\r\n        const queryResult = res.data;\r\n        const index = widgets.findIndex(w => w.id === queryResult.id);\r\n        const newWidgets = [...widgets];\r\n        newWidgets[index].queryResult = queryResult;\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n\r\n  queryFilter(widgetId, filterType) {\r\n    const { widgets } = this.state;\r\n    if (filterType === Constants.SLICER) {\r\n      axios.post(`/ws/jdbcquery/widget/${widgetId}`, [])\r\n        .then(res => {\r\n          const queryResult = res.data;\r\n          const queryResultData = Util.jsonToArray(queryResult.data);\r\n          const checkBoxes = [];\r\n          for (let i = 0; i < queryResultData.length; i++) {\r\n            const values = Object.values(queryResultData[i]);\r\n            for (const val of values) {\r\n              checkBoxes.push({\r\n                value: val,\r\n                isChecked: false\r\n              });\r\n            }\r\n          }\r\n          const index = widgets.findIndex(w => w.id === queryResult.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = queryResult;\r\n          newWidgets[index].checkBoxes = checkBoxes;\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    } else if (filterType === Constants.SINGLE_VALUE) {\r\n      /*\r\n        const values = Object.values(queryResultData);\r\n        let value = '';\r\n        for (const val of values) {\r\n          value = val;\r\n          break;\r\n        }\r\n        newFilters[index].value = value;\r\n      */\r\n      const index = widgets.findIndex(w => w.id === widgetId);\r\n      const newWidgets = [...widgets];\r\n      newWidgets[index].value = '';\r\n      this.setState({\r\n        widgets: newWidgets\r\n      });\r\n    }\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    this.setState({\r\n      [name]: isChecked\r\n    });\r\n  }\r\n\r\n  handleHeightChange = (event) => {\r\n    this.props.onHeightChange(event.target.value);\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    this.props.onBackgroundColorChange(color);\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete\r\n    } = this.state;\r\n    const widgetId = objectToDelete;\r\n    axios.delete(`/ws/widget/${widgetId}`)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (widgetId) => {\r\n    this.setState({\r\n      objectToDelete: widgetId,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  onWidgetFilterInputChange = (widgetId, data) => {\r\n    const { \r\n      widgets = []\r\n    } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widgetId);\r\n    const newWidgets = [...widgets];\r\n    const widget = widgets[index];\r\n    if (widget.filterType === Constants.SLICER) {\r\n      const {\r\n        checkBoxes\r\n      } = data;\r\n      newWidgets[index].checkBoxes = checkBoxes;\r\n    } else if (widget.filterType === Constants.SINGLE_VALUE) {\r\n      const {\r\n        value\r\n      } = data;\r\n      newWidgets[index].value = value;\r\n    }\r\n\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });   \r\n  }\r\n\r\n  /**\r\n   * FIXME: optimize it. No need to calculate this every time.\r\n   */\r\n  getFilterParams = () => {\r\n    const { \r\n      widgets = []\r\n    } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      if (widget.type === Constants.FILTER) {\r\n        const { filterType } = widget;\r\n        const filterParam = {};\r\n        if (filterType === Constants.SLICER) {\r\n          const { \r\n            checkBoxes = []\r\n          } = widget;\r\n          const paramValues = [];\r\n          for (let j = 0; j < checkBoxes.length; j++) {\r\n            const checkBox = checkBoxes[j];\r\n            if (checkBox.isChecked) {\r\n              paramValues.push(checkBox.value);\r\n            }\r\n          }\r\n          filterParam.value = paramValues;\r\n          if (paramValues.length === checkBoxes.length) {\r\n            filterParam.remark = 'select all';\r\n          }\r\n        } else if (filterType === Constants.SINGLE_VALUE) {\r\n          filterParam.value = widget.value;\r\n        }\r\n        filterParam.param = widget.data.queryParameter;\r\n        filterParam.type = widget.filterType;\r\n        filterParams.push(filterParam);\r\n      }\r\n    }\r\n    return filterParams;\r\n  }\r\n\r\n  render() {\r\n    const { widgetViewWidth } = this.props;\r\n    const style = {\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {this.props.isEditMode ?\r\n        (\r\n          <div className=\"dashboard-attribute-edit-panel\">\r\n            <div className=\"inline-block\">Height:</div>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.props.height}\r\n              onChange={this.handleHeightChange} \r\n              className=\"inline-block\" \r\n              style={{width: '200px'}}\r\n              />\r\n\r\n            <div>\r\n              Background Color\r\n              <ColorPicker value={this.props.backgroundColor} onChange={this.onBackgroundColorChange} />\r\n            </div>\r\n\r\n            <Checkbox name=\"snapToGrid\" value=\"Snap to grid\" checked={this.state.snapToGrid} onChange={this.handleCheckBoxChange} />\r\n            <Checkbox name=\"showGridlines\" value=\"Show gridlines\" checked={this.state.showGridlines} onChange={this.handleCheckBoxChange} />\r\n  \r\n          </div>\r\n        ) : null}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          backgroundColor={this.props.backgroundColor}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.openConfirmDeletionPanel} \r\n          onWidgetFilterInputChange={this.onWidgetFilterInputChange}\r\n        />\r\n        \r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete this widget?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","import React from 'react';\r\nimport './Tabs.css';\r\n\r\nclass Tabs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const activeTab = this.props.activeTab;\r\n    this.setState({\r\n      activeTab: activeTab\r\n    });\r\n  }\r\n\r\n  handleTabClick = (title) => {\r\n    this.setState({\r\n      activeTab: title\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children\r\n    } = this.props;\r\n\r\n    const {\r\n      activeTab\r\n    } = this.state;\r\n\r\n    const tabHeaders = [];\r\n    let tabContent = null;\r\n    for (let i = 0; i < children.length; i++) {\r\n      if (children[i]) {\r\n        const title = children[i].props.title;\r\n        let active = '';\r\n        if (title === activeTab) {\r\n          active = 'tab-header-active';\r\n          tabContent = children[i].props.children;\r\n        }\r\n        \r\n        tabHeaders.push(\r\n          <li className={`tab-header-item ${active}`} key={i} onClick={() => this.handleTabClick(title)}>{title}</li>\r\n        );\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className=\"tab-container\">\r\n        <ul className=\"tab-header\">\r\n          {tabHeaders}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {tabContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Select extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    optionDisplay: PropTypes.string,\r\n    optionValue: PropTypes.string,\r\n    allowEmpty: PropTypes.bool\r\n  };\r\n\r\n  handleOptionChange = (event) => {\r\n    const name = this.props.name;\r\n    const value = event.target.value;\r\n    this.props.onChange(name, value);\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      value,\r\n      options = [],\r\n      optionValue,\r\n      optionDisplay,\r\n      allowEmpty = true\r\n    } = this.props;\r\n\r\n    const optionList = [];\r\n    if (allowEmpty) {\r\n      optionList.push(\r\n        <option value=\"\" key=\"\"></option>\r\n      );\r\n    }\r\n    \r\n    options.forEach((option, index) => {\r\n      let value;\r\n      let display;\r\n      if (optionValue && optionDisplay) {\r\n        // The options contain objects.\r\n        value = option[optionValue];\r\n        display = option[optionDisplay];\r\n      } else {\r\n        // The options contain string or number.\r\n        value = option;\r\n        display = option;\r\n      }\r\n      \r\n      optionList.push(\r\n        <option value={value} key={index}>{display}</option>\r\n      ) \r\n    });\r\n\r\n    return (\r\n      <select value={value} onChange={this.handleOptionChange}>\r\n        {optionList}\r\n      </select>\r\n    )\r\n  };\r\n}\r\n\r\nexport default Select;","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport TableWidget from './TableWidget';\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nimport './WidgetEditPanel.css';\r\n\r\nimport Checkbox from './Checkbox';\r\nimport Tabs from '../components/Tabs';\r\nimport Select from '../components/Select';\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      title: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: {},\r\n      type: Constants.CHART,\r\n      filterType: Constants.SINGLE_VALUE,\r\n      chartType: Constants.TABLE,\r\n      style: {\r\n        showBorder: false,\r\n        showTitle: true\r\n      },\r\n      queryParameter: '',\r\n      drillThrough: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: '',\r\n      pieKey: '',\r\n      pieValue: '',\r\n      chartOption: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const widget = res.data;\r\n          const {\r\n            type,\r\n            chartType,\r\n            filterType,\r\n            drillThrough\r\n          } = widget;\r\n          if (type === Constants.CHART) {\r\n            this.setState({\r\n              chartType: chartType,\r\n              drillThrough: drillThrough\r\n            });\r\n\r\n            if (chartType === Constants.PIE) {\r\n              const {\r\n                pieKey,\r\n                pieValue\r\n              } = widget.data;\r\n              this.setState({\r\n                pieKey: pieKey,\r\n                pieValue: pieValue\r\n              });\r\n            }\r\n          } else if (type === Constants.FILTER) {\r\n            const {\r\n              queryParameter\r\n            } = widget.data;\r\n            this.setState({\r\n              filterType: filterType,\r\n              queryParameter: queryParameter\r\n            });\r\n            if (filterType === Constants.SLICER) {\r\n\r\n            } else if (filterType === Constants.SINGLE_VALUE) {\r\n\r\n            }\r\n          }\r\n          \r\n          this.setState({\r\n            widgetId: widgetId,\r\n            title: widget.title,\r\n            x: widget.x,\r\n            y: widget.y,\r\n            width: widget.width,\r\n            height: widget.height,\r\n            sqlQuery: widget.sqlQuery,\r\n            type: type,\r\n            jdbcDataSourceId: widget.jdbcDataSourceId,\r\n            style: widget.style\r\n          }, () => {\r\n            this.runQuery();\r\n          });\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const style = {...this.state.style};\r\n    style[[name]] = isChecked;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      widgetId,\r\n      title,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      type,\r\n      style\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      title: title,\r\n      dashboardId: this.props.dashboardId,\r\n      type: type,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      style: style\r\n    }\r\n\r\n    if (type === Constants.CHART) {\r\n      const {\r\n        chartType,\r\n        drillThrough\r\n      } = this.state;\r\n      widget.drillThrough = drillThrough;\r\n      widget.chartType = chartType;\r\n\r\n      if (chartType === Constants.TABLE) {\r\n\r\n      } else if (chartType === Constants.PIE) {\r\n        const {\r\n          pieKey,\r\n          pieValue\r\n        } = this.state;\r\n        widget.data = {\r\n          pieKey: pieKey,\r\n          pieValue: pieValue\r\n        }\r\n      }\r\n    } else if (type === Constants.FILTER) {\r\n      const  {\r\n        filterType,\r\n        queryParameter\r\n      } = this.state;\r\n      widget.filterType = filterType;\r\n      widget.data = {\r\n        queryParameter: queryParameter\r\n      }\r\n      if (filterType === Constants.SLICER) {\r\n\r\n      } else if (filterType === Constants.SINGLE_VALUE) {\r\n\r\n      }\r\n    }\r\n    \r\n\r\n    if (widgetId === null) {\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          queryResult: result\r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = () => {\r\n    const { \r\n      drillThrough,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const index = drillThrough.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrillThrough = [...drillThrough];\r\n      newDrillThrough.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drillThrough: newDrillThrough\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill) => {\r\n    const { drillThrough } = this.state;\r\n    const index = drillThrough.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrillThrough = [...drillThrough];\r\n      newDrillThrough.splice(index, 1);\r\n      this.setState({\r\n        drillThrough: newDrillThrough\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = () => {\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        pieKey, \r\n        pieValue, \r\n        queryResult = {}\r\n      } = this.state;\r\n      console.log(\"generateChart\", pieKey, pieValue);\r\n      const data = Util.jsonToArray(queryResult.data);\r\n      const chartOption = EchartsApi.getPieOption(data, pieKey, pieValue);\r\n      this.setState({\r\n        chartOption: chartOption\r\n      });\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      queryResult = {},\r\n    } = this.state;\r\n    const columns = queryResult.columns || [];\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        chartOption,\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n\r\n      chartPreview = (\r\n        <div>\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label>Aggr Key (string)</label>\r\n          <Select\r\n            name={'pieKey'}\r\n            value={pieKey}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n            />\r\n\r\n\r\n          <label>By Aggr Value (number)</label>\r\n          <Select\r\n            name={'pieValue'}\r\n            value={pieValue}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n            />\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      type,\r\n      queryResult,\r\n      jdbcDataSources = [],\r\n      drillThrough = [],\r\n      drillDashboards = []\r\n    } = this.state;\r\n\r\n    const data = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    const drillItems = drillThrough.map(drill =>\r\n      <div key={drill.columnName}>\r\n        <div>Column: {drill.columnName}</div>\r\n        <div>Dashboard: {drill.dashboardId}</div>\r\n        <button onClick={() => this.removeDrillThrough(drill)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const columnItems = columns.map(col =>\r\n      <div key={col.name}>{col.name} {col.dataType}</div>\r\n    );\r\n\r\n    const showQueryTab = type === Constants.CHART || (type === Constants.FILTER && this.state.filterType === Constants.SLICER);\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        <Select\r\n          name={'type'}\r\n          value={type}\r\n          onChange={this.handleOptionChange}\r\n          options={Constants.WIDGET_TYPES}\r\n          allowEmpty={false}\r\n        />\r\n        \r\n        <div className=\"form-panel\">\r\n          <Tabs activeTab=\"basic\">\r\n            <div title=\"basic\">\r\n              <label>Title</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"title\" \r\n                value={this.state.title}\r\n                onChange={this.handleInputChange} \r\n              />\r\n\r\n              <Checkbox name=\"showBorder\" value=\"Show border\" checked={this.state.style.showBorder} onChange={this.handleCheckBoxChange} />\r\n              <Checkbox name=\"showTitle\" value=\"Show title\" checked={this.state.style.showTitle} onChange={this.handleCheckBoxChange} />\r\n            </div>\r\n\r\n            { type === Constants.FILTER && (  \r\n              <div title=\"Filter\">\r\n                <label>Filter Options</label>\r\n                <Select\r\n                  name={'filterType'}\r\n                  value={this.state.filterType}\r\n                  onChange={this.handleOptionChange}\r\n                  options={Constants.FILTER_TYPES}\r\n                  allowEmpty={false}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            { showQueryTab && (\r\n              <div title=\"Query\">\r\n                <label>DataSource</label>\r\n                <Select\r\n                  name={'jdbcDataSourceId'}\r\n                  value={this.state.jdbcDataSourceId}\r\n                  onChange={this.handleIntegerOptionChange}\r\n                  options={jdbcDataSources}\r\n                  optionDisplay={'name'}\r\n                  optionValue={'id'}\r\n                  />\r\n              \r\n                <label>SQL Query</label>\r\n                <AceEditor\r\n                  style={{ marginTop: '8px' }}\r\n                  value={this.state.sqlQuery}\r\n                  mode=\"mysql\"\r\n                  theme=\"xcode\"\r\n                  name=\"blah2\"\r\n                  onChange={this.handleAceEditorChange}\r\n                  height={'300px'}\r\n                  width={'100%'}\r\n                  fontSize={15}\r\n                  showPrintMargin={false}\r\n                  showGutter={true}\r\n                  highlightActiveLine={true}\r\n                  setOptions={{\r\n                    showLineNumbers: true,\r\n                    tabSize: 2\r\n                  }}\r\n                />\r\n\r\n                <div className=\"mt-3\">\r\n                  <button className=\"button\" onClick={this.runQuery}>Run Query</button>\r\n                </div>\r\n\r\n                <label>Result</label>\r\n                <TableWidget\r\n                  data={data}\r\n                  columns={columns}\r\n                  error={error}\r\n                />\r\n\r\n                <label>Columns Mapping</label>\r\n                <div>\r\n                  {columnItems}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { type === Constants.CHART && (\r\n              <div title=\"Chart\">\r\n                <label>Chart Options</label>\r\n                <Select\r\n                  name={'chartType'}\r\n                  value={this.state.chartType}\r\n                  onChange={this.handleOptionChange}\r\n                  options={Constants.CHART_TYPES}\r\n                  allowEmpty={false}\r\n                />\r\n                <label>Preview</label>\r\n                {this.renderChartPreview()}  \r\n              </div>\r\n            )}\r\n            \r\n            { type === Constants.CHART && (\r\n              <div title=\"Drill through\">\r\n                <label>Drill through</label>\r\n                <label>Column</label>\r\n                <Select\r\n                  name={'drillColumnName'}\r\n                  value={this.state.drillColumnName}\r\n                  options={columns}\r\n                  onChange={this.handleOptionChange}\r\n                  optionDisplay={'name'}\r\n                  optionValue={'name'}\r\n                />\r\n\r\n                <label>Dashboard</label>\r\n                <Select\r\n                  name={'drillDashboardId'}\r\n                  value={this.state.drillDashboardId}\r\n                  options={drillDashboards}\r\n                  onChange={this.handleIntegerOptionChange}\r\n                  optionDisplay={'name'}\r\n                  optionValue={'id'}\r\n                />\r\n                <div>\r\n                  {drillItems}\r\n                </div>\r\n                <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\r\n              </div>\r\n            )}\r\n\r\n            { type === Constants.FILTER && (\r\n              <div title=\"Query parameter\">\r\n                <label>Parameter</label>\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"queryParameter\" \r\n                  value={this.state.queryParameter}\r\n                  onChange={this.handleInputChange} \r\n                />\r\n              </div>\r\n            )}\r\n\r\n          </Tabs>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\n\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      isEditMode: false,\r\n      isReadOnly: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      refreshInterval: 15,\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      style: {},\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    console.log('DashboardEditView - componentDidMount', dashboardId);\r\n\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    for(let pair of params.entries()) {\r\n      console.log(pair[0]+ ', '+ pair[1]); \r\n    } \r\n\r\n    const widgetViewWidth = this.getPageWidth();\r\n    this.setState({\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const result = res.data;\r\n            this.setState({\r\n              dashboardId: result.id,\r\n              name: result.name,\r\n              style: result.style\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = () => {\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    const dashboardName = params.get('name');\r\n\r\n    const widgetViewWidth = this.getPageWidth();\r\n\r\n    this.setState({\r\n      isReadOnly: true,\r\n      name: dashboardName,\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            style: result.style\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth - 40;\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const { refreshInterval } = this.state;\r\n      let interval = parseInt(refreshInterval, 10) || 15;\r\n      interval = interval < 1 ? 1 : interval;\r\n      const timerId = setInterval(() => {\r\n        this.queryWidgets();\r\n        this.updateLastRefreshed();\r\n      }, interval * 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    this.refreshWidgetView();\r\n    this.updateLastRefreshed();\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n  } \r\n\r\n  queryWidgets = () => {\r\n    this.widgetViewPanel.current.queryCharts();\r\n  }\r\n\r\n  updateLastRefreshed = () => {\r\n    const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\r\n    this.setState({\r\n      lastRefreshed: now\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    console.log('save');\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      style\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      style: style\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.widgetViewPanel.current.saveWidgets();\r\n\r\n    this.props.onDashboardSave(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    this.widgetEditPanel.current.fetchWidget(widgetId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/workspace/dashboard/view?name=${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onTableCellClick = () => {\r\n    this.props.history.push(`/workspace/dashboard/drill?name=&`);\r\n  }\r\n\r\n  onHeightChange = (height) => {\r\n    const style = {...this.state.style};\r\n    style.height = height;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    const style = {...this.state.style};\r\n    style.backgroundColor = color;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {},\r\n    } = this.state;\r\n    const dashboardId = objectToDelete.id;\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        this.props.onDashboardDelete(dashboardId);\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  deleteDashboard = () => {\r\n    const { \r\n      dashboardId,\r\n      name\r\n    } = this.state;\r\n    const dashboard = {\r\n      id: dashboardId,\r\n      name: name\r\n    }\r\n    this.openConfirmDeletionPanel(dashboard);\r\n  }\r\n\r\n  openConfirmDeletionPanel = (dashboard) => {\r\n    this.setState({\r\n      objectToDelete: dashboard,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      lastRefreshed,\r\n      isEditMode,\r\n      isReadOnly\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel = null;\r\n    const controlButtons = (\r\n      <React.Fragment>\r\n        <span className=\"mr-3\">Last refreshed: {lastRefreshed}</span>\r\n        {\r\n          autoRefreshStatus === 'OFF' ? \r\n          (\r\n            <input \r\n              type=\"text\" \r\n              name=\"refreshInterval\" \r\n              value={this.state.refreshInterval}\r\n              onChange={this.handleInputChange}\r\n              className=\"inline-block\" \r\n              style={{width: '50px'}}\r\n            />\r\n          ) : null\r\n        }\r\n        <button className=\"button square-button mr-3\" onClick={this.toggleAutoRefresh}>\r\n          {\r\n            autoRefreshStatus === 'ON' ? \r\n            (\r\n              <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\r\n            ) : \r\n            (\r\n              <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\r\n            )\r\n          }\r\n        </button>\r\n        <button className=\"button square-button\" onClick={this.refresh}>\r\n          <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\r\n        </button>\r\n        <button className=\"button mr-3\" onClick={this.queryWidgets}>Apply Filters</button>\r\n      </React.Fragment>\r\n    );\r\n\r\n    if (!isReadOnly) {\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button mr-3\" onClick={this.cancelEdit}>Cancel</button>\r\n            <button className=\"button mr-3\" onClick={this.save}>Save</button>\r\n            <button className=\"button mr-3\" onClick={this.deleteDashboard}>Delete</button>\r\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            {controlButtons}\r\n            <button className=\"button square-button mr-3\" onClick={this.fullScreen}>\r\n              <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={this.edit}>Edit</button>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      fullScreenButtonPanel = controlButtons;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-menu-panel row\">\r\n          <div className=\"float-left\">\r\n            {\r\n              isReadOnly || !isEditMode ?\r\n              (\r\n                <div className=\"dashboard-name\">\r\n                  {this.state.name}\r\n                </div>\r\n              ) :(\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"name\" \r\n                  value={this.state.name}\r\n                  onChange={this.handleInputChange} \r\n                  className=\"dashboard-name\"\r\n                  />\r\n              )\r\n            }\r\n            \r\n          </div>\r\n          <div className=\"float-right\">\r\n            {fullScreenButtonPanel}\r\n            {editButtonPanel}\r\n          </div>\r\n        </div>\r\n\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          isEditMode={this.state.isEditMode}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          onHeightChange={this.onHeightChange}\r\n          onBackgroundColorChange={this.onBackgroundColorChange}\r\n          {...this.state.style}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'dashboard-edit-widget-dialog'} \r\n          title={'Widget Edit'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {this.state.objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\nimport './Dashboard.css';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as Constants from '../api/Constants';\r\n\r\nconst ROUTE_WORKSPACE_DASHBOARD = '/workspace/dashboard/';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      activeDashboardId: 0,\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    const index = pathname.indexOf(ROUTE_WORKSPACE_DASHBOARD);\r\n    if (index !== -1) {\r\n      const activeDashboardId = Number(pathname.substring(index + ROUTE_WORKSPACE_DASHBOARD.length));\r\n      this.setState({\r\n        activeDashboardId: activeDashboardId\r\n      })\r\n    }\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false,\r\n      name: ''\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      style: {\r\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\r\n        backgroundColor: 'rgba(233, 235, 238, 1)'\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.closeEditPanel();\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.setState({\r\n      activeDashboardId: dashboardId\r\n    }, () => {\r\n      this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n    });\r\n  }\r\n\r\n  onDashboardSave = (dashboardId) => {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  onDashboardDelete = (dashboardId) => {\r\n    this.fetchBoards();\r\n    this.setState({\r\n      activeDashboardId: 0\r\n    }, () => {\r\n      this.props.history.push('/workspace/dashboard');\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dashboards = [],\r\n      activeDashboardId,\r\n      searchValue\r\n    } = this.state;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.props;\r\n    const showEdit = sysRole === Constants.SYS_ROLE_VIEWER ? false : true;\r\n\r\n    const dashboardRows = [];\r\n    for (let i = 0; i < dashboards.length; i++) {\r\n      const dashboard = dashboards[i];\r\n      const name = dashboard.name;\r\n      const menuActive = activeDashboardId === dashboard.id ? 'dashboard-menu-item-active' : '';\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        dashboardRows.push(\r\n          (\r\n            <div key={i} className={`dashboard-menu-item ellipsis ${menuActive}`} onClick={() => this.view(dashboard.id)}>\r\n              {name}\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dashboard-sidebar\">\r\n          <div style={{margin: '5px'}}>\r\n            {\r\n              showEdit ? (\r\n                <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\r\n                  <FontAwesomeIcon icon=\"plus\" /> New\r\n                </button>\r\n              ) : null\r\n            }\r\n            <input \r\n              type=\"text\" \r\n              name=\"searchValue\" \r\n              value={this.state.searchValue}\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleInputChange} />\r\n          </div>\r\n          <div>\r\n            {dashboardRows}\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route \r\n            path=\"/workspace/dashboard/:id\" \r\n            render={(props) => \r\n              <DashboardEditView \r\n                key={props.match.params.id} \r\n                onDashboardSave={this.onDashboardSave} \r\n                onDashboardDelete={this.onDashboardDelete} \r\n              />\r\n            } \r\n            />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'small-modal-panel'} \r\n          title={'New'} >\r\n          <div>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              />\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst SYS_ROLES = ['viewer', 'developer'];\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      searchValue: '',\r\n      showUpdatePassword: false,\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      this.setState({\r\n        id: user.id,\r\n        username: user.username,\r\n        name: user.name,\r\n        tempPassword: '',\r\n        sysRole: user.sysRole,\r\n        userGroups: user.userGroups\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      userGroupId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: sysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      if (showUpdatePassword && tempPassword) {\r\n        user.tempPassword = tempPassword;\r\n      }\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/user/' + id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n      });\r\n  }\r\n\r\n  addUserGroup = () => {\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId) => {\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      showUpdatePassword,\r\n      users = [],\r\n      groups = [],\r\n      userGroups = []\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const userItems = users.map(user => \r\n      <div key={user.id} className=\"user-card\">\r\n        <p>\r\n          {user.username}\r\n          {user.name}\r\n          {user.sysRole}\r\n          <button className=\"button\" onClick={() => this.openEditPanel(user)}>update</button>\r\n          <button className=\"button\" onClick={() => this.delete(user.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups.length; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups.length; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId}>\r\n                <div>Group: {groups[j].name}</div>\r\n                <button className=\"button\" onClick={() => this.removeUserGroup(groupId)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchValue\"\r\n            value={this.state.searchValue}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Search...\"\r\n            style={{width: '200px'}}\r\n          />\r\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New User\r\n          </button>\r\n        </div>\r\n        <div className=\"row\">\r\n          {userItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'} \r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            { mode === 'Edit' ? \r\n              (\r\n                <div style={{margin: '3px 0px 8px 0px'}}>\r\n                  <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n                </div>\r\n              ) : null\r\n            }\r\n            { mode === 'New' || showUpdatePassword ? \r\n              (\r\n                <div>\r\n                  <label>Password</label>\r\n                  <input \r\n                    type=\"password\" \r\n                    name=\"tempPassword\" \r\n                    value={this.state.tempPassword}\r\n                    onChange={this.handleInputChange} />\r\n                </div>\r\n              ) : null\r\n            }\r\n            \r\n            <label>System Role</label>\r\n            <Select\r\n              name={'sysRole'}\r\n              value={this.state.sysRole}\r\n              onChange={this.handleOptionChange}\r\n              options={SYS_ROLES}\r\n              allowEmpty={false}\r\n            />\r\n            \r\n            <br/>\r\n            \r\n            <label>Groups</label>\r\n            <Select\r\n              name={'userGroupId'}\r\n              value={this.state.userGroupId}\r\n              onChange={this.handleIntegerOptionChange}\r\n              options={groups}\r\n              optionDisplay={'name'}\r\n              optionValue={'id'}\r\n            />\r\n            <button className=\"button\" onClick={this.addUserGroup}>Add</button>\r\n            <div>\r\n              {userGroupItems}\r\n            </div>\r\n\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      this.setState({\r\n        id: group.id,\r\n        name: group.name,\r\n        groupDashboards: group.groupDashboards\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      groupDashboardId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/group/' + id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n      });\r\n  }\r\n\r\n  addGroupDashboard= () => {\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    console.log('addGroupDashboard', groupDashboardId);\r\n    console.log('addGroupDashboard', groupDashboards);\r\n\r\n    if (groupDashboardId) {\r\n      const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n      if (index === -1) {\r\n        const newGroupDashboards = [...groupDashboards];\r\n        newGroupDashboards.push(groupDashboardId);\r\n        this.setState({\r\n          groupDashboards: newGroupDashboards\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId) => {\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const groupItems = groups.map(group => \r\n      <div key={group.id} className=\"group-card\">\r\n        <p>\r\n          {group.name}\r\n          <button className=\"button\" onClick={() => this.openEditPanel(group)}>update</button>\r\n          <button className=\"button\" onClick={() => this.delete(group.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards.length; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards.length; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId}>\r\n                <div>Name: {dashboards[j].name}</div>\r\n                <button className=\"button\" onClick={() => this.removeGroupDashboard(dashboardId)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchValue\"\r\n            value={this.state.searchValue}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Search...\"\r\n            style={{width: '200px'}}\r\n            />\r\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New Group\r\n          </button>\r\n        </div>\r\n        <div className=\"row\">\r\n          {groupItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'} \r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            <label>Dashboards</label>\r\n            <Select\r\n              name={'groupDashboardId'}\r\n              value={this.state.groupDashboardId}\r\n              onChange={this.handleIntegerOptionChange}\r\n              options={dashboards}\r\n              optionDisplay={'name'}\r\n              optionValue={'id'}\r\n            />\r\n            <button className=\"button\" onClick={this.addGroupDashboard}>Add</button>\r\n            <div>\r\n              {groupDashboardItems}\r\n            </div>\r\n            \r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\n\r\nimport User from './User';\r\nimport Group from './Group';\r\nimport Tabs from '../components/Tabs';\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Tabs activeTab=\"Group\">\r\n          <div title=\"Group\">\r\n            <Group />\r\n          </div>\r\n          <div title=\"User\">\r\n            <User />\r\n          </div>\r\n        </Tabs>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const user = res.data;\r\n        this.setState({\r\n          id: user.id,\r\n          username: user.username,\r\n          name: user.name,\r\n          sysRole: user.sysRole,\r\n          apiKey: user.apiKey\r\n        });\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        return;\r\n      }  \r\n\r\n      user.password = password;\r\n    }\r\n\r\n    axios.put('/ws/user/account', user)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>Account</div>\r\n        <div className=\"form-panel\">   \r\n          <label>Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label>System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label>API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button className=\"button\" onClick={this.generateApiKey}>Generate new API Key</button>\r\n          <br/>\r\n\r\n          <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n          {\r\n            showUpdatePassword ?\r\n            (\r\n              <React.Fragment>\r\n                <br/>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label>Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n            ) : null\r\n          }\r\n\r\n          <br/>\r\n          <button className=\"button\" onClick={this.save}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","\r\nimport React from 'react';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('DashboardFullScreenView', 'componentDidMount');\r\n    this.dashboardEditView.loadViewByDashboardName();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView wrappedComponentRef={comp => (this.dashboardEditView = comp)} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","import React from 'react';\r\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\n\r\nimport Toast from '../components/Toast';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport './Workspace.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data source',\r\n    icon: 'database'\r\n  }, \r\n  {\r\n    link: '/workspace/usermanagement',\r\n    value: 'User Management',\r\n    icon: 'users-cog'\r\n  }\r\n];\r\n\r\nconst ACCOUNT_MENU_LINK = '/workspace/account';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    const menuItem = MENU_ITEMS.find(m => pathname.startsWith(m.link));\r\n    this.setState({\r\n      currentMenuLink: menuItem.link,\r\n    });\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  logout = () => {\r\n    axios.get('/auth/logout')\r\n      .then(res => {\r\n        this.props.onLogout();\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n    } = this.state;\r\n    \r\n    console.log('Workspace - render');\r\n\r\n    const {\r\n      username,\r\n      sysRole\r\n    } = this.props;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.link === '/workspace/dashboard');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li key={menu.link} className={active}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"workspace-nav\">  \r\n          <div className=\"workspace-name\">Poli</div>\r\n          <ul className=\"workspace-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div className=\"workspace-account-menu\">\r\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\r\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\r\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\r\n                <span className=\"workspace-nav-menu-text\">{username}</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"workspace-logout-button inline-block\" onClick={this.logout}>\r\n              <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"workspace-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n            <Route exact path=\"/workspace/dashboard/view\" component={DashboardFullScreenView} />\r\n            <Route exact path=\"/workspace/usermanagement\" component={UserManagement} />\r\n            <Route path=\"/workspace/dashboard\" render={() => <Dashboard {...this.props} />} />\r\n          </Switch>\r\n        </div>\r\n        <Toast />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Workspace);\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, withRouter, Component } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport ChangeTempPassword from './views/ChangeTempPassword';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\n\r\n\r\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      sysRole: '',\r\n      isAuthorizing: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    const search = this.props.location.search;\r\n\r\n    const params = new URLSearchParams(search);\r\n    const apiKey = params.get('apiKey');\r\n\r\n\r\n    const currentPath = pathname + search;\r\n    const {\r\n      sysRole\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    console.log('App - componentDidMount', isAuthenticated, currentPath);\r\n\r\n    if (!isAuthenticated) {\r\n      console.log('App - componentDidMount', 'cookie');\r\n      this.setState({\r\n        isAuthorizing: true\r\n      }, () => {\r\n        axios.post('/auth/login/cookie')\r\n          .then(res => {\r\n            const loginResponse = res.data;\r\n            if (loginResponse.error) {\r\n                this.setState({\r\n                  sysRole: '',\r\n                  isAuthorizing: false\r\n                }, () => {\r\n                  this.props.history.push('/login');\r\n                });\r\n              } else {\r\n                this.onLoginSuccess(loginResponse, currentPath);\r\n              }\r\n          });\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n  onLoginSuccess = (loginResponse = {}, pathname = null) => {\r\n    if (loginResponse.tempPassword) {\r\n      this.props.history.push('/changepassword');\r\n    } else {\r\n      this.setState({\r\n        username: loginResponse.username,\r\n        sysRole: loginResponse.sysRole,\r\n        isAuthorizing: false\r\n      }, () => {\r\n        let directUrl = '/workspace/dashboard';\r\n        if (pathname) {\r\n          directUrl = pathname;\r\n        }\r\n        console.log('onLoginSuccess', pathname);\r\n        this.props.history.push(directUrl);\r\n      });\r\n    }\r\n  }\r\n\r\n  onLogout = () => {\r\n    this.setState({\r\n      username: '',\r\n      sysRole: '',\r\n      isAuthorizing: false\r\n    }, () => {\r\n      this.props.history.push('/login');\r\n    });\r\n  }\r\n   \r\n  render() {\r\n    const {\r\n      username,\r\n      sysRole,\r\n      isAuthorizing\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n    console.log('App - render', sysRole, isAuthenticated);\r\n\r\n    if (isAuthorizing) {\r\n      return (\r\n        <FontAwesomeIcon icon='cicle-notch' spin={true} size=\"3x\" />\r\n      )\r\n    }\r\n    \r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/login\" render={() => <Login sysRole={sysRole} onLoginSuccess={this.onLoginSuccess} />} />\r\n          <Route path=\"/changepassword\" component={ChangeTempPassword} />\r\n          <PrivateRoute \r\n            authenticated={isAuthenticated} \r\n            path='/workspace' \r\n            component={Workspace} \r\n            username={username}\r\n            sysRole={sysRole} \r\n            onLogout={this.onLogout}\r\n          />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} {...rest} />\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}