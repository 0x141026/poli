{"version":3,"sources":["views/Login.js","views/ChangeTempPassword.js","api/WebApi.js","components/Modal.js","components/Toast.js","views/DataSource.js","components/ColorPicker.js","components/Checkbox.js","api/Util.js","api/EchartsApi.js","api/Constants.js","components/GridDraggable.js","components/GridResizable.js","components/TableWidget.js","components/Slicer.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/Tabs.js","components/Select.js","components/WidgetEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/DashboardFullScreenView.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","handleKeyPress","keyCode","login","_this$state","state","username","password","user","axios","post","then","res","loginResponse","data","error","errorMsg","onLoginSuccess","_this2","isAuthenticated","sysRole","react_default","a","createElement","Fragment","className","type","onChange","onKeyDown","onClick","React","Component","withRouter","ChangeTempPassword","changePassword","confirmedPassword","length","history","push","style","fontSize","textAlign","fontWeight","marginBottom","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","concat","onClose","react_fontawesome_index_es","icon","size","Toast","message","showToast","setTimeout","hide","_toastRef","assertThisInitialized","toastStatus","DataSource","save","showUpdatePassword","id","connectionUrl","driverClassName","ping","ds","put","closeEditPanel","catch","console","log","result","clearEditPanel","initialState","openEditPanel","showEditPanel","confirmDelete","_this$state$objectToD","objectToDelete","delete","closeConfirmDeletionPanel","openConfirmDeletionPanel","datasource","showConfirmDeletionPanel","toggleUpdatePassword","prevState","clearSearch","searchValue","jdbcDataSources","webApi","_this$state2","_this$state2$jdbcData","_this$state2$objectTo","mode","jdbcDataSourceItems","_loop","i","includes","key","placeholder","width","src_components_Modal","rows","margin","ColorPicker","handleClick","showPalette","handleClose","handleChange","color","rgb","rgba","r","g","b","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","Checkbox","toggle","checked","_this$props2","checkmarkBoxStyle","backgroundColor","jsonToArray","json","array","JSON","parse","e","CHART_COLORS","getPieOption","queryResultData","pieKey","pieValue","legend","series","row","tooltip","orient","center","radius","getPieOptionTemplate","CHART","FILTER","WIDGET_TYPES","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","SYS_ROLE_ADMIN","SYS_ROLE_VIEWER","DEFAULT_DASHBOARD_HEIGHT","WIDGET_BORDER","GridDraggable","onMouseDown","preventDefault","gridItemNode","ReactDOM","findDOMNode","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","fixedWidth","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","TableWidget","goToLink","link","onTableTdClick","_this$props$data","_this$props$columns","columns","_this$props$drillThro","drillThrough","columnHeaders","forEach","column","columnName","header","Header","accessor","index","findIndex","d","dashboardId","Cell","es","defaultPageSize","previousText","nextText","Slicer","isSelectAll","toggleSelectAll","newIsSelectAll","newCheckBoxes","toConsumableArray","checkBoxes","isChecked","filterId","handleSearchValueChange","indexOf","handleCheckBoxChange","x","_this$props$checkBoxe","checkBoxItems","map","box","src_components_Checkbox","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","instance","handleOriginal","drills","widgetDrillThrough","onChartClick","param","echarts","onChartLegendselectchanged","echart","onSlicerChange","onWidgetFilterInputChange","onSingleValueChange","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","filterType","_this$props$queryResu","queryResult","Util","widgetItem","Constants","src_components_TableWidget","chartOption","EchartsApi","echarts_for_react_lib_default","option","onEvents","src_components_Slicer","isEditMode","_this$props2$style","_style$showBorder","showBorder","borderStyle","showTitle","styles","border","marginRight","components_GridDraggable","components_GridResizable","GridLayout","_this$props$widgets","widgets","showGridlines","backgroundSize","backgroundImage","boxItems","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","viewWidth","newWidgets","gridWidth","resizeWidgetsToActual","resizeWidgetsToBase","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryFilters","queryCharts","handleHeightChange","onHeightChange","onBackgroundColorChange","saveWidgets","stringify","w","splice","_this$state$widgets","getFilterParams","_this$state$widgets2","filterParams","filterParam","_widget$checkBoxes","paramValues","j","checkBox","remark","queryParameter","_widgets$i","queryChart","_widgets$i2","queryFilter","params","_this3","_arr","values","_i","val","widgetViewWidth","components_ColorPicker","src_components_GridLayout","Tabs","handleTabClick","activeTab","tabHeaders","tabContent","active","Select","handleOptionChange","_this$props$options","options","optionValue","optionDisplay","_this$props$preloadOn","preloadOneEmpty","optionList","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","_widget$data","sqlQuery","jdbcDataSourceId","runQuery","_x","objectSpread","handleAceEditorChange","newValue","handleIntegerOptionChange","intValue","_this$state3","_this$state4","onSave","queryRequest","addDrillThrough","_this$state5","drillColumnName","drillDashboardId","newDrillThrough","removeDrillThrough","drill","generateChart","_this$state6","_this$state6$queryRes","renderChartPreview","_this$state7","_this$state7$queryRes","chartPreview","_this$state8","class","components_Select","_this$state9","_this$state9$jdbcData","_this$state9$drillThr","_this$state9$drillDas","drillItems","columnItems","col","dataType","showQueryTab","src_components_Tabs","react_ace_lib_default","marginTop","theme","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","DashboardEditView","loadViewByDashboardName","url","location","search","dashboardName","URLSearchParams","getPageWidth","isReadOnly","refresh","toggleAutoRefresh","autoRefreshTimerId","clearInterval","refreshInterval","interval","timerId","setInterval","queryWidgets","updateLastRefreshed","refreshWidgetView","widgetViewPanel","current","now","Date","toTimeString","replace","lastRefreshed","dashboard","onDashboardSave","edit","cancelEdit","onSaveWidget","showWidgetEditPanel","openWidgetEditPanel","widgetEditPanel","applyFilters","fullScreen","window","open","onTableCellClick","onDashboardDelete","deleteDashboard","jdbcDataSourceOptions","createRef","match","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","editButtonPanel","autoRefreshStatus","fullScreenButtonPanel","controlButtons","components_WidgetViewPanel","ref","src_components_WidgetEditPanel","Dashboard","fetchBoards","view","activeDashboardId","pathname","Number","substring","_this$state$dashboard","showEdit","dashboardRows","menuActive","Route","path","render","views_DashboardEditView","User","fetchUsers","users","fetchGroups","groups","tempPassword","userGroups","userGroupId","initialEditPanelState","selectedSysRole","addUserGroup","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_this$state3$users","_this$state3$groups","_this$state3$userGrou","userItems","userGroupItems","Group","fetchDashboards","group","groupDashboards","groupDashboardId","addGroupDashboard","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","UserManagement","views_Group","views_User","Account","fetchUser","apiKey","generateApiKey","DashboardFullScreenView","dashboardEditView","wrappedComponentRef","comp","MENU_ITEMS","Workspace","handleMenuClick","menuLink","currentMenuLink","logout","onLogout","startsWith","find","m","menuItems","menuList","filter","menu","Link","to","isAccountMenuActive","Switch","exact","component","views_UserManagement","src_views_Dashboard","src_components_Toast","PageNotFound","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","faCircleNotch","App","isAuthorizing","directUrl","currentPath","spin","src_views_Login","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"qlBAOMA,sBAEJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA0BRQ,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SA7BnBb,EAiCnBc,eAAiB,SAACN,GACK,KAAlBA,EAAMO,SACPf,EAAKgB,SAnCUhB,EAuCnBgB,MAAQ,WAAM,IAAAC,EAIRjB,EAAKkB,MAFPC,EAFUF,EAEVE,SACAC,EAHUH,EAGVG,SAGIC,EAAO,CACXF,SAAUA,EACVC,SAAUA,GAGPD,EAOAC,EAOLE,IAAMC,KAAK,mBAAoBF,GAC5BG,KAAK,SAAAC,GACJ,IAAMC,EAAgBD,EAAIE,KACtBD,EAAcE,MAChB5B,EAAKS,SAAS,CACZoB,SAAUH,EAAcE,QAG1B5B,EAAKD,MAAM+B,eAAeJ,KAd9B1B,EAAKS,SAAS,CACZoB,SAAU,mBARZ7B,EAAKS,SAAS,CACZoB,SAAU,oBAlDd7B,EAAKkB,MAAQ,CACXW,SAAU,GACVV,SAAU,GACVC,SAAU,IALKpB,mFASC,IAAA+B,EAAA5B,KAEd6B,GAAkB,EADF7B,KAAKJ,MAAjBkC,UAGND,GAAkB,GAGfA,GACHV,IAAMC,KAAK,sBACRC,KAAK,SAAAC,GACJ,IAAMC,EAAgBD,EAAIE,KACrBD,EAAcE,OACjBG,EAAKhC,MAAM+B,eAAeJ,sCAyDlC,OACEQ,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAf,QACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAmBnC,KAAKe,MAAMW,UAC7CK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAMC,SAClBqB,SAAUrC,KAAKI,kBACfkC,UAAWtC,KAAKW,iBAElBoB,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAME,SAClBoB,SAAUrC,KAAKI,kBACfkC,UAAWtC,KAAKW,iBAElBoB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,sBAAsBI,QAASvC,KAAKa,OAAtD,oBAvGM2B,IAAMC,YAgHXC,cAAW/C,GChHpBgD,cAEJ,SAAAA,EAAY/C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2C,IACjB9C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6C,GAAAxC,KAAAH,KAAMJ,KAWRQ,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAdnBb,EAkBnB+C,eAAiB,WAAM,IAAA9B,EAIjBjB,EAAKkB,MAFPE,EAFmBH,EAEnBG,SACA4B,EAHmB/B,EAGnB+B,kBAGF,GAAI5B,GAAY4B,GACT5B,IAAa4B,EAAmB,CACrC,GAAI5B,EAAS6B,OAAS,EAIpB,YAHAjD,EAAKS,SAAS,CACZoB,SAAQ,6BAKZ,IAAMR,EAAO,CACXD,SAAUA,GAGZE,IAAMC,KAAK,6BAA8BF,GACtCG,KAAK,SAAAC,GACJ,IAAMC,EAAgBD,EAAIE,MAAQ,GAC9BD,EAAcE,MAChB5B,EAAKS,SAAS,CACZoB,SAAUH,EAAcE,QAG1B5B,EAAKD,MAAMmD,QAAQC,KAAK,+BAI9BnD,EAAKS,SAAS,CACZoB,SAAQ,kCAhDZ7B,EAAKkB,MAAQ,CACXW,SAAU,GACVT,SAAU,GACV4B,kBAAmB,IALJhD,qHAqEjB,OACEkC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OAAKgB,MAhBQ,CACjBC,SAAU,OACVC,UAAW,SACXC,WAAY,OACZC,aAAc,SAYV,mBACAtB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAmBnC,KAAKe,MAAMW,UAC7CK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,OAAKgB,MAbE,CACfG,WAAY,OACZC,aAAc,MACdH,SAAU,SAUF,8BACAnB,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAMC,SAClBqB,SAAUrC,KAAKI,oBACjB2B,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,oBACLC,MAAOV,KAAKe,MAAM8B,kBAClBR,SAAUrC,KAAKI,oBACjB2B,EAAAC,EAAAC,cAAA,UAAQE,UAAU,sBAAsBI,QAASvC,KAAK4C,gBAAtD,sBA3FmBJ,IAAMC,WAoGxBC,cAAWC,qCCnGbW,EAAgB,eAAAC,EAAAzD,OAAA0D,EAAA,EAAA1D,CAAA2D,EAAAzB,EAAA0B,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAzB,EAAA6B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEL7C,IAAM8C,IAAI,sBAFL,cAEtBL,EAFsBE,EAAAI,KAAAJ,EAAAK,OAAA,SAGrBP,EAASpC,MAAQ,IAHI,cAAAsC,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAAAA,EAAAK,OAAA,SAKrB,IALqB,yBAAAL,EAAAO,SAAAV,EAAA,iBAAH,yBAAAJ,EAAAe,MAAAtE,KAAAuE,YAAA,GC0BdC,2LA5BJ,IAAA3E,EAAAG,KAAAyE,EAMHzE,KAAKJ,MAJP8E,EAFKD,EAELC,KAFKC,EAAAF,EAGLG,kBAHK,IAAAD,EAGQ,GAHRA,EAILE,EAJKJ,EAILI,MACAC,EALKL,EAKLK,SAGIC,EAAcL,EAAO,gBAAkB,eAC7C,OACE3C,EAAAC,EAAAC,cAAA,OAAKE,UAAS,iBAAA6C,OAAmBD,IAC/BhD,EAAAC,EAAAC,cAAA,OAAKE,UAAS,eAAA6C,OAAiBJ,IAC7B7C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAe0C,GAC9B9C,EAAAC,EAAAC,cAAA,UAAQE,UAAU,iCAAiCI,QAAS,kBAAM1C,EAAKD,MAAMqF,YAC3ElD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,QAAQC,KAAK,SAGvCrD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACZ2C,YAtBOtC,IAAMC,oBCDpB4C,sBAEJ,SAAAA,EAAYzF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqF,IACjBxF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuF,GAAAlF,KAAAH,KAAMJ,KASR8E,KAAO,SAACY,GACNzF,EAAKS,SAAS,CACZiF,WAAW,EACXD,QAASA,GACR,WACDE,WAAW,WACT3F,EAAK4F,QACJ,SAjBY5F,EAqBnB4F,KAAO,WACL5F,EAAKS,SAAS,CACZiF,WAAW,EACXD,QAAS,MAtBXzF,EAAKkB,MAAQ,CACXwE,WAAW,EACXD,QAAS,IAGXD,EAAMK,UAAN5F,OAAA6F,EAAA,EAAA7F,QAAA6F,EAAA,EAAA7F,CAAAD,IAPiBA,wEAgCV,IAAAiB,EAIHd,KAAKe,MAFPwE,EAFKzE,EAELyE,UACAD,EAHKxE,EAGLwE,QAGIM,EAAcL,EAAY,gBAAkB,eAElD,OACExD,EAAAC,EAAAC,cAAA,OAAKE,UAAS,mBAAA6C,OAAqBY,IACjC7D,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKyF,MAAzC,KACA1D,EAAAC,EAAAC,cAAA,WACGqD,WA9CS9C,IAAMC,YAApB4C,EA8BGX,KAAO,SAACY,GACbD,EAAMK,UAAUhB,KAAKY,IAsBVD,QCoRAQ,sBAhUb,SAAAA,EAAYjG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6F,IACjBhG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+F,GAAA1F,KAAAH,KAAMJ,KAmCRQ,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAtCnBb,EAiDnBiG,KAAO,WAAM,IAAAhF,EAUPjB,EAAKkB,MARPgF,EAFSjF,EAETiF,mBACAC,EAHSlF,EAGTkF,GACAC,EAJSnF,EAITmF,cACAC,EALSpF,EAKToF,gBACAlF,EANSF,EAMTE,SACAC,EAPSH,EAOTG,SACAR,EARSK,EAQTL,KACA0F,EATSrF,EASTqF,KAGF,GAAK1F,EAAL,CAIA,IAAI2F,EAAK,CACPH,cAAeA,EACfC,gBAAiBA,EACjBlF,SAAUA,EACVP,KAAMA,EACN0F,KAAMA,GAGG,OAAPH,GACFI,EAAGJ,GAAKA,EACJD,GAAsB9E,IACxBmF,EAAGnF,SAAWA,GAIhBE,IAAMkF,IAAI,qBAAsBD,GAC7B/E,KAAK,SAAAC,GACJzB,EAAKyG,iBACLzG,EAAKyD,qBAENiD,MAAM,SAAA9E,GACL+E,QAAQC,IAAIhF,OAGhB2E,EAAGnF,SAAWA,EAEdE,IAAMC,KAAK,qBAAsBgF,GAC9B/E,KAAK,SAAAC,GACJzB,EAAKyG,iBACLzG,EAAKyD,qBAENiD,MAAM,SAAA9E,GACL+E,QAAQC,IAAIhF,QAjGD5B,EAsGnBsG,KAAO,SAACH,GACN7E,IAAM8C,IAAN,2BAAAe,OAAqCgB,IAClC3E,KAAK,SAAAC,GACJ,IAAMoF,EAASpF,EAAIE,KACnB6D,EAAMX,KAAKgC,MA1GE7G,EA8GnB8G,eAAiB,WACf9G,EAAKS,SAAST,EAAK+G,eA/GF/G,EAkHnBgH,cAAgB,SAACT,GACJ,OAAPA,EACFvG,EAAKS,SAAS,CACZyF,oBAAoB,EACpBC,GAAII,EAAGJ,GACPC,cAAeG,EAAGH,cAClBC,gBAAiBE,EAAGF,gBACpBlF,SAAUoF,EAAGpF,SACbC,SAAUmF,EAAGnF,SACbR,KAAM2F,EAAG3F,KACT0F,KAAMC,EAAGD,OAGXtG,EAAK8G,iBAGP9G,EAAKS,SAAS,CACZwG,eAAe,KAnIAjH,EAuInByG,eAAiB,WACfzG,EAAKS,SAAS,CACZwG,eAAe,KAzIAjH,EA6InBkH,cAAgB,WAAM,IAAAC,EAGhBnH,EAAKkB,MADPkG,sBAFkB,IAAAD,EAED,GAFCA,EAIpB7F,IAAM+F,OAAO,sBAAwBD,EAAejB,IACjD3E,KAAK,SAAAC,GACJzB,EAAKyD,mBACLzD,EAAKsH,+BApJQtH,EAwJnBuH,yBAA2B,SAACC,GAC1BxH,EAAKS,SAAS,CACZ2G,eAAgBI,EAChBC,0BAA0B,KA3JXzH,EA+JnBsH,0BAA4B,WAC1BtH,EAAKS,SAAS,CACZ2G,eAAgB,GAChBK,0BAA0B,KAlKXzH,EAsKnB0H,qBAAuB,WACrB1H,EAAKS,SAAS,SAAAkH,GAAS,MAAK,CAC1BzB,oBAAqByB,EAAUzB,uBAxKhBlG,EA4KnB4H,YAAc,WACZ5H,EAAKS,SAAS,CACZoH,YAAa,MA5Kf7H,EAAKkB,MAAQ,CACX4G,gBAAiB,GACjBb,eAAe,EACfQ,0BAA0B,EAC1BL,eAAgB,GAChBlB,oBAAoB,EACpB2B,YAAa,GACb1B,GAAI,KACJvF,KAAM,GACNwF,cAAe,GACfC,gBAAiB,GACjBlF,SAAU,GACVC,SAAU,GACVkF,KAAM,IAfStG,mFAiCjBG,KAAKsD,4LAUyBsE,WAAxBD,SACN3H,KAAKM,SAAS,CACZqH,gBAAiBA,uIAkJnB,IAbO,IAAA/F,EAAA5B,KAAA6H,EAQH7H,KAAKe,MANPgF,EAFK8B,EAEL9B,mBACAuB,EAHKO,EAGLP,yBACAI,EAJKG,EAILH,YACA1B,EALK6B,EAKL7B,GALK8B,EAAAD,EAMLF,uBANK,IAAAG,EAMa,GANbA,EAAAC,EAAAF,EAOLZ,sBAPK,IAAAc,EAOY,GAPZA,EAUDC,EAAc,OAAPhC,EAAc,MAAQ,OAE7BiC,EAAsB,GAZrBC,EAAA,SAaEC,GACP,IAAM/B,EAAKuB,EAAgBQ,GACrB1H,EAAO2F,EAAG3F,OACXiH,GAAgBA,GAAejH,EAAK2H,SAASV,KAChDO,EAAoBjF,KAEhBjB,EAAAC,EAAAC,cAAA,OAAKoG,IAAKF,EAAGhG,UAAU,uBACrBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2CACZ1B,GAEHsB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qCAAqCI,QAAS,kBAAMX,EAAKiF,cAAcT,KACvFrE,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,OAAOC,KAAK,QAEpCrD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qCAAqCI,QAAS,kBAAMX,EAAKwF,yBAAyBhB,KAClGrE,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,YAAYC,KAAK,QAEzCrD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qCAAqCI,QAAS,kBAAMX,EAAKuE,KAAKC,EAAGJ,MACjFjE,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,OAAOC,KAAK,YAlBvC+C,EAAI,EAAGA,EAAIR,EAAgB7E,OAAQqF,IAAKD,EAAxCC,GA2BT,OACEpG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,cACLC,MAAOV,KAAKe,MAAM2G,YAClBrF,SAAUrC,KAAKI,kBACfkI,YAAY,YACZrF,MAAO,CAACsF,MAAO,WAEjBxG,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKyH,aAAzC,SACA1F,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAKiF,cAAc,QAC3D9E,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,SADxB,oBAIFpD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZ8F,GAGHlG,EAAAC,EAAAC,cAACuG,EAAD,CACE9D,KAAM1E,KAAKe,MAAM+F,cACjB7B,QAASjF,KAAKsG,eACd1B,WAAY,oBACZC,MAAOmD,GAEPjG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,qBAAYF,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAhB,MACZJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMN,KAClB4B,SAAUrC,KAAKI,oBAEjB2B,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,YACEwG,KAAK,IACLrG,KAAK,OACL3B,KAAK,gBACLC,MAAOV,KAAKe,MAAMkF,cAClB5D,SAAUrC,KAAKI,oBAGjB2B,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,kBACLC,MAAOV,KAAKe,MAAMmF,gBAClB7D,SAAUrC,KAAKI,oBAEjB2B,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAMC,SAClBqB,SAAUrC,KAAKI,oBAEN,SAAT4H,EAEEjG,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAACyF,OAAQ,oBACnB3G,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKuH,sBAAzC,oBAEA,KAEK,QAATS,GAAkBjC,EAEhBhE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAME,SAClBoB,SAAUrC,KAAKI,qBAEjB,KAGN2B,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMoF,KAClB9D,SAAUrC,KAAKI,oBACjB2B,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcI,QAASvC,KAAK8F,MAA9C,UAIJ/D,EAAAC,EAAAC,cAACuG,EAAD,CACE9D,KAAM4C,EACNrC,QAASjF,KAAKmH,0BACdvC,WAAY,oBACZC,MAAO,oBACP9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,mCACmC8E,EAAexG,KADlD,KAGAsB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAK+G,eAAzC,iDArSN,MAAO,CACLhB,oBAAoB,EACpBC,GAAI,KACJvF,KAAM,GACNwF,cAAe,GACfC,gBAAiB,GACjBlF,SAAU,GACVC,SAAU,GACVkF,KAAM,WA9Ba1D,wCCmEVkG,cAxEb,SAAAA,EAAY/I,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2I,IACjB9I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6I,GAAAxI,KAAAH,KAAMJ,KAMRgJ,YAAc,WACZ/I,EAAKS,SAAS,SAAAkH,GAAS,MAAK,CAC1BqB,aAAcrB,EAAUqB,gBATThJ,EAanBiJ,YAAc,WACZjJ,EAAKS,SAAS,CACZuI,aAAa,KAfEhJ,EAmBnBkJ,aAAe,SAACC,GACd,IAAMC,EAAMD,EAAMC,IACZC,EAAI,QAAAlE,OAAWiE,EAAIE,EAAf,MAAAnE,OAAqBiE,EAAIG,EAAzB,MAAApE,OAA+BiE,EAAII,EAAnC,MAAArE,OAAyCiE,EAAIjH,EAA7C,KACVnC,EAAKD,MAAMyC,SAAS6G,IApBpBrJ,EAAKkB,MAAQ,CACX8H,aAAa,GAHEhJ,wEA2BjB,IAAMmJ,EAAQ,CACZT,MAAO,OACPe,OAAQ,OACRC,aAAc,MACdC,WAAYxJ,KAAKJ,MAAMc,OAyBzB,OACEqB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKgB,MAxBM,CACbwG,QAAS,MACTD,WAAY,OACZD,aAAc,MACdG,UAAW,2BACXC,QAAS,eACTC,OAAQ,WAkBcrH,QAASvC,KAAK4I,aAChC7G,EAAAC,EAAAC,cAAA,OAAKgB,MAAO+F,KAEZhJ,KAAKe,MAAM8H,aACX9G,EAAAC,EAAAC,cAAA,OAAKgB,MAnBK,CACd4G,SAAU,WACVC,OAAQ,MAkBF/H,EAAAC,EAAAC,cAAA,OAAKgB,MAfC,CACZ4G,SAAU,QACVE,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRC,KAAM,OAUmB3H,QAASvC,KAAK8I,cACjC/G,EAAAC,EAAAC,cAACkI,EAAA,aAAD,CAAcnB,MAAOhJ,KAAKJ,MAAMc,MAAO2B,SAAUrC,KAAK+I,wBAlExCvG,IAAMC,WCuCjB2H,sBAtCb,SAAAA,EAAYxK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoK,IACjBvK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsK,GAAAjK,KAAAH,KAAMJ,KAKRyK,OAAS,WAAM,IAAA5F,EAIT5E,EAAKD,MAFPa,EAFWgE,EAEXhE,KACA6J,EAHW7F,EAGX6F,QAGFzK,EAAKD,MAAMyC,SAAS5B,GAAO6J,IAV3BzK,EAAKkB,MAAQ,GAFIlB,wEAeV,IAAA0K,EAIHvK,KAAKJ,MAFPc,EAFK6J,EAEL7J,MAKI8J,EAAoB,CACxBC,gBARKF,EAGLD,QAGoC,UAAY,WAKlD,OACEvI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBAAqBI,QAASvC,KAAKqK,QAChDtI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBAAyBc,MAAOuH,KAGjDzI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAkBzB,WAjClB8B,IAAMC,8BCEhBiI,EAAc,SAACC,GAC1B,IAAIC,EACJ,IACEA,EAAQC,KAAKC,MAAMH,GACnB,MAAMI,GACNH,EAAQ,GAEV,OAAOA,GCVHI,EAAe,CACnB,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,WA2BjCC,EAAe,SAACC,EAAiBC,EAAQC,GAGpD,IAFA,IAAIC,EAAS,GACTC,EAAS,GACJnD,EAAI,EAAGA,EAAI+C,EAAgBpI,OAAQqF,IAAK,CAC/C,IAAMoD,EAAML,EAAgB/C,GAC5BkD,EAAOrI,KAAKuI,EAAIJ,IAChBG,EAAOtI,KAAK,CACVvC,KAAM8K,EAAIJ,GACVzK,MAAO6K,EAAIH,KAGf,OAnCkC,SAACC,EAAQC,GAC3C,MAAO,CACLtC,MAAOgC,EACPQ,QAAS,GAETH,OAAQ,CACNjJ,KAAM,SACNqJ,OAAQ,WACRjK,KAAM6J,EACNrB,MAAO,GACPD,IAAK,GACLE,OAAQ,IAEVqB,OAAQ,CACN,CACElJ,KAAK,MACLsJ,OAAQ,CAAC,MAAO,OAChBC,OAAQ,MACRnK,KAAM8J,KAiBLM,CAAqBP,EAAQC,ICzCzBO,EAAQ,QACRC,EAAS,SACTC,EAAe,CAACF,EAAOC,GAEvBE,EAAS,SACTC,EAAc,SACdC,EAAe,CAACF,EAAQC,GAExBE,EAAM,MACNC,GAAQ,QACRC,GAAc,CAACD,GAAOD,GAItBG,GAAiB,QAEjBC,GAAkB,SAElBC,GAA2B,ICjBlCC,GAAgB,EAgHPC,eA5Gb,SAAAA,EAAY9M,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0M,IACjB7M,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4M,GAAAvM,KAAAH,KAAMJ,KAiBR+M,YAAc,SAACtM,GACbA,EAAMuM,iBAON,IANA,IACMC,EADWC,IAASC,YAATjN,OAAA6F,EAAA,EAAA7F,QAAA6F,EAAA,EAAA7F,CAAAD,KACamN,WACxBC,EAAU5M,EAAM6M,QAAUL,EAAaM,WACvCC,EAAU/M,EAAMgN,QAAUR,EAAaS,UAEzCC,EAAQC,SAASC,uBAAuB,YACnCtF,EAAI,EAAGA,EAAIoF,EAAMzK,OAAQqF,IAC9BoF,EAAMpF,GAAGlF,MAAM6G,OAAS,GAE5B+C,EAAa5J,MAAM6G,OAAS,GAXL,IAaf4D,EAAkBb,EAAlBa,cACRA,EAAcC,iBAAiB,UAAW9N,EAAK+N,WAC/CF,EAAcC,iBAAiB,YAAa9N,EAAKgO,aACjDhO,EAAKS,SAAS,CACZ2M,QAASA,EACTG,QAASA,IAGXvN,EAAKD,MAAM+M,YAAY,SAvCN9M,EA0CnB+N,UAAY,SAACvN,GACXA,EAAMuM,iBACN,IAAMkB,EAAWhB,IAASC,YAATjN,OAAA6F,EAAA,EAAA7F,QAAA6F,EAAA,EAAA7F,CAAAD,KACjB,GAAIiO,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAalO,EAAK8M,aACpDe,EAAcK,oBAAoB,UAAWlO,EAAK+N,WAClDF,EAAcK,oBAAoB,YAAalO,EAAKgO,aAEtDhO,EAAKD,MAAMgO,aAnDM/N,EAsDnBgO,YAAc,SAACxN,GAEb,GADAA,EAAMuM,iBACkB,SAApB/M,EAAKD,MAAMoI,KAAf,CAIA,IAAIgG,EAAW,EACXnO,EAAKD,MAAMqO,aACbD,EAAW,GAGb,IACMnB,EADWC,IAASC,YAATjN,OAAA6F,EAAA,EAAA7F,QAAA6F,EAAA,EAAA7F,CAAAD,KACamN,WAC1BkB,EAAW7N,EAAM6M,QAAUrN,EAAKkB,MAAMkM,QACtCkB,EAAW9N,EAAMgN,QAAUxN,EAAKkB,MAAMqM,QAEpCgB,EAAgBvB,EAAaG,WAC7BqB,EAAiBD,EAAcE,YAC/BC,EAAkBH,EAAcI,aAElCC,EAAWC,SAAS7B,EAAa5J,MAAMsF,MAAO,IAAsB,EAAhBkE,GACpDkC,EAAYD,SAAS7B,EAAa5J,MAAMqG,OAAQ,IAAsB,EAAhBmD,GAEtDyB,EAAW,IACbA,EAAW,GAETC,EAAW,IACbA,EAAW,GAETD,EAAWO,EAAWJ,IACxBH,EAAWG,EAAiBI,GAE1BN,EAAWQ,EAAYJ,IACzBJ,EAAWI,EAAkBI,GAG/BT,EAAWU,KAAKC,MAAMX,EAAWF,GAAYA,EAC7CG,EAAWS,KAAKC,MAAMV,EAAWH,GAAYA,EAE7CnB,EAAa5J,MAAMiH,KAAOgE,EAAW,KACrCrB,EAAa5J,MAAM8G,IAAMoE,EAAW,OA5FpCtO,EAAKkB,MAAQ,CACXkM,QAAS,EACTG,QAAS,GAJMvN,sFASjB,IAAMiO,EAAWhB,IAASC,YAAY/M,MACtC,GAAI8N,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAa/N,KAAK2M,aACpDe,EAAcK,oBAAoB,UAAW/N,KAAK4N,WAClDF,EAAcK,oBAAoB,YAAa/N,KAAK6N,+CAoFtD,OACE9L,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbwK,YAAa3M,KAAK2M,YAClBiB,UAAW5N,KAAK4N,WAChB7L,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,oBAAoB2J,YAAU,YAxGhCtM,IAAMC,WCF5BsM,GAAY,GACZC,GAAa,GACbvC,GAAgB,EAiHPwC,eA5Gb,SAAAA,EAAYrP,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiP,IACjBpP,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmP,GAAA9O,KAAAH,KAAMJ,KAiBR+M,YAAc,SAACtM,GACbA,EAAMuM,iBACN,IAAMkB,EAAWhB,IAASC,YAATjN,OAAA6F,EAAA,EAAA7F,QAAA6F,EAAA,EAAA7F,CAAAD,KACXqO,EAAW7N,EAAM6M,QACjBiB,EAAW9N,EAAMgN,QAEfK,EAAkBI,EAAlBJ,cACRA,EAAcC,iBAAiB,UAAW9N,EAAK+N,WAC/CF,EAAcC,iBAAiB,YAAa9N,EAAKgO,aACjDhO,EAAKS,SAAS,CACZ4N,SAAUA,EACVC,SAAUA,IAGZtO,EAAKD,MAAM+M,YAAY,WAhCN9M,EAmCnB+N,UAAY,SAACvN,GACXA,EAAMuM,iBACN,IAAMkB,EAAWhB,IAASC,YAATjN,OAAA6F,EAAA,EAAA7F,QAAA6F,EAAA,EAAA7F,CAAAD,KACjB,GAAIiO,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAalO,EAAK8M,aACpDe,EAAcK,oBAAoB,UAAWlO,EAAK+N,WAClDF,EAAcK,oBAAoB,YAAalO,EAAKgO,aAEtDhO,EAAKD,MAAMgO,aA5CM/N,EA+CnBgO,YAAc,SAACxN,GAEb,GADAA,EAAMuM,iBACkB,WAApB/M,EAAKD,MAAMoI,KAAf,CAIA,IAAIiF,EAAU5M,EAAM6M,QAAUrN,EAAKkB,MAAMmN,SACrCd,EAAU/M,EAAMgN,QAAUxN,EAAKkB,MAAMoN,SAGnCtB,EADWC,IAASC,YAATjN,OAAA6F,EAAA,EAAA7F,QAAA6F,EAAA,EAAA7F,CAAAD,KACamN,WACxBkC,EAAYR,SAAS7B,EAAa5J,MAAMsF,MAAO,IAC/C4G,EAAaT,SAAS7B,EAAa5J,MAAMqG,OAAQ,IAEjD8E,EAAgBvB,EAAaG,WAC7BqB,EAAiBD,EAAcE,YAC/BC,EAAkBH,EAAcI,aAElCY,EAAWR,KAAKC,MAAMK,EAAYjC,GAClCoC,EAAYT,KAAKC,MAAMM,EAAa/B,GAEpCgC,EAAWL,KACbK,EAAWL,IAGTM,EAAYL,KACdK,EAAYL,IAGd,IAAM9E,EAAO2C,EAAaM,WAA6B,EAAhBV,GACjC1C,EAAM8C,EAAaS,UAA4B,EAAhBb,GAEjC2C,EAAYlF,EAAOmE,IACrBe,EAAWf,EAAiBnE,GAG1BmF,EAAYtF,EAAMwE,IACpBc,EAAYd,EAAkBxE,GAGhC8C,EAAa5J,MAAMsF,MAAQ6G,EAAW,KACtCvC,EAAa5J,MAAMqG,OAAS+F,EAAY,KAExCxP,EAAKS,SAAS,CACZ4N,SAAU7N,EAAM6M,QAChBiB,SAAU9N,EAAMgN,YA1FlBxN,EAAKkB,MAAQ,CACXmN,SAAU,EACVC,SAAU,GAJKtO,sFASjB,IAAMiO,EAAWhB,IAASC,YAAY/M,MACtC,GAAI8N,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAa/N,KAAK2M,aACpDe,EAAcK,oBAAoB,UAAW/N,KAAK4N,WAClDF,EAAcK,oBAAoB,YAAa/N,KAAK6N,+CAmFtD,OACE9L,EAAAC,EAAAC,cAAA,OACEE,UAAU,iBACVwK,YAAa3M,KAAK2M,YAClBiB,UAAW5N,KAAK4N,WAChB7L,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,WAAW2J,YAAU,YAxGvBtM,IAAMC,qBC2DnB6M,8BA7Db,SAAAA,EAAY1P,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsP,IACjBzP,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwP,GAAAnP,KAAAH,KAAMJ,KAKR2P,SAAW,SAACC,GACV3P,EAAKD,MAAM6P,eAAeD,IAL1B3P,EAAKkB,MAAQ,GAFIlB,wEAUV,IAAA+B,EAAA5B,KAAAyE,EAMHzE,KAAKJ,MANF8P,EAAAjL,EAELjD,YAFK,IAAAkO,EAEE,GAFFA,EAAAC,EAAAlL,EAGLmL,eAHK,IAAAD,EAGK,GAHLA,EAAAE,EAAApL,EAILqL,oBAJK,IAAAD,EAIU,GAJVA,EAKLpO,EALKgD,EAKLhD,MAGIsO,EAAgB,GAuBtB,OAtBAH,EAAQI,QAAQ,SAAAC,GACd,IAAMC,EAAaD,EAAOxP,KACpB0P,EAAS,CACbC,OAAQF,EACRG,SAAUH,GAEZ,GAAIJ,EAAahN,OAAS,EAAG,CAC3B,IAAMwN,EAAQR,EAAaS,UAAU,SAAAC,GAAC,OAAIA,EAAEN,aAAeA,IAC3D,IAAe,IAAXI,EAAc,CAChB,IAAMG,EAAcX,EAAaQ,GAAOG,YACxCN,EAAOO,KAAQ,SAAA9Q,GAAK,OAClBmC,EAAAC,EAAAC,cAAA,QAAME,UAAU,aACdI,QAAS,kBAAMX,EAAK2N,SAAL,wBAAAvK,OAAsCyL,EAAtC,KAAAzL,OAAqDkL,EAArD,KAAAlL,OAAmEpF,EAAMc,UACvFd,EAAMc,SAMfqP,EAAc/M,KAAKmN,KAGjB1O,EAEAM,EAAAC,EAAAC,cAAA,WACGR,GAMLM,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,CACEnP,KAAMA,EACNoO,QAASG,EACTa,gBAAiB,GACjBC,aAAc,OACdC,SAAU,gBAzDQtO,IAAMC,YC8EjBsO,sNA7EbhQ,MAAQ,CACNiQ,aAAa,EACbtJ,YAAa,MAGfuJ,gBAAkB,WAGhB,IAFA,IAAMC,GAAkBrR,EAAKkB,MAAMiQ,YAC7BG,EAAarR,OAAAsR,EAAA,EAAAtR,CAAOD,EAAKD,MAAMyR,YAC5BlJ,EAAI,EAAGA,EAAIgJ,EAAcrO,OAAQqF,IACxCgJ,EAAchJ,GAAGmJ,UAAYJ,EAE/BrR,EAAKD,MAAMyC,SAASxC,EAAKD,MAAM2R,SAAUJ,GAEzCtR,EAAKS,SAAS,SAAAkH,GAAS,MAAK,CAC1BwJ,aAAcxJ,EAAUwJ,kBAI5BQ,wBAA0B,SAACnR,GACzB,IAAMqH,EAAcrH,EAAMG,OAAOE,MACjC,GAAIgH,EAGF,IAFA,IAAMhB,EAAS,GACP2K,EAAexR,EAAKD,MAApByR,WACClJ,EAAI,EAAGA,EAAIkJ,EAAWvO,OAAQqF,KACa,IAA9CkJ,EAAWlJ,GAAGzH,MAAM+Q,QAAQ/J,IAC9BhB,EAAO1D,KAAKqO,EAAWlJ,IAK7BtI,EAAKS,SAAS,CACZoH,YAAaA,OAMjBgK,qBAAuB,SAACjR,EAAM6Q,GAC5B,IAAMH,EAAarR,OAAAsR,EAAA,EAAAtR,CAAOD,EAAKD,MAAMyR,YAC/Bf,EAAQa,EAAcZ,UAAU,SAAAoB,GAAC,OAAIA,EAAEjR,QAAUD,IACvD0Q,EAAcb,GAAOgB,UAAYA,EACjCzR,EAAKD,MAAMyC,SAASxC,EAAKD,MAAM2R,SAAUJ,4EAGlC,IAAAvP,EAAA5B,KAAA4R,EAGH5R,KAAKJ,MADPyR,WAEIQ,QAJC,IAAAD,EAEQ,GAFRA,GAI0BE,IAAI,SAACC,EAAKzB,GAAN,OACnCvO,EAAAC,EAAAC,cAAC+P,EAAD,CACE3J,IAAKiI,EACL7P,KAAMsR,EAAIrR,MACVA,MAAOqR,EAAIrR,MACX4J,QAASyH,EAAIT,UACbjP,SAAUT,EAAK8P,yBAInB,OACE3P,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKiR,iBAAzC,cAAsEjR,KAAKe,MAAMiQ,aACjFjP,EAAAC,EAAAC,cAAA,SACIG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAM2G,YAClBrF,SAAUrC,KAAKwR,wBACflJ,YAAY,cAGhBvG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZ0P,WAxEUrP,IAAMC,YCWrBwP,eAEJ,SAAAA,EAAYrS,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiS,IACjBpS,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmS,GAAA9R,KAAAH,KAAMJ,KAgBR+M,YAAc,SAAC3E,GACbxB,QAAQC,IAAI,uBAAwBuB,GACpCnI,EAAKS,SAAS,CACZ0H,KAAMA,KApBSnI,EAwBnB+N,UAAY,WACVpH,QAAQC,IAAI,sBACZ5G,EAAKS,SAAS,CACZ0H,KAAM,KAGR,IAAM8F,EAAWhB,IAASC,YAATjN,OAAA6F,EAAA,EAAA7F,QAAA6F,EAAA,EAAA7F,CAAAD,KACX8R,EAAI7D,EAASX,WACb+E,EAAIpE,EAASR,UACb/E,EAAQmG,SAASZ,EAAS7K,MAAMsF,MAAO,IACvCe,EAASoF,SAASZ,EAAS7K,MAAMqG,OAAQ,IAGzC6I,EAAS,CACbnM,GAHenG,EAAKD,MAAMoG,GAI1B2L,EAAGA,EACHO,EAAGA,EACH3J,MAAOA,EACPe,OAAQA,GAGVzJ,EAAKD,MAAMwS,aAAaD,IA7CPtS,EAgDnBgO,YAAc,SAACxN,EAAO2H,EAAMjH,GAC1BV,EAAMuM,kBAjDW/M,EAoDnBwS,WAAa,SAACC,GACZzS,EAAKD,MAAM2S,aAAaD,IArDPzS,EAwDnB2S,UAAY,SAACF,KAxDMzS,EA4DnB4S,WAAa,SAACH,KA5DKzS,EAgEnB6S,aAAe,SAACJ,GACdzS,EAAKD,MAAM+S,eAAeL,IAjETzS,EAoEnB+S,qBAAuB,SAAC7R,EAAO8R,EAAS5C,EAAQ6C,GAC9C,MAAO,CACLvQ,QAAS,SAACwI,EAAGgI,GACXvM,QAAQC,IAAI,6BACZD,QAAQC,IAAI,0BAA2BsE,GACvCvE,QAAQC,IAAI,yBAA0BwJ,GACtCzJ,QAAQC,IAAI,sBAAuBoM,GACnCrM,QAAQC,IAAI,iCAAkCqM,GAE9C,IAAM3C,EAASF,EAAOG,OAEhB1P,EADMmS,EAAQtH,IACF4E,GACZ6C,EAASF,EAASlT,MAAMqT,oBAAsB,GACpDzM,QAAQC,IAAI,uBAAwB0J,EAAQzP,EAAOsS,GACnD,IAAM1C,EAAQ0C,EAAOzC,UAAU,SAAAC,GAAC,OAAIA,EAAEN,aAAeC,IACrD,IAAe,IAAXG,EAAc,CAChB,IAAMG,EAAcuC,EAAO1C,GAAOG,YAClC5Q,EAAKD,MAAMmD,QAAQC,KAAnB,wBAAAgC,OAAgDyL,EAAhD,KAAAzL,OAA+DmL,EAA/D,KAAAnL,OAAyEtE,QArF9Db,EA2FnBqT,aAAe,SAACC,EAAOC,GACrB5M,QAAQC,IAAI,eAAgB0M,EAAOC,IA5FlBvT,EA+FnBwT,2BAA6B,SAACF,EAAOG,GACnC9M,QAAQC,IAAI,6BAA8B0M,EAAOG,IAhGhCzT,EAmGnB4P,eAAiB,SAACD,GAChB3P,EAAKD,MAAMmD,QAAQC,KAAKwM,IApGP3P,EAuGnB0T,eAAiB,SAACjB,EAAUjB,GAC1B,IAAM7P,EAAO,CACX6P,WAAYA,GAEdxR,EAAKD,MAAM4T,0BAA0BlB,EAAU9Q,IA3G9B3B,EA8GnB4T,oBAAsB,SAACnB,EAAUjS,GAC/B,IACMmB,EAAO,CACXd,MAFYL,EAAMG,OAAOE,OAI3Bb,EAAKD,MAAM4T,0BAA0BlB,EAAU9Q,IAnH9B3B,EAsHnB6T,oBAAsB,WACpB,IAAMC,EAAgB,CACpBC,MAAS/T,EAAKqT,aACdW,oBAAuBhU,EAAKwT,4BAHJ5O,EAgBtB5E,EAAKD,MATPoG,EAPwBvB,EAOxBuB,GACA5D,EARwBqC,EAQxBrC,KACA0R,EATwBrP,EASxBqP,UACAC,EAVwBtP,EAUxBsP,WAVwBC,EAAAvP,EAWxBwP,mBAXwB,IAAAD,EAWV,GAXUA,EAYxBlE,EAZwBrL,EAYxBqL,aAZwBJ,EAAAjL,EAaxBjD,YAbwB,IAAAkO,EAajB,GAbiBA,EAcxB2B,EAdwB5M,EAcxB4M,WACA3Q,EAfwB+D,EAexB/D,MAGIwK,EAAkBgJ,EAAiBD,EAAYzS,MAC/CoO,EAAUqE,EAAYrE,SAAW,GACjCnO,EAAQwS,EAAYxS,MAEtB0S,EAAcpS,EAAAC,EAAAC,cAAA,YAClB,GAAIG,IAASgS,GACX,GAAIN,IAAcM,GAChBD,EACEpS,EAAAC,EAAAC,cAACoS,GAAD,CACE7S,KAAM0J,EACN0E,QAASA,EACTnO,MAAOA,EACPqO,aAAcA,EACdL,eAAgB5P,EAAK4P,sBAGpB,GAAIqE,IAAcM,EAAe,KAEpCjJ,EAEE3J,EAFF2J,OACAC,EACE5J,EADF4J,SAEIkJ,EAAcC,EAAwBrJ,EAAiBC,EAAQC,GACrE+I,EACEpS,EAAAC,EAAAC,cAACuS,EAAAxS,EAAD,CACEyS,OAAQH,EACRnS,UAAU,UACVuS,SAAUf,UAIPvR,IAASgS,IACdL,IAAeK,EACjBD,EACEpS,EAAAC,EAAAC,cAAC0S,GAAD,CACEpD,SAAUvL,EACVqL,WAAYA,EACZhP,SAAUxC,EAAK0T,iBAGVQ,IAAeK,IACxBD,EACEpS,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL1B,MAAOA,EACP2B,SAAU,SAAChC,GAAD,OAAWR,EAAK4T,oBAAoBzN,EAAI3F,QAM1D,OAAO8T,GAxLPtU,EAAKkB,MAAQ,CACXiH,KAAM,IAHSnI,sFAQjB,IAAMiO,EAAWhB,IAASC,YAAY/M,MACtC,GAAI8N,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAa/N,KAAK2M,aACpDe,EAAcK,oBAAoB,UAAW/N,KAAK4N,WAClDF,EAAcK,oBAAoB,YAAa/N,KAAK6N,+CAgL/C,IAAAjM,EAAA5B,KAAAuK,EAMHvK,KAAKJ,MAJPoG,EAFKuE,EAELvE,GACAnB,EAHK0F,EAGL1F,MACA+P,EAJKrK,EAILqK,WAJKC,EAAAtK,EAKLtH,aALK,IAAA4R,EAKG,GALHA,EAAAC,EAWH7R,EAFF8R,kBATK,IAAAD,KAaDE,GAFF/R,EADFgS,UAGkBF,EAAa,oBAAsB,qBAEnDG,EAAS,CACXhL,KAAMlK,KAAKJ,MAAM+R,EAAI,KACrB5H,IAAK/J,KAAKJ,MAAMsS,EAAI,KACpB3J,MAAOvI,KAAKJ,MAAM2I,MAAQ,KAC1Be,OAAQtJ,KAAKJ,MAAM0J,OAAS,KAC5BQ,OAAQ,EACRqL,OAAQH,GAGV,OACEjT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWc,MAAOiS,GAC/BnT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACZ0C,EAEC+P,EACA7S,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcc,MAAO,CAACmS,YAAa,SAChDrT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeI,QAAS,kBAAMX,EAAKyQ,WAAWrM,KAC3DjE,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,OAAO2J,YAAU,KAEzC/M,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeI,QAAS,kBAAMX,EAAK8Q,aAAa1M,KAC7DjE,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,YAAY2J,YAAU,MAIhD/M,EAAAC,EAAAC,cAAA,OAAKE,UAAU,8BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeI,QAAS,kBAAMX,EAAK6Q,WAAWzM,KAC3DjE,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,cAAc2J,YAAU,KAGhD/M,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeI,QAAS,kBAAMX,EAAK4Q,UAAUxM,KAC1DjE,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,WAAW2J,YAAU,OAOnD/M,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACZnC,KAAK0T,uBAGNkB,GACA7S,EAAAC,EAAAC,cAACoT,GAAD,CACEzH,UAAW5N,KAAK4N,UAChBjB,YAAa3M,KAAK2M,YAClBkB,YAAa7N,KAAK6N,YAClB7F,KAAMhI,KAAKe,MAAMiH,KACjBiG,WAAYjO,KAAKJ,MAAMqO,aAGzB2G,GACA7S,EAAAC,EAAAC,cAACqT,GAAD,CACE1H,UAAW5N,KAAK4N,UAChBjB,YAAa3M,KAAK2M,YAClBkB,YAAa7N,KAAK6N,YAClB7F,KAAMhI,KAAKe,MAAMiH,eArQNxF,IAAMC,WA6QdC,eAAWuP,ICnOXsD,uBAlDb,SAAAA,EAAY3V,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuV,IACjB1V,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyV,GAAApV,KAAAH,KAAMJ,KACDmB,MAAQ,GAFIlB,wEAMV,IAAA+B,EAAA5B,KAAAyE,EAOHzE,KAAKJ,MALP2I,EAFK9D,EAEL8D,MACAe,EAHK7E,EAGL6E,OACAmB,EAJKhG,EAILgG,gBAJK+K,EAAA/Q,EAKLgR,eALK,IAAAD,EAKK,GALLA,EASHvS,EAAQ,CACVsF,MAAOA,EAAQ,KACfe,OAAQA,EAAS,KACjBmB,gBAAiBA,GAZZhG,EAMLiR,gBAUAzS,EAAM0S,eAAiB,YACvB1S,EAAM2S,gBAAkB,0DAG1B,IAAMC,EAAWJ,EAAQ3D,IAAI,SAACK,EAAQ7B,GAAT,OAC3BvO,EAAAC,EAAAC,cAAC6T,GAADhW,OAAAiW,OAAA,CACE1N,IAAKiI,EACLrC,WAAYrM,EAAKhC,MAAMqO,WACvB2G,WAAYhT,EAAKhC,MAAMgV,YACnBzC,EAJN,CAKEC,aAAcxQ,EAAKhC,MAAMwS,aACzBG,aAAc3Q,EAAKhC,MAAM2S,aACzBI,eAAgB/Q,EAAKhC,MAAM+S,eAC3Ba,0BAA2B5R,EAAKhC,MAAM4T,+BAK1C,OACEzR,EAAAC,EAAAC,cAAA,OACEE,UAAU,cACVc,MAAOA,GACN4S,UA9CgBrT,IAAMC,YCQzBuT,GAAa,KAiWJC,eA7Vb,SAAAA,EAAYrW,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiW,IACjBpW,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmW,GAAA9V,KAAAH,KAAMJ,KAcRsW,WAAa,SAACC,GAAc,IAClBV,EAAY5V,EAAKkB,MAAjB0U,QACFW,EAAUtW,OAAAsR,EAAA,EAAAtR,CAAO2V,GAEjBY,EAAYF,EAAY,GAC9BtW,EAAKyW,sBAAsBF,EAAYC,GACvCxW,EAAKS,SAAS,CACZmV,QAASW,EACTC,UAAWA,KAvBIxW,EA2BnB0W,oBAAsB,SAACd,EAASY,GAC9B,IAAK,IAAIlO,EAAI,EAAGA,EAAIsN,EAAQ3S,OAAQqF,IAAK,CACvC,IAAMqO,EAAQ3W,EAAK4W,YAAYhB,EAAQtN,GAAGwJ,EAAG0E,GACvCK,EAAY7W,EAAK4W,YAAYhB,EAAQtN,GAAGI,MAAO8N,GACrDZ,EAAQtN,GAAGwJ,EAAI6E,EACff,EAAQtN,GAAGI,MAAQmO,IAhCJ7W,EAoCnByW,sBAAwB,SAACb,EAASY,GAChC,IAAK,IAAIlO,EAAI,EAAGA,EAAIsN,EAAQ3S,OAAQqF,IAAK,CACvC,IAAMwO,EAAU9W,EAAK+W,cAAcnB,EAAQtN,GAAGwJ,EAAG0E,GAC3CQ,EAAehX,EAAK+W,cAAcnB,EAAQtN,GAAGI,MAAO8N,GAC1DZ,EAAQtN,GAAGwJ,EAAIgF,EACflB,EAAQtN,GAAGI,MAAQsO,IAzCJhX,EA6CnB+W,cAAgB,SAACE,EAAKT,GACpB,OAAOzH,KAAKmI,MAAMD,EAAMT,EAAYL,KA9CnBnW,EAiDnB4W,YAAc,SAACK,EAAKT,GAClB,OAAOzH,KAAKmI,MAAMD,EAAMd,GAAaK,IAlDpBxW,EAqDnBmX,aAAe,SAACvG,EAAa0F,GACP,OAAhB1F,GAGJtP,IAAM8C,IAAN,wBAAAe,OAAkCyL,IAC/BpP,KAAK,SAAAC,GACJ,IAAMoF,EAASpF,EAAIE,KACnB3B,EAAKS,SAAS,CACZmV,QAAS/O,GACR,WACD7G,EAAKqW,WAAWC,GAChBtW,EAAKoX,eACLpX,EAAKqX,mBAjEMrX,EA6JnB6R,qBAAuB,SAACjR,EAAM6Q,GAC5BzR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAO6Q,KA/JOzR,EAmKnBsX,mBAAqB,SAAC9W,GACpBR,EAAKD,MAAMwX,eAAe/W,EAAMG,OAAOE,QApKtBb,EAuKnBwX,wBAA0B,SAACrO,GACzBnJ,EAAKD,MAAMyX,wBAAwBrO,IAxKlBnJ,EA2KnByX,YAAc,WACZ,IAAMlB,EAAavL,KAAKC,MAAMD,KAAK0M,UAAU1X,EAAKkB,MAAM0U,UAChDY,EAAcxW,EAAKkB,MAAnBsV,UACRxW,EAAK0W,oBAAoBH,EAAYC,GACrClV,IAAMC,KAAK,sBAAuBgV,GAC/B/U,KAAK,SAAAC,OAhLSzB,EAoLnBuS,aAAe,SAACD,GAAW,IACjBsD,EAAY5V,EAAKkB,MAAjB0U,QACFnF,EAAQmF,EAAQlF,UAAU,SAAAiH,GAAC,OAAIA,EAAExR,KAAOmM,EAAOnM,KAC/CoQ,EAAUtW,OAAAsR,EAAA,EAAAtR,CAAO2V,GACvBW,EAAW9F,GAAOqB,EAAIQ,EAAOR,EAC7ByE,EAAW9F,GAAO4B,EAAIC,EAAOD,EAC7BkE,EAAW9F,GAAO/H,MAAQ4J,EAAO5J,MACjC6N,EAAW9F,GAAOhH,OAAS6I,EAAO7I,OAClCzJ,EAAKS,SAAS,CACZmV,QAASW,KA7LMvW,EAiMnBkH,cAAgB,WAAM,IAIduL,EADFzS,EAAKkB,MADPkG,eAGF9F,IAAM+F,OAAN,cAAAlC,OAA2BsN,IACxBjR,KAAK,SAAAC,GAAO,IACHmU,EAAY5V,EAAKkB,MAAjB0U,QACFnF,EAAQmF,EAAQlF,UAAU,SAAAiH,GAAC,OAAIA,EAAExR,KAAOsM,IACxC8D,EAAUtW,OAAAsR,EAAA,EAAAtR,CAAO2V,GACvBW,EAAWqB,OAAOnH,EAAO,GACzBzQ,EAAKS,SAAS,CACZmV,QAASW,IAEXvW,EAAKsH,+BA/MQtH,EAmNnBuH,yBAA2B,SAACkL,GAC1BzS,EAAKS,SAAS,CACZ2G,eAAgBqL,EAChBhL,0BAA0B,KAtNXzH,EA0NnBsH,0BAA4B,WAC1BtH,EAAKS,SAAS,CACZ2G,eAAgB,GAChBK,0BAA0B,KA7NXzH,EAiOnB2T,0BAA4B,SAAClB,EAAU9Q,GAAS,IAAAkW,EAG1C7X,EAAKkB,MADP0U,eAF4C,IAAAiC,EAElC,GAFkCA,EAIxCpH,EAAQmF,EAAQlF,UAAU,SAAAiH,GAAC,OAAIA,EAAExR,KAAOsM,IACxC8D,EAAUtW,OAAAsR,EAAA,EAAAtR,CAAO2V,GACjBtD,EAASsD,EAAQnF,GACvB,GAAI6B,EAAO4B,aAAeK,EAAkB,KAExC/C,EACE7P,EADF6P,WAEF+E,EAAW9F,GAAOe,WAAaA,OAC1B,GAAIc,EAAO4B,aAAeK,EAAwB,KAErD1T,EACEc,EADFd,MAEF0V,EAAW9F,GAAO5P,MAAQA,EAG5Bb,EAAKS,SAAS,CACZmV,QAASW,KArPMvW,EA4PnB8X,gBAAkB,WAKhB,IALsB,IAAAC,EAGlB/X,EAAKkB,MADP0U,eAFoB,IAAAmC,EAEV,GAFUA,EAIhBC,EAAe,GACZ1P,EAAI,EAAGA,EAAIsN,EAAQ3S,OAAQqF,IAAK,CACvC,IAAMgK,EAASsD,EAAQtN,GACvB,GAAIgK,EAAO/P,OAASgS,EAAkB,KAC5BL,EAAe5B,EAAf4B,WACF+D,EAAc,GACpB,GAAI/D,IAAeK,EAAkB,CAKnC,IALmC,IAAA2D,EAG/B5F,EADFd,kBAFiC,IAAA0G,EAEpB,GAFoBA,EAI7BC,EAAc,GACXC,EAAI,EAAGA,EAAI5G,EAAWvO,OAAQmV,IAAK,CAC1C,IAAMC,EAAW7G,EAAW4G,GACxBC,EAAS5G,WACX0G,EAAYhV,KAAKkV,EAASxX,OAG9BoX,EAAYpX,MAAQsX,EAChBA,EAAYlV,SAAWuO,EAAWvO,SACpCgV,EAAYK,OAAS,mBAEdpE,IAAeK,IACxB0D,EAAYpX,MAAQyR,EAAOzR,OAE7BoX,EAAY3E,MAAQhB,EAAO3Q,KAAK4W,eAChCN,EAAY1V,KAAO+P,EAAO4B,WAC1B8D,EAAa7U,KAAK8U,IAGtB,OAAOD,GA3RPhY,EAAKkB,MAAQ,CACX0U,QAAS,GACTY,UAAW,KACXpI,YAAY,EACZyH,eAAe,EACfpO,0BAA0B,EAC1BL,eAAgB,IARDpH,0HAyEjB,IAFA,IAAMgY,EAAe7X,KAAK2X,kBAClBlC,EAAYzV,KAAKe,MAAjB0U,QACCtN,EAAI,EAAGA,EAAIsN,EAAQ3S,OAAQqF,IAAK,KAAAkQ,EAInC5C,EAAQtN,GAFVnC,EAFqCqS,EAErCrS,GAFqCqS,EAGrCjW,OAEWgS,GACXpU,KAAKsY,WAAWtS,EAAI6R,2CAOxB,IAFa,IACLpC,EAAYzV,KAAKe,MAAjB0U,QACCtN,EAAI,EAAGA,EAAIsN,EAAQ3S,OAAQqF,IAAK,KAAAoQ,EAKlC9C,EAAQtN,GAHXnC,EAFqCuS,EAErCvS,GACA5D,EAHqCmW,EAGrCnW,KACA2R,EAJqCwE,EAIrCxE,WAEE3R,IAASgS,GACXpU,KAAKwY,YAAYxS,EAAI+N,uCAKhBzB,EAAUuF,GAAc,IAAAjW,EAAA5B,KAC3ByY,EAA0B,OAAjBZ,EAAwB,GAAKA,EACpCpC,EAAYzV,KAAKe,MAAjB0U,QACRtU,IAAMC,KAAN,wBAAA4D,OAAmCsN,GAAYmG,GAC5CpX,KAAK,SAAAC,GACJ,IAAM2S,EAAc3S,EAAIE,KAClB8O,EAAQmF,EAAQlF,UAAU,SAAAiH,GAAC,OAAIA,EAAExR,KAAOiO,EAAYjO,KACpDoQ,EAAUtW,OAAAsR,EAAA,EAAAtR,CAAO2V,GACvBW,EAAW9F,GAAO2D,YAAcA,EAChCrS,EAAKtB,SAAS,CACZmV,QAASW,0CAKL9D,EAAUyB,GAAY,IAAA2E,EAAA1Y,KACxByV,EAAYzV,KAAKe,MAAjB0U,QACR,GAAI1B,IAAeK,EACjBjT,IAAMC,KAAN,wBAAA4D,OAAmCsN,GAAY,IAC5CjR,KAAK,SAAAC,GAIJ,IAHA,IAAM2S,EAAc3S,EAAIE,KAClB0J,EAAkBgJ,EAAiBD,EAAYzS,MAC/C6P,EAAa,GACVlJ,EAAI,EAAGA,EAAI+C,EAAgBpI,OAAQqF,IAE1C,IADA,IAD+CwQ,EAChC7Y,OAAO8Y,OAAO1N,EAAgB/C,IAC7C0Q,EAAA,EAAAA,EAAAF,EAAA7V,OAAA+V,IAA0B,CAArB,IAAMC,EAAGH,EAAAE,GACZxH,EAAWrO,KAAK,CACdtC,MAAOoY,EACPxH,WAAW,IAIjB,IAAMhB,EAAQmF,EAAQlF,UAAU,SAAAiH,GAAC,OAAIA,EAAExR,KAAOiO,EAAYjO,KACpDoQ,EAAUtW,OAAAsR,EAAA,EAAAtR,CAAO2V,GACvBW,EAAW9F,GAAO2D,YAAcA,EAChCmC,EAAW9F,GAAOe,WAAaA,EAC/BqH,EAAKpY,SAAS,CACZmV,QAASW,WAGV,GAAIrC,IAAeK,EAAwB,CAUhD,IAAM9D,EAAQmF,EAAQlF,UAAU,SAAAiH,GAAC,OAAIA,EAAExR,KAAOsM,IACxC8D,EAAUtW,OAAAsR,EAAA,EAAAtR,CAAO2V,GACvBW,EAAW9F,GAAO5P,MAAQ,GAC1BV,KAAKM,SAAS,CACZmV,QAASW,sCAwIN,IAEDnT,EAAQ,CACZsF,MAF0BvI,KAAKJ,MAAzBmZ,gBAEmB,MAG3B,OACEhX,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iCAAiCc,MAAOA,GAEpDjD,KAAKJ,MAAMgV,YACV7S,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kCACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAf,WACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,SACLC,MAAOV,KAAKJ,MAAM0J,OAClBjH,SAAUrC,KAAKmX,mBACfhV,UAAU,eACVc,MAAO,CAACsF,MAAO,WAGjBxG,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAAC+W,EAAD,CAAatY,MAAOV,KAAKJ,MAAM6K,gBAAiBpI,SAAUrC,KAAKqX,2BAGjEtV,EAAAC,EAAAC,cAAC+P,EAAD,CAAUvR,KAAK,aAAaC,MAAM,eAAe4J,QAAStK,KAAKe,MAAMkN,WAAY5L,SAAUrC,KAAK0R,uBAChG3P,EAAAC,EAAAC,cAAC+P,EAAD,CAAUvR,KAAK,gBAAgBC,MAAM,iBAAiB4J,QAAStK,KAAKe,MAAM2U,cAAerT,SAAUrC,KAAK0R,wBAK5G3P,EAAAC,EAAAC,cAACgX,GAAD,CACE1Q,MAAOvI,KAAKe,MAAMsV,UAClB/M,OAAQtJ,KAAKJ,MAAM0J,OACnBmB,gBAAiBzK,KAAKJ,MAAM6K,gBAC5BwD,WAAYjO,KAAKe,MAAMkN,WACvByH,cAAe1V,KAAKe,MAAM2U,cAC1BD,QAASzV,KAAKe,MAAM0U,QACpBb,WAAY5U,KAAKJ,MAAMgV,WACvBxC,aAAcpS,KAAKoS,aACnBG,aAAcvS,KAAKJ,MAAM2S,aACzBI,eAAgB3S,KAAKoH,yBACrBoM,0BAA2BxT,KAAKwT,4BAGlCzR,EAAAC,EAAAC,cAACuG,EAAD,CACE9D,KAAM1E,KAAKe,MAAMuG,yBACjBrC,QAASjF,KAAKmH,0BACdvC,WAAY,oBACZC,MAAO,oBACP9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,gDAGAJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAK+G,eAAzC,mBAxVoBvE,IAAMC,gCC+CrByW,4CA1Db,SAAAA,EAAYtZ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkZ,IACjBrZ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoZ,GAAA/Y,KAAAH,KAAMJ,KAYRuZ,eAAiB,SAACtU,GAChBhF,EAAKS,SAAS,CACZ8Y,UAAWvU,KAbbhF,EAAKkB,MAAQ,GAFIlB,mFAOjB,IAAMuZ,EAAYpZ,KAAKJ,MAAMwZ,UAC7BpZ,KAAKM,SAAS,CACZ8Y,UAAWA,qCAqBb,IAXO,IAAAxX,EAAA5B,KAEL8E,EACE9E,KAAKJ,MADPkF,SAIAsU,EACEpZ,KAAKe,MADPqY,UAGIC,EAAa,GACfC,EAAa,KACRnR,EAAI,EAAGA,EAAIrD,EAAShC,OAAQqF,IAC/BrD,EAASqD,IAAI,WACf,IAAMtD,EAAQC,EAASqD,GAAGvI,MAAMiF,MAC5B0U,EAAS,GACT1U,IAAUuU,IACZG,EAAS,oBACTD,EAAaxU,EAASqD,GAAGvI,MAAMkF,UAGjCuU,EAAWrW,KACTjB,EAAAC,EAAAC,cAAA,MAAIE,UAAS,mBAAA6C,OAAqBuU,GAAUlR,IAAKF,EAAG5F,QAAS,kBAAMX,EAAKuX,eAAetU,KAASA,IATnF,GAcnB,OACE9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cACXkX,GAEHtX,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZmX,WApDQ9W,IAAMC,YCiEV+W,eA/Db,SAAAA,EAAY5Z,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwZ,IACjB3Z,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0Z,GAAArZ,KAAAH,KAAMJ,KAcR6Z,mBAAqB,SAACpZ,GACpB,IAAMI,EAAOZ,EAAKD,MAAMa,KAClBC,EAAQL,EAAMG,OAAOE,MAC3Bb,EAAKD,MAAMyC,SAAS5B,EAAMC,IAhB1Bb,EAAKkB,MAAQ,GAFIlB,wEAqBV,IAAA4E,EAOHzE,KAAKJ,MALPc,EAFK+D,EAEL/D,MAFKgZ,EAAAjV,EAGLkV,eAHK,IAAAD,EAGK,GAHLA,EAILE,EAJKnV,EAILmV,YACAC,EALKpV,EAKLoV,cALKC,EAAArV,EAMLsV,gBAGIC,EAAa,GAyBnB,YAlCO,IAAAF,OAWLE,EAAWhX,KACTjB,EAAAC,EAAAC,cAAA,UAAQvB,MAAM,GAAG2H,IAAI,MAIzBsR,EAAQ3J,QAAQ,SAACyE,EAAQnE,GACvB,IAAI5P,EACAiJ,EACAiQ,GAAeC,GAEjBnZ,EAAQ+T,EAAOmF,GACfjQ,EAAU8K,EAAOoF,KAGjBnZ,EAAQ+T,EACR9K,EAAU8K,GAGZuF,EAAWhX,KACTjB,EAAAC,EAAAC,cAAA,UAAQvB,MAAOA,EAAO2H,IAAKiI,GAAQ3G,MAKrC5H,EAAAC,EAAAC,cAAA,UAAQvB,MAAOA,EAAO2B,SAAUrC,KAAKyZ,oBAClCO,UA3DYxX,IAAMC,WC0hBZwX,eAlgBb,SAAAA,EAAYra,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAia,IACjBpa,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAma,GAAA9Z,KAAAH,KAAMJ,KAiCRsa,YAlCmB,eAAA3W,EAAAzD,OAAA0D,EAAA,EAAA1D,CAAA2D,EAAAzB,EAAA0B,KAkCL,SAAAC,EAAO2O,GAAP,IAAA3K,EAAA,OAAAlE,EAAAzB,EAAA6B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZnE,EAAKS,SAAST,EAAK+G,cADP9C,EAAAE,KAAA,EAGkB4D,IAHlB,OAGND,EAHM7D,EAAAI,KAIZrE,EAAKS,SAAS,CACZqH,gBAAiBA,IAGnBxG,IAAM8C,IAAI,iBACP5C,KAAK,SAAAC,GACJ,IAAM6Y,EAAa7Y,EAAIE,KACvB3B,EAAKS,SAAS,CACZ8Z,gBAAiBD,MAIN,OAAb7H,EACFzS,EAAKS,SAAS,CACZgS,SAAU,QAGZzS,EAAKS,SAAS,CACZgS,SAAUA,IAEZnR,IAAM8C,IAAI,cAAgBqO,GACvBjR,KAAK,SAAAC,GACJ,IAAM6Q,EAAS7Q,EAAIE,KAEjBY,EAIE+P,EAJF/P,KACA0R,EAGE3B,EAHF2B,UACAC,EAEE5B,EAFF4B,WACAjE,EACEqC,EADFrC,aAEF,GAAI1N,IAASgS,GAMX,GALAvU,EAAKS,SAAS,CACZwT,UAAWA,EACXhE,aAAcA,IAGZgE,IAAcM,EAAe,KAAAiG,EAI3BlI,EAAO3Q,KAFT2J,EAF6BkP,EAE7BlP,OACAC,EAH6BiP,EAG7BjP,SAEFvL,EAAKS,SAAS,CACZ6K,OAAQA,EACRC,SAAUA,UAGT,GAAIhJ,IAASgS,EAAkB,KAElCgE,EACEjG,EAAO3Q,KADT4W,eAEFvY,EAAKS,SAAS,CACZyT,WAAYA,EACZqE,eAAgBA,IASpBvY,EAAKS,SAAS,CACZgS,SAAUA,EACVzN,MAAOsN,EAAOtN,MACd8M,EAAGQ,EAAOR,EACVO,EAAGC,EAAOD,EACV3J,MAAO4J,EAAO5J,MACde,OAAQ6I,EAAO7I,OACfgR,SAAUnI,EAAOmI,SACjBlY,KAAMA,EACNmY,iBAAkBpI,EAAOoI,iBACzBtX,MAAOkP,EAAOlP,OACb,WACDpD,EAAK2a,gBA5ED,wBAAA1W,EAAAO,SAAAV,MAlCK,gBAAA8W,GAAA,OAAAlX,EAAAe,MAAAtE,KAAAuE,YAAA,GAAA1E,EAqHnBO,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAvHnBb,EA2HnB6R,qBAAuB,SAACjR,EAAM6Q,GAC5B,IAAMrO,EAAKnD,OAAA4a,EAAA,EAAA5a,CAAA,GAAOD,EAAKkB,MAAMkC,OAC7BA,EAAM,CAACxC,IAAS6Q,EAChBzR,EAAKS,SAAS,CACZ2C,MAAOA,KA/HQpD,EAmInB8a,sBAAwB,SAACC,GACvB/a,EAAKS,SAAS,CACZga,SAAUM,KArIK/a,EAyInBgb,0BAA4B,SAACpa,EAAMC,GACjC,IAAMoa,EAAWpM,SAAShO,EAAO,KAAO,EACxCb,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAOqa,KA5IOjb,EAgJnB4Z,mBAAqB,SAAChZ,EAAMC,GAC1Bb,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAOC,KAlJOb,EAsJnBiG,KAAO,WAAM,IAAAhF,EAQPjB,EAAKkB,MANPuR,EAFSxR,EAETwR,SACAzN,EAHS/D,EAGT+D,MACA0V,EAJSzZ,EAITyZ,iBACAD,EALSxZ,EAKTwZ,SACAlY,EANStB,EAMTsB,KACAa,EAPSnC,EAOTmC,MAGIkP,EAAS,CACbtN,MAAOA,EACP4L,YAAa5Q,EAAKD,MAAM6Q,YACxBrO,KAAMA,EACNmY,iBAAkBA,EAClBD,SAAUA,EACVrX,MAAOA,GAGT,GAAIb,IAASgS,EAAiB,KAAAvM,EAIxBhI,EAAKkB,MAFP+S,EAF0BjM,EAE1BiM,UACAhE,EAH0BjI,EAG1BiI,aAKF,GAHAqC,EAAOrC,aAAeA,EACtBqC,EAAO2B,UAAYA,EAEfA,IAAcM,SAEX,GAAIN,IAAcM,EAAe,KAAA2G,EAIlClb,EAAKkB,MAFPoK,EAFoC4P,EAEpC5P,OACAC,EAHoC2P,EAGpC3P,SAEF+G,EAAO3Q,KAAO,CACZ2J,OAAQA,EACRC,SAAUA,SAGT,GAAIhJ,IAASgS,EAAkB,KAAA4G,EAIhCnb,EAAKkB,MAFPgT,EAFkCiH,EAElCjH,WACAqE,EAHkC4C,EAGlC5C,eAEFjG,EAAO4B,WAAaA,EACpB5B,EAAO3Q,KAAO,CACZ4W,eAAgBA,GAUH,OAAb9F,EACFnR,IAAMC,KAAK,aAAc+Q,GACtB9Q,KAAK,SAAAC,GACJzB,EAAKD,MAAMqb,YAGf9I,EAAOnM,GAAKsM,EACZnR,IAAMkF,IAAI,aAAc8L,GACrB9Q,KAAK,SAAAC,GACJzB,EAAKD,MAAMqb,aAvNApb,EA4NnB2a,SAAW,WACT,IAAMU,EAAc,CAClBX,iBAAkB1a,EAAKkB,MAAMwZ,iBAC7BD,SAAUza,EAAKkB,MAAMuZ,UAGvBnZ,IAAMC,KAAK,sBAAuB8Z,GAC/B7Z,KAAK,SAAAC,GACJ,IAAMoF,EAASpF,EAAIE,KACnB3B,EAAKS,SAAS,CACZ2T,YAAavN,OAtOF7G,EA2OnBsb,gBAAkB,WAAM,IAAAC,EAKlBvb,EAAKkB,MAHP+O,EAFoBsL,EAEpBtL,aACAuL,EAHoBD,EAGpBC,gBACAC,EAJoBF,EAIpBE,iBAGF,IAAe,IADDxL,EAAaS,UAAU,SAAAC,GAAC,OAAIA,EAAEN,aAAemL,IACzC,CAChB,IAAME,EAAezb,OAAAsR,EAAA,EAAAtR,CAAOgQ,GAC5ByL,EAAgBvY,KAAK,CACnBkN,WAAYmL,EACZ5K,YAAa6K,IAEfzb,EAAKS,SAAS,CACZwP,aAAcyL,MAzPD1b,EA8PnB2b,mBAAqB,SAACC,GAAU,IACtB3L,EAAiBjQ,EAAKkB,MAAtB+O,aACFQ,EAAQR,EAAaS,UAAU,SAAAC,GAAC,OAAKA,EAAEN,aAAeuL,EAAMvL,YAAgBM,EAAEC,cAAgBgL,EAAMhL,cAC1G,IAAe,IAAXH,EAAc,CAChB,IAAMiL,EAAezb,OAAAsR,EAAA,EAAAtR,CAAOgQ,GAC5ByL,EAAgB9D,OAAOnH,EAAO,GAC9BzQ,EAAKS,SAAS,CACZwP,aAAcyL,MArQD1b,EA0QnB6b,cAAgB,WACd,GAAI7b,EAAKkB,MAAM+S,YAAcM,EAAe,KAAAuH,EAKtC9b,EAAKkB,MAHPoK,EAFwCwQ,EAExCxQ,OACAC,EAHwCuQ,EAGxCvQ,SAHwCwQ,EAAAD,EAIxC1H,mBAJwC,IAAA2H,EAI1B,GAJ0BA,EAM1CpV,QAAQC,IAAI,gBAAiB0E,EAAQC,GACrC,IAAM5J,EAAO0S,EAAiBD,EAAYzS,MACpC8S,EAAcC,EAAwB/S,EAAM2J,EAAQC,GAC1DvL,EAAKS,SAAS,CACZgU,YAAaA,MArRAzU,EA0RnBgc,mBAAqB,WAAM,IAAAC,EAIrBjc,EAAKkB,MAFP+S,EAFuBgI,EAEvBhI,UAFuBiI,EAAAD,EAGvB7H,YAEIrE,QALmB,IAAAmM,EAGT,GAHSA,GAKGnM,SAAW,GAEnCoM,EAAgBja,EAAAC,EAAAC,cAAA,4BACpB,GAAI6R,IAAcM,SAEX,GAAIN,IAAcM,EAAe,KAAA6H,EAKlCpc,EAAKkB,MAHPuT,EAFoC2H,EAEpC3H,YACAnJ,EAHoC8Q,EAGpC9Q,OACAC,EAJoC6Q,EAIpC7Q,SAGF4Q,EACEja,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,KAAGia,MAAM,qBAAhB,cACAna,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,SACNC,MAAOyK,EACP9I,SAAUxC,EAAK4Z,mBACfE,QAAS/J,EACTiK,cAAe,OACfD,YAAa,SAIf7X,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,WACNC,MAAO0K,EACP/I,SAAUxC,EAAK4Z,mBACfE,QAAS/J,EACTiK,cAAe,OACfD,YAAa,SAEf7X,EAAAC,EAAAC,cAAA,UAAQM,QAAS1C,EAAK6b,eAAtB,kBACA3Z,EAAAC,EAAAC,cAACuS,EAAAxS,EAAD,CACEyS,OAAQH,EACRrR,MAAO,CAACqG,OAAQ,QAASf,MAAO,QAChCpG,UAAU,uBAIlB,OAAO6Z,GAzUPnc,EAAKkB,MAAQlB,EAAK+G,aAFD/G,qHA8UV,IAAA+B,EAAA5B,KAAAoc,EAOHpc,KAAKe,MALPqB,EAFKga,EAELha,KACA6R,EAHKmI,EAGLnI,YAHKoI,EAAAD,EAILzU,uBAJK,IAAA0U,EAIa,GAJbA,EAAAC,EAAAF,EAKLtM,oBALK,IAAAwM,EAKU,GALVA,EAAAC,EAAAH,EAMLhC,uBANK,IAAAmC,EAMa,GANbA,EASD/a,EAAO0S,EAAiBD,EAAYzS,MACpCoO,EAAUqE,EAAYrE,SAAW,GACjCnO,EAAQwS,EAAYxS,MAEpB+a,EAAa1M,EAAagC,IAAI,SAAA2J,GAAK,OACvC1Z,EAAAC,EAAAC,cAAA,OAAKoG,IAAKoT,EAAMvL,YACdnO,EAAAC,EAAAC,cAAA,sBAAcwZ,EAAMvL,YACpBnO,EAAAC,EAAAC,cAAA,yBAAiBwZ,EAAMhL,aACvB1O,EAAAC,EAAAC,cAAA,UAAQM,QAAS,kBAAMX,EAAK4Z,mBAAmBC,KAA/C,aAIEgB,EAAc7M,EAAQkC,IAAI,SAAA4K,GAAG,OACjC3a,EAAAC,EAAAC,cAAA,OAAKoG,IAAKqU,EAAIjc,MAAOic,EAAIjc,KAAzB,IAAgCic,EAAIC,YAGhCC,EAAexa,IAASgS,GAAoBhS,IAASgS,GAAoBpU,KAAKe,MAAMgT,aAAeK,EAEzG,OACErS,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAK8F,MAAzC,QACA/D,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,OACNC,MAAO0B,EACPC,SAAUrC,KAAKyZ,mBACfE,QAASvF,EACT2F,iBAAiB,IAGnBhY,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAC4a,GAAD,CAAMzD,UAAU,SACdrX,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,SACT9C,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,QACLC,MAAOV,KAAKe,MAAM8D,MAClBxC,SAAUrC,KAAKI,oBAGjB2B,EAAAC,EAAAC,cAAC+P,EAAD,CAAUvR,KAAK,aAAaC,MAAM,cAAc4J,QAAStK,KAAKe,MAAMkC,MAAM8R,WAAY1S,SAAUrC,KAAK0R,uBACrG3P,EAAAC,EAAAC,cAAC+P,EAAD,CAAUvR,KAAK,YAAYC,MAAM,aAAa4J,QAAStK,KAAKe,MAAMkC,MAAMgS,UAAW5S,SAAUrC,KAAK0R,wBAGlGtP,IAASgS,GACTrS,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,UACT9C,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,aACNC,MAAOV,KAAKe,MAAMgT,WAClB1R,SAAUrC,KAAKyZ,mBACfE,QAASvF,EACT2F,iBAAiB,KAKrB6C,GACA7a,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,SACT9C,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,mBACNC,MAAOV,KAAKe,MAAMwZ,iBAClBlY,SAAUrC,KAAK6a,0BACflB,QAAShS,EACTkS,cAAe,OACfD,YAAa,OAGf7X,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAC6a,GAAA9a,EAAD,CACEiB,MAAO,CAAE8Z,UAAW,OACpBrc,MAAOV,KAAKe,MAAMuZ,SAClBtS,KAAK,QACLgV,MAAM,QACNvc,KAAK,QACL4B,SAAUrC,KAAK2a,sBACfrR,OAAQ,QACRf,MAAO,OACPrF,SAAU,GACV+Z,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBC,WAAY,CACVC,iBAAiB,EACjBC,QAAS,KAIbvb,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKwa,UAAzC,cAGFzY,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACoS,GAAD,CACE7S,KAAMA,EACNoO,QAASA,EACTnO,MAAOA,IAGTM,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,WACGwa,IAKLra,IAASgS,GACTrS,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,SACT9C,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,YACNC,MAAOV,KAAKe,MAAM+S,UAClBzR,SAAUrC,KAAKyZ,mBACfE,QAASvF,GACT2F,iBAAiB,IAEnBhY,EAAAC,EAAAC,cAAA,wBACCjC,KAAK6b,sBAIRzZ,IAASgS,GACTrS,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,iBACT9C,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,kBACNC,MAAOV,KAAKe,MAAMsa,gBAClB1B,QAAS/J,EACTvN,SAAUrC,KAAKyZ,mBACfI,cAAe,OACfD,YAAa,SAGf7X,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,mBACNC,MAAOV,KAAKe,MAAMua,iBAClB3B,QAASS,EACT/X,SAAUrC,KAAK6a,0BACfhB,cAAe,OACfD,YAAa,OAEf7X,EAAAC,EAAAC,cAAA,WACGua,GAEHza,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKmb,iBAAzC,QAIF/Y,IAASgS,GACTrS,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,mBACT9C,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,iBACLC,MAAOV,KAAKe,MAAMqX,eAClB/V,SAAUrC,KAAKI,6DA/e7B,MAAO,CACLuH,gBAAiB,GACjB2K,SAAU,KACVzN,MAAO,GACPyV,SAAU,GACVC,iBAAkB,GAClBtG,YAAa,GACb7R,KAAMgS,EACNL,WAAYK,EACZN,UAAWM,GACXnR,MAAO,CACL8R,YAAY,EACZE,WAAW,GAEbmD,eAAgB,GAChBtI,aAAc,GACdsK,gBAAiB,GACjBiB,gBAAiB,GACjBC,iBAAkB,GAClBnQ,OAAQ,GACRC,SAAU,GACVkJ,YAAa,WA7BW9R,IAAMC,WCN9B8a,uBAEJ,SAAAA,EAAY3d,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAud,IACjB1d,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyd,GAAApd,KAAAH,KAAMJ,KAgER4d,wBAA0B,WACxB,IAAMC,EAAM5d,EAAKD,MAAM8d,SAASC,OAE1BC,EADS,IAAIC,gBAAgBJ,GACNxZ,IAAI,QAE3B8U,EAAkBlZ,EAAKie,eAE7Bje,EAAKS,SAAS,CACZyd,YAAY,EACZtd,KAAMmd,EACN7E,gBAAiBA,GAChB,WACD5X,IAAM8C,IAAN,sBAAAe,OAAgC4Y,IAC7Bvc,KAAK,SAAAC,GACJ,IAAMoF,EAASpF,EAAIE,KACnB3B,EAAKS,SAAS,CACZmQ,YAAa/J,EAAOV,GACpBvF,KAAMiG,EAAOjG,KACbwC,MAAOyD,EAAOzD,OACb,WACDpD,EAAKme,iBArFIne,EA2FnBO,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SA7FnBb,EAiGnBie,aAAe,WAEb,OADiBhR,IAASC,YAATjN,OAAA6F,EAAA,EAAA7F,QAAA6F,EAAA,EAAA7F,CAAAD,KACDyO,YAAc,IAnGbzO,EAsGnBoe,kBAAoB,WAAM,IAChBC,EAAuBre,EAAKkB,MAA5Bmd,mBACR,GAAIA,EACFC,cAAcD,GACdre,EAAKS,SAAS,CACZ4d,mBAAoB,SAEjB,KACGE,EAAoBve,EAAKkB,MAAzBqd,gBACJC,EAAW3P,SAAS0P,EAAiB,KAAO,GAChDC,EAAWA,EAAW,EAAI,EAAIA,EAC9B,IAAMC,EAAUC,YAAY,WAC1B1e,EAAK2e,eACL3e,EAAK4e,uBACO,IAAXJ,GACHxe,EAAKS,SAAS,CACZ4d,mBAAoBI,MAtHPze,EA2HnBme,QAAU,WACRne,EAAK6e,oBACL7e,EAAK4e,uBA7HY5e,EAgInB6e,kBAAoB,WAAM,IAAA5d,EAIpBjB,EAAKkB,MAFP0P,EAFsB3P,EAEtB2P,YACAsI,EAHsBjY,EAGtBiY,gBAEFlZ,EAAK8e,gBAAgBC,QAAQ5H,aAAavG,EAAasI,EAAiB,OArIvDlZ,EAwInB2e,aAAe,WACb3e,EAAK8e,gBAAgBC,QAAQ1H,eAzIZrX,EA4InB4e,oBAAsB,WACpB,IAAMI,GAAM,IAAIC,MAAOC,eAAeC,QAAQ,0BAA2B,MACzEnf,EAAKS,SAAS,CACZ2e,cAAeJ,KA/IAhf,EAmJnBiG,KAAO,WACLU,QAAQC,IAAI,QADD,IAAAoB,EAMPhI,EAAKkB,MAHP0P,EAHS5I,EAGT4I,YAKIyO,EAAY,CAChBlZ,GAAIyK,EACJhQ,KAVSoH,EAITpH,KAOAwC,MAXS4E,EAKT5E,OASF9B,IAAMkF,IAAI,iBAAkB6Y,GACzB7d,KAAK,SAAAC,MAGRzB,EAAK8e,gBAAgBC,QAAQtH,cAE7BzX,EAAKD,MAAMuf,gBAAgB1O,GAE3B5Q,EAAKS,SAAS,CACZsU,YAAY,KA1KG/U,EA8KnBuf,KAAO,WACLvf,EAAKS,SAAS,CACZsU,YAAY,KAhLG/U,EAoLnBwf,WAAa,WACXxf,EAAKS,SAAS,CACZsU,YAAY,KAtLG/U,EA0LnByf,aAAe,WACbzf,EAAKS,SAAS,CACZif,qBAAqB,IAGvB1f,EAAK6e,qBA/LY7e,EAkMnB2f,oBAAsB,SAAClN,GACrBzS,EAAK4f,gBAAgBb,QAAQ1E,YAAY5H,GACzCzS,EAAKS,SAAS,CACZif,qBAAqB,KArMN1f,EAyMnB6f,aAAe,SAAC7H,GACdhY,EAAK8e,gBAAgBC,QAAQJ,aAAa3G,IA1MzBhY,EA6MnB8f,WAAa,WAAM,IACTlf,EAASZ,EAAKkB,MAAdN,KACFgd,EAAG,kCAAAzY,OAAqCvE,GAC9Cmf,OAAOC,KAAKpC,EAAK,WAhNA5d,EAmNnBigB,iBAAmB,WACjBjgB,EAAKD,MAAMmD,QAAQC,KAAnB,sCApNiBnD,EAuNnBuX,eAAiB,SAAC9N,GAChB,IAAMrG,EAAKnD,OAAA4a,EAAA,EAAA5a,CAAA,GAAOD,EAAKkB,MAAMkC,OAC7BA,EAAMqG,OAASA,EACfzJ,EAAKS,SAAS,CACZ2C,MAAOA,KA3NQpD,EA+NnBwX,wBAA0B,SAACrO,GACzB,IAAM/F,EAAKnD,OAAA4a,EAAA,EAAA5a,CAAA,GAAOD,EAAKkB,MAAMkC,OAC7BA,EAAMwH,gBAAkBzB,EACxBnJ,EAAKS,SAAS,CACZ2C,MAAOA,KAnOQpD,EAuOnBkH,cAAgB,WAAM,IAAAC,EAGhBnH,EAAKkB,MADPkG,eAEIwJ,QAJc,IAAAzJ,EAED,GAFCA,GAIehB,GACnC7E,IAAM+F,OAAN,iBAAAlC,OAA8ByL,IAC3BpP,KAAK,SAAAC,GACJzB,EAAKD,MAAMmgB,kBAAkBtP,GAC7B5Q,EAAKsH,+BA/OQtH,EAmPnBmgB,gBAAkB,WAAM,IAAAjF,EAIlBlb,EAAKkB,MACHme,EAAY,CAChBlZ,GANoB+U,EAEpBtK,YAKAhQ,KAPoBsa,EAGpBta,MAMFZ,EAAKuH,yBAAyB8X,IA5Pbrf,EA+PnBuH,yBAA2B,SAAC8X,GAC1Brf,EAAKS,SAAS,CACZ2G,eAAgBiY,EAChB5X,0BAA0B,KAlQXzH,EAsQnBsH,0BAA4B,WAC1BtH,EAAKS,SAAS,CACZ2G,eAAgB,GAChBK,0BAA0B,KAtQ5BzH,EAAKkB,MAAQ,CACXwe,qBAAqB,EACrBjY,0BAA0B,EAC1BL,eAAgB,GAChB2N,YAAY,EACZmJ,YAAY,EACZG,mBAAoB,GACpBe,cAAe,GACfb,gBAAiB,GACjB6B,sBAAuB,GACvBxP,YAAa,EACbhQ,KAAM,GACNwC,MAAO,GACP8V,gBAAiB,KAGnBlZ,EAAK8e,gBAAkBnc,IAAM0d,YAC7BrgB,EAAK4f,gBAAkBjd,IAAM0d,YApBZrgB,mFAuBC,IAAA+B,EAAA5B,KACdgG,EAAKhG,KAAKJ,MAAMugB,MAAM1H,OAAOzS,GAC3ByK,OAAqB2P,IAAPpa,EAAmBA,EAAK,KAC5CQ,QAAQC,IAAI,wCAAyCgK,GAErD,IAAMgN,EAAMzd,KAAKJ,MAAM8d,SAASC,OAC1BlF,EAAS,IAAIoF,gBAAgBJ,GANjB4C,GAAA,EAAAC,GAAA,EAAAC,OAAAH,EAAA,IAOlB,QAAAI,EAAAC,EAAgBhI,EAAOiI,UAAvBC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAzc,QAAA6c,MAAAR,GAAA,EAAkC,KAA1BS,EAA0BN,EAAA9f,MAChC8F,QAAQC,IAAIqa,EAAK,GAAI,KAAMA,EAAK,KARhB,MAAAC,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GAWlB,IAAMxH,EAAkB/Y,KAAK8d,eAC7B9d,KAAKM,SAAS,CACZyY,gBAAiBA,GAChB,WACmB,OAAhBtI,EACF7O,EAAKtB,SAAS,CACZmQ,YAAa,OAGftP,IAAM8C,IAAN,iBAAAe,OAA2ByL,IACxBpP,KAAK,SAAAC,GACJ,IAAMoF,EAASpF,EAAIE,KACnBI,EAAKtB,SAAS,CACZmQ,YAAa/J,EAAOV,GACpBvF,KAAMiG,EAAOjG,KACbwC,MAAOyD,EAAOzD,OACb,WACDrB,EAAKoc,+DAOM,IACbE,EAAuBle,KAAKe,MAA5Bmd,mBACJA,GACFC,cAAcD,oCAgNT,IASH+C,EATGvI,EAAA1Y,KAAAgb,EAMHhb,KAAKe,MAJPmd,EAFKlD,EAELkD,mBACAe,EAHKjE,EAGLiE,cACArK,EAJKoG,EAILpG,WACAmJ,EALK/C,EAKL+C,WAEImD,EAA2C,KAAvBhD,EAA4B,MAAQ,KAG1DiD,EAAwB,KACtBC,EACJrf,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAhB,mBAAwC8c,GAChB,QAAtBiC,GACAnf,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,kBACLC,MAAOV,KAAKe,MAAMqd,gBAClB/b,SAAUrC,KAAKI,kBACf+B,UAAU,eACVc,MAAO,CAACsF,MAAO,UAGnBxG,EAAAC,EAAAC,cAAA,UAAQE,UAAU,4BAA4BI,QAASvC,KAAKie,mBAElC,OAAtBiD,EAEEnf,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,cAAcC,KAAK,KAAK0J,YAAU,IAGxD/M,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,cAAcC,KAAK,KAAK0J,YAAU,KAI9D/M,EAAAC,EAAAC,cAAA,UAAQE,UAAU,uBAAuBI,QAASvC,KAAKge,SACrDjc,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,WAAWC,KAAK,KAAK0J,YAAU,KAEvD/M,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcI,QAASvC,KAAKwe,cAA9C,kBA6BJ,OAzBKT,EAsBHoD,EAAwBC,EApBtBH,EADErM,EAEA7S,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcI,QAASvC,KAAKqf,YAA9C,UACAtd,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcI,QAASvC,KAAK8F,MAA9C,QACA/D,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcI,QAASvC,KAAKggB,iBAA9C,UACAje,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMmW,EAAK8G,oBAAoB,QAAnE,eAKFzd,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACGkf,EACDrf,EAAAC,EAAAC,cAAA,UAAQE,UAAU,4BAA4BI,QAASvC,KAAK2f,YAC1D5d,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,KAAKC,KAAK,KAAK0J,YAAU,KAEjD/M,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKof,MAAzC,SASNrd,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAEX4b,IAAenJ,EAEb7S,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACZnC,KAAKe,MAAMN,MAGdsB,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMN,KAClB4B,SAAUrC,KAAKI,kBACf+B,UAAU,oBAMlBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZgf,EACAF,IAILlf,EAAAC,EAAAC,cAACof,GAADvhB,OAAAiW,OAAA,CACEuL,IAAKthB,KAAK2e,gBACV/J,WAAY5U,KAAKe,MAAM6T,WACvBmE,gBAAiB/Y,KAAKe,MAAMgY,gBAC5BxG,aAAcvS,KAAKwf,oBACnBpI,eAAgBpX,KAAKoX,eACrBC,wBAAyBrX,KAAKqX,yBAC1BrX,KAAKe,MAAMkC,QAGjBlB,EAAAC,EAAAC,cAACuG,EAAD,CACE9D,KAAM1E,KAAKe,MAAMwe,oBACjBta,QAAS,kBAAMyT,EAAKpY,SAAS,CAAEif,qBAAqB,KACpD3a,WAAY,+BACZC,MAAO,eACP9C,EAAAC,EAAAC,cAACsf,GAAD,CACED,IAAKthB,KAAKyf,gBACVQ,sBAAuBjgB,KAAKe,MAAMkf,sBAClCxP,YAAazQ,KAAKe,MAAM0P,YACxBwK,OAAQjb,KAAKsf,gBAIjBvd,EAAAC,EAAAC,cAACuG,EAAD,CACE9D,KAAM1E,KAAKe,MAAMuG,yBACjBrC,QAASjF,KAAKmH,0BACdvC,WAAY,oBACZC,MAAO,oBACP9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,mCACmCnC,KAAKe,MAAMkG,eAAexG,KAD7D,KAGAsB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAK+G,eAAzC,mBA7YsBvE,IAAMC,YAqZvBC,eAAW6a,IC5ZpBiE,eAEJ,SAAAA,EAAY5hB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwhB,IACjB3hB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0hB,GAAArhB,KAAAH,KAAMJ,KAsBR6hB,YAAc,WACZtgB,IAAM8C,IAAI,iBACP5C,KAAK,SAAAC,GACJ,IAAM6Y,EAAa7Y,EAAIE,KACvB3B,EAAKS,SAAS,CACZ6Z,WAAYA,OA5BDta,EAiCnBO,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAnCnBb,EAuCnByG,eAAiB,WACfzG,EAAKS,SAAS,CACZwG,eAAe,EACfrG,KAAM,MA1CSZ,EA8CnBiG,KAAO,WAAM,IAKLoZ,EAAY,CAChBze,KAHEZ,EAAKkB,MADPN,KAKAwC,MAAO,CACLqG,OAAQ8K,GACR3J,gBAAiB,2BAIrBtJ,IAAMC,KAAK,gBAAiB8d,GACzB7d,KAAK,SAAAC,GACJ,IAAMmP,EAAcnP,EAAIE,KACxB3B,EAAKyG,iBACLzG,EAAK4hB,cACL5hB,EAAKD,MAAMmD,QAAQC,KAAnB,wBAAAgC,OAAgDyL,MAEjDlK,MAAM,SAAA9E,GACL+E,QAAQC,IAAIhF,MAnEC5B,EAuEnB6hB,KAAO,SAACjR,GACN5Q,EAAKS,SAAS,CACZqhB,kBAAmBlR,GAClB,WACD5Q,EAAKD,MAAMmD,QAAQC,KAAnB,wBAAAgC,OAAgDyL,OA3EjC5Q,EA+EnBsf,gBAAkB,SAAC1O,GACjB5Q,EAAK4hB,eAhFY5hB,EAmFnBkgB,kBAAoB,SAACtP,GACnB5Q,EAAK4hB,cACL5hB,EAAKS,SAAS,CACZqhB,kBAAmB,GAClB,WACD9hB,EAAKD,MAAMmD,QAAQC,KAAK,2BAtF1BnD,EAAKkB,MAAQ,CACX2G,YAAa,GACbyS,WAAY,GACZrT,eAAe,EACf6a,kBAAmB,EACnBlhB,KAAM,IAPSZ,mFAYjB,IAAM+hB,EAAW5hB,KAAKJ,MAAM8d,SAASkE,SAC/BtR,EAAQsR,EAASnQ,QAjBO,yBAkB9B,IAAe,IAAXnB,EAAc,CAChB,IAAMqR,EAAoBE,OAAOD,EAASE,UAAUxR,EAnBxB,wBAmB0DxN,SACtF9C,KAAKM,SAAS,CACZqhB,kBAAmBA,IAGvB3hB,KAAKyhB,+CAqFL,IAbO,IAAA7f,EAAA5B,KAAAc,EAKHd,KAAKe,MALFghB,EAAAjhB,EAELqZ,kBAFK,IAAA4H,EAEQ,GAFRA,EAGLJ,EAHK7gB,EAGL6gB,kBACAja,EAJK5G,EAIL4G,YAMIsa,EADFhiB,KAAKJ,MADPkC,UAE2BsS,GAEvB6N,EAAgB,GAZf/Z,EAAA,SAaEC,GACP,IAAM+W,EAAY/E,EAAWhS,GACvB1H,EAAOye,EAAUze,KACjByhB,EAAaP,IAAsBzC,EAAUlZ,GAAK,6BAA+B,KAClF0B,GAAgBA,GAAejH,EAAK2H,SAASV,KAChDua,EAAcjf,KAEVjB,EAAAC,EAAAC,cAAA,OAAKoG,IAAKF,EAAGhG,UAAS,gCAAA6C,OAAkCkd,GAAc3f,QAAS,kBAAMX,EAAK8f,KAAKxC,EAAUlZ,MACtGvF,KARF0H,EAAI,EAAGA,EAAIgS,EAAWrX,OAAQqF,IAAKD,EAAnCC,GAeT,OACEpG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAACyF,OAAQ,QACjBsZ,GACEjgB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,0CAA0CI,QAAS,kBAAMX,EAAKtB,SAAS,CAAEwG,eAAe,MACxG/E,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,SADxB,QAKJpD,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,cACLC,MAAOV,KAAKe,MAAM2G,YAClBY,YAAY,YACZjG,SAAUrC,KAAKI,qBAEnB2B,EAAAC,EAAAC,cAAA,WACGggB,IAGLlgB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAACkgB,EAAA,EAAD,CACEC,KAAK,2BACLC,OAAQ,SAACziB,GAAD,OACNmC,EAAAC,EAAAC,cAACqgB,GAAD,CACEja,IAAKzI,EAAMugB,MAAM1H,OAAOzS,GACxBmZ,gBAAiBvd,EAAKud,gBACtBY,kBAAmBne,EAAKme,wBAMhChe,EAAAC,EAAAC,cAACuG,EAAD,CACE9D,KAAM1E,KAAKe,MAAM+F,cACjB7B,QAAS,kBAAMrD,EAAKtB,SAAS,CAAEwG,eAAe,KAC9ClC,WAAY,oBACZC,MAAO,OACP9C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMN,KAClB4B,SAAUrC,KAAKI,oBAEjB2B,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAK8F,MAAzC,kBAzKYrD,aAkLTC,eAAW8e,ICsKXe,eAxVb,SAAAA,EAAY3iB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuiB,IACjB1iB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyiB,GAAApiB,KAAAH,KAAMJ,KAiBRQ,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SApBnBb,EAwBnB4Z,mBAAqB,SAAChZ,EAAMC,GAC1Bb,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAOC,KA1BOb,EA8BnBgb,0BAA4B,SAACpa,EAAMC,GACjC,IAAMoa,EAAWpM,SAAShO,EAAO,KAAO,EACxCb,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAOqa,KAjCOjb,EAsDnB2iB,WAAa,WACXrhB,IAAM8C,IAAI,YACP5C,KAAK,SAAAC,GACJ,IAAMmhB,EAAQnhB,EAAIE,KAClB3B,EAAKS,SAAS,CACZmiB,MAAOA,OA3DI5iB,EAgEnB6iB,YAAc,WACZvhB,IAAM8C,IAAI,aACP5C,KAAK,SAAAC,GACJ,IAAMqhB,EAASrhB,EAAIE,KACnB3B,EAAKS,SAAS,CACZqiB,OAAQA,OArEG9iB,EA0EnBgH,cAAgB,SAAC3F,GACF,OAATA,EACFrB,EAAKS,SAAS,CACZ0F,GAAI9E,EAAK8E,GACThF,SAAUE,EAAKF,SACfP,KAAMS,EAAKT,KACXmiB,aAAc,GACd9gB,QAASZ,EAAKY,QACd+gB,WAAY3hB,EAAK2hB,aAGnBhjB,EAAK8G,iBAGP9G,EAAKS,SAAS,CACZwiB,YAAa,GACbhc,eAAe,KA1FAjH,EA8FnByG,eAAiB,WACfzG,EAAKS,SAAS,CACZwG,eAAe,KAhGAjH,EAoGnB8G,eAAiB,WACf9G,EAAKS,SAAST,EAAKkjB,wBArGFljB,EAwGnB0H,qBAAuB,WACrB1H,EAAKS,SAAS,SAAAkH,GAAS,MAAK,CAC1BzB,oBAAqByB,EAAUzB,uBA1GhBlG,EA8GnBiG,KAAO,WAAM,IAAAhF,EASPjB,EAAKkB,MAPPgF,EAFSjF,EAETiF,mBACAC,EAHSlF,EAGTkF,GACAhF,EAJSF,EAITE,SACAP,EALSK,EAKTL,KACAmiB,EANS9hB,EAMT8hB,aACA9gB,EAPShB,EAOTgB,QACA+gB,EARS/hB,EAQT+hB,WAGF,GAAK7hB,EAAL,CAIA,IAAIgiB,EAAkB5O,GACtB,GAAIA,KAA6BvU,EAAKD,MAAMkC,QAAS,CACnD,IAAIA,EAIF,OAHAkhB,EAAkBlhB,EAQtB,IAAIZ,EAAO,CACTF,SAAUA,EACVP,KAAMA,EACNqB,QAASkhB,EACTH,WAAYA,GAGH,OAAP7c,GACF9E,EAAK8E,GAAKA,EACND,GAAsB6c,IACxB1hB,EAAK0hB,aAAeA,GAGtBzhB,IAAMkF,IAAI,WAAYnF,GACnBG,KAAK,SAAAC,GACJzB,EAAK8G,iBACL9G,EAAKyG,iBACLzG,EAAK2iB,iBAGTthB,EAAK0hB,aAAeA,EAEpBzhB,IAAMC,KAAK,WAAYF,GACpBG,KAAK,SAAAC,GACJzB,EAAK8G,iBACL9G,EAAKyG,iBACLzG,EAAK2iB,kBAlKM3iB,EAuKnBqH,OAAS,SAAClB,GACR7E,IAAM+F,OAAO,YAAclB,GACxB3E,KAAK,SAAAC,GACJzB,EAAK2iB,gBA1KQ3iB,EA8KnBojB,aAAe,WAAM,IAAApb,EAIfhI,EAAKkB,MAFP+hB,EAFiBjb,EAEjBib,YAFiBI,EAAArb,EAGjBgb,kBAHiB,IAAAK,EAGJ,GAHIA,EAMnB,IAAe,IADDL,EAAWtS,UAAU,SAAA4S,GAAO,OAAIA,IAAYL,IACxC,CAChB,IAAMM,EAAatjB,OAAAsR,EAAA,EAAAtR,CAAO+iB,GAC1BO,EAAcpgB,KAAK8f,GACnBjjB,EAAKS,SAAS,CACZuiB,WAAYO,MAxLCvjB,EA6LnBwjB,gBAAkB,SAACF,GAAY,IAAAG,EAGzBzjB,EAAKkB,MADP8hB,kBAF2B,IAAAS,EAEd,GAFcA,EAIvBhT,EAAQuS,EAAWtS,UAAU,SAAAvK,GAAE,OAAIA,IAAOmd,IAChD,IAAe,IAAX7S,EAAc,CAChB,IAAM8S,EAAatjB,OAAAsR,EAAA,EAAAtR,CAAO+iB,GAC1BO,EAAc3L,OAAOnH,EAAO,GAC5BzQ,EAAKS,SAAS,CACZuiB,WAAYO,MApMhBvjB,EAAKkB,MAAQ,CACX0hB,MAAO,GACPE,OAAQ,GACRjb,YAAa,GACb3B,oBAAoB,EACpBe,eAAe,EACfd,GAAI,KACJhF,SAAU,GACVP,KAAM,GACNmiB,aAAc,GACd9gB,QAASsS,GACT0O,YAAa,GACbD,WAAY,IAdGhjB,mFAkDjBG,KAAKwiB,aACLxiB,KAAK0iB,+CAoLL,IA5BO,IAAA9gB,EAAA5B,KAAA+a,EAOH/a,KAAKe,MALPiF,EAFK+U,EAEL/U,GACAD,EAHKgV,EAGLhV,mBAHKwd,EAAAxI,EAIL0H,aAJK,IAAAc,EAIG,GAJHA,EAAAC,EAAAzI,EAKL4H,cALK,IAAAa,EAKI,GALJA,EAAAC,EAAA1I,EAML8H,kBANK,IAAAY,EAMQ,GANRA,EAUL3hB,EACE9B,KAAKJ,MADPkC,QAGIkG,EAAc,OAAPhC,EAAc,MAAQ,OAE7B0d,EAAYjB,EAAM3Q,IAAI,SAAA5Q,GAAI,OAC9Ba,EAAAC,EAAAC,cAAA,OAAKoG,IAAKnH,EAAK8E,GAAI7D,UAAU,aAC3BJ,EAAAC,EAAAC,cAAA,SACGf,EAAKF,SACLE,EAAKT,KACLS,EAAKY,QACNC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAKiF,cAAc3F,KAA7D,UACAa,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAKsF,OAAOhG,EAAK8E,MAA3D,cAKA2d,EAAiB,GA3BhBzb,EAAA,SA4BEC,GAEP,IADA,IAAMgb,EAAUN,EAAW1a,GAClB8P,EAAI,EAAGA,EAAI0K,EAAO7f,OAAQmV,IACjC,GAAIkL,IAAYR,EAAO1K,GAAGjS,GAAI,CAC5B2d,EAAe3gB,KAEXjB,EAAAC,EAAAC,cAAA,OAAKoG,IAAK8a,GACRphB,EAAAC,EAAAC,cAAA,qBAAa0gB,EAAO1K,GAAGxX,MACvBsB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAKyhB,gBAAgBF,KAA/D,YAIN,QAZGhb,EAAI,EAAGA,EAAI0a,EAAW/f,OAAQqF,IAAKD,EAAnCC,GAiBT,OACEpG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,cACLC,MAAOV,KAAKe,MAAM2G,YAClBrF,SAAUrC,KAAKI,kBACfkI,YAAY,YACZrF,MAAO,CAACsF,MAAO,WAEjBxG,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKyH,aAAzC,SACA1F,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAKiF,cAAc,QAC3D9E,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,SADxB,cAIFpD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACZuhB,GAGH3hB,EAAAC,EAAAC,cAACuG,EAAD,CACE9D,KAAM1E,KAAKe,MAAM+F,cACjB7B,QAASjF,KAAKsG,eACd1B,WAAY,kBACZC,MAAOmD,GAEPjG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAMC,SAClBqB,SAAUrC,KAAKI,oBAEjB2B,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMN,KAClB4B,SAAUrC,KAAKI,oBAEN,SAAT4H,GACEjG,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAACyF,OAAQ,oBACnB3G,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKuH,sBAAzC,qBAGM,QAATS,GAAkBjC,IACnBhE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,eACLC,MAAOV,KAAKe,MAAM6hB,aAClBvgB,SAAUrC,KAAKI,qBAIrB2B,EAAAC,EAAAC,cAAA,4BACEmS,KAA6BtS,GAC7BC,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,UACNC,MAAOV,KAAKe,MAAMe,QAClBO,SAAUrC,KAAKyZ,mBACfE,QAAS,CAACvF,GbjTQ,6BaqTatS,GACjCC,EAAAC,EAAAC,cAAA,WAAMmS,IAGRrS,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,cACNC,MAAOV,KAAKe,MAAM+hB,YAClBzgB,SAAUrC,KAAK6a,0BACflB,QAASgJ,EACT9I,cAAe,OACfD,YAAa,OAEf7X,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKijB,cAAzC,OACAlhB,EAAAC,EAAAC,cAAA,WACG0hB,GAGH5hB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAK8F,MAAzC,yDAzSR,MAAO,CACLE,GAAI,KACJhF,SAAU,GACVP,KAAM,GACNmiB,aAAc,GACd9gB,QAAS,GACTghB,YAAa,GACbD,WAAY,WA/CCrgB,IAAMC,WC0PVmhB,eA3Pb,SAAAA,EAAYhkB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4jB,IACjB/jB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8jB,GAAAzjB,KAAAH,KAAMJ,KAaRQ,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAhBnBb,EAoBnBgb,0BAA4B,SAACpa,EAAMC,GACjC,IAAMoa,EAAWpM,SAAShO,EAAO,KAAO,EACxCb,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAOqa,KAvBOjb,EAyCnB6iB,YAAc,WACZvhB,IAAM8C,IAAI,aACP5C,KAAK,SAAAC,GACJ,IAAMqhB,EAASrhB,EAAIE,KACnB3B,EAAKS,SAAS,CACZqiB,OAAQA,OA9CG9iB,EAmDnBgkB,gBAAkB,WAChB1iB,IAAM8C,IAAI,iBACP5C,KAAK,SAAAC,GACJ,IAAM6Y,EAAa7Y,EAAIE,KACvB3B,EAAKS,SAAS,CACZ6Z,WAAYA,OAxDDta,EA6DnBgH,cAAgB,SAACid,GACD,OAAVA,EACFjkB,EAAKS,SAAS,CACZ0F,GAAI8d,EAAM9d,GACVvF,KAAMqjB,EAAMrjB,KACZsjB,gBAAiBD,EAAMC,kBAGzBlkB,EAAK8G,iBAEP9G,EAAKS,SAAS,CACZ0jB,iBAAkB,GAClBld,eAAe,KAzEAjH,EA6EnByG,eAAiB,WACfzG,EAAKS,SAAS,CACZwG,eAAe,KA/EAjH,EAmFnB8G,eAAiB,WACf9G,EAAKS,SAAST,EAAKkjB,wBApFFljB,EAuFnBiG,KAAO,WAAM,IAAAhF,EAKPjB,EAAKkB,MAHPiF,EAFSlF,EAETkF,GAKE8d,EAAQ,CACVrjB,KARSK,EAGTL,KAMAsjB,gBATSjjB,EAITijB,iBAQS,OAAP/d,GACF8d,EAAM9d,GAAKA,EACX7E,IAAMkF,IAAI,YAAayd,GACpBziB,KAAK,SAAAC,GACJzB,EAAK8G,iBACL9G,EAAK6iB,cACL7iB,EAAKyG,oBAGTnF,IAAMC,KAAK,YAAa0iB,GACrBziB,KAAK,SAAAC,GACJzB,EAAK8G,iBACL9G,EAAK6iB,cACL7iB,EAAKyG,oBAhHMzG,EAqHnBqH,OAAS,SAAClB,GACR7E,IAAM+F,OAAO,aAAelB,GACzB3E,KAAK,SAAAC,GACJzB,EAAK6iB,iBAxHQ7iB,EA4HnBokB,kBAAmB,WAAM,IAAApc,EAInBhI,EAAKkB,MAFPijB,EAFqBnc,EAErBmc,iBAFqBE,EAAArc,EAGrBkc,uBAHqB,IAAAG,EAGH,GAHGA,EAMvB,GAAIF,IAEa,IADDD,EAAgBxT,UAAU,SAAAE,GAAW,OAAIA,IAAgBuT,IACrD,CAChB,IAAMG,EAAkBrkB,OAAAsR,EAAA,EAAAtR,CAAOikB,GAC/BI,EAAmBnhB,KAAKghB,GACxBnkB,EAAKS,SAAS,CACZyjB,gBAAiBI,MAxINtkB,EA8InBukB,qBAAuB,SAAC3T,GAAgB,IAAA4T,EAGlCxkB,EAAKkB,MADPgjB,uBAFoC,IAAAM,EAElB,GAFkBA,EAIhC/T,EAAQyT,EAAgBxT,UAAU,SAAAvK,GAAE,OAAIA,IAAOyK,IACrD,IAAe,IAAXH,EAAc,CAChB,IAAM6T,EAAkBrkB,OAAAsR,EAAA,EAAAtR,CAAOikB,GAC/BI,EAAmB1M,OAAOnH,EAAO,GACjCzQ,EAAKS,SAAS,CACZyjB,gBAAiBI,MArJrBtkB,EAAKkB,MAAQ,CACX4hB,OAAQ,GACRxI,WAAY,GACZrT,eAAe,EACfY,YAAa,GACb1B,GAAI,KACJvF,KAAM,GACNujB,iBAAkB,GAClBD,gBAAiB,IAVFlkB,mFAqCjBG,KAAK0iB,cACL1iB,KAAK6jB,mDA2IL,IArBO,IAAAjiB,EAAA5B,KAAA+a,EAMH/a,KAAKe,MAJPiF,EAFK+U,EAEL/U,GAFKwd,EAAAzI,EAGL4H,cAHK,IAAAa,EAGI,GAHJA,EAAAc,EAAAvJ,EAILZ,kBAJK,IAAAmK,EAIQ,GAJRA,EAAAC,EAAAxJ,EAKLgJ,uBALK,IAAAQ,EAKa,GALbA,EAQDvc,EAAc,OAAPhC,EAAc,MAAQ,OAE7Bwe,EAAa7B,EAAO7Q,IAAI,SAAAgS,GAAK,OACjC/hB,EAAAC,EAAAC,cAAA,OAAKoG,IAAKyb,EAAM9d,GAAI7D,UAAU,cAC5BJ,EAAAC,EAAAC,cAAA,SACG6hB,EAAMrjB,KACPsB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAKiF,cAAcid,KAA7D,UACA/hB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAKsF,OAAO4c,EAAM9d,MAA5D,cAKAye,EAAsB,GApBrBvc,EAAA,SAqBEC,GAEP,IADA,IAAMsI,EAAcsT,EAAgB5b,GAC3B8P,EAAI,EAAGA,EAAIkC,EAAWrX,OAAQmV,IACrC,GAAIxH,IAAgB0J,EAAWlC,GAAGjS,GAAI,CACpCye,EAAoBzhB,KAEhBjB,EAAAC,EAAAC,cAAA,OAAKoG,IAAKoI,GACR1O,EAAAC,EAAAC,cAAA,oBAAYkY,EAAWlC,GAAGxX,MAC1BsB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAKwiB,qBAAqB3T,KAApE,YAIN,QAZGtI,EAAI,EAAGA,EAAI4b,EAAgBjhB,OAAQqF,IAAKD,EAAxCC,GAiBT,OACEpG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,cACLC,MAAOV,KAAKe,MAAM2G,YAClBrF,SAAUrC,KAAKI,kBACfkI,YAAY,YACZrF,MAAO,CAACsF,MAAO,WAEjBxG,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKyH,aAAzC,SACA1F,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAKiF,cAAc,QAC3D9E,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,SADxB,eAIFpD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACZqiB,GAGHziB,EAAAC,EAAAC,cAACuG,EAAD,CACE9D,KAAM1E,KAAKe,MAAM+F,cACjB7B,QAASjF,KAAKsG,eACd1B,WAAY,kBACZC,MAAOmD,GAEPjG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMN,KAClB4B,SAAUrC,KAAKI,oBAEjB2B,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACka,GAAD,CACE1b,KAAM,mBACNC,MAAOV,KAAKe,MAAMijB,iBAClB3hB,SAAUrC,KAAK6a,0BACflB,QAASQ,EACTN,cAAe,OACfD,YAAa,OAEf7X,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKikB,mBAAzC,OACAliB,EAAAC,EAAAC,cAAA,WACGwiB,GAGH1iB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAK8F,MAAzC,yDAtNR,MAAO,CACLE,GAAI,KACJvF,KAAM,GACNujB,iBAAkB,GAClBD,gBAAiB,WAlCHvhB,IAAMC,WCwBXiiB,eAtBb,SAAAA,EAAY9kB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0kB,IACjB7kB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4kB,GAAAvkB,KAAAH,KAAMJ,KACDmB,MAAQ,GAFIlB,wEAOjB,OACEkC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAC4a,GAAD,CAAMzD,UAAU,SACdrX,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,SACT9C,EAAAC,EAAAC,cAAC0iB,GAAD,OAEF5iB,EAAAC,EAAAC,cAAA,OAAK4C,MAAM,QACT9C,EAAAC,EAAAC,cAAC2iB,GAAS5kB,KAAKJ,iBAhBE4C,IAAMC,WCiIpBoiB,eAlIb,SAAAA,EAAYjlB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6kB,IACjBhlB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+kB,GAAA1kB,KAAAH,KAAMJ,KAaRQ,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAhBnBb,EAwBnBilB,UAAY,WACV3jB,IAAM8C,IAAI,oBACP5C,KAAK,SAAAC,GACJ,IAAMJ,EAAOI,EAAIE,KACjB3B,EAAKS,SAAS,CACZ0F,GAAI9E,EAAK8E,GACThF,SAAUE,EAAKF,SACfP,KAAMS,EAAKT,KACXqB,QAASZ,EAAKY,QACdijB,OAAQ7jB,EAAK6jB,YAjCFllB,EAsCnBmlB,eAAiB,aAtCEnlB,EAyCnBiG,KAAO,WAAM,IAAAhF,EAMPjB,EAAKkB,MAJPgF,EAFSjF,EAETiF,mBACAtF,EAHSK,EAGTL,KACAQ,EAJSH,EAITG,SACA4B,EALS/B,EAKT+B,kBAGI3B,EAAO,CACXT,KAAMA,GAGR,GAAIsF,EAAoB,CACtB,GAAI9E,IAAa4B,EACf,OAGF3B,EAAKD,SAAWA,EAGlBE,IAAMkF,IAAI,mBAAoBnF,GAC3BG,KAAK,SAAAC,OA9DSzB,EAkEnB0H,qBAAuB,WACrB1H,EAAKS,SAAS,SAAAkH,GAAS,MAAK,CAC1BzB,oBAAqByB,EAAUzB,uBAlEjClG,EAAKkB,MAAQ,CACXgF,oBAAoB,EACpBC,GAAI,KACJhF,SAAU,GACVP,KAAM,GACNqB,QAAS,GACTijB,OAAQ,GACR9jB,SAAU,GACV4B,kBAAmB,IAVJhD,mFAqBjBG,KAAK8kB,6CAmDE,IAAAjd,EAMH7H,KAAKe,MAJPgF,EAFK8B,EAEL9B,mBACA/E,EAHK6G,EAGL7G,SACAc,EAJK+F,EAIL/F,QACAijB,EALKld,EAKLkd,OAGF,OACEhjB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,WAAMjB,GAENe,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMN,KAClB4B,SAAUrC,KAAKI,oBAEjB2B,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,WAAMH,GAENC,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,WAAM8iB,GACNhjB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKglB,gBAAzC,wBACAjjB,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKuH,sBAAzC,mBAEExB,GACEhE,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAME,SAClBoB,SAAUrC,KAAKI,oBACjB2B,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,oBACLC,MAAOV,KAAKe,MAAM8B,kBAClBR,SAAUrC,KAAKI,qBAIvB2B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAK8F,MAAzC,iBA7HYtD,IAAMC,WCsBbwiB,eApBb,SAAAA,EAAYrlB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAilB,IACjBplB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmlB,GAAA9kB,KAAAH,KAAMJ,KACDmB,MAAQ,GAFIlB,mFAOjB2G,QAAQC,IAAI,0BAA2B,qBACvCzG,KAAKklB,kBAAkB1H,2DAGhB,IAAA5b,EAAA5B,KACP,OACE+B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAACqgB,GAAD,CAAmB6C,oBAAqB,SAAAC,GAAI,OAAKxjB,EAAKsjB,kBAAoBE,aAhB5C5iB,IAAMC,WCYtC4iB,WAAa,CACjB,CACE7V,KAAM,uBACN9O,MAAO,YACPyE,KAAM,cAER,CACEqK,KAAM,wBACN9O,MAAO,cACPyE,KAAM,YAER,CACEqK,KAAM,4BACN9O,MAAO,kBACPyE,KAAM,eAMJmgB,eACJ,SAAAA,EAAY1lB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAslB,IACjBzlB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwlB,GAAAnlB,KAAAH,KAAMJ,KAqBR2lB,gBAAkB,SAACC,GACjB3lB,EAAKS,SAAS,CACZmlB,gBAAiBD,KAxBF3lB,EA4BnB6lB,OAAS,WACPvkB,IAAM8C,IAAI,gBACP5C,KAAK,SAAAC,GACJzB,EAAKD,MAAM+lB,cA7Bf9lB,EAAKkB,MAAQ,CACX0kB,gBAAiB,wBAHF5lB,mFAQjB,IACI2P,EADEoS,EAAW5hB,KAAKJ,MAAM8d,SAASkE,SAEjCA,EAASgE,WAbS,sBAcpBpW,EAdoB,qBAiBpBA,EADiB6V,GAAWQ,KAAK,SAAAC,GAAC,OAAIlE,EAASgE,WAAWE,EAAEtW,QAC5CA,KAGlBxP,KAAKM,SAAS,CACZmlB,gBAAiBjW,qCAiBZ,IAAA5N,EAAA5B,KAELylB,EACEzlB,KAAKe,MADP0kB,gBAGFjf,QAAQC,IAAI,sBALL,IAAAhC,EAUHzE,KAAKJ,MAFPoB,EARKyD,EAQLzD,SACAc,EATK2C,EASL3C,QAGEikB,EAAY,GACZC,EAAW,GAEbA,EADElkB,IAAYsS,GACHiR,GAAWY,OAAO,SAAAH,GAAC,MAAe,yBAAXA,EAAEtW,OAEzB6V,GAEb,IAnBO,IAAAnd,EAAA,SAmBEC,GACP,IAAM+d,EAAOF,EAAS7d,GAChBoR,EAASkM,IAAoBS,EAAK1W,KAAO,mBAAqB,GACpEuW,EAAU/iB,KAENjB,EAAAC,EAAAC,cAAA,MAAIoG,IAAK6d,EAAK1W,KAAMrN,UAAWoX,GAC7BxX,EAAAC,EAAAC,cAACkkB,EAAA,EAAD,CAAMC,GAAIF,EAAK1W,KAAMjN,QAAS,kBAAMX,EAAK2jB,gBAAgBW,EAAK1W,QAC5DzN,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAM+gB,EAAK/gB,KAAM2J,YAAU,IAC5C/M,EAAAC,EAAAC,cAAA,QAAME,UAAU,2BAA2B+jB,EAAKxlB,WARjDyH,EAAI,EAAGA,EAAI6d,EAASljB,OAAQqF,IAAKD,EAAjCC,GAeT,IAAMke,EAxEgB,uBAwEMZ,EAAwC,mBAAqB,GAEzF,OACE1jB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAf,QACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,sBACX4jB,GAEHhkB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAS,yCAAA6C,OAA2CqhB,IACvDtkB,EAAAC,EAAAC,cAACkkB,EAAA,EAAD,CAAMC,GAAG,qBAAqB7jB,QAAS,kBAAMX,EAAK2jB,gBAnFtC,wBAoFVxjB,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,OAAO2J,YAAU,IACvC/M,EAAAC,EAAAC,cAAA,QAAME,UAAU,2BAA2BnB,KAG/Ce,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uCAAuCI,QAASvC,KAAK0lB,QAClE3jB,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,eAAe2J,YAAU,OAIrD/M,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAACqkB,EAAA,EAAD,KACEvkB,EAAAC,EAAAC,cAACkgB,EAAA,EAAD,CAAOoE,OAAK,EAACnE,KAAK,wBAAwBoE,UAAW3gB,IACrD9D,EAAAC,EAAAC,cAACkgB,EAAA,EAAD,CAAOoE,OAAK,EAACnE,KAAK,qBAAqBoE,UAAW3B,KAClD9iB,EAAAC,EAAAC,cAACkgB,EAAA,EAAD,CAAOoE,OAAK,EAACnE,KAAK,4BAA4BoE,UAAWvB,KACzDljB,EAAAC,EAAAC,cAACkgB,EAAA,EAAD,CAAOoE,OAAK,EAACnE,KAAK,4BAA4BC,OAAQ,kBAAMtgB,EAAAC,EAAAC,cAACwkB,GAAmB7kB,EAAKhC,UACrFmC,EAAAC,EAAAC,cAACkgB,EAAA,EAAD,CAAOC,KAAK,uBAAuBC,OAAQ,kBAAMtgB,EAAAC,EAAAC,cAACykB,GAAc9kB,EAAKhC,YAGzEmC,EAAAC,EAAAC,cAAC0kB,EAAD,cApGgBnkB,IAAMC,WAyGfC,eAAW4iB,IC9HXsB,oLATX,OACE7kB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACkkB,EAAA,EAAD,CAAMC,GAAG,UAAT,iBALmB5jB,IAAMC,WCgBjCokB,IAAQC,IAAIC,IAAcC,IAAYC,IAAYC,IAAQC,IACxDC,IAAQC,IAAYC,IAAcC,IAAcC,IAChDC,IAAMC,IAAQC,IAAQC,IAAcC,IAAYC,IAChDC,IAAcC,IAAWC,SAGrBC,eACJ,SAAAA,EAAYtoB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkoB,IACjBroB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAooB,GAAA/nB,KAAAH,KAAMJ,KAiDR+B,eAAiB,WAAyC,IAAxCJ,EAAwCgD,UAAAzB,OAAA,QAAAsd,IAAA7b,UAAA,GAAAA,UAAA,GAAxB,GAAIqd,EAAoBrd,UAAAzB,OAAA,QAAAsd,IAAA7b,UAAA,GAAAA,UAAA,GAAT,KAC3ChD,EAAcqhB,aAChB/iB,EAAKD,MAAMmD,QAAQC,KAAK,mBAExBnD,EAAKS,SAAS,CACZU,SAAUO,EAAcP,SACxBc,QAASP,EAAcO,QACvBqmB,eAAe,GACd,WACD,IAAIC,EAAY,uBACZxG,IACFwG,EAAYxG,GAEd/hB,EAAKD,MAAMmD,QAAQC,KAAKolB,MA/DXvoB,EAoEnB8lB,SAAW,WACT9lB,EAAKS,SAAS,CACZU,SAAU,GACVc,QAAS,GACTqmB,eAAe,GACd,WACDtoB,EAAKD,MAAMmD,QAAQC,KAAK,aAxE1BnD,EAAKkB,MAAQ,CACXC,SAAU,GACVc,QAAS,GACTqmB,eAAe,GALAtoB,mFASC,IAAA+B,EAAA5B,KACZ4hB,EAAW5hB,KAAKJ,MAAM8d,SAASkE,SAC/BjE,EAAS3d,KAAKJ,MAAM8d,SAASC,OAK/B0K,GAHW,IAAIxK,gBAAgBF,GACb1Z,IAAI,UAER2d,EAAWjE,GAMzB9b,GAAkB,EAFlB7B,KAAKe,MADPe,UAKAD,GAAkB,GAGfA,GACH7B,KAAKM,SAAS,CACZ6nB,eAAe,GACd,WACDhnB,IAAMC,KAAK,sBACRC,KAAK,SAAAC,GACJ,IAAMC,EAAgBD,EAAIE,KACtBD,EAAcE,MACdG,EAAKtB,SAAS,CACZwB,QAAS,GACTqmB,eAAe,GACd,WACDvmB,EAAKhC,MAAMmD,QAAQC,KAAK,YAG1BpB,EAAKD,eAAeJ,EAAe8mB,wCAoCxC,IAAA3P,EAAA1Y,KAAAc,EAKHd,KAAKe,MAHPC,EAFKF,EAELE,SACAc,EAHKhB,EAGLgB,QACAqmB,EAJKrnB,EAILqnB,cAGEtmB,GAAkB,EAKtB,OAJIC,IACFD,GAAkB,GAGhBsmB,EAEApmB,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,cAAcmjB,MAAM,EAAMljB,KAAK,OAKvDrD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACqkB,EAAA,EAAD,KACEvkB,EAAAC,EAAAC,cAACkgB,EAAA,EAAD,CAAOoE,OAAK,EAACnE,KAAK,IAAIC,OAAQ,kBAAMtgB,EAAAC,EAAAC,cAACsmB,EAAD,CAAOzmB,QAASA,EAASH,eAAgB+W,EAAK/W,oBAClFI,EAAAC,EAAAC,cAACkgB,EAAA,EAAD,CAAOC,KAAK,SAASC,OAAQ,kBAAMtgB,EAAAC,EAAAC,cAACsmB,EAAD,CAAOzmB,QAASA,EAASH,eAAgB+W,EAAK/W,oBACjFI,EAAAC,EAAAC,cAACkgB,EAAA,EAAD,CAAOC,KAAK,kBAAkBoE,UAAW7jB,IACzCZ,EAAAC,EAAAC,cAACumB,GAAD,CACEC,cAAe5mB,EACfugB,KAAK,aACLoE,UAAWlB,GACXtkB,SAAUA,EACVc,QAASA,EACT6jB,SAAU3lB,KAAK2lB,WAEjB5jB,EAAAC,EAAAC,cAACkgB,EAAA,EAAD,CAAOqE,UAAWI,cA/GVpkB,IAAMC,WAsHxB,SAAS+lB,GAATjlB,GAAsE,IAApCd,EAAoCc,EAA/CijB,UAAsBiC,EAAyBllB,EAAzBklB,cAAkBC,EAAO5oB,OAAA6oB,EAAA,EAAA7oB,CAAAyD,EAAA,+BACpE,OACExB,EAAAC,EAAAC,cAACkgB,EAAA,EAADriB,OAAAiW,OAAA,GACM2S,EADN,CAEErG,OACE,SAACziB,GAAD,OAA6B,IAAlB6oB,EACT1mB,EAAAC,EAAAC,cAACQ,EAAD3C,OAAAiW,OAAA,GAAenW,EAAW8oB,IAC1B3mB,EAAAC,EAAAC,cAAC2mB,EAAA,EAAD,CAAUxC,GAAI,CAACxE,SAAU,SAAU7gB,MAAO,CAAC8nB,KAAMjpB,EAAM8d,iBAMlDhb,mBAAWwlB,cCxJ1Bpb,IAASuV,OACPtgB,EAAAC,EAAAC,cAAC6mB,GAAA,EAAD,CAAeC,SAAS,SACtBhnB,EAAAC,EAAAC,cAAC+mB,GAAD,OAEFxb,SAASyb,eAAe","file":"static/js/main.bb1e554e.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { sysRole } = this.props;\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      axios.post('/auth/login/cookie')\r\n        .then(res => {\r\n          const loginResponse = res.data;\r\n          if (!loginResponse.error) {\r\n            this.props.onLoginSuccess(loginResponse);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.keyCode === 13) {\r\n      this.login();\r\n    }\r\n  }\r\n\r\n  login = () => {\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password'\r\n      });\r\n      return;\r\n    }\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const loginResponse = res.data;\r\n        if (loginResponse.error) {\r\n          this.setState({\r\n            errorMsg: loginResponse.error\r\n          });\r\n        } else {\r\n          this.props.onLoginSuccess(loginResponse);\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div className=\"login-app-title\">Poli</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <div className=\"long-panel-body\">\r\n            <div className=\"form-panel\">\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n              <label>Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n              <button className=\"button login-button\" onClick={this.login}>Login</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport './Login.css';\r\n\r\nclass ChangeTempPassword extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  changePassword = () => {\r\n    const {\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    if (password && confirmedPassword\r\n        && password === confirmedPassword) {\r\n      if (password.length < 8) {\r\n        this.setState({\r\n          errorMsg: `Use 8 or more characters`\r\n        });\r\n        return;\r\n      }\r\n\r\n      const user = {\r\n        password: password\r\n      }\r\n\r\n      axios.post('/auth/login/changepassword', user)\r\n        .then(res => {\r\n          const loginResponse = res.data || {};\r\n          if (loginResponse.error) {\r\n            this.setState({\r\n              errorMsg: loginResponse.error\r\n            });\r\n          } else {\r\n            this.props.history.push('/workspace/dashboard');\r\n          }\r\n        });\r\n    } else {\r\n      this.setState({\r\n        errorMsg: `Those passwords didn't match`\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const titleStyle = {\r\n      fontSize: '22px',\r\n      textAlign: 'center',\r\n      fontWeight: 'bold',\r\n      marginBottom: '15px'\r\n    }\r\n\r\n    const tipStyle = {\r\n      fontWeight: 'bold',\r\n      marginBottom: '5px',\r\n      fontSize: '15px'\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div style={titleStyle}>Change password</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <div className=\"long-panel-body\">\r\n            <div className=\"form-panel\">\r\n              <div style={tipStyle}>* Use 8 or more characters</div>\r\n              <label>New password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n              <label>Confirm password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"confirmedPassword\" \r\n                value={this.state.confirmedPassword}\r\n                onChange={this.handleInputChange} />\r\n              <button className=\"button login-button\" onClick={this.changePassword}>Confirm</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ChangeTempPassword);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      modalClass = '',\r\n      title,\r\n      children\r\n    } = this.props;\r\n\r\n    const modalStatus = show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={`modal-panel ${modalClass}`}>\r\n          <div className=\"model-header row\">\r\n            <div className=\"model-title\">{title}</div>\r\n            <button className=\"model-close-button icon-button\" onClick={() => this.props.onClose()}>\r\n              <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          <div className='modal-body'>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Toast.css';\r\n\r\nclass Toast extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showToast: false,\r\n      message: ''\r\n    };\r\n\r\n    Toast._toastRef = this;\r\n  }\r\n\r\n  show = (message) => {\r\n    this.setState({ \r\n      showToast: true,\r\n      message: message\r\n    }, () => {\r\n      setTimeout(() => {\r\n        this.hide();\r\n      }, 3500);\r\n    });\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({ \r\n      showToast: false,\r\n      message: ''\r\n    });\r\n  }\r\n\r\n  static show = (message) => {\r\n    Toast._toastRef.show(message);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showToast,\r\n      message\r\n    } = this.state;\r\n\r\n    const toastStatus = showToast ? 'display-block' : 'display-none';\r\n\r\n    return (\r\n      <div className={`toast-container ${toastStatus}`}>\r\n        <button className=\"button\" onClick={this.hide}>X</button>\r\n        <div>\r\n          {message}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toast;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport './Datasource.css';\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      showUpdatePassword: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataSources();\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      driverClassName,\r\n      username,\r\n      password,\r\n      name,\r\n      ping,\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      driverClassName: driverClassName,\r\n      username: username,\r\n      name: name,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword && password) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } \r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        Toast.show(result);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        driverClassName: ds.driverClassName,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/jdbcdatasource/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (datasource) => {\r\n    this.setState({\r\n      objectToDelete: datasource,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  clearSearch = () => {\r\n    this.setState({\r\n      searchValue: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      showConfirmDeletionPanel,\r\n      searchValue,\r\n      id,\r\n      jdbcDataSources = [],\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const jdbcDataSourceItems = [];\r\n    for (let i = 0; i < jdbcDataSources.length; i++) {\r\n      const ds = jdbcDataSources[i];\r\n      const name = ds.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        jdbcDataSourceItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {name}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.ping(ds.id)}>\r\n                  <FontAwesomeIcon icon=\"plug\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchValue\"\r\n            value={this.state.searchValue}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Search...\"\r\n            style={{width: '200px'}}\r\n            />\r\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New datasource\r\n          </button>\r\n          </div>\r\n        <div className=\"table-panel\">\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Name <span className=\"required\">*</span></label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Connection Url</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label>Driver class name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"driverClassName\" \r\n              value={this.state.driverClassName}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            { mode === 'Edit' ? \r\n              (\r\n                <div style={{margin: '3px 0px 8px 0px'}}>\r\n                  <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n                </div>\r\n              ) : null\r\n            }\r\n            { mode === 'New' || showUpdatePassword ? \r\n              (\r\n                <div>\r\n                  <label>Password</label>\r\n                  <input \r\n                    type=\"password\" \r\n                    name=\"password\" \r\n                    value={this.state.password}\r\n                    onChange={this.handleInputChange} />\r\n                </div>\r\n              ) : null\r\n            }\r\n\r\n            <label>Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} />\r\n            <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","import React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPalette: false\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      showPalette: !prevState.showPalette\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      showPalette: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    const rgb = color.rgb;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    this.props.onChange(rgba);\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: this.props.value\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: '2'\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.showPalette && (\r\n          <div style={popover}>\r\n            <div style={cover} onClick={this.handleClose} />\r\n            <ChromePicker color={this.props.value} onChange={this.handleChange} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    const {\r\n      name,\r\n      checked\r\n    } = this.props;\r\n\r\n    this.props.onChange(name, !checked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      checked\r\n    } = this.props;\r\n\r\n    const checkmarkBoxBgColor = checked ? '#000000' : '#FFFFFF';\r\n    const checkmarkBoxStyle = {\r\n      backgroundColor: checkmarkBoxBgColor\r\n    };\r\n\r\n    return (\r\n      <div className=\"checkbox-container\" onClick={this.toggle}>\r\n        <div className=\"checkbox-checkmark\">\r\n          <div className=\"checkbox-checkmark-box\" style={checkmarkBoxStyle}>\r\n          </div>\r\n        </div>\r\n        <div className=\"checkbox-label\">{value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};\r\n\r\nexport const jsonToArray = (json) => {\r\n  let array;\r\n  try {\r\n    array = JSON.parse(json);\r\n  } catch(e) {\r\n    array = [];\r\n  }\r\n  return array;\r\n}\r\n","import * as Util from '../api/Util';\r\n\r\nconst CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOptionTemplate = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      type: 'scroll',\r\n      orient: 'vertical',\r\n      data: legend,\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['40%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport const getPieOption = (queryResultData, pieKey, pieValue) => {\r\n  let legend = [];\r\n  let series = [];\r\n  for (let i = 0; i < queryResultData.length; i++) {\r\n    const row = queryResultData[i];\r\n    legend.push(row[pieKey]);\r\n    series.push({\r\n      name: row[pieKey],\r\n      value: row[pieValue]\r\n    });  \r\n  }\r\n  return getPieOptionTemplate(legend, series);\r\n}\r\n","/**\r\n * Constants\r\n */\r\nexport const CHART = 'chart';\r\nexport const FILTER = 'filter';\r\nexport const WIDGET_TYPES = [CHART, FILTER];\r\n\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\r\n\r\nexport const SYS_ROLE_ADMIN = 'admin';\r\nexport const SYS_ROLE_DEVELOPER = 'developer';\r\nexport const SYS_ROLE_VIEWER = 'viewer';\r\n\r\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport './TableWidget.css';\r\n\r\nclass TableWidget extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  goToLink = (link) => {\r\n    this.props.onTableTdClick(link);\r\n  }\r\n\r\n  render() {   \r\n    const {\r\n      data = [],\r\n      columns = [],\r\n      drillThrough = [],\r\n      error\r\n    } = this.props;\r\n\r\n    const columnHeaders = [];\r\n    columns.forEach(column => {\r\n      const columnName = column.name;\r\n      const header = {\r\n        Header: columnName,\r\n        accessor: columnName\r\n      };\r\n      if (drillThrough.length > 0) {\r\n        const index = drillThrough.findIndex(d => d.columnName === columnName);\r\n        if (index !== -1) {\r\n          const dashboardId = drillThrough[index].dashboardId;\r\n          header.Cell = (props => \r\n            <span className=\"link-label\" \r\n              onClick={() => this.goToLink(`/workspace/dashboard/${dashboardId}?${columnName}=${props.value}`)}>\r\n              {props.value}\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n\r\n      columnHeaders.push(header);\r\n    });\r\n\r\n    if (error) {\r\n      return (\r\n        <div>\r\n          {error}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ReactTable\r\n        data={data}\r\n        columns={columnHeaders}\r\n        defaultPageSize={10}\r\n        previousText={'Prev'}\r\n        nextText={'Next'}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableWidget;\r\n","import React from 'react';\r\nimport Checkbox from './Checkbox';\r\nimport './Slicer.css';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n    searchValue: ''\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    if (searchValue) {\r\n      const result = [];\r\n      const { checkBoxes } = this.props;\r\n      for (let i = 0; i < checkBoxes.length; i++) {\r\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\r\n          result.push(checkBoxes[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n\r\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      checkBoxes = []\r\n    } = this.props;\r\n    const checkBoxItems = checkBoxes.map((box, index) => \r\n      <Checkbox \r\n        key={index} \r\n        name={box.value} \r\n        value={box.value} \r\n        checked={box.isChecked} \r\n        onChange={this.handleCheckBoxChange} \r\n      />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.toggleSelectAll}>Select All {this.state.isSelectAll}</button>\r\n        <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.searchValue}\r\n            onChange={this.handleSearchValueChange}\r\n            placeholder=\"Search...\"\r\n          />\r\n        \r\n        <div className=\"slicer-body\">\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\nimport TableWidget from './TableWidget';\r\nimport Slicer from \"./Slicer\";\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough || []; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        const index = drills.findIndex(d => d.columnName === header);\r\n        if (index !== -1) {\r\n          const dashboardId = drills[index].dashboardId;\r\n          this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  onTableTdClick = (link) => {\r\n    this.props.history.push(link);\r\n  }\r\n\r\n  onSlicerChange = (widgetId, checkBoxes) => {\r\n    const data = {\r\n      checkBoxes: checkBoxes\r\n    };\r\n    this.props.onWidgetFilterInputChange(widgetId, data);\r\n  }\r\n\r\n  onSingleValueChange = (widgetId, event) => {\r\n    const value = event.target.value;\r\n    const data = {\r\n      value: value\r\n    };\r\n    this.props.onWidgetFilterInputChange(widgetId, data);\r\n  }\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      id,\r\n      type,\r\n      chartType,\r\n      filterType,\r\n      queryResult = {},\r\n      drillThrough,\r\n      data = {},\r\n      checkBoxes,\r\n      value\r\n    } = this.props;\r\n\r\n    const queryResultData = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    let widgetItem = (<div></div>);\r\n    if (type === Constants.CHART) {\r\n      if (chartType === Constants.TABLE) {\r\n        widgetItem = (\r\n          <TableWidget\r\n            data={queryResultData}\r\n            columns={columns}\r\n            error={error}\r\n            drillThrough={drillThrough}\r\n            onTableTdClick={this.onTableTdClick}\r\n          />\r\n        );\r\n      } else if (chartType === Constants.PIE) {\r\n        const { \r\n          pieKey,\r\n          pieValue\r\n        } = data;\r\n        const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\r\n        widgetItem = (\r\n          <ReactEcharts \r\n            option={chartOption}   \r\n            className=\"echarts\"\r\n            onEvents={onChartEvents}  \r\n          />\r\n        );\r\n      } \r\n    } else if (type === Constants.FILTER) {\r\n      if (filterType === Constants.SLICER) {\r\n        widgetItem = (\r\n          <Slicer \r\n            filterId={id} \r\n            checkBoxes={checkBoxes} \r\n            onChange={this.onSlicerChange} \r\n          />\r\n        );\r\n      } else if (filterType === Constants.SINGLE_VALUE) {\r\n        widgetItem = (\r\n          <input \r\n            type=\"text\"  \r\n            value={value}\r\n            onChange={(event) => this.onSingleValueChange(id, event)} \r\n          />\r\n        );\r\n      }\r\n    }\r\n    \r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      title,\r\n      isEditMode,\r\n      style = {}\r\n    } = this.props;\r\n\r\n    const { \r\n      showBorder = false,\r\n      showTitle = true\r\n    } = style;\r\n\r\n    const borderStyle = showBorder ? '2px solid #4b4f56' : '2px solid #FFFFFF';\r\n\r\n    let styles = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: 1,\r\n      border: borderStyle\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {title}\r\n\r\n          { isEditMode ? (\r\n            <div className=\"float-right\" style={{marginRight: '20px'}}>\r\n              <div className=\"inline-block\" onClick={() => this.editWidget(id)}>\r\n                <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n              </div>\r\n              <div className=\"inline-block\" onClick={() => this.removeWidget(id)}>\r\n                <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid-box-file-button-group\">\r\n              <div className=\"inline-block\" onClick={() => this.exportJson(id)}>\r\n                <FontAwesomeIcon icon=\"file-export\" fixedWidth />\r\n              </div>\r\n              \r\n              <div className=\"inline-block\" onClick={() => this.exportCsv(id)}>\r\n                <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { isEditMode && (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} />\r\n        )}\r\n\r\n        { isEditMode && (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} />\r\n        )}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(GridItem);","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      backgroundColor,\r\n      widgets = [],\r\n      showGridlines\r\n    } = this.props;\r\n\r\n    let style = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      backgroundColor: backgroundColor\r\n    };\r\n\r\n    if (showGridlines) {\r\n      style.backgroundSize = '15px 15px';\r\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n        onWidgetFilterInputChange={this.props.onWidgetFilterInputChange}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={style} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ColorPicker from './ColorPicker';\r\nimport Checkbox from './Checkbox';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\nimport Modal from '../components/Modal';\r\nimport * as Constants from '../api/Constants';\r\n\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      snapToGrid: false,\r\n      showGridlines: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  resizeGrid = (viewWidth) => {\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n\r\n    const gridWidth = viewWidth - 10;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return Math.round(num * gridWidth / BASE_WIDTH);\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Math.round(num * BASE_WIDTH / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, viewWidth) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get(`/ws/widget/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(viewWidth);\r\n          this.queryFilters();\r\n          this.queryCharts();\r\n        });\r\n      });\r\n  }\r\n \r\n  queryCharts() {\r\n    const filterParams = this.getFilterParams();\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const {\r\n        id,\r\n        type,\r\n      } = widgets[i];\r\n      if (type === Constants.CHART) {\r\n        this.queryChart(id, filterParams);\r\n      }\r\n    }\r\n  }\r\n\r\n  queryFilters() {\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const {\r\n        id,\r\n        type,\r\n        filterType\r\n      }  = widgets[i];\r\n      if (type === Constants.FILTER) {\r\n        this.queryFilter(id, filterType);\r\n      }\r\n    }\r\n  }\r\n\r\n  queryChart(widgetId, filterParams) {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    axios.post(`/ws/jdbcquery/widget/${widgetId}`, params)\r\n      .then(res => {\r\n        const queryResult = res.data;\r\n        const index = widgets.findIndex(w => w.id === queryResult.id);\r\n        const newWidgets = [...widgets];\r\n        newWidgets[index].queryResult = queryResult;\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n\r\n  queryFilter(widgetId, filterType) {\r\n    const { widgets } = this.state;\r\n    if (filterType === Constants.SLICER) {\r\n      axios.post(`/ws/jdbcquery/widget/${widgetId}`, [])\r\n        .then(res => {\r\n          const queryResult = res.data;\r\n          const queryResultData = Util.jsonToArray(queryResult.data);\r\n          const checkBoxes = [];\r\n          for (let i = 0; i < queryResultData.length; i++) {\r\n            const values = Object.values(queryResultData[i]);\r\n            for (const val of values) {\r\n              checkBoxes.push({\r\n                value: val,\r\n                isChecked: false\r\n              });\r\n            }\r\n          }\r\n          const index = widgets.findIndex(w => w.id === queryResult.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = queryResult;\r\n          newWidgets[index].checkBoxes = checkBoxes;\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    } else if (filterType === Constants.SINGLE_VALUE) {\r\n      /*\r\n        const values = Object.values(queryResultData);\r\n        let value = '';\r\n        for (const val of values) {\r\n          value = val;\r\n          break;\r\n        }\r\n        newFilters[index].value = value;\r\n      */\r\n      const index = widgets.findIndex(w => w.id === widgetId);\r\n      const newWidgets = [...widgets];\r\n      newWidgets[index].value = '';\r\n      this.setState({\r\n        widgets: newWidgets\r\n      });\r\n    }\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    this.setState({\r\n      [name]: isChecked\r\n    });\r\n  }\r\n\r\n  handleHeightChange = (event) => {\r\n    this.props.onHeightChange(event.target.value);\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    this.props.onBackgroundColorChange(color);\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete\r\n    } = this.state;\r\n    const widgetId = objectToDelete;\r\n    axios.delete(`/ws/widget/${widgetId}`)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (widgetId) => {\r\n    this.setState({\r\n      objectToDelete: widgetId,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  onWidgetFilterInputChange = (widgetId, data) => {\r\n    const { \r\n      widgets = []\r\n    } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widgetId);\r\n    const newWidgets = [...widgets];\r\n    const widget = widgets[index];\r\n    if (widget.filterType === Constants.SLICER) {\r\n      const {\r\n        checkBoxes\r\n      } = data;\r\n      newWidgets[index].checkBoxes = checkBoxes;\r\n    } else if (widget.filterType === Constants.SINGLE_VALUE) {\r\n      const {\r\n        value\r\n      } = data;\r\n      newWidgets[index].value = value;\r\n    }\r\n\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });   \r\n  }\r\n\r\n  /**\r\n   * FIXME: optimize it. No need to calculate this every time.\r\n   */\r\n  getFilterParams = () => {\r\n    const { \r\n      widgets = []\r\n    } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      if (widget.type === Constants.FILTER) {\r\n        const { filterType } = widget;\r\n        const filterParam = {};\r\n        if (filterType === Constants.SLICER) {\r\n          const { \r\n            checkBoxes = []\r\n          } = widget;\r\n          const paramValues = [];\r\n          for (let j = 0; j < checkBoxes.length; j++) {\r\n            const checkBox = checkBoxes[j];\r\n            if (checkBox.isChecked) {\r\n              paramValues.push(checkBox.value);\r\n            }\r\n          }\r\n          filterParam.value = paramValues;\r\n          if (paramValues.length === checkBoxes.length) {\r\n            filterParam.remark = 'select all';\r\n          }\r\n        } else if (filterType === Constants.SINGLE_VALUE) {\r\n          filterParam.value = widget.value;\r\n        }\r\n        filterParam.param = widget.data.queryParameter;\r\n        filterParam.type = widget.filterType;\r\n        filterParams.push(filterParam);\r\n      }\r\n    }\r\n    return filterParams;\r\n  }\r\n\r\n  render() {\r\n    const { widgetViewWidth } = this.props;\r\n    const style = {\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {this.props.isEditMode && (\r\n          <div className=\"dashboard-attribute-edit-panel\">\r\n            <div className=\"inline-block\">Height:</div>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.props.height}\r\n              onChange={this.handleHeightChange} \r\n              className=\"inline-block\" \r\n              style={{width: '200px'}}\r\n              />\r\n\r\n            <div>\r\n              Background Color\r\n              <ColorPicker value={this.props.backgroundColor} onChange={this.onBackgroundColorChange} />\r\n            </div>\r\n\r\n            <Checkbox name=\"snapToGrid\" value=\"Snap to grid\" checked={this.state.snapToGrid} onChange={this.handleCheckBoxChange} />\r\n            <Checkbox name=\"showGridlines\" value=\"Show gridlines\" checked={this.state.showGridlines} onChange={this.handleCheckBoxChange} />\r\n  \r\n          </div>\r\n        )}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          backgroundColor={this.props.backgroundColor}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.openConfirmDeletionPanel} \r\n          onWidgetFilterInputChange={this.onWidgetFilterInputChange}\r\n        />\r\n        \r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete this widget?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","import React from 'react';\r\nimport './Tabs.css';\r\n\r\nclass Tabs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const activeTab = this.props.activeTab;\r\n    this.setState({\r\n      activeTab: activeTab\r\n    });\r\n  }\r\n\r\n  handleTabClick = (title) => {\r\n    this.setState({\r\n      activeTab: title\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children\r\n    } = this.props;\r\n\r\n    const {\r\n      activeTab\r\n    } = this.state;\r\n\r\n    const tabHeaders = [];\r\n    let tabContent = null;\r\n    for (let i = 0; i < children.length; i++) {\r\n      if (children[i]) {\r\n        const title = children[i].props.title;\r\n        let active = '';\r\n        if (title === activeTab) {\r\n          active = 'tab-header-active';\r\n          tabContent = children[i].props.children;\r\n        }\r\n        \r\n        tabHeaders.push(\r\n          <li className={`tab-header-item ${active}`} key={i} onClick={() => this.handleTabClick(title)}>{title}</li>\r\n        );\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className=\"tab-container\">\r\n        <ul className=\"tab-header\">\r\n          {tabHeaders}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {tabContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Select extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    optionDisplay: PropTypes.string,\r\n    optionValue: PropTypes.string,\r\n    preloadOneEmpty: PropTypes.bool\r\n  };\r\n\r\n  handleOptionChange = (event) => {\r\n    const name = this.props.name;\r\n    const value = event.target.value;\r\n    this.props.onChange(name, value);\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      value,\r\n      options = [],\r\n      optionValue,\r\n      optionDisplay,\r\n      preloadOneEmpty = true\r\n    } = this.props;\r\n\r\n    const optionList = [];\r\n    if (preloadOneEmpty) {\r\n      optionList.push(\r\n        <option value=\"\" key=\"\"></option>\r\n      );\r\n    }\r\n    \r\n    options.forEach((option, index) => {\r\n      let value;\r\n      let display;\r\n      if (optionValue && optionDisplay) {\r\n        // The options contain objects.\r\n        value = option[optionValue];\r\n        display = option[optionDisplay];\r\n      } else {\r\n        // The options contain string or number.\r\n        value = option;\r\n        display = option;\r\n      }\r\n      \r\n      optionList.push(\r\n        <option value={value} key={index}>{display}</option>\r\n      ) \r\n    });\r\n\r\n    return (\r\n      <select value={value} onChange={this.handleOptionChange}>\r\n        {optionList}\r\n      </select>\r\n    )\r\n  };\r\n}\r\n\r\nexport default Select;","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport TableWidget from './TableWidget';\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nimport './WidgetEditPanel.css';\r\n\r\nimport Checkbox from './Checkbox';\r\nimport Tabs from '../components/Tabs';\r\nimport Select from '../components/Select';\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      title: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: {},\r\n      type: Constants.CHART,\r\n      filterType: Constants.SINGLE_VALUE,\r\n      chartType: Constants.TABLE,\r\n      style: {\r\n        showBorder: false,\r\n        showTitle: true\r\n      },\r\n      queryParameter: '',\r\n      drillThrough: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: '',\r\n      pieKey: '',\r\n      pieValue: '',\r\n      chartOption: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const widget = res.data;\r\n          const {\r\n            type,\r\n            chartType,\r\n            filterType,\r\n            drillThrough\r\n          } = widget;\r\n          if (type === Constants.CHART) {\r\n            this.setState({\r\n              chartType: chartType,\r\n              drillThrough: drillThrough\r\n            });\r\n\r\n            if (chartType === Constants.PIE) {\r\n              const {\r\n                pieKey,\r\n                pieValue\r\n              } = widget.data;\r\n              this.setState({\r\n                pieKey: pieKey,\r\n                pieValue: pieValue\r\n              });\r\n            }\r\n          } else if (type === Constants.FILTER) {\r\n            const {\r\n              queryParameter\r\n            } = widget.data;\r\n            this.setState({\r\n              filterType: filterType,\r\n              queryParameter: queryParameter\r\n            });\r\n            if (filterType === Constants.SLICER) {\r\n\r\n            } else if (filterType === Constants.SINGLE_VALUE) {\r\n\r\n            }\r\n          }\r\n          \r\n          this.setState({\r\n            widgetId: widgetId,\r\n            title: widget.title,\r\n            x: widget.x,\r\n            y: widget.y,\r\n            width: widget.width,\r\n            height: widget.height,\r\n            sqlQuery: widget.sqlQuery,\r\n            type: type,\r\n            jdbcDataSourceId: widget.jdbcDataSourceId,\r\n            style: widget.style\r\n          }, () => {\r\n            this.runQuery();\r\n          });\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const style = {...this.state.style};\r\n    style[[name]] = isChecked;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      widgetId,\r\n      title,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      type,\r\n      style\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      title: title,\r\n      dashboardId: this.props.dashboardId,\r\n      type: type,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      style: style\r\n    }\r\n\r\n    if (type === Constants.CHART) {\r\n      const {\r\n        chartType,\r\n        drillThrough\r\n      } = this.state;\r\n      widget.drillThrough = drillThrough;\r\n      widget.chartType = chartType;\r\n\r\n      if (chartType === Constants.TABLE) {\r\n\r\n      } else if (chartType === Constants.PIE) {\r\n        const {\r\n          pieKey,\r\n          pieValue\r\n        } = this.state;\r\n        widget.data = {\r\n          pieKey: pieKey,\r\n          pieValue: pieValue\r\n        }\r\n      }\r\n    } else if (type === Constants.FILTER) {\r\n      const  {\r\n        filterType,\r\n        queryParameter\r\n      } = this.state;\r\n      widget.filterType = filterType;\r\n      widget.data = {\r\n        queryParameter: queryParameter\r\n      }\r\n      if (filterType === Constants.SLICER) {\r\n\r\n      } else if (filterType === Constants.SINGLE_VALUE) {\r\n\r\n      }\r\n    }\r\n    \r\n\r\n    if (widgetId === null) {\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          queryResult: result\r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = () => {\r\n    const { \r\n      drillThrough,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const index = drillThrough.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrillThrough = [...drillThrough];\r\n      newDrillThrough.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drillThrough: newDrillThrough\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill) => {\r\n    const { drillThrough } = this.state;\r\n    const index = drillThrough.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrillThrough = [...drillThrough];\r\n      newDrillThrough.splice(index, 1);\r\n      this.setState({\r\n        drillThrough: newDrillThrough\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = () => {\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        pieKey, \r\n        pieValue, \r\n        queryResult = {}\r\n      } = this.state;\r\n      console.log(\"generateChart\", pieKey, pieValue);\r\n      const data = Util.jsonToArray(queryResult.data);\r\n      const chartOption = EchartsApi.getPieOption(data, pieKey, pieValue);\r\n      this.setState({\r\n        chartOption: chartOption\r\n      });\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      queryResult = {},\r\n    } = this.state;\r\n    const columns = queryResult.columns || [];\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        chartOption,\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n\r\n      chartPreview = (\r\n        <div>\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label>Aggr Key (string)</label>\r\n          <Select\r\n            name={'pieKey'}\r\n            value={pieKey}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n          />\r\n\r\n\r\n          <label>By Aggr Value (number)</label>\r\n          <Select\r\n            name={'pieValue'}\r\n            value={pieValue}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n          />\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      type,\r\n      queryResult,\r\n      jdbcDataSources = [],\r\n      drillThrough = [],\r\n      drillDashboards = []\r\n    } = this.state;\r\n\r\n    const data = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    const drillItems = drillThrough.map(drill =>\r\n      <div key={drill.columnName}>\r\n        <div>Column: {drill.columnName}</div>\r\n        <div>Dashboard: {drill.dashboardId}</div>\r\n        <button onClick={() => this.removeDrillThrough(drill)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const columnItems = columns.map(col =>\r\n      <div key={col.name}>{col.name} {col.dataType}</div>\r\n    );\r\n\r\n    const showQueryTab = type === Constants.CHART || (type === Constants.FILTER && this.state.filterType === Constants.SLICER);\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        <Select\r\n          name={'type'}\r\n          value={type}\r\n          onChange={this.handleOptionChange}\r\n          options={Constants.WIDGET_TYPES}\r\n          preloadOneEmpty={false}\r\n        />\r\n        \r\n        <div className=\"form-panel\">\r\n          <Tabs activeTab=\"basic\">\r\n            <div title=\"basic\">\r\n              <label>Title</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"title\" \r\n                value={this.state.title}\r\n                onChange={this.handleInputChange} \r\n              />\r\n\r\n              <Checkbox name=\"showBorder\" value=\"Show border\" checked={this.state.style.showBorder} onChange={this.handleCheckBoxChange} />\r\n              <Checkbox name=\"showTitle\" value=\"Show title\" checked={this.state.style.showTitle} onChange={this.handleCheckBoxChange} />\r\n            </div>\r\n\r\n            { type === Constants.FILTER && (  \r\n              <div title=\"Filter\">\r\n                <label>Filter Options</label>\r\n                <Select\r\n                  name={'filterType'}\r\n                  value={this.state.filterType}\r\n                  onChange={this.handleOptionChange}\r\n                  options={Constants.FILTER_TYPES}\r\n                  preloadOneEmpty={false}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            { showQueryTab && (\r\n              <div title=\"Query\">\r\n                <label>DataSource</label>\r\n                <Select\r\n                  name={'jdbcDataSourceId'}\r\n                  value={this.state.jdbcDataSourceId}\r\n                  onChange={this.handleIntegerOptionChange}\r\n                  options={jdbcDataSources}\r\n                  optionDisplay={'name'}\r\n                  optionValue={'id'}\r\n                  />\r\n              \r\n                <label>SQL Query</label>\r\n                <AceEditor\r\n                  style={{ marginTop: '8px' }}\r\n                  value={this.state.sqlQuery}\r\n                  mode=\"mysql\"\r\n                  theme=\"xcode\"\r\n                  name=\"blah2\"\r\n                  onChange={this.handleAceEditorChange}\r\n                  height={'300px'}\r\n                  width={'100%'}\r\n                  fontSize={15}\r\n                  showPrintMargin={false}\r\n                  showGutter={true}\r\n                  highlightActiveLine={true}\r\n                  setOptions={{\r\n                    showLineNumbers: true,\r\n                    tabSize: 2\r\n                  }}\r\n                />\r\n\r\n                <div className=\"mt-3\">\r\n                  <button className=\"button\" onClick={this.runQuery}>Run Query</button>\r\n                </div>\r\n\r\n                <label>Result</label>\r\n                <TableWidget\r\n                  data={data}\r\n                  columns={columns}\r\n                  error={error}\r\n                />\r\n\r\n                <label>Columns Mapping</label>\r\n                <div>\r\n                  {columnItems}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { type === Constants.CHART && (\r\n              <div title=\"Chart\">\r\n                <label>Chart Options</label>\r\n                <Select\r\n                  name={'chartType'}\r\n                  value={this.state.chartType}\r\n                  onChange={this.handleOptionChange}\r\n                  options={Constants.CHART_TYPES}\r\n                  preloadOneEmpty={false}\r\n                />\r\n                <label>Preview</label>\r\n                {this.renderChartPreview()}  \r\n              </div>\r\n            )}\r\n            \r\n            { type === Constants.CHART && (\r\n              <div title=\"Drill through\">\r\n                <label>Drill through</label>\r\n                <label>Column</label>\r\n                <Select\r\n                  name={'drillColumnName'}\r\n                  value={this.state.drillColumnName}\r\n                  options={columns}\r\n                  onChange={this.handleOptionChange}\r\n                  optionDisplay={'name'}\r\n                  optionValue={'name'}\r\n                />\r\n\r\n                <label>Dashboard</label>\r\n                <Select\r\n                  name={'drillDashboardId'}\r\n                  value={this.state.drillDashboardId}\r\n                  options={drillDashboards}\r\n                  onChange={this.handleIntegerOptionChange}\r\n                  optionDisplay={'name'}\r\n                  optionValue={'id'}\r\n                />\r\n                <div>\r\n                  {drillItems}\r\n                </div>\r\n                <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\r\n              </div>\r\n            )}\r\n\r\n            { type === Constants.FILTER && (\r\n              <div title=\"Query parameter\">\r\n                <label>Parameter</label>\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"queryParameter\" \r\n                  value={this.state.queryParameter}\r\n                  onChange={this.handleInputChange} \r\n                />\r\n              </div>\r\n            )}\r\n\r\n          </Tabs>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\n\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      isEditMode: false,\r\n      isReadOnly: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      refreshInterval: 15,\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      style: {},\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    console.log('DashboardEditView - componentDidMount', dashboardId);\r\n\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    for(let pair of params.entries()) {\r\n      console.log(pair[0]+ ', '+ pair[1]); \r\n    } \r\n\r\n    const widgetViewWidth = this.getPageWidth();\r\n    this.setState({\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const result = res.data;\r\n            this.setState({\r\n              dashboardId: result.id,\r\n              name: result.name,\r\n              style: result.style\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = () => {\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    const dashboardName = params.get('name');\r\n\r\n    const widgetViewWidth = this.getPageWidth();\r\n\r\n    this.setState({\r\n      isReadOnly: true,\r\n      name: dashboardName,\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            style: result.style\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth - 40;\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const { refreshInterval } = this.state;\r\n      let interval = parseInt(refreshInterval, 10) || 15;\r\n      interval = interval < 1 ? 1 : interval;\r\n      const timerId = setInterval(() => {\r\n        this.queryWidgets();\r\n        this.updateLastRefreshed();\r\n      }, interval * 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    this.refreshWidgetView();\r\n    this.updateLastRefreshed();\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n  } \r\n\r\n  queryWidgets = () => {\r\n    this.widgetViewPanel.current.queryCharts();\r\n  }\r\n\r\n  updateLastRefreshed = () => {\r\n    const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\r\n    this.setState({\r\n      lastRefreshed: now\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    console.log('save');\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      style\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      style: style\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.widgetViewPanel.current.saveWidgets();\r\n\r\n    this.props.onDashboardSave(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    this.widgetEditPanel.current.fetchWidget(widgetId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/workspace/dashboard/view?name=${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onTableCellClick = () => {\r\n    this.props.history.push(`/workspace/dashboard/drill?name=&`);\r\n  }\r\n\r\n  onHeightChange = (height) => {\r\n    const style = {...this.state.style};\r\n    style.height = height;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    const style = {...this.state.style};\r\n    style.backgroundColor = color;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {},\r\n    } = this.state;\r\n    const dashboardId = objectToDelete.id;\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        this.props.onDashboardDelete(dashboardId);\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  deleteDashboard = () => {\r\n    const { \r\n      dashboardId,\r\n      name\r\n    } = this.state;\r\n    const dashboard = {\r\n      id: dashboardId,\r\n      name: name\r\n    }\r\n    this.openConfirmDeletionPanel(dashboard);\r\n  }\r\n\r\n  openConfirmDeletionPanel = (dashboard) => {\r\n    this.setState({\r\n      objectToDelete: dashboard,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      lastRefreshed,\r\n      isEditMode,\r\n      isReadOnly\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel = null;\r\n    const controlButtons = (\r\n      <React.Fragment>\r\n        <span className=\"mr-3\">Last refreshed: {lastRefreshed}</span>\r\n        { autoRefreshStatus === 'OFF' && (\r\n          <input \r\n            type=\"text\" \r\n            name=\"refreshInterval\" \r\n            value={this.state.refreshInterval}\r\n            onChange={this.handleInputChange}\r\n            className=\"inline-block\" \r\n            style={{width: '50px'}}\r\n          />\r\n        )}\r\n        <button className=\"button square-button mr-3\" onClick={this.toggleAutoRefresh}>\r\n          {\r\n            autoRefreshStatus === 'ON' ? \r\n            (\r\n              <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\r\n            ) : \r\n            (\r\n              <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\r\n            )\r\n          }\r\n        </button>\r\n        <button className=\"button square-button\" onClick={this.refresh}>\r\n          <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\r\n        </button>\r\n        <button className=\"button mr-3\" onClick={this.queryWidgets}>Apply Filters</button>\r\n      </React.Fragment>\r\n    );\r\n\r\n    if (!isReadOnly) {\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button mr-3\" onClick={this.cancelEdit}>Cancel</button>\r\n            <button className=\"button mr-3\" onClick={this.save}>Save</button>\r\n            <button className=\"button mr-3\" onClick={this.deleteDashboard}>Delete</button>\r\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            {controlButtons}\r\n            <button className=\"button square-button mr-3\" onClick={this.fullScreen}>\r\n              <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={this.edit}>Edit</button>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      fullScreenButtonPanel = controlButtons;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-menu-panel row\">\r\n          <div className=\"float-left\">\r\n            {\r\n              isReadOnly || !isEditMode ?\r\n              (\r\n                <div className=\"dashboard-name\">\r\n                  {this.state.name}\r\n                </div>\r\n              ) :(\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"name\" \r\n                  value={this.state.name}\r\n                  onChange={this.handleInputChange} \r\n                  className=\"dashboard-name\"\r\n                  />\r\n              )\r\n            }\r\n            \r\n          </div>\r\n          <div className=\"float-right\">\r\n            {fullScreenButtonPanel}\r\n            {editButtonPanel}\r\n          </div>\r\n        </div>\r\n\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          isEditMode={this.state.isEditMode}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          onHeightChange={this.onHeightChange}\r\n          onBackgroundColorChange={this.onBackgroundColorChange}\r\n          {...this.state.style}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'dashboard-edit-widget-dialog'} \r\n          title={'Widget Edit'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {this.state.objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\nimport './Dashboard.css';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as Constants from '../api/Constants';\r\n\r\nconst ROUTE_WORKSPACE_DASHBOARD = '/workspace/dashboard/';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      activeDashboardId: 0,\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    const index = pathname.indexOf(ROUTE_WORKSPACE_DASHBOARD);\r\n    if (index !== -1) {\r\n      const activeDashboardId = Number(pathname.substring(index + ROUTE_WORKSPACE_DASHBOARD.length));\r\n      this.setState({\r\n        activeDashboardId: activeDashboardId\r\n      })\r\n    }\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false,\r\n      name: ''\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      style: {\r\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\r\n        backgroundColor: 'rgba(233, 235, 238, 1)'\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.closeEditPanel();\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.setState({\r\n      activeDashboardId: dashboardId\r\n    }, () => {\r\n      this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n    });\r\n  }\r\n\r\n  onDashboardSave = (dashboardId) => {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  onDashboardDelete = (dashboardId) => {\r\n    this.fetchBoards();\r\n    this.setState({\r\n      activeDashboardId: 0\r\n    }, () => {\r\n      this.props.history.push('/workspace/dashboard');\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dashboards = [],\r\n      activeDashboardId,\r\n      searchValue\r\n    } = this.state;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.props;\r\n    const showEdit = sysRole === Constants.SYS_ROLE_VIEWER ? false : true;\r\n\r\n    const dashboardRows = [];\r\n    for (let i = 0; i < dashboards.length; i++) {\r\n      const dashboard = dashboards[i];\r\n      const name = dashboard.name;\r\n      const menuActive = activeDashboardId === dashboard.id ? 'dashboard-menu-item-active' : '';\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        dashboardRows.push(\r\n          (\r\n            <div key={i} className={`dashboard-menu-item ellipsis ${menuActive}`} onClick={() => this.view(dashboard.id)}>\r\n              {name}\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dashboard-sidebar\">\r\n          <div style={{margin: '5px'}}>\r\n            { showEdit && (\r\n                <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\r\n                  <FontAwesomeIcon icon=\"plus\" /> New\r\n                </button>\r\n            )}\r\n            \r\n            <input \r\n              type=\"text\" \r\n              name=\"searchValue\" \r\n              value={this.state.searchValue}\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleInputChange} />\r\n          </div>\r\n          <div>\r\n            {dashboardRows}\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route \r\n            path=\"/workspace/dashboard/:id\" \r\n            render={(props) => \r\n              <DashboardEditView \r\n                key={props.match.params.id} \r\n                onDashboardSave={this.onDashboardSave} \r\n                onDashboardDelete={this.onDashboardDelete} \r\n              />\r\n            } \r\n            />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'small-modal-panel'} \r\n          title={'New'} >\r\n          <div>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              />\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      searchValue: '',\r\n      showUpdatePassword: false,\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: Constants.SYS_ROLE_VIEWER,\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      this.setState({\r\n        id: user.id,\r\n        username: user.username,\r\n        name: user.name,\r\n        tempPassword: '',\r\n        sysRole: user.sysRole,\r\n        userGroups: user.userGroups\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      userGroupId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    if (!username) {\r\n      return;\r\n    }\r\n\r\n    let selectedSysRole = Constants.SYS_ROLE_VIEWER;\r\n    if (Constants.SYS_ROLE_ADMIN === this.props.sysRole) {\r\n      if (sysRole) {\r\n        selectedSysRole = sysRole;\r\n      } else {\r\n        // TODO: throw errors.\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: selectedSysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      if (showUpdatePassword && tempPassword) {\r\n        user.tempPassword = tempPassword;\r\n      }\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/user/' + id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n      });\r\n  }\r\n\r\n  addUserGroup = () => {\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId) => {\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      showUpdatePassword,\r\n      users = [],\r\n      groups = [],\r\n      userGroups = []\r\n    } = this.state;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.props;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const userItems = users.map(user => \r\n      <div key={user.id} className=\"user-card\">\r\n        <p>\r\n          {user.username}\r\n          {user.name}\r\n          {user.sysRole}\r\n          <button className=\"button\" onClick={() => this.openEditPanel(user)}>update</button>\r\n          <button className=\"button\" onClick={() => this.delete(user.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups.length; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups.length; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId}>\r\n                <div>Group: {groups[j].name}</div>\r\n                <button className=\"button\" onClick={() => this.removeUserGroup(groupId)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchValue\"\r\n            value={this.state.searchValue}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Search...\"\r\n            style={{width: '200px'}}\r\n          />\r\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New User\r\n          </button>\r\n        </div>\r\n        <div className=\"row\">\r\n          {userItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'mid-modal-panel'} \r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            { mode === 'Edit' && (\r\n                <div style={{margin: '3px 0px 8px 0px'}}>\r\n                  <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n                </div>\r\n            )}\r\n            { (mode === 'New' || showUpdatePassword) && ( \r\n              <div>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"tempPassword\" \r\n                  value={this.state.tempPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </div>\r\n            )}\r\n            \r\n            <label>System Role</label>\r\n            { Constants.SYS_ROLE_ADMIN === sysRole && (\r\n              <Select\r\n                name={'sysRole'}\r\n                value={this.state.sysRole}\r\n                onChange={this.handleOptionChange}\r\n                options={[Constants.SYS_ROLE_VIEWER, Constants.SYS_ROLE_DEVELOPER]}\r\n              />\r\n            )}\r\n\r\n            { Constants.SYS_ROLE_DEVELOPER === sysRole && (\r\n              <div>{Constants.SYS_ROLE_VIEWER}</div>\r\n            )}\r\n            \r\n            <br/>\r\n            \r\n            <label>Groups</label>\r\n            <Select\r\n              name={'userGroupId'}\r\n              value={this.state.userGroupId}\r\n              onChange={this.handleIntegerOptionChange}\r\n              options={groups}\r\n              optionDisplay={'name'}\r\n              optionValue={'id'}\r\n            />\r\n            <button className=\"button\" onClick={this.addUserGroup}>Add</button>\r\n            <div>\r\n              {userGroupItems}\r\n            </div>\r\n\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      this.setState({\r\n        id: group.id,\r\n        name: group.name,\r\n        groupDashboards: group.groupDashboards\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      groupDashboardId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/group/' + id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n      });\r\n  }\r\n\r\n  addGroupDashboard= () => {\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    if (groupDashboardId) {\r\n      const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n      if (index === -1) {\r\n        const newGroupDashboards = [...groupDashboards];\r\n        newGroupDashboards.push(groupDashboardId);\r\n        this.setState({\r\n          groupDashboards: newGroupDashboards\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId) => {\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const groupItems = groups.map(group => \r\n      <div key={group.id} className=\"group-card\">\r\n        <p>\r\n          {group.name}\r\n          <button className=\"button\" onClick={() => this.openEditPanel(group)}>update</button>\r\n          <button className=\"button\" onClick={() => this.delete(group.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards.length; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards.length; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId}>\r\n                <div>Name: {dashboards[j].name}</div>\r\n                <button className=\"button\" onClick={() => this.removeGroupDashboard(dashboardId)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchValue\"\r\n            value={this.state.searchValue}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Search...\"\r\n            style={{width: '200px'}}\r\n            />\r\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New Group\r\n          </button>\r\n        </div>\r\n        <div className=\"row\">\r\n          {groupItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'mid-modal-panel'} \r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            <label>Dashboards</label>\r\n            <Select\r\n              name={'groupDashboardId'}\r\n              value={this.state.groupDashboardId}\r\n              onChange={this.handleIntegerOptionChange}\r\n              options={dashboards}\r\n              optionDisplay={'name'}\r\n              optionValue={'id'}\r\n            />\r\n            <button className=\"button\" onClick={this.addGroupDashboard}>Add</button>\r\n            <div>\r\n              {groupDashboardItems}\r\n            </div>\r\n            \r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\n\r\nimport User from './User';\r\nimport Group from './Group';\r\nimport Tabs from '../components/Tabs';\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Tabs activeTab=\"Group\">\r\n          <div title=\"Group\">\r\n            <Group />\r\n          </div>\r\n          <div title=\"User\">\r\n            <User {...this.props} />\r\n          </div>\r\n        </Tabs>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const user = res.data;\r\n        this.setState({\r\n          id: user.id,\r\n          username: user.username,\r\n          name: user.name,\r\n          sysRole: user.sysRole,\r\n          apiKey: user.apiKey\r\n        });\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        return;\r\n      }  \r\n\r\n      user.password = password;\r\n    }\r\n\r\n    axios.put('/ws/user/account', user)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>Account</div>\r\n        <div className=\"form-panel\">   \r\n          <label>Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label>System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label>API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button className=\"button\" onClick={this.generateApiKey}>Generate new API Key</button>\r\n          <br/>\r\n\r\n          <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n          {\r\n            showUpdatePassword && (\r\n              <React.Fragment>\r\n                <br/>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label>Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n          )}\r\n\r\n          <br/>\r\n          <button className=\"button\" onClick={this.save}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","\r\nimport React from 'react';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('DashboardFullScreenView', 'componentDidMount');\r\n    this.dashboardEditView.loadViewByDashboardName();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView wrappedComponentRef={comp => (this.dashboardEditView = comp)} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","import React from 'react';\r\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\n\r\nimport Toast from '../components/Toast';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport './Workspace.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data source',\r\n    icon: 'database'\r\n  }, \r\n  {\r\n    link: '/workspace/usermanagement',\r\n    value: 'User Management',\r\n    icon: 'users-cog'\r\n  }\r\n];\r\n\r\nconst ACCOUNT_MENU_LINK = '/workspace/account';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    let link;\r\n    if (pathname.startsWith(ACCOUNT_MENU_LINK)) {\r\n      link = ACCOUNT_MENU_LINK;\r\n    } else {\r\n      const menuItem = MENU_ITEMS.find(m => pathname.startsWith(m.link));\r\n      link = menuItem.link;\r\n    }\r\n\r\n    this.setState({\r\n      currentMenuLink: link,\r\n    });\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  logout = () => {\r\n    axios.get('/auth/logout')\r\n      .then(res => {\r\n        this.props.onLogout();\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n    } = this.state;\r\n    \r\n    console.log('Workspace - render');\r\n\r\n    const {\r\n      username,\r\n      sysRole\r\n    } = this.props;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.link === '/workspace/dashboard');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li key={menu.link} className={active}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"workspace-nav\">  \r\n          <div className=\"workspace-name\">Poli</div>\r\n          <ul className=\"workspace-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div className=\"workspace-account-menu\">\r\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\r\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\r\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\r\n                <span className=\"workspace-nav-menu-text\">{username}</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"workspace-logout-button inline-block\" onClick={this.logout}>\r\n              <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"workspace-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n            <Route exact path=\"/workspace/dashboard/view\" component={DashboardFullScreenView} />\r\n            <Route exact path=\"/workspace/usermanagement\" render={() => <UserManagement {...this.props} />} />\r\n            <Route path=\"/workspace/dashboard\" render={() => <Dashboard {...this.props} />} />\r\n          </Switch>\r\n        </div>\r\n        <Toast />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Workspace);\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, withRouter, Component } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport ChangeTempPassword from './views/ChangeTempPassword';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\n\r\n\r\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      sysRole: '',\r\n      isAuthorizing: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    const search = this.props.location.search;\r\n\r\n    const params = new URLSearchParams(search);\r\n    const apiKey = params.get('apiKey');\r\n\r\n    let currentPath = pathname + search;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      this.setState({\r\n        isAuthorizing: true\r\n      }, () => {\r\n        axios.post('/auth/login/cookie')\r\n          .then(res => {\r\n            const loginResponse = res.data;\r\n            if (loginResponse.error) {\r\n                this.setState({\r\n                  sysRole: '',\r\n                  isAuthorizing: false\r\n                }, () => {\r\n                  this.props.history.push('/login');\r\n                });\r\n              } else {\r\n                this.onLoginSuccess(loginResponse, currentPath);\r\n              }\r\n          });\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n  onLoginSuccess = (loginResponse = {}, pathname = null) => {\r\n    if (loginResponse.tempPassword) {\r\n      this.props.history.push('/changepassword');\r\n    } else {\r\n      this.setState({\r\n        username: loginResponse.username,\r\n        sysRole: loginResponse.sysRole,\r\n        isAuthorizing: false\r\n      }, () => {\r\n        let directUrl = '/workspace/dashboard';\r\n        if (pathname) {\r\n          directUrl = pathname;\r\n        }\r\n        this.props.history.push(directUrl);\r\n      });\r\n    }\r\n  }\r\n\r\n  onLogout = () => {\r\n    this.setState({\r\n      username: '',\r\n      sysRole: '',\r\n      isAuthorizing: false\r\n    }, () => {\r\n      this.props.history.push('/login');\r\n    });\r\n  }\r\n   \r\n  render() {\r\n    const {\r\n      username,\r\n      sysRole,\r\n      isAuthorizing\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (isAuthorizing) {\r\n      return (\r\n        <FontAwesomeIcon icon='cicle-notch' spin={true} size=\"3x\" />\r\n      )\r\n    }\r\n    \r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Login sysRole={sysRole} onLoginSuccess={this.onLoginSuccess} />} />\r\n          <Route path=\"/login\" render={() => <Login sysRole={sysRole} onLoginSuccess={this.onLoginSuccess} />} />\r\n          <Route path=\"/changepassword\" component={ChangeTempPassword} />\r\n          <PrivateRoute \r\n            authenticated={isAuthenticated} \r\n            path='/workspace' \r\n            component={Workspace} \r\n            username={username}\r\n            sysRole={sysRole} \r\n            onLogout={this.onLogout}\r\n          />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} {...rest} />\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}