{"version":3,"sources":["views/Login.js","views/ChangeTempPassword.js","api/WebApi.js","components/Modal.js","components/Toast.js","views/DataSource.js","components/ColorPicker.js","components/Checkbox.js","components/GridDraggable.js","components/GridResizable.js","api/Util.js","api/Constants.js","api/EchartsApi.js","components/TableWidget.js","components/Slicer.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/Tabs.js","components/Select.js","components/WidgetEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/DashboardFullScreenView.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","handleKeyPress","keyCode","login","_this$state","state","username","password","user","axios","post","then","res","loginResponse","data","error","errorMsg","onLoginSuccess","_this2","console","log","react_default","a","createElement","Fragment","className","type","onChange","onKeyDown","onClick","React","Component","withRouter","ChangeTempPassword","changePassword","confirmedPassword","history","push","class","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","concat","onClose","index_es","icon","size","Toast","message","showToast","setTimeout","hide","_toastRef","assertThisInitialized","toastStatus","DataSource","save","showUpdatePassword","id","connectionUrl","driverClassName","ping","ds","put","closeEditPanel","catch","result","clearEditPanel","initialState","openEditPanel","showEditPanel","confirmDelete","_this$state$objectToD","objectToDelete","delete","closeConfirmDeletionPanel","openConfirmDeletionPanel","datasource","showConfirmDeletionPanel","toggleUpdatePassword","prevState","clearSearch","searchValue","jdbcDataSources","webApi","_this$state2","_this$state2$jdbcData","_this$state2$objectTo","mode","jdbcDataSourceItems","_loop","i","includes","key","length","placeholder","style","width","src_components_Modal","rows","margin","ColorPicker","handleClick","showPalette","handleClose","handleChange","color","rgb","rgba","r","g","b","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","Checkbox","toggle","checked","_this$props2","checkmarkBoxStyle","backgroundColor","WIDGET_BORDER","GridDraggable","onMouseDown","preventDefault","gridItemNode","ReactDOM","findDOMNode","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","fixedWidth","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","jsonToArray","json","array","JSON","parse","e","CHART","FILTER","WIDGET_TYPES","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","DEFAULT_DASHBOARD_HEIGHT","CHART_COLORS","getPieOption","queryResultData","pieKey","pieValue","legend","series","row","tooltip","orient","center","radius","getPieOptionTemplate","TableWidget","_this$props$data","_this$props$columns","columns","_this$props$drillThro","drillThrough","columnHeaders","forEach","column","columnName","header","Header","accessor","index","findIndex","d","dashboardId","Cell","href","es","defaultPageSize","previousText","nextText","Slicer","isSelectAll","toggleSelectAll","newIsSelectAll","newCheckBoxes","toConsumableArray","checkBoxes","isChecked","filterId","handleSearchValueChange","indexOf","handleCheckBoxChange","x","_this$props$checkBoxe","checkBoxItems","map","box","src_components_Checkbox","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","instance","handleOriginal","drills","widgetDrillThrough","onChartClick","param","echarts","onChartLegendselectchanged","echart","onSlicerChange","filters","f","newFilters","onSingleValueChange","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","filterType","_this$props$queryResu","queryResult","Util","widgetItem","Constants","src_components_TableWidget","chartOption","EchartsApi","echarts_for_react_lib_default","option","onEvents","src_components_Slicer","isEditMode","_this$props2$style","_style$showBorder","showBorder","borderStyle","styles","border","marginRight","components_GridDraggable","components_GridResizable","GridLayout","_this$props$widgets","widgets","showGridlines","backgroundSize","backgroundImage","boxItems","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","newWidgets","gridWidth","resizeWidgetsToActual","resizeWidgetsToBase","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","filterParams","queryWidgets","handleHeightChange","onHeightChange","onBackgroundColorChange","saveWidgets","stringify","w","applyFilters","_this$state$widgets","filterParam","_widget$checkBoxes","paramValues","j","checkBox","remark","queryParameter","getCharts","splice","queryChart","queryFilter","params","_this3","_arr","values","_i","val","widgetViewWidth","components_ColorPicker","src_components_GridLayout","Tabs","handleTabClick","activeTab","tabHeaders","tabContent","active","Select","handleOptionChange","_this$props$options","options","optionValue","optionDisplay","_this$props$allowEmpt","allowEmpty","optionList","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","_widget$data","sqlQuery","jdbcDataSourceId","runQuery","_x","objectSpread","handleAceEditorChange","newValue","handleIntegerOptionChange","intValue","_this$state3","_this$state4","onSave","queryRequest","addDrillThrough","_this$state5","drillColumnName","drillDashboardId","newDrillThrough","removeDrillThrough","drill","generateChart","_this$state6","_this$state6$queryRes","renderChartPreview","_this$state7","_this$state7$queryRes","chartPreview","_this$state8","components_Select","_this$state9","_this$state9$jdbcData","_this$state9$drillThr","_this$state9$drillDas","drillItems","columnItems","col","dataType","src_components_Tabs","showTitle","react_ace_lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","DashboardEditView","loadViewByDashboardName","url","location","search","dashboardName","URLSearchParams","getPageWidth","isReadOnly","refresh","toggleAutoRefresh","autoRefreshTimerId","clearInterval","refreshInterval","interval","timerId","setInterval","updateLastRefreshed","refreshWidgetView","widgetViewPanel","current","now","Date","toTimeString","replace","lastRefreshed","dashboard","onDashboardSave","edit","cancelEdit","onSaveWidget","showWidgetEditPanel","openWidgetEditPanel","widgetEditPanel","fullScreen","window","open","onTableCellClick","onDashboardDelete","deleteDashboard","jdbcDataSourceOptions","createRef","match","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","editButtonPanel","autoRefreshStatus","fullScreenButtonPanel","controlButtons","toggleFilterViewPanel","openFilterEditPanel","components_WidgetViewPanel","ref","src_components_WidgetEditPanel","Dashboard","fetchBoards","view","activeDashboardId","_this$state$dashboard","showEdit","sysRole","dashboardRows","menuActive","Route","path","render","views_DashboardEditView","DashboardFullScreenView","dashboardEditView","wrappedComponentRef","comp","SYS_ROLES","User","fetchUsers","users","fetchGroups","groups","tempPassword","userGroups","userGroupId","initialEditPanelState","addUserGroup","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_this$state3$users","_this$state3$groups","_this$state3$userGrou","userItems","userGroupItems","Group","fetchDashboards","group","groupDashboards","groupDashboardId","addGroupDashboard","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","UserManagement","views_Group","views_User","Account","fetchUser","apiKey","generateApiKey","MENU_ITEMS","link","Workspace","handleMenuClick","menuLink","currentMenuLink","logout","pathname","menuItems","menuList","filter","m","menu","Link","to","isAccountMenuActive","Switch","exact","component","src_views_Dashboard","src_components_Toast","PageNotFound","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","faCircleNotch","App","isAuthorizing","_this$state$sysRole","isAuthenticated","spin","src_views_Login","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"4jBAMMA,sBAEJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAQRQ,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAXnBb,EA0BnBc,eAAiB,SAACN,GACK,KAAlBA,EAAMO,SACPf,EAAKgB,SA5BUhB,EAgCnBgB,MAAQ,WAAM,IAAAC,EAIRjB,EAAKkB,MAFPC,EAFUF,EAEVE,SACAC,EAHUH,EAGVG,SAGIC,EAAO,CACXF,SAAUA,EACVC,SAAUA,GAGPD,EAOAC,EAOLE,IAAMC,KAAK,mBAAoBF,GAC5BG,KAAK,SAAAC,GACJ,IAAMC,EAAgBD,EAAIE,MAAQ,GAC9BD,EAAcE,MAChB5B,EAAKS,SAAS,CACZoB,SAAUH,EAAcE,QAG1B5B,EAAKD,MAAM+B,eAAeJ,KAd9B1B,EAAKS,SAAS,CACZoB,SAAU,mBARZ7B,EAAKS,SAAS,CACZoB,SAAU,oBA3Cd7B,EAAKkB,MAAQ,CACXW,SAAU,GACVV,SAAU,GACVC,SAAU,IALKpB,mFAeC,IAAA+B,EAAA5B,KAClB6B,QAAQC,IAAI,4BAA6B,UACzCX,IAAMC,KAAK,sBACRC,KAAK,SAAAC,GACJ,IAAMC,EAAgBD,EAAIE,MAAQ,GAC7BD,EAAcE,OACjBG,EAAKhC,MAAM+B,eAAeJ,sCAkDhC,OACEQ,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAf,QACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAmBnC,KAAKe,MAAMW,UAC7CK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAMC,SAClBqB,SAAUrC,KAAKI,kBACfkC,UAAWtC,KAAKW,iBAElBoB,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAME,SAClBoB,SAAUrC,KAAKI,kBACfkC,UAAWtC,KAAKW,kBAGpBoB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,sBAAsBI,QAASvC,KAAKa,OAAtD,mBAjGQ2B,IAAMC,YAyGXC,cAAW/C,GC1GpBgD,cAEJ,SAAAA,EAAY/C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2C,IACjB9C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6C,GAAAxC,KAAAH,KAAMJ,KAQRQ,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAXnBb,EAmBnB+C,eAAiB,WAAM,IAAA9B,EAIjBjB,EAAKkB,MAFPE,EAFmBH,EAEnBG,SACA4B,EAHmB/B,EAGnB+B,kBAGF,GAAI5B,GAAY4B,GACT5B,IAAa4B,EAAmB,CACrC,IAAM3B,EAAO,CACXD,SAAUA,GAGZE,IAAMC,KAAK,6BAA8BF,GACtCG,KAAK,SAAAC,GACWA,EAAIE,KACnB3B,EAAKD,MAAMkD,QAAQC,KAAK,+BAG5BlD,EAAKS,SAAS,CACZoB,SAAQ,mCApCZ7B,EAAKkB,MAAQ,CACXW,SAAU,GACVT,SAAU,GACV4B,kBAAmB,IALJhD,mFAgBfgC,QAAQC,IAAI,2EA6Bd,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,aAAQjC,KAAKe,MAAMW,UACnBK,EAAAC,EAAAC,cAAA,OAAKe,MAAM,cACTjB,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAMC,SAClBqB,SAAUrC,KAAKI,oBACjB2B,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,oBACLC,MAAOV,KAAKe,MAAM8B,kBAClBR,SAAUrC,KAAKI,oBACjB2B,EAAAC,EAAAC,cAAA,UAAQM,QAASvC,KAAK4C,gBAAtB,mBA/DuBJ,IAAMC,WAsExBC,cAAWC,6CCnEbM,EAAgB,eAAAC,EAAApD,OAAAqD,EAAA,EAAArD,CAAAsD,EAAApB,EAAAqB,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAApB,EAAAwB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAELxC,IAAMyC,IAAI,sBAFL,cAEtBL,EAFsBE,EAAAI,KAAAJ,EAAAK,OAAA,SAGrBP,EAAS/B,MAAQ,IAHI,cAAAiC,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAAAA,EAAAK,OAAA,SAKrB,IALqB,yBAAAL,EAAAO,SAAAV,EAAA,iBAAH,yBAAAJ,EAAAe,MAAAjE,KAAAkE,YAAA,GC0BdC,2LA5BJ,IAAAtE,EAAAG,KAAAoE,EAMHpE,KAAKJ,MAJPyE,EAFKD,EAELC,KAFKC,EAAAF,EAGLG,kBAHK,IAAAD,EAGQ,GAHRA,EAILE,EAJKJ,EAILI,MACAC,EALKL,EAKLK,SAGIC,EAAcL,EAAO,gBAAkB,eAC7C,OACEtC,EAAAC,EAAAC,cAAA,OAAKE,UAAS,iBAAAwC,OAAmBD,IAC/B3C,EAAAC,EAAAC,cAAA,OAAKE,UAAS,eAAAwC,OAAiBJ,IAC7BxC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeqC,GAC9BzC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,iCAAiCI,QAAS,kBAAM1C,EAAKD,MAAMgF,YAC3E7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,QAAQC,KAAK,SAGvChD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACZsC,YAtBOjC,IAAMC,oBCDpBuC,sBAEJ,SAAAA,EAAYpF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgF,IACjBnF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkF,GAAA7E,KAAAH,KAAMJ,KASRyE,KAAO,SAACY,GACNpF,EAAKS,SAAS,CACZ4E,WAAW,EACXD,QAASA,GACR,WACDE,WAAW,WACTtF,EAAKuF,QACJ,SAjBYvF,EAqBnBuF,KAAO,WACLvF,EAAKS,SAAS,CACZ4E,WAAW,EACXD,QAAS,MAtBXpF,EAAKkB,MAAQ,CACXmE,WAAW,EACXD,QAAS,IAGXD,EAAMK,UAANvF,OAAAwF,EAAA,EAAAxF,QAAAwF,EAAA,EAAAxF,CAAAD,IAPiBA,wEAgCV,IAAAiB,EAIHd,KAAKe,MAFPmE,EAFKpE,EAELoE,UACAD,EAHKnE,EAGLmE,QAGIM,EAAcL,EAAY,gBAAkB,eAElD,OACEnD,EAAAC,EAAAC,cAAA,OAAKE,UAAS,mBAAAwC,OAAqBY,IACjCxD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKoF,MAAzC,KACArD,EAAAC,EAAAC,cAAA,WACGgD,WA9CSzC,IAAMC,YAApBuC,EA8BGX,KAAO,SAACY,GACbD,EAAMK,UAAUhB,KAAKY,IAsBVD,QCoRAQ,sBAhUb,SAAAA,EAAY5F,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwF,IACjB3F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0F,GAAArF,KAAAH,KAAMJ,KAmCRQ,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAtCnBb,EAiDnB4F,KAAO,WAAM,IAAA3E,EAUPjB,EAAKkB,MARP2E,EAFS5E,EAET4E,mBACAC,EAHS7E,EAGT6E,GACAC,EAJS9E,EAIT8E,cACAC,EALS/E,EAKT+E,gBACA7E,EANSF,EAMTE,SACAC,EAPSH,EAOTG,SACAR,EARSK,EAQTL,KACAqF,EATShF,EASTgF,KAGF,GAAKrF,EAAL,CAIA,IAAIsF,EAAK,CACPH,cAAeA,EACfC,gBAAiBA,EACjB7E,SAAUA,EACVP,KAAMA,EACNqF,KAAMA,GAGG,OAAPH,GACFI,EAAGJ,GAAKA,EACJD,GAAsBzE,IACxB8E,EAAG9E,SAAWA,GAIhBE,IAAM6E,IAAI,qBAAsBD,GAC7B1E,KAAK,SAAAC,GACJzB,EAAKoG,iBACLpG,EAAKoD,qBAENiD,MAAM,SAAAzE,GACLI,QAAQC,IAAIL,OAGhBsE,EAAG9E,SAAWA,EAEdE,IAAMC,KAAK,qBAAsB2E,GAC9B1E,KAAK,SAAAC,GACJzB,EAAKoG,iBACLpG,EAAKoD,qBAENiD,MAAM,SAAAzE,GACLI,QAAQC,IAAIL,QAjGD5B,EAsGnBiG,KAAO,SAACH,GACNxE,IAAMyC,IAAN,2BAAAe,OAAqCgB,IAClCtE,KAAK,SAAAC,GACJ,IAAM6E,EAAS7E,EAAIE,KACnBwD,EAAMX,KAAK8B,MA1GEtG,EA8GnBuG,eAAiB,WACfvG,EAAKS,SAAST,EAAKwG,eA/GFxG,EAkHnByG,cAAgB,SAACP,GACJ,OAAPA,EACFlG,EAAKS,SAAS,CACZoF,oBAAoB,EACpBC,GAAII,EAAGJ,GACPC,cAAeG,EAAGH,cAClBC,gBAAiBE,EAAGF,gBACpB7E,SAAU+E,EAAG/E,SACbC,SAAU8E,EAAG9E,SACbR,KAAMsF,EAAGtF,KACTqF,KAAMC,EAAGD,OAGXjG,EAAKuG,iBAGPvG,EAAKS,SAAS,CACZiG,eAAe,KAnIA1G,EAuInBoG,eAAiB,WACfpG,EAAKS,SAAS,CACZiG,eAAe,KAzIA1G,EA6InB2G,cAAgB,WAAM,IAAAC,EAGhB5G,EAAKkB,MADP2F,sBAFkB,IAAAD,EAED,GAFCA,EAIpBtF,IAAMwF,OAAO,sBAAwBD,EAAef,IACjDtE,KAAK,SAAAC,GACJzB,EAAKoD,mBACLpD,EAAK+G,+BApJQ/G,EAwJnBgH,yBAA2B,SAACC,GAC1BjH,EAAKS,SAAS,CACZoG,eAAgBI,EAChBC,0BAA0B,KA3JXlH,EA+JnB+G,0BAA4B,WAC1B/G,EAAKS,SAAS,CACZoG,eAAgB,GAChBK,0BAA0B,KAlKXlH,EAsKnBmH,qBAAuB,WACrBnH,EAAKS,SAAS,SAAA2G,GAAS,MAAK,CAC1BvB,oBAAqBuB,EAAUvB,uBAxKhB7F,EA4KnBqH,YAAc,WACZrH,EAAKS,SAAS,CACZ6G,YAAa,MA5KftH,EAAKkB,MAAQ,CACXqG,gBAAiB,GACjBb,eAAe,EACfQ,0BAA0B,EAC1BL,eAAgB,GAChBhB,oBAAoB,EACpByB,YAAa,GACbxB,GAAI,KACJlF,KAAM,GACNmF,cAAe,GACfC,gBAAiB,GACjB7E,SAAU,GACVC,SAAU,GACV6E,KAAM,IAfSjG,mFAiCjBG,KAAKiD,4LAUyBoE,WAAxBD,SACNpH,KAAKM,SAAS,CACZ8G,gBAAiBA,uIAkJnB,IAbO,IAAAxF,EAAA5B,KAAAsH,EAQHtH,KAAKe,MANP2E,EAFK4B,EAEL5B,mBACAqB,EAHKO,EAGLP,yBACAI,EAJKG,EAILH,YACAxB,EALK2B,EAKL3B,GALK4B,EAAAD,EAMLF,uBANK,IAAAG,EAMa,GANbA,EAAAC,EAAAF,EAOLZ,sBAPK,IAAAc,EAOY,GAPZA,EAUDC,EAAc,OAAP9B,EAAc,MAAQ,OAE7B+B,EAAsB,GAZrBC,EAAA,SAaEC,GACP,IAAM7B,EAAKqB,EAAgBQ,GACrBnH,EAAOsF,EAAGtF,OACX0G,GAAgBA,GAAe1G,EAAKoH,SAASV,KAChDO,EAAoB3E,KAEhBhB,EAAAC,EAAAC,cAAA,OAAK6F,IAAKF,EAAGzF,UAAU,uBACrBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2CACZ1B,GAEHsB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qCAAqCI,QAAS,kBAAMX,EAAK0E,cAAcP,KACvFhE,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,OAAOC,KAAK,QAEpChD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qCAAqCI,QAAS,kBAAMX,EAAKiF,yBAAyBd,KAClGhE,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,YAAYC,KAAK,QAEzChD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qCAAqCI,QAAS,kBAAMX,EAAKkE,KAAKC,EAAGJ,MACjF5D,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,OAAOC,KAAK,YAlBvC6C,EAAI,EAAGA,EAAIR,EAAgBW,OAAQH,IAAKD,EAAxCC,GA2BT,OACE7F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,cACLC,MAAOV,KAAKe,MAAMoG,YAClB9E,SAAUrC,KAAKI,kBACf4H,YAAY,YACZC,MAAO,CAACC,MAAO,WAEjBnG,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKkH,aAAzC,SACAnF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAK0E,cAAc,QAC3DvE,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,SADxB,oBAIF/C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZuF,GAGH3F,EAAAC,EAAAC,cAACkG,EAAD,CACE9D,KAAMrE,KAAKe,MAAMwF,cACjB3B,QAAS5E,KAAKiG,eACd1B,WAAY,oBACZC,MAAOiD,GAEP1F,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,qBAAYF,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAhB,MACZJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMN,KAClB4B,SAAUrC,KAAKI,oBAEjB2B,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,YACEmG,KAAK,IACLhG,KAAK,OACL3B,KAAK,gBACLC,MAAOV,KAAKe,MAAM6E,cAClBvD,SAAUrC,KAAKI,oBAGjB2B,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,kBACLC,MAAOV,KAAKe,MAAM8E,gBAClBxD,SAAUrC,KAAKI,oBAEjB2B,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAMC,SAClBqB,SAAUrC,KAAKI,oBAEN,SAATqH,EAEE1F,EAAAC,EAAAC,cAAA,OAAKgG,MAAO,CAACI,OAAQ,oBACnBtG,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKgH,sBAAzC,oBAEA,KAEK,QAATS,GAAkB/B,EAEhB3D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAME,SAClBoB,SAAUrC,KAAKI,qBAEjB,KAGN2B,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAM+E,KAClBzD,SAAUrC,KAAKI,oBACjB2B,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcI,QAASvC,KAAKyF,MAA9C,UAIJ1D,EAAAC,EAAAC,cAACkG,EAAD,CACE9D,KAAM0C,EACNnC,QAAS5E,KAAK4G,0BACdrC,WAAY,oBACZC,MAAO,oBACPzC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,mCACmCuE,EAAejG,KADlD,KAGAsB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKwG,eAAzC,iDArSN,MAAO,CACLd,oBAAoB,EACpBC,GAAI,KACJlF,KAAM,GACNmF,cAAe,GACfC,gBAAiB,GACjB7E,SAAU,GACVC,SAAU,GACV6E,KAAM,WA9BarD,wCCoEV6F,cAzEb,SAAAA,EAAY1I,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsI,IACjBzI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwI,GAAAnI,KAAAH,KAAMJ,KAMR2I,YAAc,WACZ1I,EAAKS,SAAS,SAAA2G,GAAS,MAAK,CAC1BuB,aAAcvB,EAAUuB,gBATT3I,EAanB4I,YAAc,WACZ5I,EAAKS,SAAS,CACZkI,aAAa,KAfE3I,EAmBnB6I,aAAe,SAACC,GACd,IAAMC,EAAMD,EAAMC,IACZC,EAAI,QAAAlE,OAAWiE,EAAIE,EAAf,MAAAnE,OAAqBiE,EAAIG,EAAzB,MAAApE,OAA+BiE,EAAII,EAAnC,MAAArE,OAAyCiE,EAAI5G,EAA7C,KACVnC,EAAKD,MAAMyC,SAASwG,IApBpBhJ,EAAKkB,MAAQ,CACXyH,aAAa,GAHE3I,wEA2BjB,IAAM8I,EAAQ,CACZT,MAAO,OACPe,OAAQ,OACRC,aAAc,MACdC,WAAYnJ,KAAKJ,MAAMc,OAyBzB,OACEqB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKgG,MAxBM,CACbmB,QAAS,MACTD,WAAY,OACZD,aAAc,MACdG,UAAW,2BACXC,QAAS,eACTC,OAAQ,WAkBchH,QAASvC,KAAKuI,aAChCxG,EAAAC,EAAAC,cAAA,OAAKgG,MAAOU,KAEZ3I,KAAKe,MAAMyH,YAETzG,EAAAC,EAAAC,cAAA,OAAKgG,MApBG,CACduB,SAAU,WACVC,OAAQ,MAmBA1H,EAAAC,EAAAC,cAAA,OAAKgG,MAhBD,CACZuB,SAAU,QACVE,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRC,KAAM,OAWqBtH,QAASvC,KAAKyI,cACjC1G,EAAAC,EAAAC,cAAC6H,EAAA,aAAD,CAAcnB,MAAO3I,KAAKJ,MAAMc,MAAO2B,SAAUrC,KAAK0I,gBAEtD,aArEYlG,IAAMC,WCuCjBsH,sBAtCb,SAAAA,EAAYnK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+J,IACjBlK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiK,GAAA5J,KAAAH,KAAMJ,KAKRoK,OAAS,WAAM,IAAA5F,EAITvE,EAAKD,MAFPa,EAFW2D,EAEX3D,KACAwJ,EAHW7F,EAGX6F,QAGFpK,EAAKD,MAAMyC,SAAS5B,GAAOwJ,IAV3BpK,EAAKkB,MAAQ,GAFIlB,wEAeV,IAAAqK,EAIHlK,KAAKJ,MAFPc,EAFKwJ,EAELxJ,MAKIyJ,EAAoB,CACxBC,gBARKF,EAGLD,QAGoC,UAAY,WAKlD,OACElI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBAAqBI,QAASvC,KAAKgK,QAChDjI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBAAyB8F,MAAOkC,KAGjDpI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAkBzB,WAjClB8B,IAAMC,YCCvB4H,EAAgB,EAgHPC,cA5Gb,SAAAA,EAAY1K,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsK,IACjBzK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwK,GAAAnK,KAAAH,KAAMJ,KAiBR2K,YAAc,SAAClK,GACbA,EAAMmK,iBAON,IANA,IACMC,EADWC,IAASC,YAAT7K,OAAAwF,EAAA,EAAAxF,QAAAwF,EAAA,EAAAxF,CAAAD,KACa+K,WACxBC,EAAUxK,EAAMyK,QAAUL,EAAaM,WACvCC,EAAU3K,EAAM4K,QAAUR,EAAaS,UAEzCC,EAAQC,SAASC,uBAAuB,YACnCzD,EAAI,EAAGA,EAAIuD,EAAMpD,OAAQH,IAC9BuD,EAAMvD,GAAGK,MAAMwB,OAAS,GAE5BgB,EAAaxC,MAAMwB,OAAS,GAXL,IAaf6B,EAAkBb,EAAlBa,cACRA,EAAcC,iBAAiB,UAAW1L,EAAK2L,WAC/CF,EAAcC,iBAAiB,YAAa1L,EAAK4L,aACjD5L,EAAKS,SAAS,CACZuK,QAASA,EACTG,QAASA,IAGXnL,EAAKD,MAAM2K,YAAY,SAvCN1K,EA0CnB2L,UAAY,SAACnL,GACXA,EAAMmK,iBACN,IAAMkB,EAAWhB,IAASC,YAAT7K,OAAAwF,EAAA,EAAAxF,QAAAwF,EAAA,EAAAxF,CAAAD,KACjB,GAAI6L,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAa9L,EAAK0K,aACpDe,EAAcK,oBAAoB,UAAW9L,EAAK2L,WAClDF,EAAcK,oBAAoB,YAAa9L,EAAK4L,aAEtD5L,EAAKD,MAAM4L,aAnDM3L,EAsDnB4L,YAAc,SAACpL,GAEb,GADAA,EAAMmK,iBACkB,SAApB3K,EAAKD,MAAM6H,KAAf,CAIA,IAAImE,EAAW,EACX/L,EAAKD,MAAMiM,aACbD,EAAW,GAGb,IACMnB,EADWC,IAASC,YAAT7K,OAAAwF,EAAA,EAAAxF,QAAAwF,EAAA,EAAAxF,CAAAD,KACa+K,WAC1BkB,EAAWzL,EAAMyK,QAAUjL,EAAKkB,MAAM8J,QACtCkB,EAAW1L,EAAM4K,QAAUpL,EAAKkB,MAAMiK,QAEpCgB,EAAgBvB,EAAaG,WAC7BqB,EAAiBD,EAAcE,YAC/BC,EAAkBH,EAAcI,aAElCC,EAAWC,SAAS7B,EAAaxC,MAAMC,MAAO,IAAsB,EAAhBmC,EACpDkC,EAAYD,SAAS7B,EAAaxC,MAAMgB,OAAQ,IAAsB,EAAhBoB,EAEtDyB,EAAW,IACbA,EAAW,GAETC,EAAW,IACbA,EAAW,GAETD,EAAWO,EAAWJ,IACxBH,EAAWG,EAAiBI,GAE1BN,EAAWQ,EAAYJ,IACzBJ,EAAWI,EAAkBI,GAG/BT,EAAWU,KAAKC,MAAMX,EAAWF,GAAYA,EAC7CG,EAAWS,KAAKC,MAAMV,EAAWH,GAAYA,EAE7CnB,EAAaxC,MAAM4B,KAAOiC,EAAW,KACrCrB,EAAaxC,MAAMyB,IAAMqC,EAAW,OA5FpClM,EAAKkB,MAAQ,CACX8J,QAAS,EACTG,QAAS,GAJMnL,sFASjB,IAAM6L,EAAWhB,IAASC,YAAY3K,MACtC,GAAI0L,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAa3L,KAAKuK,aACpDe,EAAcK,oBAAoB,UAAW3L,KAAKwL,WAClDF,EAAcK,oBAAoB,YAAa3L,KAAKyL,+CAoFtD,OACE1J,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACboI,YAAavK,KAAKuK,YAClBiB,UAAWxL,KAAKwL,WAChBzJ,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,oBAAoB4H,YAAU,YAxGhClK,IAAMC,WCF5BkK,EAAY,GACZC,EAAa,GACbvC,EAAgB,EAiHPwC,cA5Gb,SAAAA,EAAYjN,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6M,IACjBhN,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+M,GAAA1M,KAAAH,KAAMJ,KAiBR2K,YAAc,SAAClK,GACbA,EAAMmK,iBACN,IAAMkB,EAAWhB,IAASC,YAAT7K,OAAAwF,EAAA,EAAAxF,QAAAwF,EAAA,EAAAxF,CAAAD,KACXiM,EAAWzL,EAAMyK,QACjBiB,EAAW1L,EAAM4K,QAEfK,EAAkBI,EAAlBJ,cACRA,EAAcC,iBAAiB,UAAW1L,EAAK2L,WAC/CF,EAAcC,iBAAiB,YAAa1L,EAAK4L,aACjD5L,EAAKS,SAAS,CACZwL,SAAUA,EACVC,SAAUA,IAGZlM,EAAKD,MAAM2K,YAAY,WAhCN1K,EAmCnB2L,UAAY,SAACnL,GACXA,EAAMmK,iBACN,IAAMkB,EAAWhB,IAASC,YAAT7K,OAAAwF,EAAA,EAAAxF,QAAAwF,EAAA,EAAAxF,CAAAD,KACjB,GAAI6L,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAa9L,EAAK0K,aACpDe,EAAcK,oBAAoB,UAAW9L,EAAK2L,WAClDF,EAAcK,oBAAoB,YAAa9L,EAAK4L,aAEtD5L,EAAKD,MAAM4L,aA5CM3L,EA+CnB4L,YAAc,SAACpL,GAEb,GADAA,EAAMmK,iBACkB,WAApB3K,EAAKD,MAAM6H,KAAf,CAIA,IAAIoD,EAAUxK,EAAMyK,QAAUjL,EAAKkB,MAAM+K,SACrCd,EAAU3K,EAAM4K,QAAUpL,EAAKkB,MAAMgL,SAGnCtB,EADWC,IAASC,YAAT7K,OAAAwF,EAAA,EAAAxF,QAAAwF,EAAA,EAAAxF,CAAAD,KACa+K,WACxBkC,EAAYR,SAAS7B,EAAaxC,MAAMC,MAAO,IAC/C6E,EAAaT,SAAS7B,EAAaxC,MAAMgB,OAAQ,IAEjD+C,EAAgBvB,EAAaG,WAC7BqB,EAAiBD,EAAcE,YAC/BC,EAAkBH,EAAcI,aAElCY,EAAWR,KAAKC,MAAMK,EAAYjC,GAClCoC,EAAYT,KAAKC,MAAMM,EAAa/B,GAEpCgC,EAAWL,IACbK,EAAWL,GAGTM,EAAYL,IACdK,EAAYL,GAGd,IAAM/C,EAAOY,EAAaM,WAA6B,EAAhBV,EACjCX,EAAMe,EAAaS,UAA4B,EAAhBb,EAEjC2C,EAAYnD,EAAOoC,IACrBe,EAAWf,EAAiBpC,GAG1BoD,EAAYvD,EAAMyC,IACpBc,EAAYd,EAAkBzC,GAGhCe,EAAaxC,MAAMC,MAAQ8E,EAAW,KACtCvC,EAAaxC,MAAMgB,OAASgE,EAAY,KAExCpN,EAAKS,SAAS,CACZwL,SAAUzL,EAAMyK,QAChBiB,SAAU1L,EAAM4K,YA1FlBpL,EAAKkB,MAAQ,CACX+K,SAAU,EACVC,SAAU,GAJKlM,sFASjB,IAAM6L,EAAWhB,IAASC,YAAY3K,MACtC,GAAI0L,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAa3L,KAAKuK,aACpDe,EAAcK,oBAAoB,UAAW3L,KAAKwL,WAClDF,EAAcK,oBAAoB,YAAa3L,KAAKyL,+CAmFtD,OACE1J,EAAAC,EAAAC,cAAA,OACEE,UAAU,iBACVoI,YAAavK,KAAKuK,YAClBiB,UAAWxL,KAAKwL,WAChBzJ,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,WAAW4H,YAAU,YAxGvBlK,IAAMC,WCJrByK,EAAc,SAACC,GAC1B,IAAIC,EACJ,IACEA,EAAQC,KAAKC,MAAMH,GACnB,MAAMI,GACNH,EAAQ,GAEV,OAAOA,GCTII,EAAQ,QACRC,EAAS,SACTC,EAAe,CAACF,EAAOC,GAEvBE,EAAS,SACTC,EAAc,SACdC,EAAe,CAACF,EAAQC,GAExBE,EAAM,MACNC,GAAQ,QACRC,GAAc,CAACD,GAAOD,GAQtBG,GAA2B,yBCnBlCC,GAAe,CACnB,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,WA2BjCC,GAAe,SAACC,EAAiBC,EAAQC,GAGpD,IAFA,IAAIC,EAAS,GACTC,EAAS,GACJ5G,EAAI,EAAGA,EAAIwG,EAAgBrG,OAAQH,IAAK,CAC/C,IAAM6G,EAAML,EAAgBxG,GAC5B2G,EAAOxL,KAAK0L,EAAIJ,IAChBG,EAAOzL,KAAK,CACVtC,KAAMgO,EAAIJ,GACV3N,MAAO+N,EAAIH,KAGf,OAnCkC,SAACC,EAAQC,GAC3C,MAAO,CACL7F,MAAOuF,GACPQ,QAAS,GAETH,OAAQ,CACNnM,KAAM,SACNuM,OAAQ,WACRnN,KAAM+M,EACN5E,MAAO,GACPD,IAAK,GACLE,OAAQ,IAEV4E,OAAQ,CACN,CACEpM,KAAK,MACLwM,OAAQ,CAAC,MAAO,OAChBC,OAAQ,MACRrN,KAAMgN,KAiBLM,CAAqBP,EAAQC,cCevBO,8BApDb,SAAAA,EAAYnP,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+O,IACjBlP,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiP,GAAA5O,KAAAH,KAAMJ,KACDmB,MAAQ,GAFIlB,wEAMV,IAAAuE,EAMHpE,KAAKJ,MANFoP,EAAA5K,EAEL5C,YAFK,IAAAwN,EAEE,GAFFA,EAAAC,EAAA7K,EAGL8K,eAHK,IAAAD,EAGK,GAHLA,EAAAE,EAAA/K,EAILgL,oBAJK,IAAAD,EAIU,GAJVA,EAKL1N,EALK2C,EAKL3C,MAGI4N,EAAgB,GAkBtB,OAjBAH,EAAQI,QAAQ,SAAAC,GACd,IAAMC,EAAaD,EAAO9O,KACpBgP,EAAS,CACbC,OAAQF,EACRG,SAAUH,GAEZ,GAAIJ,EAAarH,OAAS,EAAG,CAC3B,IAAM6H,EAAQR,EAAaS,UAAU,SAAAC,GAAC,OAAIA,EAAEN,aAAeA,IAC3D,IAAe,IAAXI,EAAc,CAChB,IAAMG,EAAcX,EAAaQ,GAAOG,YACxCN,EAAOO,KAAQ,SAAApQ,GAAK,OAAImC,EAAAC,EAAAC,cAAA,KAAGgO,KAAI,6BAAAtL,OAA+BoL,EAA/B,KAAApL,OAA8C6K,EAA9C,KAAA7K,OAA4D/E,EAAMc,QAAUd,EAAMc,SAIrH2O,EAActM,KAAK0M,KAGjBhO,EAEAM,EAAAC,EAAAC,cAAA,WACGR,GAMLM,EAAAC,EAAAC,cAACiO,GAAA,EAAD,CACE1O,KAAMA,EACN0N,QAASG,EACTc,gBAAiB,GACjBC,aAAc,OACdC,SAAU,gBAhDQ7N,IAAMC,YC8EjB6N,sNA7EbvP,MAAQ,CACNwP,aAAa,EACbpJ,YAAa,MAGfqJ,gBAAkB,WAGhB,IAFA,IAAMC,GAAkB5Q,EAAKkB,MAAMwP,YAC7BG,EAAa5Q,OAAA6Q,EAAA,EAAA7Q,CAAOD,EAAKD,MAAMgR,YAC5BhJ,EAAI,EAAGA,EAAI8I,EAAc3I,OAAQH,IACxC8I,EAAc9I,GAAGiJ,UAAYJ,EAE/B5Q,EAAKD,MAAMyC,SAASxC,EAAKD,MAAMkR,SAAUJ,GAEzC7Q,EAAKS,SAAS,SAAA2G,GAAS,MAAK,CAC1BsJ,aAActJ,EAAUsJ,kBAI5BQ,wBAA0B,SAAC1Q,GACzB,IAAM8G,EAAc9G,EAAMG,OAAOE,MACjC,GAAIyG,EAGF,IAFA,IAAMhB,EAAS,GACPyK,EAAe/Q,EAAKD,MAApBgR,WACChJ,EAAI,EAAGA,EAAIgJ,EAAW7I,OAAQH,KACa,IAA9CgJ,EAAWhJ,GAAGlH,MAAMsQ,QAAQ7J,IAC9BhB,EAAOpD,KAAK6N,EAAWhJ,IAK7B/H,EAAKS,SAAS,CACZ6G,YAAaA,OAMjB8J,qBAAuB,SAACxQ,EAAMoQ,GAC5B,IAAMH,EAAa5Q,OAAA6Q,EAAA,EAAA7Q,CAAOD,EAAKD,MAAMgR,YAC/BhB,EAAQc,EAAcb,UAAU,SAAAqB,GAAC,OAAIA,EAAExQ,QAAUD,IACvDiQ,EAAcd,GAAOiB,UAAYA,EACjChR,EAAKD,MAAMyC,SAASxC,EAAKD,MAAMkR,SAAUJ,4EAGlC,IAAA9O,EAAA5B,KAAAmR,EAGHnR,KAAKJ,MADPgR,WAEIQ,QAJC,IAAAD,EAEQ,GAFRA,GAI0BE,IAAI,SAACC,EAAK1B,GAAN,OACnC7N,EAAAC,EAAAC,cAACsP,EAAD,CACEzJ,IAAK8H,EACLnP,KAAM6Q,EAAI5Q,MACVA,MAAO4Q,EAAI5Q,MACXuJ,QAASqH,EAAIT,UACbxO,SAAUT,EAAKqP,yBAInB,OACElP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKwQ,iBAAzC,cAAsExQ,KAAKe,MAAMwP,aACjFxO,EAAAC,EAAAC,cAAA,SACIG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMoG,YAClB9E,SAAUrC,KAAK+Q,wBACf/I,YAAY,cAGhBjG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZiP,WAxEU5O,IAAMC,YCcrB+O,eAEJ,SAAAA,EAAY5R,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwR,IACjB3R,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0R,GAAArR,KAAAH,KAAMJ,KAgBR2K,YAAc,SAAC9C,GACb5F,QAAQC,IAAI,uBAAwB2F,GACpC5H,EAAKS,SAAS,CACZmH,KAAMA,KApBS5H,EAwBnB2L,UAAY,WACV3J,QAAQC,IAAI,sBACZjC,EAAKS,SAAS,CACZmH,KAAM,KAGR,IAAMiE,EAAWhB,IAASC,YAAT7K,OAAAwF,EAAA,EAAAxF,QAAAwF,EAAA,EAAAxF,CAAAD,KACXqR,EAAIxF,EAASX,WACb0G,EAAI/F,EAASR,UACbhD,EAAQoE,SAASZ,EAASzD,MAAMC,MAAO,IACvCe,EAASqD,SAASZ,EAASzD,MAAMgB,OAAQ,IAGzCyI,EAAS,CACb/L,GAHe9F,EAAKD,MAAM+F,GAI1BuL,EAAGA,EACHO,EAAGA,EACHvJ,MAAOA,EACPe,OAAQA,GAGVpJ,EAAKD,MAAM+R,aAAaD,IA7CP7R,EAgDnB4L,YAAc,SAACpL,EAAOoH,EAAM1G,GAC1BV,EAAMmK,kBAjDW3K,EAoDnB+R,WAAa,SAACC,GACZhS,EAAKD,MAAMkS,aAAaD,IArDPhS,EAwDnBkS,UAAY,SAACF,KAxDMhS,EA4DnBmS,WAAa,SAACH,KA5DKhS,EAgEnBoS,aAAe,SAACJ,GACdhS,EAAKD,MAAMsS,eAAeL,IAjEThS,EAoEnBsS,qBAAuB,SAACpR,EAAOqR,EAAS7C,EAAQ8C,GAC9C,MAAO,CACL9P,QAAS,SAACgL,EAAG+E,GACXzQ,QAAQC,IAAI,6BACZD,QAAQC,IAAI,0BAA2ByL,GACvC1L,QAAQC,IAAI,yBAA0ByN,GACtC1N,QAAQC,IAAI,sBAAuBsQ,GACnCvQ,QAAQC,IAAI,iCAAkCuQ,GAE9C,IAAM5C,EAASF,EAAOG,OAEhBhP,EADM0R,EAAQ3D,IACFgB,GACZ8C,EAASF,EAASzS,MAAM4S,oBAAsB,GACpD3Q,QAAQC,IAAI,uBAAwB2N,EAAQ/O,EAAO6R,GACnD,IAAM3C,EAAQ2C,EAAO1C,UAAU,SAAAC,GAAC,OAAIA,EAAEN,aAAeC,IACrD,IAAe,IAAXG,EAAc,CAChB,IAAMG,EAAcwC,EAAO3C,GAAOG,YAClClQ,EAAKD,MAAMkD,QAAQC,KAAnB,wBAAA4B,OAAgDoL,EAAhD,KAAApL,OAA+D8K,EAA/D,KAAA9K,OAAyEjE,QArF9Db,EA2FnB4S,aAAe,SAACC,EAAOC,GACrB9Q,QAAQC,IAAI,eAAgB4Q,EAAOC,IA5FlB9S,EA+FnB+S,2BAA6B,SAACF,EAAOG,GACnChR,QAAQC,IAAI,6BAA8B4Q,EAAOG,IAhGhChT,EAmGnBiT,eAAiB,SAAChC,EAAUF,GAC1B,IAAMhB,EAAQ/P,EAAKkB,MAAMgS,QAAQlD,UAAU,SAAAmD,GAAC,OAAIA,EAAErN,KAAOmL,IACnDmC,EAAUnT,OAAA6Q,EAAA,EAAA7Q,CAAOD,EAAKkB,MAAMgS,SAClCE,EAAWrD,GAAOgB,WAAlB9Q,OAAA6Q,EAAA,EAAA7Q,CAAmC8Q,GACnC/Q,EAAKS,SAAS,CACZyS,QAASE,KAxGMpT,EA4GnBqT,oBAAsB,SAACpC,EAAUzQ,GAAU,IACjC0S,EAAYlT,EAAKkB,MAAjBgS,QACFrS,EAAQL,EAAMG,OAAOE,MACrBkP,EAAQmD,EAAQlD,UAAU,SAAAmD,GAAC,OAAIA,EAAErN,KAAOmL,IACxCmC,EAAUnT,OAAA6Q,EAAA,EAAA7Q,CAAOiT,GACvBE,EAAWrD,GAAOlP,MAAQA,EAC1Bb,EAAKS,SAAS,CACZyS,QAASE,KAnHMpT,EAuHnBsT,oBAAsB,WACpB,IAAMC,EAAgB,CACpBC,MAASxT,EAAK4S,aACda,oBAAuBzT,EAAK+S,4BAHJxO,EAgBtBvE,EAAKD,MATP+F,EAPwBvB,EAOxBuB,GACAvD,EARwBgC,EAQxBhC,KACAmR,EATwBnP,EASxBmP,UACAC,EAVwBpP,EAUxBoP,WAVwBC,EAAArP,EAWxBsP,mBAXwB,IAAAD,EAWV,GAXUA,EAYxBrE,EAZwBhL,EAYxBgL,aAZwBJ,EAAA5K,EAaxB5C,YAbwB,IAAAwN,EAajB,GAbiBA,EAcxB4B,EAdwBxM,EAcxBwM,WACAlQ,EAfwB0D,EAexB1D,MAGI0N,EAAkBuF,EAAiBD,EAAYlS,MAC/C0N,EAAUwE,EAAYxE,SAAW,GACjCzN,EAAQiS,EAAYjS,MAEtBmS,EAAc7R,EAAAC,EAAAC,cAAA,YAClB,GAAIG,IAASyR,GACX,GAAIN,IAAcM,GAChBD,EACE7R,EAAAC,EAAAC,cAAC6R,GAAD,CACEtS,KAAM4M,EACNc,QAASA,EACTzN,MAAOA,EACP2N,aAAcA,SAGb,GAAImE,IAAcM,EAAe,KAEpCxF,EAEE7M,EAFF6M,OACAC,EACE9M,EADF8M,SAEIyF,EAAcC,GAAwB5F,EAAiBC,EAAQC,GACrEsF,EACE7R,EAAAC,EAAAC,cAACgS,GAAAjS,EAAD,CACEkS,OAAQH,EACR5R,UAAU,UACVgS,SAAUf,UAIPhR,IAASyR,IACdL,IAAeK,EACjBD,EACE7R,EAAAC,EAAAC,cAACmS,GAAD,CACEtD,SAAUnL,EACViL,WAAYA,EACZvO,SAAUxC,EAAKiT,iBAGVU,IAAeK,IACxBD,EACE7R,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL1B,MAAOA,EACP2B,SAAU,SAAChC,GAAD,OAAWR,EAAKqT,oBAAoBvN,EAAItF,QAO1D,OAAOuT,GAzLP/T,EAAKkB,MAAQ,CACX0G,KAAM,IAHS5H,sFAQjB,IAAM6L,EAAWhB,IAASC,YAAY3K,MACtC,GAAI0L,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAa3L,KAAKuK,aACpDe,EAAcK,oBAAoB,UAAW3L,KAAKwL,WAClDF,EAAcK,oBAAoB,YAAa3L,KAAKyL,+CAiL/C,IAAA7J,EAAA5B,KAAAkK,EAMHlK,KAAKJ,MAJP+F,EAFKuE,EAELvE,GACAnB,EAHK0F,EAGL1F,MACA6P,EAJKnK,EAILmK,WAJKC,EAAApK,EAKLjC,MALKsM,QAAA,IAAAD,EAKG,GALHA,GASLE,WAGIC,OAZC,IAAAF,KAY0B,oBAAsB,oBAEnDG,EAAS,CACX7K,KAAM7J,KAAKJ,MAAMsR,EAAI,KACrBxH,IAAK1J,KAAKJ,MAAM6R,EAAI,KACpBvJ,MAAOlI,KAAKJ,MAAMsI,MAAQ,KAC1Be,OAAQjJ,KAAKJ,MAAMqJ,OAAS,KAC5BQ,OAAQ,EACRkL,OAAQF,GAGV,OACE1S,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAW8F,MAAOyM,GAC/B3S,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACZqC,EAEC6P,EACAtS,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAc8F,MAAO,CAAC2M,YAAa,SAChD7S,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeI,QAAS,kBAAMX,EAAKgQ,WAAWjM,KAC3D5D,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,OAAO4H,YAAU,KAEzC3K,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeI,QAAS,kBAAMX,EAAKqQ,aAAatM,KAC7D5D,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,YAAY4H,YAAU,MAIhD3K,EAAAC,EAAAC,cAAA,OAAKE,UAAU,8BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeI,QAAS,kBAAMX,EAAKoQ,WAAWrM,KAC3D5D,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,cAAc4H,YAAU,KAGhD3K,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeI,QAAS,kBAAMX,EAAKmQ,UAAUpM,KAC1D5D,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,WAAW4H,YAAU,OAMnD3K,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACZnC,KAAKmT,uBAGNkB,EACAtS,EAAAC,EAAAC,cAAC4S,EAAD,CACErJ,UAAWxL,KAAKwL,UAChBjB,YAAavK,KAAKuK,YAClBkB,YAAazL,KAAKyL,YAClBhE,KAAMzH,KAAKe,MAAM0G,KACjBoE,WAAY7L,KAAKJ,MAAMiM,aACxB,KAEDwI,EACAtS,EAAAC,EAAAC,cAAC6S,EAAD,CACEtJ,UAAWxL,KAAKwL,UAChBjB,YAAavK,KAAKuK,YAClBkB,YAAazL,KAAKyL,YAClBhE,KAAMzH,KAAKe,MAAM0G,OAClB,aArQYjF,IAAMC,WA4QdC,eAAW8O,ICtOXuD,uBAjDb,SAAAA,EAAYnV,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+U,IACjBlV,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiV,GAAA5U,KAAAH,KAAMJ,KACDmB,MAAQ,GAFIlB,wEAMV,IAAA+B,EAAA5B,KAAAoE,EAOHpE,KAAKJ,MALPsI,EAFK9D,EAEL8D,MACAe,EAHK7E,EAGL6E,OACAmB,EAJKhG,EAILgG,gBAJK4K,EAAA5Q,EAKL6Q,eALK,IAAAD,EAKK,GALLA,EASH/M,EAAQ,CACVC,MAAOA,EAAQ,KACfe,OAAQA,EAAS,KACjBmB,gBAAiBA,GAZZhG,EAML8Q,gBAUAjN,EAAMkN,eAAiB,YACvBlN,EAAMmN,gBAAkB,0DAG1B,IAAMC,EAAWJ,EAAQ5D,IAAI,SAACK,EAAQ9B,GAAT,OAC3B7N,EAAAC,EAAAC,cAACqT,GAADxV,OAAAyV,OAAA,CACEzN,IAAK8H,EACL/D,WAAYjK,EAAKhC,MAAMiM,WACvBwI,WAAYzS,EAAKhC,MAAMyU,YACnB3C,EAJN,CAKEC,aAAc/P,EAAKhC,MAAM+R,aACzBG,aAAclQ,EAAKhC,MAAMkS,aACzBI,eAAgBtQ,EAAKhC,MAAMsS,oBAK/B,OACEnQ,EAAAC,EAAAC,cAAA,OACEE,UAAU,cACV8F,MAAOA,GACNoN,UA7CgB7S,IAAMC,YCQzB+S,GAAa,KAkUJC,eA9Tb,SAAAA,EAAY7V,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyV,IACjB5V,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2V,GAAAtV,KAAAH,KAAMJ,KAcR8V,WAAa,SAACxN,GAAU,IACd+M,EAAYpV,EAAKkB,MAAjBkU,QACFU,EAAU7V,OAAA6Q,EAAA,EAAA7Q,CAAOmV,GAEjBW,EAAY1N,EAAQ,GAC1BrI,EAAKgW,sBAAsBF,EAAYC,GACvC/V,EAAKS,SAAS,CACZ2U,QAASU,EACTC,UAAWA,KAvBI/V,EA2BnBiW,oBAAsB,SAACb,EAASW,GAC9B,IAAK,IAAIhO,EAAI,EAAGA,EAAIqN,EAAQlN,OAAQH,IAAK,CACvC,IAAMmO,EAAQlW,EAAKmW,YAAYf,EAAQrN,GAAGsJ,EAAG0E,GACvCK,EAAYpW,EAAKmW,YAAYf,EAAQrN,GAAGM,MAAO0N,GACrDX,EAAQrN,GAAGsJ,EAAI6E,EACfd,EAAQrN,GAAGM,MAAQ+N,IAhCJpW,EAoCnBgW,sBAAwB,SAACZ,EAASW,GAChC,IAAK,IAAIhO,EAAI,EAAGA,EAAIqN,EAAQlN,OAAQH,IAAK,CACvC,IAAMsO,EAAUrW,EAAKsW,cAAclB,EAAQrN,GAAGsJ,EAAG0E,GAC3CQ,EAAevW,EAAKsW,cAAclB,EAAQrN,GAAGM,MAAO0N,GAC1DX,EAAQrN,GAAGsJ,EAAIgF,EACfjB,EAAQrN,GAAGM,MAAQkO,IAzCJvW,EA6CnBsW,cAAgB,SAACE,EAAKT,GACpB,OAAOpJ,KAAK8J,MAAMD,EAAMT,EAAYJ,KA9CnB3V,EAiDnBmW,YAAc,SAACK,EAAKT,GAClB,OAAOpJ,KAAK8J,MAAMD,EAAMb,GAAaI,IAlDpB/V,EAqDnB0W,aAAe,SAACxG,EAAa7H,EAAOsO,GACd,OAAhBzG,GAGJ5O,IAAMyC,IAAI,wBAA0BmM,GACjC1O,KAAK,SAAAC,GACJ,IAAM6E,EAAS7E,EAAIE,KACnB3B,EAAKS,SAAS,CACZ2U,QAAS9O,GACR,WACDtG,EAAK6V,WAAWxN,GAChBrI,EAAK4W,aAAaD,QAhEP3W,EAuJnBoR,qBAAuB,SAACxQ,EAAMoQ,GAC5BhR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAOoQ,KAzJOhR,EA6JnB6W,mBAAqB,SAACrW,GACpBR,EAAKD,MAAM+W,eAAetW,EAAMG,OAAOE,QA9JtBb,EAiKnB+W,wBAA0B,SAACjO,GACzB9I,EAAKD,MAAMgX,wBAAwBjO,IAlKlB9I,EAqKnBgX,YAAc,WACZ,IAAMlB,EAAatI,KAAKC,MAAMD,KAAKyJ,UAAUjX,EAAKkB,MAAMkU,UAChDW,EAAc/V,EAAKkB,MAAnB6U,UACR/V,EAAKiW,oBAAoBH,EAAYC,GACrCzU,IAAMC,KAAK,sBAAuBuU,GAC/BtU,KAAK,SAAAC,OA1KSzB,EA8KnB8R,aAAe,SAACD,GAAW,IACjBuD,EAAYpV,EAAKkB,MAAjBkU,QACFrF,EAAQqF,EAAQpF,UAAU,SAAAkH,GAAC,OAAIA,EAAEpR,KAAO+L,EAAO/L,KAC/CgQ,EAAU7V,OAAA6Q,EAAA,EAAA7Q,CAAOmV,GACvBU,EAAW/F,GAAOsB,EAAIQ,EAAOR,EAC7ByE,EAAW/F,GAAO6B,EAAIC,EAAOD,EAC7BkE,EAAW/F,GAAO1H,MAAQwJ,EAAOxJ,MACjCyN,EAAW/F,GAAO3G,OAASyI,EAAOzI,OAClCpJ,EAAKS,SAAS,CACZ2U,QAASU,KAvLM9V,EA2LnBmX,aAAe,WAKb,IALmB,IAAAC,EAGfpX,EAAKkB,MADPkU,eAFiB,IAAAgC,EAEP,GAFOA,EAIbT,EAAe,GACZ5O,EAAI,EAAGA,EAAIqN,EAAQlN,OAAQH,IAAK,CACvC,IAAM8J,EAASuD,EAAQrN,GACvB,GAAI8J,EAAOtP,OAASyR,EAAkB,KAC5BL,EAAe9B,EAAf8B,WACF0D,EAAc,GACpB,GAAI1D,IAAeK,EAAkB,CAKnC,IALmC,IAAAsD,EAG/BzF,EADFd,kBAFiC,IAAAuG,EAEpB,GAFoBA,EAI7BC,EAAc,GACXC,EAAI,EAAGA,EAAIzG,EAAW7I,OAAQsP,IAAK,CAC1C,IAAMC,EAAW1G,EAAWyG,GACxBC,EAASzG,WACXuG,EAAYrU,KAAKuU,EAAS5W,OAG9BwW,EAAYxW,MAAQ0W,EAChBA,EAAYrP,SAAW6I,EAAW7I,SACpCmP,EAAYK,OAAS,mBAEd/D,IAAeK,IACxBqD,EAAYxW,MAAQgR,EAAOhR,OAE7BwW,EAAYxE,MAAQhB,EAAOlQ,KAAKgW,eAChCN,EAAY9U,KAAOsP,EAAO8B,WAC1BgD,EAAazT,KAAKmU,MAzNLrX,EA8NnB4X,UAAY,aA9NO5X,EAkOnB2G,cAAgB,WAAM,IAIdqL,EADFhS,EAAKkB,MADP2F,eAGFvF,IAAMwF,OAAN,cAAAhC,OAA2BkN,IACxBxQ,KAAK,SAAAC,GAAO,IACH2T,EAAYpV,EAAKkB,MAAjBkU,QACFrF,EAAQqF,EAAQpF,UAAU,SAAAkH,GAAC,OAAIA,EAAEpR,KAAOkM,IACxC8D,EAAU7V,OAAA6Q,EAAA,EAAA7Q,CAAOmV,GACvBU,EAAW+B,OAAO9H,EAAO,GACzB/P,EAAKS,SAAS,CACZ2U,QAASU,IAEX9V,EAAK+G,+BAhPQ/G,EAoPnBgH,yBAA2B,SAACgL,GAC1BhS,EAAKS,SAAS,CACZoG,eAAgBmL,EAChB9K,0BAA0B,KAvPXlH,EA2PnB+G,0BAA4B,WAC1B/G,EAAKS,SAAS,CACZoG,eAAgB,GAChBK,0BAA0B,KA5P5BlH,EAAKkB,MAAQ,CACXkU,QAAS,GACTW,UAAW,KACX/J,YAAY,EACZqJ,eAAe,EACfnO,0BAA0B,EAC1BL,eAAgB,IARD7G,yHAqEN2W,GAEX,IAFyB,IACjBvB,EAAYjV,KAAKe,MAAjBkU,QACCrN,EAAI,EAAGA,EAAIqN,EAAQlN,OAAQH,IAAK,CACvC,IAAM8J,EAASuD,EAAQrN,GACnB8J,EAAOtP,OAASyR,EAClB7T,KAAK2X,WAAWjG,EAAQ8E,GACf9E,EAAOtP,OAASyR,GACzB7T,KAAK4X,YAAYlG,uCAKZA,EAAQ8E,GAAc,IAAA5U,EAAA5B,KACzB6X,EAA0B,OAAjBrB,EAAwB,GAAKA,EACpCvB,EAAYjV,KAAKe,MAAjBkU,QACR9T,IAAMC,KAAN,wBAAAuD,OAAmC+M,EAAO/L,IAAMkS,GAC7CxW,KAAK,SAAAC,GACJ,IAAMoS,EAAcpS,EAAIE,KAClBoO,EAAQqF,EAAQpF,UAAU,SAAAkH,GAAC,OAAIA,EAAEpR,KAAO+N,EAAY/N,KACpDgQ,EAAU7V,OAAA6Q,EAAA,EAAA7Q,CAAOmV,GACvBU,EAAW/F,GAAO8D,YAAcA,EAChC9R,EAAKtB,SAAS,CACZ2U,QAASU,0CAKLa,GAEV,IAFwB,IAChBvB,EAAYjV,KAAKe,MAAjBkU,QACCrN,EAAI,EAAGA,EAAIqN,EAAQlN,OAAQH,IAAK,CACvC,IAAM8J,EAASuD,EAAQrN,GACnB8J,EAAOtP,OAASyR,GAClB7T,KAAK2X,WAAWjG,EAAQ8E,wCAKlB9E,GAAQ,IAAAoG,EAAA9X,KACViV,EAAYjV,KAAKe,MAAjBkU,QACAzB,EAAe9B,EAAf8B,WACR,GAAIA,IAAeK,EACjB1S,IAAMC,KAAN,wBAAAuD,OAAmC+M,EAAO/L,KACvCtE,KAAK,SAAAC,GAIJ,IAHA,IAAMoS,EAAcpS,EAAIE,KAClB4M,EAAkBuF,EAAiBD,EAAYlS,MAC/CoP,EAAa,GACVhJ,EAAI,EAAGA,EAAIwG,EAAgBrG,OAAQH,IAE1C,IADA,IAD+CmQ,EAChCjY,OAAOkY,OAAO5J,EAAgBxG,IAC7CqQ,EAAA,EAAAA,EAAAF,EAAAhQ,OAAAkQ,IAA0B,CAArB,IAAMC,EAAGH,EAAAE,GACZrH,EAAW7N,KAAK,CACdrC,MAAOwX,EACPrH,WAAW,IAIjB,IAAMjB,EAAQqF,EAAQpF,UAAU,SAAAkH,GAAC,OAAIA,EAAEpR,KAAO+N,EAAY/N,KACpDgQ,EAAU7V,OAAA6Q,EAAA,EAAA7Q,CAAOmV,GACvBU,EAAW/F,GAAO8D,YAAcA,EAChCiC,EAAW/F,GAAOgB,WAAaA,EAC/BkH,EAAKxX,SAAS,CACZ2U,QAASU,WAGV,GAAInC,IAAeK,EAAwB,CAUhD,IAAMjE,EAAQqF,EAAQpF,UAAU,SAAAkH,GAAC,OAAIA,EAAEpR,KAAO+L,EAAO/L,KAC/CgQ,EAAU7V,OAAA6Q,EAAA,EAAA7Q,CAAOmV,GACvBU,EAAW/F,GAAOlP,MAAQ,GAC1BV,KAAKM,SAAS,CACZ2U,QAASU,sCAgHN,IAED1N,EAAQ,CACZC,MAF0BlI,KAAKJ,MAAzBuY,gBAEmB,MAG3B,OACEpW,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iCAAiC8F,MAAOA,GAEpDjI,KAAKJ,MAAMyU,WAEVtS,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kCACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAf,WACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,SACLC,MAAOV,KAAKJ,MAAMqJ,OAClB5G,SAAUrC,KAAK0W,mBACfvU,UAAU,eACV8F,MAAO,CAACC,MAAO,WAGjBnG,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAACmW,EAAD,CAAa1X,MAAOV,KAAKJ,MAAMwK,gBAAiB/H,SAAUrC,KAAK4W,2BAGjE7U,EAAAC,EAAAC,cAACsP,EAAD,CAAU9Q,KAAK,aAAaC,MAAM,eAAeuJ,QAASjK,KAAKe,MAAM8K,WAAYxJ,SAAUrC,KAAKiR,uBAChGlP,EAAAC,EAAAC,cAACsP,EAAD,CAAU9Q,KAAK,gBAAgBC,MAAM,iBAAiBuJ,QAASjK,KAAKe,MAAMmU,cAAe7S,SAAUrC,KAAKiR,wBAGxG,KAEJlP,EAAAC,EAAAC,cAACoW,GAAD,CACEnQ,MAAOlI,KAAKe,MAAM6U,UAClB3M,OAAQjJ,KAAKJ,MAAMqJ,OACnBmB,gBAAiBpK,KAAKJ,MAAMwK,gBAC5ByB,WAAY7L,KAAKe,MAAM8K,WACvBqJ,cAAelV,KAAKe,MAAMmU,cAC1BD,QAASjV,KAAKe,MAAMkU,QACpBZ,WAAYrU,KAAKJ,MAAMyU,WACvB1C,aAAc3R,KAAK2R,aACnBG,aAAc9R,KAAKJ,MAAMkS,aACzBI,eAAgBlS,KAAK6G,2BAEvB9E,EAAAC,EAAAC,cAACkG,EAAD,CACE9D,KAAMrE,KAAKe,MAAMgG,yBACjBnC,QAAS5E,KAAK4G,0BACdrC,WAAY,oBACZC,MAAO,oBACPzC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,gDAGAJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKwG,eAAzC,mBAzToBhE,IAAMC,gCC+CrB6V,4CA1Db,SAAAA,EAAY1Y,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsY,IACjBzY,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwY,GAAAnY,KAAAH,KAAMJ,KAYR2Y,eAAiB,SAAC/T,GAChB3E,EAAKS,SAAS,CACZkY,UAAWhU,KAbb3E,EAAKkB,MAAQ,GAFIlB,mFAOjB,IAAM2Y,EAAYxY,KAAKJ,MAAM4Y,UAC7BxY,KAAKM,SAAS,CACZkY,UAAWA,qCAqBb,IAXO,IAAA5W,EAAA5B,KAELyE,EACEzE,KAAKJ,MADP6E,SAIA+T,EACExY,KAAKe,MADPyX,UAGIC,EAAa,GACfC,EAAa,KACR9Q,EAAI,EAAGA,EAAInD,EAASsD,OAAQH,IAC/BnD,EAASmD,IAAI,WACf,IAAMpD,EAAQC,EAASmD,GAAGhI,MAAM4E,MAC5BmU,EAAS,GACTnU,IAAUgU,IACZG,EAAS,oBACTD,EAAajU,EAASmD,GAAGhI,MAAM6E,UAGjCgU,EAAW1V,KACThB,EAAAC,EAAAC,cAAA,MAAIE,UAAS,mBAAAwC,OAAqBgU,GAAU7Q,IAAKF,EAAGrF,QAAS,kBAAMX,EAAK2W,eAAe/T,KAASA,IATnF,GAcnB,OACEzC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cACXsW,GAEH1W,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZuW,WApDQlW,IAAMC,YCiEVmW,eA/Db,SAAAA,EAAYhZ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4Y,IACjB/Y,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8Y,GAAAzY,KAAAH,KAAMJ,KAcRiZ,mBAAqB,SAACxY,GACpB,IAAMI,EAAOZ,EAAKD,MAAMa,KAClBC,EAAQL,EAAMG,OAAOE,MAC3Bb,EAAKD,MAAMyC,SAAS5B,EAAMC,IAhB1Bb,EAAKkB,MAAQ,GAFIlB,wEAqBV,IAAAuE,EAOHpE,KAAKJ,MALPc,EAFK0D,EAEL1D,MAFKoY,EAAA1U,EAGL2U,eAHK,IAAAD,EAGK,GAHLA,EAILE,EAJK5U,EAIL4U,YACAC,EALK7U,EAKL6U,cALKC,EAAA9U,EAML+U,WAGIC,EAAa,GAyBnB,YAlCO,IAAAF,OAWLE,EAAWrW,KACThB,EAAAC,EAAAC,cAAA,UAAQvB,MAAM,GAAGoH,IAAI,MAIzBiR,EAAQzJ,QAAQ,SAAC4E,EAAQtE,GACvB,IAAIlP,EACA4I,EACA0P,GAAeC,GAEjBvY,EAAQwT,EAAO8E,GACf1P,EAAU4K,EAAO+E,KAGjBvY,EAAQwT,EACR5K,EAAU4K,GAGZkF,EAAWrW,KACThB,EAAAC,EAAAC,cAAA,UAAQvB,MAAOA,EAAOoH,IAAK8H,GAAQtG,MAKrCvH,EAAAC,EAAAC,cAAA,UAAQvB,MAAOA,EAAO2B,SAAUrC,KAAK6Y,oBAClCO,UA3DY5W,IAAMC,WC+hBZ4W,eAvgBb,SAAAA,EAAYzZ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqZ,IACjBxZ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuZ,GAAAlZ,KAAAH,KAAMJ,KAiCR0Z,YAlCmB,eAAApW,EAAApD,OAAAqD,EAAA,EAAArD,CAAAsD,EAAApB,EAAAqB,KAkCL,SAAAC,EAAOuO,GAAP,IAAAzK,EAAA,OAAAhE,EAAApB,EAAAwB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZ9D,EAAKS,SAAST,EAAKwG,cADP5C,EAAAE,KAAA,EAGkB0D,IAHlB,OAGND,EAHM3D,EAAAI,KAIZhE,EAAKS,SAAS,CACZ8G,gBAAiBA,IAGnBjG,IAAMyC,IAAI,iBACPvC,KAAK,SAAAC,GACJ,IAAMiY,EAAajY,EAAIE,KACvB3B,EAAKS,SAAS,CACZkZ,gBAAiBD,MAIN,OAAb1H,EACFhS,EAAKS,SAAS,CACZuR,SAAU,QAGZhS,EAAKS,SAAS,CACZuR,SAAUA,IAEZ1Q,IAAMyC,IAAI,cAAgBiO,GACvBxQ,KAAK,SAAAC,GACJ,IAAMoQ,EAASpQ,EAAIE,KAEjBY,EAKEsP,EALFtP,KACAmR,EAIE7B,EAJF6B,UACAC,EAGE9B,EAHF8B,WACAgE,EAEE9F,EAFF8F,eACApI,EACEsC,EADFtC,aAEF,GAAIhN,IAASyR,GAMX,GALAhU,EAAKS,SAAS,CACZiT,UAAWA,EACXnE,aAAcA,IAGZmE,IAAcM,EAAe,KAAA4F,EAI3B/H,EAAOlQ,KAFT6M,EAF6BoL,EAE7BpL,OACAC,EAH6BmL,EAG7BnL,SAEFzO,EAAKS,SAAS,CACZ+N,OAAQA,EACRC,SAAUA,UAGLlM,IAASyR,GAClBhU,EAAKS,SAAS,CACZkT,WAAYA,EACZgE,eAAgBA,IASpB3X,EAAKS,SAAS,CACZuR,SAAUA,EACVrN,MAAOkN,EAAOlN,MACd0M,EAAGQ,EAAOR,EACVO,EAAGC,EAAOD,EACVvJ,MAAOwJ,EAAOxJ,MACde,OAAQyI,EAAOzI,OACfyQ,SAAUhI,EAAOgI,SACjBtX,KAAMA,EACNuX,iBAAkBjI,EAAOiI,iBACzB1R,MAAOyJ,EAAOzJ,OACb,WACDpI,EAAK+Z,gBA1ED,wBAAAnW,EAAAO,SAAAV,MAlCK,gBAAAuW,GAAA,OAAA3W,EAAAe,MAAAjE,KAAAkE,YAAA,GAAArE,EAmHnBO,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SArHnBb,EAyHnBoR,qBAAuB,SAACxQ,EAAMoQ,GAC5B,IAAM5I,EAAKnI,OAAAga,EAAA,EAAAha,CAAA,GAAOD,EAAKkB,MAAMkH,OAC7BA,EAAM,CAACxH,IAASoQ,EAChBhR,EAAKS,SAAS,CACZ2H,MAAOA,KA7HQpI,EAiInBka,sBAAwB,SAACC,GACvBna,EAAKS,SAAS,CACZoZ,SAAUM,KAnIKna,EAuInBoa,0BAA4B,SAACxZ,EAAMC,GACjC,IAAMwZ,EAAW5N,SAAS5L,EAAO,KAAO,EACxCb,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAOyZ,KA1IOra,EA8InBgZ,mBAAqB,SAACpY,EAAMC,GAC1Bb,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAOC,KAhJOb,EAoJnB4F,KAAO,WAAM,IAAA3E,EAQPjB,EAAKkB,MANP8Q,EAFS/Q,EAET+Q,SACArN,EAHS1D,EAGT0D,MACAmV,EAJS7Y,EAIT6Y,iBACAD,EALS5Y,EAKT4Y,SACAtX,EANStB,EAMTsB,KACA6F,EAPSnH,EAOTmH,MAGIyJ,EAAS,CACblN,MAAOA,EACPuL,YAAalQ,EAAKD,MAAMmQ,YACxB3N,KAAMA,EACNuX,iBAAkBA,EAClBD,SAAUA,EACVzR,MAAOA,GAGT,GAAI7F,IAASyR,EAAiB,KAAAvM,EAIxBzH,EAAKkB,MAFPwS,EAF0BjM,EAE1BiM,UACAnE,EAH0B9H,EAG1B8H,aAKF,GAHAsC,EAAOtC,aAAeA,EACtBsC,EAAO6B,UAAYA,EAEfA,IAAcM,SAEX,GAAIN,IAAcM,EAAe,KAAAsG,EAIlCta,EAAKkB,MAFPsN,EAFoC8L,EAEpC9L,OACAC,EAHoC6L,EAGpC7L,SAEFoD,EAAOlQ,KAAO,CACZ6M,OAAQA,EACRC,SAAUA,SAGT,GAAIlM,IAASyR,EAAkB,KAAAuG,EAIhCva,EAAKkB,MAFPyS,EAFkC4G,EAElC5G,WACAgE,EAHkC4C,EAGlC5C,eAEF9F,EAAO8B,WAAaA,EACpB9B,EAAOlQ,KAAO,CACZgW,eAAgBA,GAUH,OAAb3F,EACF1Q,IAAMC,KAAK,aAAcsQ,GACtBrQ,KAAK,SAAAC,GACJzB,EAAKD,MAAMya,YAGf3I,EAAO/L,GAAKkM,EACZ1Q,IAAM6E,IAAI,aAAc0L,GACrBrQ,KAAK,SAAAC,GACJzB,EAAKD,MAAMya,aArNAxa,EA0NnB+Z,SAAW,WACT,IAAMU,EAAc,CAClBX,iBAAkB9Z,EAAKkB,MAAM4Y,iBAC7BD,SAAU7Z,EAAKkB,MAAM2Y,UAGvBvY,IAAMC,KAAK,sBAAuBkZ,GAC/BjZ,KAAK,SAAAC,GACJ,IAAM6E,EAAS7E,EAAIE,KACnB3B,EAAKS,SAAS,CACZoT,YAAavN,OApOFtG,EAyOnB0a,gBAAkB,WAAM,IAAAC,EAKlB3a,EAAKkB,MAHPqO,EAFoBoL,EAEpBpL,aACAqL,EAHoBD,EAGpBC,gBACAC,EAJoBF,EAIpBE,iBAGF,IAAe,IADDtL,EAAaS,UAAU,SAAAC,GAAC,OAAIA,EAAEN,aAAeiL,IACzC,CAChB,IAAME,EAAe7a,OAAA6Q,EAAA,EAAA7Q,CAAOsP,GAC5BuL,EAAgB5X,KAAK,CACnByM,WAAYiL,EACZ1K,YAAa2K,IAEf7a,EAAKS,SAAS,CACZ8O,aAAcuL,MAvPD9a,EA4PnB+a,mBAAqB,SAACC,GAAU,IACtBzL,EAAiBvP,EAAKkB,MAAtBqO,aACFQ,EAAQR,EAAaS,UAAU,SAAAC,GAAC,OAAKA,EAAEN,aAAeqL,EAAMrL,YAAgBM,EAAEC,cAAgB8K,EAAM9K,cAC1G,IAAe,IAAXH,EAAc,CAChB,IAAM+K,EAAe7a,OAAA6Q,EAAA,EAAA7Q,CAAOsP,GAC5BuL,EAAgBjD,OAAO9H,EAAO,GAC9B/P,EAAKS,SAAS,CACZ8O,aAAcuL,MAnQD9a,EAwQnBib,cAAgB,WACd,GAAIjb,EAAKkB,MAAMwS,YAAcM,EAAe,KAAAkH,EAKtClb,EAAKkB,MAHPsN,EAFwC0M,EAExC1M,OACAC,EAHwCyM,EAGxCzM,SAHwC0M,EAAAD,EAIxCrH,mBAJwC,IAAAsH,EAI1B,GAJ0BA,EAM1CnZ,QAAQC,IAAI,gBAAiBuM,EAAQC,GACrC,IAAM9M,EAAOmS,EAAiBD,EAAYlS,MACpCuS,EAAcC,GAAwBxS,EAAM6M,EAAQC,GAC1DzO,EAAKS,SAAS,CACZyT,YAAaA,MAnRAlU,EAwRnBob,mBAAqB,WAAM,IAAAC,EAIrBrb,EAAKkB,MAFPwS,EAFuB2H,EAEvB3H,UAFuB4H,EAAAD,EAGvBxH,YAEIxE,QALmB,IAAAiM,EAGT,GAHSA,GAKGjM,SAAW,GAEnCkM,EAAgBrZ,EAAAC,EAAAC,cAAA,4BACpB,GAAIsR,IAAcM,SAEX,GAAIN,IAAcM,EAAe,KAAAwH,EAKlCxb,EAAKkB,MAHPgT,EAFoCsH,EAEpCtH,YACA1F,EAHoCgN,EAGpChN,OACAC,EAJoC+M,EAIpC/M,SAGF8M,EACErZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,KAAGe,MAAM,qBAAhB,cACAjB,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACqZ,GAAD,CACE7a,KAAM,SACNC,MAAO2N,EACPhM,SAAUxC,EAAKgZ,mBACfE,QAAS7J,EACT+J,cAAe,OACfD,YAAa,SAIfjX,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAACqZ,GAAD,CACE7a,KAAM,WACNC,MAAO4N,EACPjM,SAAUxC,EAAKgZ,mBACfE,QAAS7J,EACT+J,cAAe,OACfD,YAAa,SAEfjX,EAAAC,EAAAC,cAAA,UAAQM,QAAS1C,EAAKib,eAAtB,kBACA/Y,EAAAC,EAAAC,cAACgS,GAAAjS,EAAD,CACEkS,OAAQH,EACR9L,MAAO,CAACgB,OAAQ,QAASf,MAAO,QAChC/F,UAAU,uBAIlB,OAAOiZ,GAvUPvb,EAAKkB,MAAQlB,EAAKwG,aAFDxG,qHA4UV,IAAA+B,EAAA5B,KAAAub,EAMHvb,KAAKe,MAJP2S,EAFK6H,EAEL7H,YAFK8H,EAAAD,EAGLnU,uBAHK,IAAAoU,EAGa,GAHbA,EAAAC,EAAAF,EAILnM,oBAJK,IAAAqM,EAIU,GAJVA,EAAAC,EAAAH,EAKL/B,uBALK,IAAAkC,EAKa,GALbA,EAQDla,EAAOmS,EAAiBD,EAAYlS,MACpC0N,EAAUwE,EAAYxE,SAAW,GACjCzN,EAAQiS,EAAYjS,MAEpBka,EAAavM,EAAaiC,IAAI,SAAAwJ,GAAK,OACvC9Y,EAAAC,EAAAC,cAAA,OAAK6F,IAAK+S,EAAMrL,YACdzN,EAAAC,EAAAC,cAAA,sBAAc4Y,EAAMrL,YACpBzN,EAAAC,EAAAC,cAAA,yBAAiB4Y,EAAM9K,aACvBhO,EAAAC,EAAAC,cAAA,UAAQM,QAAS,kBAAMX,EAAKgZ,mBAAmBC,KAA/C,aAIEe,EAAc1M,EAAQmC,IAAI,SAAAwK,GAAG,OACjC9Z,EAAAC,EAAAC,cAAA,OAAK6F,IAAK+T,EAAIpb,MAAOob,EAAIpb,KAAzB,IAAgCob,EAAIC,YAGtC,OACE/Z,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKyF,MAAzC,QACA1D,EAAAC,EAAAC,cAACqZ,GAAD,CACE7a,KAAM,OACNC,MAAOV,KAAKe,MAAMqB,KAClBC,SAAUrC,KAAK6Y,mBACfE,QAASlF,EACTsF,YAAY,IAGdpX,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAC8Z,GAAD,CAAMvD,UAAU,SACdzW,EAAAC,EAAAC,cAAA,OAAKuC,MAAM,SACTzC,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,QACLC,MAAOV,KAAKe,MAAMyD,MAClBnC,SAAUrC,KAAKI,oBAGjB2B,EAAAC,EAAAC,cAACsP,EAAD,CAAU9Q,KAAK,aAAaC,MAAM,cAAcuJ,QAASjK,KAAKe,MAAMkH,MAAMuM,WAAYnS,SAAUrC,KAAKiR,uBACrGlP,EAAAC,EAAAC,cAACsP,EAAD,CAAU9Q,KAAK,YAAYC,MAAM,aAAauJ,QAASjK,KAAKe,MAAMkH,MAAM+T,UAAW3Z,SAAUrC,KAAKiR,wBAGpGlP,EAAAC,EAAAC,cAAA,OAAKuC,MAAM,SACTzC,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACqZ,GAAD,CACE7a,KAAM,mBACNC,MAAOV,KAAKe,MAAM4Y,iBAClBtX,SAAUrC,KAAKia,0BACflB,QAAS3R,EACT6R,cAAe,OACfD,YAAa,OAGfjX,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACga,GAAAja,EAAD,CACEiG,MAAO,CAAEiU,UAAW,OACpBxb,MAAOV,KAAKe,MAAM2Y,SAClBjS,KAAK,QACL0U,MAAM,QACN1b,KAAK,QACL4B,SAAUrC,KAAK+Z,sBACf9Q,OAAQ,QACRf,MAAO,OACPkU,SAAU,GACVC,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBC,WAAY,CACVC,iBAAiB,EACjBC,QAAS,KAIb3a,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAK4Z,UAAzC,cAGF7X,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAC6R,GAAD,CACEtS,KAAMA,EACN0N,QAASA,EACTzN,MAAOA,IAGTM,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,WACG2Z,IAKH5b,KAAKe,MAAMqB,OAASyR,EAElB9R,EAAAC,EAAAC,cAAA,OAAKuC,MAAM,SACTzC,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAACqZ,GAAD,CACE7a,KAAM,YACNC,MAAOV,KAAKe,MAAMwS,UAClBlR,SAAUrC,KAAK6Y,mBACfE,QAASlF,GACTsF,YAAY,IAEdpX,EAAAC,EAAAC,cAAA,wBACCjC,KAAKib,sBAEN,KAIJjb,KAAKe,MAAMqB,OAASyR,EAElB9R,EAAAC,EAAAC,cAAA,OAAKuC,MAAM,iBACTzC,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACqZ,GAAD,CACE7a,KAAM,kBACNC,MAAOV,KAAKe,MAAM0Z,gBAClB1B,QAAS7J,EACT7M,SAAUrC,KAAK6Y,mBACfI,cAAe,OACfD,YAAa,SAGfjX,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACqZ,GAAD,CACE7a,KAAM,mBACNC,MAAOV,KAAKe,MAAM2Z,iBAClB3B,QAASS,EACTnX,SAAUrC,KAAKia,0BACfhB,cAAe,OACfD,YAAa,OAEfjX,EAAAC,EAAAC,cAAA,WACG0Z,GAEH5Z,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKua,iBAAzC,QAEA,KAIJva,KAAKe,MAAMqB,OAASyR,EAElB9R,EAAAC,EAAAC,cAAA,OAAKuC,MAAM,UACTzC,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAACqZ,GAAD,CACE7a,KAAM,aACNC,MAAOV,KAAKe,MAAMyS,WAClBnR,SAAUrC,KAAK6Y,mBACfE,QAASlF,EACTsF,YAAY,KAGd,KAIJnZ,KAAKe,MAAMqB,OAASyR,EAElB9R,EAAAC,EAAAC,cAAA,OAAKuC,MAAM,mBACTzC,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,QACLC,MAAOV,KAAKe,MAAMyW,eAClBnV,SAAUrC,KAAKI,qBAGjB,6CAtfd,MAAO,CACLgH,gBAAiB,GACjByK,SAAU,KACVrN,MAAO,GACPkV,SAAU,GACVC,iBAAkB,GAClBjG,YAAa,GACbtR,KAAMyR,EACNL,WAAYK,EACZN,UAAWM,GACX5L,MAAO,CACLuM,YAAY,EACZwH,WAAW,GAEbxE,eAAgB,GAChBpI,aAAc,GACdoK,gBAAiB,GACjBiB,gBAAiB,GACjBC,iBAAkB,GAClBrM,OAAQ,GACRC,SAAU,GACVyF,YAAa,WA7BWvR,IAAMC,WCN9Bka,uBAEJ,SAAAA,EAAY/c,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2c,IACjB9c,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6c,GAAAxc,KAAAH,KAAMJ,KAkERgd,wBAA0B,WACxB,IAAMC,EAAMhd,EAAKD,MAAMkd,SAASC,OAE1BC,EADS,IAAIC,gBAAgBJ,GACNjZ,IAAI,QAE3BuU,EAAkBtY,EAAKqd,eAE7Brd,EAAKS,SAAS,CACZ6c,YAAY,EACZ1c,KAAMuc,EACN7E,gBAAiBA,GAChB,WACDhX,IAAMyC,IAAN,sBAAAe,OAAgCqY,IAC7B3b,KAAK,SAAAC,GACJ,IAAM6E,EAAS7E,EAAIE,KACnB3B,EAAKS,SAAS,CACZyP,YAAa5J,EAAOR,GACpBlF,KAAM0F,EAAO1F,KACbwH,MAAO9B,EAAO8B,OACb,WACDpI,EAAKud,iBAvFIvd,EA6FnBO,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SA/FnBb,EAmGnBqd,aAAe,WAEb,OADiBxS,IAASC,YAAT7K,OAAAwF,EAAA,EAAAxF,QAAAwF,EAAA,EAAAxF,CAAAD,KACDqM,YAAc,IArGbrM,EAwGnBwd,kBAAoB,WAAM,IAChBC,EAAuBzd,EAAKkB,MAA5Buc,mBACR,GAAIA,EACFC,cAAcD,GACdzd,EAAKS,SAAS,CACZgd,mBAAoB,SAEjB,KACGE,EAAoB3d,EAAKkB,MAAzByc,gBACJC,EAAWnR,SAASkR,EAAiB,KAAO,GAChDC,EAAWA,EAAW,EAAI,EAAIA,EAC9B,IAAMC,EAAUC,YAAY,WAG1B9d,EAAK+d,uBACO,IAAXH,GACH5d,EAAKS,SAAS,CACZgd,mBAAoBI,MAzHP7d,EA8HnBud,QAAU,WACRvd,EAAKge,oBACLhe,EAAK+d,uBAhIY/d,EAmInBge,kBAAoB,WAAM,IAAA/c,EAIpBjB,EAAKkB,MAFPgP,EAFsBjP,EAEtBiP,YACAoI,EAHsBrX,EAGtBqX,gBAEFtY,EAAKie,gBAAgBC,QAAQxH,aAAaxG,EAAaoI,EAAiB,OAxIvDtY,EA2InB+d,oBAAsB,WACpB,IAAMI,GAAM,IAAIC,MAAOC,eAAeC,QAAQ,0BAA2B,MACzEte,EAAKS,SAAS,CACZ8d,cAAeJ,KA9IAne,EAkJnB4F,KAAO,WACL5D,QAAQC,IAAI,QADD,IAAAwF,EAMPzH,EAAKkB,MAHPgP,EAHSzI,EAGTyI,YAKIsO,EAAY,CAChB1Y,GAAIoK,EACJtP,KAVS6G,EAIT7G,KAOAwH,MAXSX,EAKTW,OASF9G,IAAM6E,IAAI,iBAAkBqY,GACzBhd,KAAK,SAAAC,MAGRzB,EAAKie,gBAAgBC,QAAQlH,cAE7BhX,EAAKD,MAAM0e,gBAAgBvO,GAE3BlQ,EAAKS,SAAS,CACZ+T,YAAY,KAzKGxU,EA6KnB0e,KAAO,WACL1e,EAAKS,SAAS,CACZ+T,YAAY,KA/KGxU,EAmLnB2e,WAAa,WACX3e,EAAKS,SAAS,CACZ+T,YAAY,KArLGxU,EAyLnB4e,aAAe,WACb5e,EAAKS,SAAS,CACZoe,qBAAqB,IAGvB7e,EAAKge,qBA9LYhe,EAiMnB8e,oBAAsB,SAAC9M,GACrBhS,EAAK+e,gBAAgBb,QAAQzE,YAAYzH,GACzChS,EAAKS,SAAS,CACZoe,qBAAqB,KApMN7e,EAwMnBmX,aAAe,SAACR,GACd3W,EAAKie,gBAAgBC,QAAQtH,aAAaD,IAzMzB3W,EA4MnBgf,WAAa,WAAM,IACTpe,EAASZ,EAAKkB,MAAdN,KACFoc,EAAG,kCAAAlY,OAAqClE,GAC9Cqe,OAAOC,KAAKlC,EAAK,WA/MAhd,EAkNnBmf,iBAAmB,WACjBnf,EAAKD,MAAMkD,QAAQC,KAAnB,sCAnNiBlD,EAsNnB8W,eAAiB,SAAC1N,GAChB,IAAMhB,EAAKnI,OAAAga,EAAA,EAAAha,CAAA,GAAOD,EAAKkB,MAAMkH,OAC7BA,EAAMgB,OAASA,EACfpJ,EAAKS,SAAS,CACZ2H,MAAOA,KA1NQpI,EA8NnB+W,wBAA0B,SAACjO,GACzB,IAAMV,EAAKnI,OAAAga,EAAA,EAAAha,CAAA,GAAOD,EAAKkB,MAAMkH,OAC7BA,EAAMmC,gBAAkBzB,EACxB9I,EAAKS,SAAS,CACZ2H,MAAOA,KAlOQpI,EAsOnB2G,cAAgB,WAAM,IAAAC,EAGhB5G,EAAKkB,MADP2F,eAEIqJ,QAJc,IAAAtJ,EAED,GAFCA,GAIed,GACnCxE,IAAMwF,OAAN,iBAAAhC,OAA8BoL,IAC3B1O,KAAK,SAAAC,GACJzB,EAAKD,MAAMqf,kBAAkBlP,GAC7BlQ,EAAK+G,+BA9OQ/G,EAkPnBqf,gBAAkB,WAAM,IAAA/E,EAIlBta,EAAKkB,MACHsd,EAAY,CAChB1Y,GANoBwU,EAEpBpK,YAKAtP,KAPoB0Z,EAGpB1Z,MAMFZ,EAAKgH,yBAAyBwX,IA3Pbxe,EA8PnBgH,yBAA2B,SAACwX,GAC1Bxe,EAAKS,SAAS,CACZoG,eAAgB2X,EAChBtX,0BAA0B,KAjQXlH,EAqQnB+G,0BAA4B,WAC1B/G,EAAKS,SAAS,CACZoG,eAAgB,GAChBK,0BAA0B,KArQ5BlH,EAAKkB,MAAQ,CACX2d,qBAAqB,EACrB3X,0BAA0B,EAC1BL,eAAgB,GAChB2N,YAAY,EACZ8I,YAAY,EACZG,mBAAoB,GACpBc,cAAe,GACfZ,gBAAiB,GACjB2B,sBAAuB,GACvBpP,YAAa,EACbtP,KAAM,GACNwH,MAAO,GACPkQ,gBAAiB,KAGnBtY,EAAKie,gBAAkBtb,IAAM4c,YAC7Bvf,EAAK+e,gBAAkBpc,IAAM4c,YApBZvf,mFAuBC,IAAA+B,EAAA5B,KACd2F,EAAK3F,KAAKJ,MAAMyf,MAAMxH,OAAOlS,GAC3BoK,OAAqBuP,IAAP3Z,EAAmBA,EAAK,KAC5C9D,QAAQC,IAAI,oBAAqBiO,GAEjC,IAAM8M,EAAM7c,KAAKJ,MAAMkd,SAASC,OAChClb,QAAQC,IAAI,MAAO+a,GACnB,IAAMhF,EAAS,IAAIoF,gBAAgBJ,GACnChb,QAAQC,IAAI,SAAU+V,GARJ,IAAA0H,GAAA,EAAAC,GAAA,EAAAC,OAAAH,EAAA,IASlB,QAAAI,EAAAC,EAAgB9H,EAAO+H,UAAvBC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAhc,QAAAoc,MAAAR,GAAA,EAAkC,KAA1BS,EAA0BN,EAAAhf,MAChCmB,QAAQC,IAAIke,EAAK,GAAI,KAAMA,EAAK,KAVhB,MAAAC,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GAalB,IAAMtH,EAAkBnY,KAAKkd,eAC7Bld,KAAKM,SAAS,CACZ6X,gBAAiBA,GAChB,WACmB,OAAhBpI,EACFnO,EAAKtB,SAAS,CACZyP,YAAa,OAGf5O,IAAMyC,IAAN,iBAAAe,OAA2BoL,IACxB1O,KAAK,SAAAC,GACJ,IAAM6E,EAAS7E,EAAIE,KACnBI,EAAKtB,SAAS,CACZyP,YAAa5J,EAAOR,GACpBlF,KAAM0F,EAAO1F,KACbwH,MAAO9B,EAAO8B,OACb,WACDrG,EAAKwb,+DAOM,IACbE,EAAuBtd,KAAKe,MAA5Buc,mBACJA,GACFC,cAAcD,oCA6MT,IASH6C,EATGrI,EAAA9X,KAAAoa,EAMHpa,KAAKe,MAJPuc,EAFKlD,EAELkD,mBACAc,EAHKhE,EAGLgE,cACA/J,EAJK+F,EAIL/F,WACA8I,EALK/C,EAKL+C,WAEIiD,EAA2C,KAAvB9C,EAA4B,MAAQ,KAG1D+C,EAAwB,KACtBC,EACJve,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAhB,mBAAwCic,GAEhB,QAAtBgC,EAEEre,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,kBACLC,MAAOV,KAAKe,MAAMyc,gBAClBnb,SAAUrC,KAAKI,kBACf+B,UAAU,eACV8F,MAAO,CAACC,MAAO,UAEf,KAENnG,EAAAC,EAAAC,cAAA,UAAQE,UAAU,4BAA4BI,QAASvC,KAAKqd,mBAElC,OAAtB+C,EAEEre,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,cAAcC,KAAK,KAAK2H,YAAU,IAGxD3K,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,cAAcC,KAAK,KAAK2H,YAAU,KAK9D3K,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcI,QAASvC,KAAKugB,uBAA9C,gBACAxe,EAAAC,EAAAC,cAAA,UAAQE,UAAU,uBAAuBI,QAASvC,KAAKod,SACrDrb,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,WAAWC,KAAK,KAAK2H,YAAU,MA+B3D,OA1BKyQ,EAuBHkD,EAAwBC,EArBtBH,EADE9L,EAEAtS,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcI,QAASvC,KAAKwe,YAA9C,UACAzc,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcI,QAASvC,KAAKyF,MAA9C,QACA1D,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcI,QAASvC,KAAKkf,iBAA9C,UACAnd,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcI,QAAS,kBAAMuV,EAAK0I,oBAAoB,QAAxE,cACAze,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMuV,EAAK6G,oBAAoB,QAAnE,eAKF5c,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,UAAQE,UAAU,4BAA4BI,QAASvC,KAAK6e,YAC1D9c,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,KAAKC,KAAK,KAAK2H,YAAU,KAEjD3K,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKue,MAAzC,QACC+B,GASPve,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAEXgb,IAAe9I,EAEbtS,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACZnC,KAAKe,MAAMN,MAGdsB,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMN,KAClB4B,SAAUrC,KAAKI,kBACf+B,UAAU,oBAMlBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZke,EACAF,IAILpe,EAAAC,EAAAC,cAACwe,GAAD3gB,OAAAyV,OAAA,CACEmL,IAAK1gB,KAAK8d,gBACVzJ,WAAYrU,KAAKe,MAAMsT,WACvB8D,gBAAiBnY,KAAKe,MAAMoX,gBAC5BrG,aAAc9R,KAAK2e,oBACnBhI,eAAgB3W,KAAK2W,eACrBC,wBAAyB5W,KAAK4W,yBAC1B5W,KAAKe,MAAMkH,QAGjBlG,EAAAC,EAAAC,cAACkG,EAAD,CACE9D,KAAMrE,KAAKe,MAAM2d,oBACjB9Z,QAAS,kBAAMkT,EAAKxX,SAAS,CAAEoe,qBAAqB,KACpDna,WAAY,+BACZC,MAAO,eACPzC,EAAAC,EAAAC,cAAC0e,GAAD,CACED,IAAK1gB,KAAK4e,gBACVO,sBAAuBnf,KAAKe,MAAMoe,sBAClCpP,YAAa/P,KAAKe,MAAMgP,YACxBsK,OAAQra,KAAKye,gBAIjB1c,EAAAC,EAAAC,cAACkG,EAAD,CACE9D,KAAMrE,KAAKe,MAAMgG,yBACjBnC,QAAS5E,KAAK4G,0BACdrC,WAAY,oBACZC,MAAO,oBACPzC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,mCACmCnC,KAAKe,MAAM2F,eAAejG,KAD7D,KAGAsB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKwG,eAAzC,mBAjZsBhE,IAAMC,YAyZvBC,eAAWia,IClapBiE,eAEJ,SAAAA,EAAYhhB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4gB,IACjB/gB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8gB,GAAAzgB,KAAAH,KAAMJ,KAcRihB,YAAc,WACZ1f,IAAMyC,IAAI,iBACPvC,KAAK,SAAAC,GACJ,IAAMiY,EAAajY,EAAIE,KACvB3B,EAAKS,SAAS,CACZiZ,WAAYA,OApBD1Z,EAyBnBO,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SA3BnBb,EA+BnBoG,eAAiB,WACfpG,EAAKS,SAAS,CACZiG,eAAe,EACf9F,KAAM,MAlCSZ,EAsCnB4F,KAAO,WAAM,IAKL4Y,EAAY,CAChB5d,KAHEZ,EAAKkB,MADPN,KAKAwH,MAAO,CACLgB,OAAQ4K,GACRzJ,gBAAiB,2BAIrBjJ,IAAMC,KAAK,gBAAiBid,GACzBhd,KAAK,SAAAC,GACJ,IAAMyO,EAAczO,EAAIE,KACxB3B,EAAKoG,iBACLpG,EAAKghB,cACLhhB,EAAKD,MAAMkD,QAAQC,KAAnB,wBAAA4B,OAAgDoL,MAEjD7J,MAAM,SAAAzE,GACLI,QAAQC,IAAIL,MA3DC5B,EA+DnBihB,KAAO,SAAC/Q,GACNlQ,EAAKS,SAAS,CACZygB,kBAAmBhR,IAErBlQ,EAAKD,MAAMkD,QAAQC,KAAnB,wBAAA4B,OAAgDoL,KAnE/BlQ,EAsEnBye,gBAAkB,SAACvO,GACjBlQ,EAAKghB,eAvEYhhB,EA0EnBof,kBAAoB,SAAClP,GACnBlQ,EAAKghB,cACLhhB,EAAKS,SAAS,CACZygB,kBAAmB,IAErBlhB,EAAKD,MAAMkD,QAAQC,KAAK,yBA7ExBlD,EAAKkB,MAAQ,CACXoG,YAAa,GACboS,WAAY,GACZhT,eAAe,EACfwa,kBAAmB,EACnBtgB,KAAM,IAPSZ,mFAYjBG,KAAK6gB,+CAmFL,IAbO,IAAAjf,EAAA5B,KAAAc,EAKHd,KAAKe,MALFigB,EAAAlgB,EAELyY,kBAFK,IAAAyH,EAEQ,GAFRA,EAGLD,EAHKjgB,EAGLigB,kBACA5Z,EAJKrG,EAILqG,YAMI8Z,EXrFqB,WWoFvBjhB,KAAKJ,MADPshB,QAIIC,EAAgB,GAZfxZ,EAAA,SAaEC,GACP,IAAMyW,EAAY9E,EAAW3R,GACvBnH,EAAO4d,EAAU5d,KACjB2gB,EAAaL,IAAsB1C,EAAU1Y,GAAK,6BAA+B,KAClFwB,GAAgBA,GAAe1G,EAAKoH,SAASV,KAChDga,EAAcpe,KAEVhB,EAAAC,EAAAC,cAAA,OAAK6F,IAAKF,EAAGzF,UAAS,gCAAAwC,OAAkCyc,GAAc7e,QAAS,kBAAMX,EAAKkf,KAAKzC,EAAU1Y,MACtGlF,KARFmH,EAAI,EAAGA,EAAI2R,EAAWxR,OAAQH,IAAKD,EAAnCC,GAeT,OACE7F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAAA,OAAKgG,MAAO,CAACI,OAAQ,QAEjB4Y,EACElf,EAAAC,EAAAC,cAAA,UAAQE,UAAU,0CAA0CI,QAAS,kBAAMX,EAAKtB,SAAS,CAAEiG,eAAe,MACxGxE,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,SADxB,QAGE,KAEN/C,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,cACLC,MAAOV,KAAKe,MAAMoG,YAClBa,YAAY,YACZ3F,SAAUrC,KAAKI,qBAEnB2B,EAAAC,EAAAC,cAAA,WACGkf,IAGLpf,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAACof,EAAA,EAAD,CACEC,KAAK,2BACLC,OAAQ,SAAC3hB,GAAD,OAAWmC,EAAAC,EAAAC,cAACuf,GAAD,CAAmB1Z,IAAKlI,EAAMyf,MAAMxH,OAAOlS,GAAI2Y,gBAAiB1c,EAAK0c,gBAAiBW,kBAAmBrd,EAAKqd,wBAIrIld,EAAAC,EAAAC,cAACkG,EAAD,CACE9D,KAAMrE,KAAKe,MAAMwF,cACjB3B,QAAS,kBAAMhD,EAAKtB,SAAS,CAAEiG,eAAe,KAC9ChC,WAAY,oBACZC,MAAO,OACPzC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMN,KAClB4B,SAAUrC,KAAKI,oBAEjB2B,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKyF,MAAzC,kBA1JYhD,aAmKTC,eAAWke,ICnJXa,eAnBb,SAAAA,EAAY7hB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyhB,IACjB5hB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2hB,GAAAthB,KAAAH,KAAMJ,KACDmB,MAAQ,GAFIlB,mFAOjBG,KAAK0hB,kBAAkB9E,2DAGhB,IAAAhb,EAAA5B,KACP,OACE+B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAACuf,GAAD,CAAmBG,oBAAqB,SAAAC,GAAI,OAAKhgB,EAAK8f,kBAAoBE,aAf5Cpf,IAAMC,WCEtCof,GAAY,CAAC,SAAU,aAwUdC,eApUb,SAAAA,EAAYliB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8hB,IACjBjiB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgiB,GAAA3hB,KAAAH,KAAMJ,KAiBRQ,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SApBnBb,EAwBnBgZ,mBAAqB,SAACpY,EAAMC,GAC1Bb,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAOC,KA1BOb,EA8BnBoa,0BAA4B,SAACxZ,EAAMC,GACjC,IAAMwZ,EAAW5N,SAAS5L,EAAO,KAAO,EACxCb,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAOyZ,KAjCOra,EAsDnBkiB,WAAa,WACX5gB,IAAMyC,IAAI,YACPvC,KAAK,SAAAC,GACJ,IAAM0gB,EAAQ1gB,EAAIE,KAClB3B,EAAKS,SAAS,CACZ0hB,MAAOA,OA3DIniB,EAgEnBoiB,YAAc,WACZ9gB,IAAMyC,IAAI,aACPvC,KAAK,SAAAC,GACJ,IAAM4gB,EAAS5gB,EAAIE,KACnB3B,EAAKS,SAAS,CACZ4hB,OAAQA,OArEGriB,EA0EnByG,cAAgB,SAACpF,GACF,OAATA,EACFrB,EAAKS,SAAS,CACZqF,GAAIzE,EAAKyE,GACT3E,SAAUE,EAAKF,SACfP,KAAMS,EAAKT,KACX0hB,aAAc,GACdjB,QAAShgB,EAAKggB,QACdkB,WAAYlhB,EAAKkhB,aAGnBviB,EAAKuG,iBAGPvG,EAAKS,SAAS,CACZ+hB,YAAa,GACb9b,eAAe,KA1FA1G,EA8FnBoG,eAAiB,WACfpG,EAAKS,SAAS,CACZiG,eAAe,KAhGA1G,EAoGnBuG,eAAiB,WACfvG,EAAKS,SAAST,EAAKyiB,wBArGFziB,EAwGnBmH,qBAAuB,WACrBnH,EAAKS,SAAS,SAAA2G,GAAS,MAAK,CAC1BvB,oBAAqBuB,EAAUvB,uBA1GhB7F,EA8GnB4F,KAAO,WAAM,IAAA3E,EASPjB,EAAKkB,MAPP2E,EAFS5E,EAET4E,mBACAC,EAHS7E,EAGT6E,GACA3E,EAJSF,EAITE,SACAP,EALSK,EAKTL,KACA0hB,EANSrhB,EAMTqhB,aAKEjhB,EAAO,CACTF,SAAUA,EACVP,KAAMA,EACNygB,QAdSpgB,EAOTogB,QAQAkB,WAfSthB,EAQTshB,YAUS,OAAPzc,GACFzE,EAAKyE,GAAKA,EACND,GAAsByc,IACxBjhB,EAAKihB,aAAeA,GAGtBhhB,IAAM6E,IAAI,WAAY9E,GACnBG,KAAK,SAAAC,GACJzB,EAAKuG,iBACLvG,EAAKoG,iBACLpG,EAAKkiB,iBAGT7gB,EAAKihB,aAAeA,EAEpBhhB,IAAMC,KAAK,WAAYF,GACpBG,KAAK,SAAAC,GACJzB,EAAKuG,iBACLvG,EAAKoG,iBACLpG,EAAKkiB,iBAnJMliB,EAwJnB8G,OAAS,SAAChB,GACRxE,IAAMwF,OAAO,YAAchB,GACxBtE,KAAK,SAAAC,GACJzB,EAAKkiB,gBA3JQliB,EA+JnB0iB,aAAe,WAAM,IAAAjb,EAIfzH,EAAKkB,MAFPshB,EAFiB/a,EAEjB+a,YAFiBG,EAAAlb,EAGjB8a,kBAHiB,IAAAI,EAGJ,GAHIA,EAMnB,IAAe,IADDJ,EAAWvS,UAAU,SAAA4S,GAAO,OAAIA,IAAYJ,IACxC,CAChB,IAAMK,EAAa5iB,OAAA6Q,EAAA,EAAA7Q,CAAOsiB,GAC1BM,EAAc3f,KAAKsf,GACnBxiB,EAAKS,SAAS,CACZ8hB,WAAYM,MAzKC7iB,EA8KnB8iB,gBAAkB,SAACF,GAAY,IAAAG,EAGzB/iB,EAAKkB,MADPqhB,kBAF2B,IAAAQ,EAEd,GAFcA,EAIvBhT,EAAQwS,EAAWvS,UAAU,SAAAlK,GAAE,OAAIA,IAAO8c,IAChD,IAAe,IAAX7S,EAAc,CAChB,IAAM8S,EAAa5iB,OAAA6Q,EAAA,EAAA7Q,CAAOsiB,GAC1BM,EAAchL,OAAO9H,EAAO,GAC5B/P,EAAKS,SAAS,CACZ8hB,WAAYM,MArLhB7iB,EAAKkB,MAAQ,CACXihB,MAAO,GACPE,OAAQ,GACR/a,YAAa,GACbzB,oBAAoB,EACpBa,eAAe,EACfZ,GAAI,KACJ3E,SAAU,GACVP,KAAM,GACN0hB,aAAc,GACdjB,QAAS,GACTmB,YAAa,GACbD,WAAY,IAdGviB,mFAkDjBG,KAAK+hB,aACL/hB,KAAKiiB,+CAiKL,IAxBO,IAAArgB,EAAA5B,KAAAma,EAOHna,KAAKe,MALP4E,EAFKwU,EAELxU,GACAD,EAHKyU,EAGLzU,mBAHKmd,EAAA1I,EAIL6H,aAJK,IAAAa,EAIG,GAJHA,EAAAC,EAAA3I,EAKL+H,cALK,IAAAY,EAKI,GALJA,EAAAC,EAAA5I,EAMLiI,kBANK,IAAAW,EAMQ,GANRA,EASDtb,EAAc,OAAP9B,EAAc,MAAQ,OAE7Bqd,EAAYhB,EAAM3Q,IAAI,SAAAnQ,GAAI,OAC9Ba,EAAAC,EAAAC,cAAA,OAAK6F,IAAK5G,EAAKyE,GAAIxD,UAAU,aAC3BJ,EAAAC,EAAAC,cAAA,SACGf,EAAKF,SACLE,EAAKT,KACLS,EAAKggB,QACNnf,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAK0E,cAAcpF,KAA7D,UACAa,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAK+E,OAAOzF,EAAKyE,MAA3D,cAKAsd,EAAiB,GAvBhBtb,EAAA,SAwBEC,GAEP,IADA,IAAM6a,EAAUL,EAAWxa,GAClByP,EAAI,EAAGA,EAAI6K,EAAOna,OAAQsP,IACjC,GAAIoL,IAAYP,EAAO7K,GAAG1R,GAAI,CAC5Bsd,EAAelgB,KAEXhB,EAAAC,EAAAC,cAAA,OAAK6F,IAAK2a,GACR1gB,EAAAC,EAAAC,cAAA,qBAAaigB,EAAO7K,GAAG5W,MACvBsB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAK+gB,gBAAgBF,KAA/D,YAIN,QAZG7a,EAAI,EAAGA,EAAIwa,EAAWra,OAAQH,IAAKD,EAAnCC,GAiBT,OACE7F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,cACLC,MAAOV,KAAKe,MAAMoG,YAClB9E,SAAUrC,KAAKI,kBACf4H,YAAY,YACZC,MAAO,CAACC,MAAO,WAEjBnG,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKkH,aAAzC,SACAnF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAK0E,cAAc,QAC3DvE,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,SADxB,cAIF/C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACZ6gB,GAGHjhB,EAAAC,EAAAC,cAACkG,EAAD,CACE9D,KAAMrE,KAAKe,MAAMwF,cACjB3B,QAAS5E,KAAKiG,eACd1B,WAAY,oBACZC,MAAOiD,GAEP1F,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAMC,SAClBqB,SAAUrC,KAAKI,oBAEjB2B,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMN,KAClB4B,SAAUrC,KAAKI,oBAEN,SAATqH,EAEE1F,EAAAC,EAAAC,cAAA,OAAKgG,MAAO,CAACI,OAAQ,oBACnBtG,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKgH,sBAAzC,oBAEA,KAEK,QAATS,GAAkB/B,EAEhB3D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,eACLC,MAAOV,KAAKe,MAAMohB,aAClB9f,SAAUrC,KAAKI,qBAEjB,KAGN2B,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACqZ,GAAD,CACE7a,KAAM,UACNC,MAAOV,KAAKe,MAAMmgB,QAClB7e,SAAUrC,KAAK6Y,mBACfE,QAAS8I,GACT1I,YAAY,IAGdpX,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACqZ,GAAD,CACE7a,KAAM,cACNC,MAAOV,KAAKe,MAAMshB,YAClBhgB,SAAUrC,KAAKia,0BACflB,QAASmJ,EACTjJ,cAAe,OACfD,YAAa,OAEfjX,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKuiB,cAAzC,OACAxgB,EAAAC,EAAAC,cAAA,WACGghB,GAGHlhB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKyF,MAAzC,yDArRR,MAAO,CACLE,GAAI,KACJ3E,SAAU,GACVP,KAAM,GACN0hB,aAAc,GACdjB,QAAS,GACTmB,YAAa,GACbD,WAAY,WA/CC5f,IAAMC,WC8PVygB,eA9Pb,SAAAA,EAAYtjB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkjB,IACjBrjB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAojB,GAAA/iB,KAAAH,KAAMJ,KAaRQ,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAhBnBb,EAoBnBoa,0BAA4B,SAACxZ,EAAMC,GACjC,IAAMwZ,EAAW5N,SAAS5L,EAAO,KAAO,EACxCb,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGW,EAAOyZ,KAvBOra,EAyCnBoiB,YAAc,WACZ9gB,IAAMyC,IAAI,aACPvC,KAAK,SAAAC,GACJ,IAAM4gB,EAAS5gB,EAAIE,KACnB3B,EAAKS,SAAS,CACZ4hB,OAAQA,OA9CGriB,EAmDnBsjB,gBAAkB,WAChBhiB,IAAMyC,IAAI,iBACPvC,KAAK,SAAAC,GACJ,IAAMiY,EAAajY,EAAIE,KACvB3B,EAAKS,SAAS,CACZiZ,WAAYA,OAxDD1Z,EA6DnByG,cAAgB,SAAC8c,GACD,OAAVA,EACFvjB,EAAKS,SAAS,CACZqF,GAAIyd,EAAMzd,GACVlF,KAAM2iB,EAAM3iB,KACZ4iB,gBAAiBD,EAAMC,kBAGzBxjB,EAAKuG,iBAEPvG,EAAKS,SAAS,CACZgjB,iBAAkB,GAClB/c,eAAe,KAzEA1G,EA6EnBoG,eAAiB,WACfpG,EAAKS,SAAS,CACZiG,eAAe,KA/EA1G,EAmFnBuG,eAAiB,WACfvG,EAAKS,SAAST,EAAKyiB,wBApFFziB,EAuFnB4F,KAAO,WAAM,IAAA3E,EAKPjB,EAAKkB,MAHP4E,EAFS7E,EAET6E,GAKEyd,EAAQ,CACV3iB,KARSK,EAGTL,KAMA4iB,gBATSviB,EAITuiB,iBAQS,OAAP1d,GACFyd,EAAMzd,GAAKA,EACXxE,IAAM6E,IAAI,YAAaod,GACpB/hB,KAAK,SAAAC,GACJzB,EAAKuG,iBACLvG,EAAKoiB,cACLpiB,EAAKoG,oBAGT9E,IAAMC,KAAK,YAAagiB,GACrB/hB,KAAK,SAAAC,GACJzB,EAAKuG,iBACLvG,EAAKoiB,cACLpiB,EAAKoG,oBAhHMpG,EAqHnB8G,OAAS,SAAChB,GACRxE,IAAMwF,OAAO,aAAehB,GACzBtE,KAAK,SAAAC,GACJzB,EAAKoiB,iBAxHQpiB,EA4HnB0jB,kBAAmB,WAAM,IAAAjc,EAInBzH,EAAKkB,MAFPuiB,EAFqBhc,EAErBgc,iBAFqBE,EAAAlc,EAGrB+b,uBAHqB,IAAAG,EAGH,GAHGA,EASvB,IAHA3hB,QAAQC,IAAI,oBAAqBwhB,GACjCzhB,QAAQC,IAAI,oBAAqBuhB,GAE7BC,KAEa,IADDD,EAAgBxT,UAAU,SAAAE,GAAW,OAAIA,IAAgBuT,IACrD,CAChB,IAAMG,EAAkB3jB,OAAA6Q,EAAA,EAAA7Q,CAAOujB,GAC/BI,EAAmB1gB,KAAKugB,GACxBzjB,EAAKS,SAAS,CACZ+iB,gBAAiBI,MA3IN5jB,EAiJnB6jB,qBAAuB,SAAC3T,GAAgB,IAAA4T,EAGlC9jB,EAAKkB,MADPsiB,uBAFoC,IAAAM,EAElB,GAFkBA,EAIhC/T,EAAQyT,EAAgBxT,UAAU,SAAAlK,GAAE,OAAIA,IAAOoK,IACrD,IAAe,IAAXH,EAAc,CAChB,IAAM6T,EAAkB3jB,OAAA6Q,EAAA,EAAA7Q,CAAOujB,GAC/BI,EAAmB/L,OAAO9H,EAAO,GACjC/P,EAAKS,SAAS,CACZ+iB,gBAAiBI,MAxJrB5jB,EAAKkB,MAAQ,CACXmhB,OAAQ,GACR3I,WAAY,GACZhT,eAAe,EACfY,YAAa,GACbxB,GAAI,KACJlF,KAAM,GACN6iB,iBAAkB,GAClBD,gBAAiB,IAVFxjB,mFAqCjBG,KAAKiiB,cACLjiB,KAAKmjB,mDA8IL,IArBO,IAAAvhB,EAAA5B,KAAAma,EAMHna,KAAKe,MAJP4E,EAFKwU,EAELxU,GAFKmd,EAAA3I,EAGL+H,cAHK,IAAAY,EAGI,GAHJA,EAAAc,EAAAzJ,EAILZ,kBAJK,IAAAqK,EAIQ,GAJRA,EAAAC,EAAA1J,EAKLkJ,uBALK,IAAAQ,EAKa,GALbA,EAQDpc,EAAc,OAAP9B,EAAc,MAAQ,OAE7Bme,EAAa5B,EAAO7Q,IAAI,SAAA+R,GAAK,OACjCrhB,EAAAC,EAAAC,cAAA,OAAK6F,IAAKsb,EAAMzd,GAAIxD,UAAU,cAC5BJ,EAAAC,EAAAC,cAAA,SACGmhB,EAAM3iB,KACPsB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAK0E,cAAc8c,KAA7D,UACArhB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAK+E,OAAOyc,EAAMzd,MAA5D,cAKAoe,EAAsB,GApBrBpc,EAAA,SAqBEC,GAEP,IADA,IAAMmI,EAAcsT,EAAgBzb,GAC3ByP,EAAI,EAAGA,EAAIkC,EAAWxR,OAAQsP,IACrC,GAAItH,IAAgBwJ,EAAWlC,GAAG1R,GAAI,CACpCoe,EAAoBhhB,KAEhBhB,EAAAC,EAAAC,cAAA,OAAK6F,IAAKiI,GACRhO,EAAAC,EAAAC,cAAA,oBAAYsX,EAAWlC,GAAG5W,MAC1BsB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAK8hB,qBAAqB3T,KAApE,YAIN,QAZGnI,EAAI,EAAGA,EAAIyb,EAAgBtb,OAAQH,IAAKD,EAAxCC,GAiBT,OACE7F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,cACLC,MAAOV,KAAKe,MAAMoG,YAClB9E,SAAUrC,KAAKI,kBACf4H,YAAY,YACZC,MAAO,CAACC,MAAO,WAEjBnG,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKkH,aAAzC,SACAnF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAAS,kBAAMX,EAAK0E,cAAc,QAC3DvE,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,SADxB,eAIF/C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACZ2hB,GAGH/hB,EAAAC,EAAAC,cAACkG,EAAD,CACE9D,KAAMrE,KAAKe,MAAMwF,cACjB3B,QAAS5E,KAAKiG,eACd1B,WAAY,oBACZC,MAAOiD,GAEP1F,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMN,KAClB4B,SAAUrC,KAAKI,oBAEjB2B,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACqZ,GAAD,CACE7a,KAAM,mBACNC,MAAOV,KAAKe,MAAMuiB,iBAClBjhB,SAAUrC,KAAKia,0BACflB,QAASQ,EACTN,cAAe,OACfD,YAAa,OAEfjX,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKujB,mBAAzC,OACAxhB,EAAAC,EAAAC,cAAA,WACG8hB,GAGHhiB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKyF,MAAzC,yDAzNR,MAAO,CACLE,GAAI,KACJlF,KAAM,GACN6iB,iBAAkB,GAClBD,gBAAiB,WAlCH7gB,IAAMC,WCwBXuhB,eAtBb,SAAAA,EAAYpkB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgkB,IACjBnkB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkkB,GAAA7jB,KAAAH,KAAMJ,KACDmB,MAAQ,GAFIlB,wEAOjB,OACEkC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAC8Z,GAAD,CAAMvD,UAAU,SACdzW,EAAAC,EAAAC,cAAA,OAAKuC,MAAM,SACTzC,EAAAC,EAAAC,cAACgiB,GAAD,OAEFliB,EAAAC,EAAAC,cAAA,OAAKuC,MAAM,QACTzC,EAAAC,EAAAC,cAACiiB,GAAD,gBAhBiB1hB,IAAMC,WCmIpB0hB,eApIb,SAAAA,EAAYvkB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmkB,IACjBtkB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqkB,GAAAhkB,KAAAH,KAAMJ,KAaRQ,kBAAoB,SAACC,GACnBR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAhBnBb,EAwBnBukB,UAAY,WACVjjB,IAAMyC,IAAI,oBACPvC,KAAK,SAAAC,GACJ,IAAMJ,EAAOI,EAAIE,KACjB3B,EAAKS,SAAS,CACZqF,GAAIzE,EAAKyE,GACT3E,SAAUE,EAAKF,SACfP,KAAMS,EAAKT,KACXygB,QAAShgB,EAAKggB,QACdmD,OAAQnjB,EAAKmjB,YAjCFxkB,EAsCnBykB,eAAiB,aAtCEzkB,EAyCnB4F,KAAO,WAAM,IAAA3E,EAMPjB,EAAKkB,MAJP2E,EAFS5E,EAET4E,mBACAjF,EAHSK,EAGTL,KACAQ,EAJSH,EAITG,SACA4B,EALS/B,EAKT+B,kBAGI3B,EAAO,CACXT,KAAMA,GAGR,GAAIiF,EAAoB,CACtB,GAAIzE,IAAa4B,EACf,OAGF3B,EAAKD,SAAWA,EAGlBE,IAAM6E,IAAI,mBAAoB9E,GAC3BG,KAAK,SAAAC,OA9DSzB,EAkEnBmH,qBAAuB,WACrBnH,EAAKS,SAAS,SAAA2G,GAAS,MAAK,CAC1BvB,oBAAqBuB,EAAUvB,uBAlEjC7F,EAAKkB,MAAQ,CACX2E,oBAAoB,EACpBC,GAAI,KACJ3E,SAAU,GACVP,KAAM,GACNygB,QAAS,GACTmD,OAAQ,GACRpjB,SAAU,GACV4B,kBAAmB,IAVJhD,mFAqBjBG,KAAKokB,6CAmDE,IAAA9c,EAMHtH,KAAKe,MAJP2E,EAFK4B,EAEL5B,mBACA1E,EAHKsG,EAGLtG,SACAkgB,EAJK5Z,EAIL4Z,QACAmD,EALK/c,EAKL+c,OAGF,OACEtiB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,WAAMjB,GAENe,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL3B,KAAK,OACLC,MAAOV,KAAKe,MAAMN,KAClB4B,SAAUrC,KAAKI,oBAEjB2B,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,WAAMif,GAENnf,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,WAAMoiB,GACNtiB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKskB,gBAAzC,wBACAviB,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKgH,sBAAzC,mBAEEtB,EAEE3D,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,WACLC,MAAOV,KAAKe,MAAME,SAClBoB,SAAUrC,KAAKI,oBACjB2B,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL3B,KAAK,oBACLC,MAAOV,KAAKe,MAAM8B,kBAClBR,SAAUrC,KAAKI,qBAEjB,KAGN2B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASI,QAASvC,KAAKyF,MAAzC,iBA/HYjD,IAAMC,WCYtB8hB,WAAa,CACjB,CACEC,KAAM,uBACN9jB,MAAO,YACPoE,KAAM,cAER,CACE0f,KAAM,wBACN9jB,MAAO,cACPoE,KAAM,YAER,CACE0f,KAAM,4BACN9jB,MAAO,kBACPoE,KAAM,eAMJ2f,eACJ,SAAAA,EAAY7kB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAykB,IACjB5kB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2kB,GAAAtkB,KAAAH,KAAMJ,KAaR8kB,gBAAkB,SAACC,GACjB9kB,EAAKS,SAAS,CACZskB,gBAAiBD,KAhBF9kB,EAoBnBglB,OAAS,WACP1jB,IAAMyC,IAAI,gBACPvC,KAAK,SAAAC,GACJzB,EAAKD,MAAMkD,QAAQC,KAAK,aArB5BlD,EAAKkB,MAAQ,CACX6jB,gBAAiB,wBAHF/kB,mFAQjB,IAAMilB,EAAW9kB,KAAKJ,MAAMkd,SAASgI,SACrC9kB,KAAKM,SAAS,CACZskB,gBAAiBE,qCAiBZ,IAAAljB,EAAA5B,KAEL4kB,EACE5kB,KAAKe,MADP6jB,gBAFKxgB,EAQHpE,KAAKJ,MAFPoB,EANKoD,EAMLpD,SACAkgB,EAPK9c,EAOL8c,QAGE6D,EAAY,GACZC,EAAW,GAEbA,EjB1DyB,WiByDvB9D,EACSqD,GAAWU,OAAO,SAAAC,GAAC,MAAe,yBAAXA,EAAEV,OAEzBD,GAEb,IAjBO,IAAA5c,EAAA,SAiBEC,GACP,IAAMud,EAAOH,EAASpd,GAChB+Q,EAASiM,IAAoBO,EAAKX,KAAO,mBAAqB,GACpEO,EAAUhiB,KAENhB,EAAAC,EAAAC,cAAA,MAAI6F,IAAKqd,EAAKX,KAAMriB,UAAWwW,GAC7B5W,EAAAC,EAAAC,cAACmjB,EAAA,EAAD,CAAMC,GAAIF,EAAKX,KAAMjiB,QAAS,kBAAMX,EAAK8iB,gBAAgBS,EAAKX,QAC5DziB,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAMqgB,EAAKrgB,KAAM4H,YAAU,IAC5C3K,EAAAC,EAAAC,cAAA,QAAME,UAAU,2BAA2BgjB,EAAKzkB,WARjDkH,EAAI,EAAGA,EAAIod,EAASjd,OAAQH,IAAKD,EAAjCC,GAeT,IAAM0d,EA9DgB,uBA8DMV,EAAwC,mBAAqB,GAEzF,OACE7iB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAf,QACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,sBACX4iB,GAEHhjB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAS,yCAAAwC,OAA2C2gB,IACvDvjB,EAAAC,EAAAC,cAACmjB,EAAA,EAAD,CAAMC,GAAG,qBAAqB9iB,QAAS,kBAAMX,EAAK8iB,gBAzEtC,wBA0EV3iB,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,OAAO4H,YAAU,IACvC3K,EAAAC,EAAAC,cAAA,QAAME,UAAU,2BAA2BnB,KAG/Ce,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uCAAuCI,QAASvC,KAAK6kB,QAClE9iB,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,eAAe4H,YAAU,OAIrD3K,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAACsjB,EAAA,EAAD,KACExjB,EAAAC,EAAAC,cAACof,EAAA,EAAD,CAAOmE,OAAK,EAAClE,KAAK,wBAAwBmE,UAAWjgB,IACrDzD,EAAAC,EAAAC,cAACof,EAAA,EAAD,CAAOmE,OAAK,EAAClE,KAAK,4BAA4BmE,UAAWhE,KACzD1f,EAAAC,EAAAC,cAACof,EAAA,EAAD,CAAOmE,OAAK,EAAClE,KAAK,qBAAqBmE,UAAWtB,KAClDpiB,EAAAC,EAAAC,cAACof,EAAA,EAAD,CAAOmE,OAAK,EAAClE,KAAK,4BAA4BmE,UAAWzB,KACzDjiB,EAAAC,EAAAC,cAACof,EAAA,EAAD,CAAOC,KAAK,uBAAuBmE,UAAW,kBAAM1jB,EAAAC,EAAAC,cAACyjB,GAAc9jB,EAAKhC,YAG5EmC,EAAAC,EAAAC,cAAC0jB,EAAD,cA1FgBnjB,IAAMC,WA+FfC,eAAW+hB,ICpHXmB,oLATX,OACE7jB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACmjB,EAAA,EAAD,CAAMC,GAAG,UAAT,iBALmB7iB,IAAMC,8BCcjCojB,KAAQC,IAAIC,KAAcC,KAAYC,KAAYC,KAAQC,KACxDC,KAAQC,KAAYC,KAAcC,KAAcC,KAChDC,KAAMC,KAAQC,KAAQC,KAAcC,KAAYC,KAChDC,KAAcC,KAAWC,UAGrBC,eACJ,SAAAA,EAAYtnB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAknB,IACjBrnB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAonB,GAAA/mB,KAAAH,KAAMJ,KA4CR+B,eAAiB,WAAwB,IAAvBJ,EAAuB2C,UAAA6D,OAAA,QAAAuX,IAAApb,UAAA,GAAAA,UAAA,GAAP,GAC5B3C,EAAc4gB,aAChBtiB,EAAKD,MAAMkD,QAAQC,KAAK,mBAExBlD,EAAKS,SAAS,CACZU,SAAUO,EAAcP,SACxBkgB,QAAS3f,EAAc2f,QACvBiG,eAAe,GACd,WACDtnB,EAAKD,MAAMkD,QAAQC,KAAK,2BApD5BlD,EAAKkB,MAAQ,CACXC,SAAU,GACVkgB,QAAS,GACTiG,eAAe,GALAtnB,mFASC,IAAA+B,EAAA5B,KAAAonB,EAGdpnB,KAAKe,MADPmgB,QAGEmG,GAAkB,QALJ,IAAAD,EAEN,GAFMA,KAOhBC,GAAkB,GAGpBxlB,QAAQC,IAAI,0BAA0BulB,GAEjCA,IACHxlB,QAAQC,IAAI,0BAA2B,UACvC9B,KAAKM,SAAS,CACZ6mB,eAAe,GACd,WACDhmB,IAAMC,KAAK,sBACRC,KAAK,SAAAC,GACJ,IAAMC,EAAgBD,EAAIE,KACtBD,EAAcE,MAChBG,EAAKtB,SAAS,CACZ4gB,QAAS,GACTiG,eAAe,GACd,WACDvlB,EAAKhC,MAAMkD,QAAQC,KAAK,YAG1BnB,EAAKD,eAAeJ,yCAsBvB,IAAAuW,EAAA9X,KAAAc,EAKHd,KAAKe,MAHPC,EAFKF,EAELE,SACAkgB,EAHKpgB,EAGLogB,QACAiG,EAJKrmB,EAILqmB,cAGEE,GAAkB,EAMtB,OALInG,IACFmG,GAAkB,GAEpBxlB,QAAQC,IAAI,eAAgBof,EAASmG,GAEjCF,EAEAplB,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,cAAcwiB,MAAM,EAAMviB,KAAK,OAKvDhD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACsjB,EAAA,EAAD,KACExjB,EAAAC,EAAAC,cAACof,EAAA,EAAD,CAAOmE,OAAK,EAAClE,KAAK,IAAImE,UAAW9lB,IACjCoC,EAAAC,EAAAC,cAACof,EAAA,EAAD,CAAOC,KAAK,SAASC,OAAQ,kBAAMxf,EAAAC,EAAAC,cAACslB,EAAD,CAAO5lB,eAAgBmW,EAAKnW,oBAC/DI,EAAAC,EAAAC,cAACof,EAAA,EAAD,CAAOC,KAAK,kBAAkBmE,UAAW9iB,IACzCZ,EAAAC,EAAAC,cAACulB,GAAD,CACEC,cAAeJ,EACf/F,KAAK,aACLmE,UAAWhB,GACXzjB,SAAUA,EACVkgB,QAASA,IAEXnf,EAAAC,EAAAC,cAACof,EAAA,EAAD,CAAOoE,UAAWG,cA5FVpjB,IAAMC,WAmGxB,SAAS+kB,GAATtkB,GAAsE,IAApCT,EAAoCS,EAA/CuiB,UAAsBgC,EAAyBvkB,EAAzBukB,cAAkBC,EAAO5nB,OAAA6nB,EAAA,EAAA7nB,CAAAoD,EAAA,+BACpE,OACEnB,EAAAC,EAAAC,cAACof,EAAA,EAADvhB,OAAAyV,OAAA,GACMmS,EADN,CAEEnG,OACE,SAAC3hB,GAAD,OAA6B,IAAlB6nB,EACT1lB,EAAAC,EAAAC,cAACQ,EAAD3C,OAAAyV,OAAA,GAAe3V,EAAW8nB,IAC1B3lB,EAAAC,EAAAC,cAAC2lB,EAAA,EAAD,CAAUvC,GAAI,CAACP,SAAU,SAAU/jB,MAAO,CAAC8mB,KAAMjoB,EAAMkd,iBAMlDpa,mBAAWwkB,cCnI1Bxc,IAAS6W,OACPxf,EAAAC,EAAAC,cAAC6lB,GAAA,EAAD,CAAeC,SAAS,SACtBhmB,EAAAC,EAAAC,cAAC+lB,GAAD,OAEF5c,SAAS6c,eAAe","file":"static/js/main.216aea27.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Login - componentDidMount', 'cookie');\r\n    axios.post('/auth/login/cookie')\r\n      .then(res => {\r\n        const loginResponse = res.data || {};\r\n        if (!loginResponse.error) {\r\n          this.props.onLoginSuccess(loginResponse);\r\n        }\r\n      });\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.keyCode === 13) {\r\n      this.login();\r\n    }\r\n  }\r\n\r\n  login = () => {\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password'\r\n      });\r\n      return;\r\n    }\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const loginResponse = res.data || {};\r\n        if (loginResponse.error) {\r\n          this.setState({\r\n            errorMsg: loginResponse.error\r\n          });\r\n        } else {\r\n          this.props.onLoginSuccess(loginResponse);\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div className=\"login-app-title\">Poli</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <div className=\"long-panel-body\">\r\n            <div className=\"form-group\">\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n              <label>Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n            </div>\r\n            <button className=\"button login-button\" onClick={this.login}>Login</button>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ChangeTempPassword extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n      console.log('ChangeTempPassword - componentDidMount');\r\n  }\r\n\r\n  changePassword = () => {\r\n    const {\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    if (password && confirmedPassword\r\n        && password === confirmedPassword) {\r\n      const user = {\r\n        password: password\r\n      }\r\n\r\n      axios.post('/auth/login/changepassword', user)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.props.history.push('/workspace/dashboard');\r\n        });\r\n    } else {\r\n      this.setState({\r\n        errorMsg: `Those passwords didn't match.`\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <label>{this.state.errorMsg}</label>\r\n        <div class=\"form-group\">\r\n          <label>New password</label>\r\n          <input \r\n            type=\"password\" \r\n            name=\"password\" \r\n            value={this.state.username}\r\n            onChange={this.handleInputChange} />\r\n          <label>Confirm password</label>\r\n          <input \r\n            type=\"password\" \r\n            name=\"confirmedPassword\" \r\n            value={this.state.confirmedPassword}\r\n            onChange={this.handleInputChange} />\r\n          <button onClick={this.changePassword}>Change</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ChangeTempPassword);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      modalClass = '',\r\n      title,\r\n      children\r\n    } = this.props;\r\n\r\n    const modalStatus = show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={`modal-panel ${modalClass}`}>\r\n          <div className=\"model-header row\">\r\n            <div className=\"model-title\">{title}</div>\r\n            <button className=\"model-close-button icon-button\" onClick={() => this.props.onClose()}>\r\n              <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          <div className='modal-body'>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Toast.css';\r\n\r\nclass Toast extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showToast: false,\r\n      message: ''\r\n    };\r\n\r\n    Toast._toastRef = this;\r\n  }\r\n\r\n  show = (message) => {\r\n    this.setState({ \r\n      showToast: true,\r\n      message: message\r\n    }, () => {\r\n      setTimeout(() => {\r\n        this.hide();\r\n      }, 3500);\r\n    });\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({ \r\n      showToast: false,\r\n      message: ''\r\n    });\r\n  }\r\n\r\n  static show = (message) => {\r\n    Toast._toastRef.show(message);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showToast,\r\n      message\r\n    } = this.state;\r\n\r\n    const toastStatus = showToast ? 'display-block' : 'display-none';\r\n\r\n    return (\r\n      <div className={`toast-container ${toastStatus}`}>\r\n        <button className=\"button\" onClick={this.hide}>X</button>\r\n        <div>\r\n          {message}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toast;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport './Datasource.css';\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      showUpdatePassword: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataSources();\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      driverClassName,\r\n      username,\r\n      password,\r\n      name,\r\n      ping,\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      driverClassName: driverClassName,\r\n      username: username,\r\n      name: name,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword && password) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } \r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        Toast.show(result);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        driverClassName: ds.driverClassName,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/jdbcdatasource/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (datasource) => {\r\n    this.setState({\r\n      objectToDelete: datasource,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  clearSearch = () => {\r\n    this.setState({\r\n      searchValue: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      showConfirmDeletionPanel,\r\n      searchValue,\r\n      id,\r\n      jdbcDataSources = [],\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const jdbcDataSourceItems = [];\r\n    for (let i = 0; i < jdbcDataSources.length; i++) {\r\n      const ds = jdbcDataSources[i];\r\n      const name = ds.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        jdbcDataSourceItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {name}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.ping(ds.id)}>\r\n                  <FontAwesomeIcon icon=\"plug\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchValue\"\r\n            value={this.state.searchValue}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Search...\"\r\n            style={{width: '200px'}}\r\n            />\r\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New datasource\r\n          </button>\r\n          </div>\r\n        <div className=\"table-panel\">\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Name <span className=\"required\">*</span></label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Connection Url</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label>Driver class name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"driverClassName\" \r\n              value={this.state.driverClassName}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            { mode === 'Edit' ? \r\n              (\r\n                <div style={{margin: '3px 0px 8px 0px'}}>\r\n                  <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n                </div>\r\n              ) : null\r\n            }\r\n            { mode === 'New' || showUpdatePassword ? \r\n              (\r\n                <div>\r\n                  <label>Password</label>\r\n                  <input \r\n                    type=\"password\" \r\n                    name=\"password\" \r\n                    value={this.state.password}\r\n                    onChange={this.handleInputChange} />\r\n                </div>\r\n              ) : null\r\n            }\r\n\r\n            <label>Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} />\r\n            <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","import React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPalette: false\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      showPalette: !prevState.showPalette\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      showPalette: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    const rgb = color.rgb;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    this.props.onChange(rgba);\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: this.props.value\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: '2'\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.showPalette ? \r\n          (\r\n            <div style={popover}>\r\n              <div style={cover} onClick={this.handleClose} />\r\n              <ChromePicker color={this.props.value} onChange={this.handleChange} />\r\n            </div>\r\n          ) : null }\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    const {\r\n      name,\r\n      checked\r\n    } = this.props;\r\n\r\n    this.props.onChange(name, !checked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      checked\r\n    } = this.props;\r\n\r\n    const checkmarkBoxBgColor = checked ? '#000000' : '#FFFFFF';\r\n    const checkmarkBoxStyle = {\r\n      backgroundColor: checkmarkBoxBgColor\r\n    };\r\n\r\n    return (\r\n      <div className=\"checkbox-container\" onClick={this.toggle}>\r\n        <div className=\"checkbox-checkmark\">\r\n          <div className=\"checkbox-checkmark-box\" style={checkmarkBoxStyle}>\r\n          </div>\r\n        </div>\r\n        <div className=\"checkbox-label\">{value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};\r\n\r\nexport const jsonToArray = (json) => {\r\n  let array;\r\n  try {\r\n    array = JSON.parse(json);\r\n  } catch(e) {\r\n    array = [];\r\n  }\r\n  return array;\r\n}\r\n","/**\r\n * Constants\r\n */\r\nexport const CHART = 'chart';\r\nexport const FILTER = 'filter';\r\nexport const WIDGET_TYPES = [CHART, FILTER];\r\n\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\r\n\r\nexport const SYS_ROLE_ADMIN = 'admin';\r\nexport const SYS_ROLE_DEVELOPER = 'developer';\r\nexport const SYS_ROLE_VIEWER = 'viewer';\r\n\r\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;","import * as Util from '../api/Util';\r\n\r\nconst CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOptionTemplate = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      type: 'scroll',\r\n      orient: 'vertical',\r\n      data: legend,\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['40%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport const getPieOption = (queryResultData, pieKey, pieValue) => {\r\n  let legend = [];\r\n  let series = [];\r\n  for (let i = 0; i < queryResultData.length; i++) {\r\n    const row = queryResultData[i];\r\n    legend.push(row[pieKey]);\r\n    series.push({\r\n      name: row[pieKey],\r\n      value: row[pieValue]\r\n    });  \r\n  }\r\n  return getPieOptionTemplate(legend, series);\r\n}\r\n","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport './TableWidget.css';\r\n\r\nclass TableWidget extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  render() {   \r\n    const {\r\n      data = [],\r\n      columns = [],\r\n      drillThrough = [],\r\n      error\r\n    } = this.props;\r\n\r\n    const columnHeaders = [];\r\n    columns.forEach(column => {\r\n      const columnName = column.name;\r\n      const header = {\r\n        Header: columnName,\r\n        accessor: columnName\r\n      };\r\n      if (drillThrough.length > 0) {\r\n        const index = drillThrough.findIndex(d => d.columnName === columnName);\r\n        if (index !== -1) {\r\n          const dashboardId = drillThrough[index].dashboardId;\r\n          header.Cell = (props => <a href={`/poli/workspace/dashboard/${dashboardId}?${columnName}=${props.value}`}>{props.value}</a>);\r\n        }\r\n      }\r\n\r\n      columnHeaders.push(header);\r\n    });\r\n\r\n    if (error) {\r\n      return (\r\n        <div>\r\n          {error}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ReactTable\r\n        data={data}\r\n        columns={columnHeaders}\r\n        defaultPageSize={10}\r\n        previousText={'Prev'}\r\n        nextText={'Next'}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableWidget;\r\n","import React from 'react';\r\nimport Checkbox from './Checkbox';\r\nimport './Slicer.css';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n    searchValue: ''\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    if (searchValue) {\r\n      const result = [];\r\n      const { checkBoxes } = this.props;\r\n      for (let i = 0; i < checkBoxes.length; i++) {\r\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\r\n          result.push(checkBoxes[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n\r\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      checkBoxes = []\r\n    } = this.props;\r\n    const checkBoxItems = checkBoxes.map((box, index) => \r\n      <Checkbox \r\n        key={index} \r\n        name={box.value} \r\n        value={box.value} \r\n        checked={box.isChecked} \r\n        onChange={this.handleCheckBoxChange} \r\n      />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.toggleSelectAll}>Select All {this.state.isSelectAll}</button>\r\n        <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.searchValue}\r\n            onChange={this.handleSearchValueChange}\r\n            placeholder=\"Search...\"\r\n          />\r\n        \r\n        <div className=\"slicer-body\">\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport TableWidget from './TableWidget';\r\nimport Slicer from \"./Slicer\";\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough || []; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        const index = drills.findIndex(d => d.columnName === header);\r\n        if (index !== -1) {\r\n          const dashboardId = drills[index].dashboardId;\r\n          this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  onSlicerChange = (filterId, checkBoxes) => {\r\n    const index = this.state.filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...this.state.filters];\r\n    newFilters[index].checkBoxes = [...checkBoxes];\r\n    this.setState({\r\n      filters: newFilters\r\n    });  \r\n  }\r\n\r\n  onSingleValueChange = (filterId, event) => {\r\n    const { filters } = this.state;\r\n    const value = event.target.value;\r\n    const index = filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...filters];\r\n    newFilters[index].value = value;\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n  }\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      id,\r\n      type,\r\n      chartType,\r\n      filterType,\r\n      queryResult = {},\r\n      drillThrough,\r\n      data = {},\r\n      checkBoxes,\r\n      value\r\n    } = this.props;\r\n\r\n    const queryResultData = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    let widgetItem = (<div></div>);\r\n    if (type === Constants.CHART) {\r\n      if (chartType === Constants.TABLE) {\r\n        widgetItem = (\r\n          <TableWidget\r\n            data={queryResultData}\r\n            columns={columns}\r\n            error={error}\r\n            drillThrough={drillThrough}\r\n          />\r\n        );\r\n      } else if (chartType === Constants.PIE) {\r\n        const { \r\n          pieKey,\r\n          pieValue\r\n        } = data;\r\n        const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\r\n        widgetItem = (\r\n          <ReactEcharts \r\n            option={chartOption}   \r\n            className=\"echarts\"\r\n            onEvents={onChartEvents}  \r\n          />\r\n        );\r\n      } \r\n    } else if (type === Constants.FILTER) {\r\n      if (filterType === Constants.SLICER) {\r\n        widgetItem = (\r\n          <Slicer \r\n            filterId={id} \r\n            checkBoxes={checkBoxes} \r\n            onChange={this.onSlicerChange} \r\n          />\r\n        );\r\n      } else if (filterType === Constants.SINGLE_VALUE) {\r\n        widgetItem = (\r\n          <input \r\n            type=\"text\"  \r\n            value={value}\r\n            onChange={(event) => this.onSingleValueChange(id, event)} \r\n          />\r\n        );\r\n      }\r\n    }\r\n    \r\n\r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      title,\r\n      isEditMode,\r\n      style = {}\r\n    } = this.props;\r\n\r\n    const { \r\n      showBorder = false \r\n    } = style;\r\n\r\n    const borderStyle = showBorder ? '2px solid #4b4f56' : '2px solid #FFFFFF';\r\n\r\n    let styles = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: 1,\r\n      border: borderStyle\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {title}\r\n\r\n          { isEditMode ? (\r\n            <div className=\"float-right\" style={{marginRight: '20px'}}>\r\n              <div className=\"inline-block\" onClick={() => this.editWidget(id)}>\r\n                <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n              </div>\r\n              <div className=\"inline-block\" onClick={() => this.removeWidget(id)}>\r\n                <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid-box-file-button-group\">\r\n              <div className=\"inline-block\" onClick={() => this.exportJson(id)}>\r\n                <FontAwesomeIcon icon=\"file-export\" fixedWidth />\r\n              </div>\r\n              \r\n              <div className=\"inline-block\" onClick={() => this.exportCsv(id)}>\r\n                <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { isEditMode ? (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} />\r\n        ): null}\r\n\r\n        { isEditMode ? (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} />\r\n        ): null}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(GridItem);","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      backgroundColor,\r\n      widgets = [],\r\n      showGridlines\r\n    } = this.props;\r\n\r\n    let style = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      backgroundColor: backgroundColor\r\n    };\r\n\r\n    if (showGridlines) {\r\n      style.backgroundSize = '15px 15px';\r\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={style} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ColorPicker from './ColorPicker';\r\nimport Checkbox from './Checkbox';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\nimport Modal from '../components/Modal';\r\nimport * as Constants from '../api/Constants';\r\n\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      snapToGrid: false,\r\n      showGridlines: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  resizeGrid = (width) => {\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n\r\n    const gridWidth = width - 10;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return Math.round(num * gridWidth / BASE_WIDTH);\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Math.round(num * BASE_WIDTH / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, width, filterParams) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get('/ws/widget/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(width);\r\n          this.queryWidgets(filterParams);\r\n        });\r\n      });\r\n  }\r\n\r\n  queryWidgets(filterParams) {\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      if (widget.type === Constants.CHART) {\r\n        this.queryChart(widget, filterParams);\r\n      } else if (widget.type === Constants.FILTER) {\r\n        this.queryFilter(widget);\r\n      }\r\n    }\r\n  }\r\n\r\n  queryChart(widget, filterParams) {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    axios.post(`/ws/jdbcquery/widget/${widget.id}`, params)\r\n      .then(res => {\r\n        const queryResult = res.data;\r\n        const index = widgets.findIndex(w => w.id === queryResult.id);\r\n        const newWidgets = [...widgets];\r\n        newWidgets[index].queryResult = queryResult;\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n \r\n  queryCharts(filterParams) {\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      if (widget.type === Constants.CHART) {\r\n        this.queryChart(widget, filterParams);\r\n      }\r\n    }\r\n  }\r\n\r\n  queryFilter(widget) {\r\n    const { widgets } = this.state;\r\n    const { filterType } = widget;\r\n    if (filterType === Constants.SLICER) {\r\n      axios.post(`/ws/jdbcquery/widget/${widget.id}`)\r\n        .then(res => {\r\n          const queryResult = res.data;\r\n          const queryResultData = Util.jsonToArray(queryResult.data);\r\n          const checkBoxes = [];\r\n          for (let i = 0; i < queryResultData.length; i++) {\r\n            const values = Object.values(queryResultData[i]);\r\n            for (const val of values) {\r\n              checkBoxes.push({\r\n                value: val,\r\n                isChecked: false\r\n              });\r\n            }\r\n          }\r\n          const index = widgets.findIndex(w => w.id === queryResult.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = queryResult;\r\n          newWidgets[index].checkBoxes = checkBoxes;\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    } else if (filterType === Constants.SINGLE_VALUE) {\r\n      /*\r\n        const values = Object.values(queryResultData);\r\n        let value = '';\r\n        for (const val of values) {\r\n          value = val;\r\n          break;\r\n        }\r\n        newFilters[index].value = value;\r\n      */\r\n      const index = widgets.findIndex(w => w.id === widget.id);\r\n      const newWidgets = [...widgets];\r\n      newWidgets[index].value = '';\r\n      this.setState({\r\n        widgets: newWidgets\r\n      });\r\n    }\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    this.setState({\r\n      [name]: isChecked\r\n    });\r\n  }\r\n\r\n  handleHeightChange = (event) => {\r\n    this.props.onHeightChange(event.target.value);\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    this.props.onBackgroundColorChange(color);\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });\r\n  }\r\n\r\n  applyFilters = () => {\r\n    const { \r\n      widgets = []\r\n    } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      if (widget.type === Constants.FILTER) {\r\n        const { filterType } = widget;\r\n        const filterParam = {};\r\n        if (filterType === Constants.SLICER) {\r\n          const { \r\n            checkBoxes = []\r\n          } = widget;\r\n          const paramValues = [];\r\n          for (let j = 0; j < checkBoxes.length; j++) {\r\n            const checkBox = checkBoxes[j];\r\n            if (checkBox.isChecked) {\r\n              paramValues.push(checkBox.value);\r\n            }\r\n          }\r\n          filterParam.value = paramValues;\r\n          if (paramValues.length === checkBoxes.length) {\r\n            filterParam.remark = 'select all';\r\n          }\r\n        } else if (filterType === Constants.SINGLE_VALUE) {\r\n          filterParam.value = widget.value;\r\n        }\r\n        filterParam.param = widget.data.queryParameter;\r\n        filterParam.type = widget.filterType;\r\n        filterParams.push(filterParam);\r\n      }\r\n    }\r\n  }\r\n\r\n  getCharts = () => {\r\n\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete\r\n    } = this.state;\r\n    const widgetId = objectToDelete;\r\n    axios.delete(`/ws/widget/${widgetId}`)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (widgetId) => {\r\n    this.setState({\r\n      objectToDelete: widgetId,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { widgetViewWidth } = this.props;\r\n    const style = {\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {this.props.isEditMode ?\r\n        (\r\n          <div className=\"dashboard-attribute-edit-panel\">\r\n            <div className=\"inline-block\">Height:</div>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.props.height}\r\n              onChange={this.handleHeightChange} \r\n              className=\"inline-block\" \r\n              style={{width: '200px'}}\r\n              />\r\n\r\n            <div>\r\n              Background Color\r\n              <ColorPicker value={this.props.backgroundColor} onChange={this.onBackgroundColorChange} />\r\n            </div>\r\n\r\n            <Checkbox name=\"snapToGrid\" value=\"Snap to grid\" checked={this.state.snapToGrid} onChange={this.handleCheckBoxChange} />\r\n            <Checkbox name=\"showGridlines\" value=\"Show gridlines\" checked={this.state.showGridlines} onChange={this.handleCheckBoxChange} />\r\n  \r\n          </div>\r\n        ) : null}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          backgroundColor={this.props.backgroundColor}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.openConfirmDeletionPanel} />\r\n        \r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete this widget?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","import React from 'react';\r\nimport './Tabs.css';\r\n\r\nclass Tabs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const activeTab = this.props.activeTab;\r\n    this.setState({\r\n      activeTab: activeTab\r\n    });\r\n  }\r\n\r\n  handleTabClick = (title) => {\r\n    this.setState({\r\n      activeTab: title\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children\r\n    } = this.props;\r\n\r\n    const {\r\n      activeTab\r\n    } = this.state;\r\n\r\n    const tabHeaders = [];\r\n    let tabContent = null;\r\n    for (let i = 0; i < children.length; i++) {\r\n      if (children[i]) {\r\n        const title = children[i].props.title;\r\n        let active = '';\r\n        if (title === activeTab) {\r\n          active = 'tab-header-active';\r\n          tabContent = children[i].props.children;\r\n        }\r\n        \r\n        tabHeaders.push(\r\n          <li className={`tab-header-item ${active}`} key={i} onClick={() => this.handleTabClick(title)}>{title}</li>\r\n        );\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className=\"tab-container\">\r\n        <ul className=\"tab-header\">\r\n          {tabHeaders}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {tabContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Select extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    optionDisplay: PropTypes.string,\r\n    optionValue: PropTypes.string,\r\n    allowEmpty: PropTypes.bool\r\n  };\r\n\r\n  handleOptionChange = (event) => {\r\n    const name = this.props.name;\r\n    const value = event.target.value;\r\n    this.props.onChange(name, value);\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      value,\r\n      options = [],\r\n      optionValue,\r\n      optionDisplay,\r\n      allowEmpty = true\r\n    } = this.props;\r\n\r\n    const optionList = [];\r\n    if (allowEmpty) {\r\n      optionList.push(\r\n        <option value=\"\" key=\"\"></option>\r\n      );\r\n    }\r\n    \r\n    options.forEach((option, index) => {\r\n      let value;\r\n      let display;\r\n      if (optionValue && optionDisplay) {\r\n        // The options contain objects.\r\n        value = option[optionValue];\r\n        display = option[optionDisplay];\r\n      } else {\r\n        // The options contain string or number.\r\n        value = option;\r\n        display = option;\r\n      }\r\n      \r\n      optionList.push(\r\n        <option value={value} key={index}>{display}</option>\r\n      ) \r\n    });\r\n\r\n    return (\r\n      <select value={value} onChange={this.handleOptionChange}>\r\n        {optionList}\r\n      </select>\r\n    )\r\n  };\r\n}\r\n\r\nexport default Select;","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport TableWidget from './TableWidget';\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nimport './WidgetEditPanel.css';\r\n\r\nimport Checkbox from './Checkbox';\r\nimport Tabs from '../components/Tabs';\r\nimport Select from '../components/Select';\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      title: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: {},\r\n      type: Constants.CHART,\r\n      filterType: Constants.SINGLE_VALUE,\r\n      chartType: Constants.TABLE,\r\n      style: {\r\n        showBorder: false,\r\n        showTitle: true\r\n      },\r\n      queryParameter: '',\r\n      drillThrough: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: '',\r\n      pieKey: '',\r\n      pieValue: '',\r\n      chartOption: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const widget = res.data;\r\n          const {\r\n            type,\r\n            chartType,\r\n            filterType,\r\n            queryParameter,\r\n            drillThrough\r\n          } = widget;\r\n          if (type === Constants.CHART) {\r\n            this.setState({\r\n              chartType: chartType,\r\n              drillThrough: drillThrough\r\n            });\r\n\r\n            if (chartType === Constants.PIE) {\r\n              const {\r\n                pieKey,\r\n                pieValue\r\n              } = widget.data;\r\n              this.setState({\r\n                pieKey: pieKey,\r\n                pieValue: pieValue\r\n              });\r\n            }\r\n          } else if (type === Constants.FILTER) {\r\n            this.setState({\r\n              filterType: filterType,\r\n              queryParameter: queryParameter\r\n            });\r\n            if (filterType === Constants.SLICER) {\r\n\r\n            } else if (filterType === Constants.SINGLE_VALUE) {\r\n\r\n            }\r\n          }\r\n          \r\n          this.setState({\r\n            widgetId: widgetId,\r\n            title: widget.title,\r\n            x: widget.x,\r\n            y: widget.y,\r\n            width: widget.width,\r\n            height: widget.height,\r\n            sqlQuery: widget.sqlQuery,\r\n            type: type,\r\n            jdbcDataSourceId: widget.jdbcDataSourceId,\r\n            style: widget.style\r\n          }, () => {\r\n            this.runQuery();\r\n          });\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const style = {...this.state.style};\r\n    style[[name]] = isChecked;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      widgetId,\r\n      title,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      type,\r\n      style\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      title: title,\r\n      dashboardId: this.props.dashboardId,\r\n      type: type,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      style: style\r\n    }\r\n\r\n    if (type === Constants.CHART) {\r\n      const {\r\n        chartType,\r\n        drillThrough\r\n      } = this.state;\r\n      widget.drillThrough = drillThrough;\r\n      widget.chartType = chartType;\r\n\r\n      if (chartType === Constants.TABLE) {\r\n\r\n      } else if (chartType === Constants.PIE) {\r\n        const {\r\n          pieKey,\r\n          pieValue\r\n        } = this.state;\r\n        widget.data = {\r\n          pieKey: pieKey,\r\n          pieValue: pieValue\r\n        }\r\n      }\r\n    } else if (type === Constants.FILTER) {\r\n      const  {\r\n        filterType,\r\n        queryParameter\r\n      } = this.state;\r\n      widget.filterType = filterType;\r\n      widget.data = {\r\n        queryParameter: queryParameter\r\n      }\r\n      if (filterType === Constants.SLICER) {\r\n\r\n      } else if (filterType === Constants.SINGLE_VALUE) {\r\n\r\n      }\r\n    }\r\n    \r\n\r\n    if (widgetId === null) {\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          queryResult: result\r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = () => {\r\n    const { \r\n      drillThrough,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const index = drillThrough.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrillThrough = [...drillThrough];\r\n      newDrillThrough.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drillThrough: newDrillThrough\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill) => {\r\n    const { drillThrough } = this.state;\r\n    const index = drillThrough.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrillThrough = [...drillThrough];\r\n      newDrillThrough.splice(index, 1);\r\n      this.setState({\r\n        drillThrough: newDrillThrough\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = () => {\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        pieKey, \r\n        pieValue, \r\n        queryResult = {}\r\n      } = this.state;\r\n      console.log(\"generateChart\", pieKey, pieValue);\r\n      const data = Util.jsonToArray(queryResult.data);\r\n      const chartOption = EchartsApi.getPieOption(data, pieKey, pieValue);\r\n      this.setState({\r\n        chartOption: chartOption\r\n      });\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      queryResult = {},\r\n    } = this.state;\r\n    const columns = queryResult.columns || [];\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        chartOption,\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n\r\n      chartPreview = (\r\n        <div>\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label>Aggr Key (string)</label>\r\n          <Select\r\n            name={'pieKey'}\r\n            value={pieKey}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n            />\r\n\r\n\r\n          <label>By Aggr Value (number)</label>\r\n          <Select\r\n            name={'pieValue'}\r\n            value={pieValue}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n            />\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      queryResult,\r\n      jdbcDataSources = [],\r\n      drillThrough = [],\r\n      drillDashboards = []\r\n    } = this.state;\r\n\r\n    const data = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    const drillItems = drillThrough.map(drill =>\r\n      <div key={drill.columnName}>\r\n        <div>Column: {drill.columnName}</div>\r\n        <div>Dashboard: {drill.dashboardId}</div>\r\n        <button onClick={() => this.removeDrillThrough(drill)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const columnItems = columns.map(col =>\r\n      <div key={col.name}>{col.name} {col.dataType}</div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        <Select\r\n          name={'type'}\r\n          value={this.state.type}\r\n          onChange={this.handleOptionChange}\r\n          options={Constants.WIDGET_TYPES}\r\n          allowEmpty={false}\r\n        />\r\n        \r\n        <div className=\"form-panel\">\r\n          <Tabs activeTab=\"basic\">\r\n            <div title=\"basic\">\r\n              <label>Title</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"title\" \r\n                value={this.state.title}\r\n                onChange={this.handleInputChange} \r\n              />\r\n\r\n              <Checkbox name=\"showBorder\" value=\"Show border\" checked={this.state.style.showBorder} onChange={this.handleCheckBoxChange} />\r\n              <Checkbox name=\"showTitle\" value=\"Show title\" checked={this.state.style.showTitle} onChange={this.handleCheckBoxChange} />\r\n            </div>\r\n\r\n            <div title=\"Query\">\r\n              <label>DataSource</label>\r\n              <Select\r\n                name={'jdbcDataSourceId'}\r\n                value={this.state.jdbcDataSourceId}\r\n                onChange={this.handleIntegerOptionChange}\r\n                options={jdbcDataSources}\r\n                optionDisplay={'name'}\r\n                optionValue={'id'}\r\n                />\r\n            \r\n              <label>SQL Query</label>\r\n              <AceEditor\r\n                style={{ marginTop: '8px' }}\r\n                value={this.state.sqlQuery}\r\n                mode=\"mysql\"\r\n                theme=\"xcode\"\r\n                name=\"blah2\"\r\n                onChange={this.handleAceEditorChange}\r\n                height={'300px'}\r\n                width={'100%'}\r\n                fontSize={15}\r\n                showPrintMargin={false}\r\n                showGutter={true}\r\n                highlightActiveLine={true}\r\n                setOptions={{\r\n                  showLineNumbers: true,\r\n                  tabSize: 2\r\n                }}\r\n              />\r\n\r\n              <div className=\"mt-3\">\r\n                <button className=\"button\" onClick={this.runQuery}>Run Query</button>\r\n              </div>\r\n\r\n              <label>Result</label>\r\n              <TableWidget\r\n                data={data}\r\n                columns={columns}\r\n                error={error}\r\n              />\r\n\r\n              <label>Columns Mapping</label>\r\n              <div>\r\n                {columnItems}\r\n              </div>\r\n            </div>\r\n\r\n            {\r\n              this.state.type === Constants.CHART ?\r\n              (\r\n                <div title=\"Chart\">\r\n                  <label>Chart Options</label>\r\n                  <Select\r\n                    name={'chartType'}\r\n                    value={this.state.chartType}\r\n                    onChange={this.handleOptionChange}\r\n                    options={Constants.CHART_TYPES}\r\n                    allowEmpty={false}\r\n                  />\r\n                  <label>Preview</label>\r\n                  {this.renderChartPreview()}  \r\n                </div>\r\n              ) : null\r\n            }\r\n            \r\n            {\r\n              this.state.type === Constants.CHART ?\r\n              (\r\n                <div title=\"Drill through\">\r\n                  <label>Drill through</label>\r\n                  <label>Column</label>\r\n                  <Select\r\n                    name={'drillColumnName'}\r\n                    value={this.state.drillColumnName}\r\n                    options={columns}\r\n                    onChange={this.handleOptionChange}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'name'}\r\n                  />\r\n\r\n                  <label>Dashboard</label>\r\n                  <Select\r\n                    name={'drillDashboardId'}\r\n                    value={this.state.drillDashboardId}\r\n                    options={drillDashboards}\r\n                    onChange={this.handleIntegerOptionChange}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'id'}\r\n                  />\r\n                  <div>\r\n                    {drillItems}\r\n                  </div>\r\n                  <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\r\n                </div>\r\n              ) : null\r\n            }\r\n\r\n            {\r\n              this.state.type === Constants.FILTER ?\r\n              (\r\n                <div title=\"Filter\">\r\n                  <label>Filter Options</label>\r\n                  <Select\r\n                    name={'filterType'}\r\n                    value={this.state.filterType}\r\n                    onChange={this.handleOptionChange}\r\n                    options={Constants.FILTER_TYPES}\r\n                    allowEmpty={false}\r\n                  />\r\n                </div>\r\n              ) : null\r\n            }\r\n\r\n            {\r\n              this.state.type === Constants.FILTER ?\r\n              (\r\n                <div title=\"Query parameter\">\r\n                  <label>Parameter</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    name=\"param\" \r\n                    value={this.state.queryParameter}\r\n                    onChange={this.handleInputChange} \r\n                  />\r\n                </div>\r\n              ) : null\r\n            }\r\n\r\n          </Tabs>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\n\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      isEditMode: false,\r\n      isReadOnly: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      refreshInterval: 15,\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      style: {},\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    console.log('DashboardEditView', dashboardId);\r\n\r\n    const url = this.props.location.search;\r\n    console.log('url', url);\r\n    const params = new URLSearchParams(url);\r\n    console.log('params', params);\r\n    for(let pair of params.entries()) {\r\n      console.log(pair[0]+ ', '+ pair[1]); \r\n    } \r\n\r\n    const widgetViewWidth = this.getPageWidth();\r\n    this.setState({\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const result = res.data;\r\n            this.setState({\r\n              dashboardId: result.id,\r\n              name: result.name,\r\n              style: result.style\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = () => {\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    const dashboardName = params.get('name');\r\n\r\n    const widgetViewWidth = this.getPageWidth();\r\n\r\n    this.setState({\r\n      isReadOnly: true,\r\n      name: dashboardName,\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            style: result.style\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth - 40;\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const { refreshInterval } = this.state;\r\n      let interval = parseInt(refreshInterval, 10) || 15;\r\n      interval = interval < 1 ? 1 : interval;\r\n      const timerId = setInterval(() => {\r\n        // FIXME\r\n        // this.filterViewPanel.current.applyFilters();\r\n        this.updateLastRefreshed();\r\n      }, interval * 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    this.refreshWidgetView();\r\n    this.updateLastRefreshed();\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n  } \r\n\r\n  updateLastRefreshed = () => {\r\n    const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\r\n    this.setState({\r\n      lastRefreshed: now\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    console.log('save');\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      style\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      style: style\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.widgetViewPanel.current.saveWidgets();\r\n\r\n    this.props.onDashboardSave(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    this.widgetEditPanel.current.fetchWidget(widgetId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/workspace/dashboard/view?name=${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onTableCellClick = () => {\r\n    this.props.history.push(`/workspace/dashboard/drill?name=&`);\r\n  }\r\n\r\n  onHeightChange = (height) => {\r\n    const style = {...this.state.style};\r\n    style.height = height;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    const style = {...this.state.style};\r\n    style.backgroundColor = color;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {},\r\n    } = this.state;\r\n    const dashboardId = objectToDelete.id;\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        this.props.onDashboardDelete(dashboardId);\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  deleteDashboard = () => {\r\n    const { \r\n      dashboardId,\r\n      name\r\n    } = this.state;\r\n    const dashboard = {\r\n      id: dashboardId,\r\n      name: name\r\n    }\r\n    this.openConfirmDeletionPanel(dashboard);\r\n  }\r\n\r\n  openConfirmDeletionPanel = (dashboard) => {\r\n    this.setState({\r\n      objectToDelete: dashboard,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      lastRefreshed,\r\n      isEditMode,\r\n      isReadOnly\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel = null;\r\n    const controlButtons = (\r\n      <React.Fragment>\r\n        <span className=\"mr-3\">Last refreshed: {lastRefreshed}</span>\r\n        {\r\n          autoRefreshStatus === 'OFF' ? \r\n          (\r\n            <input \r\n              type=\"text\" \r\n              name=\"refreshInterval\" \r\n              value={this.state.refreshInterval}\r\n              onChange={this.handleInputChange}\r\n              className=\"inline-block\" \r\n              style={{width: '50px'}}\r\n            />\r\n          ) : null\r\n        }\r\n        <button className=\"button square-button mr-3\" onClick={this.toggleAutoRefresh}>\r\n          {\r\n            autoRefreshStatus === 'ON' ? \r\n            (\r\n              <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\r\n            ) : \r\n            (\r\n              <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\r\n            )\r\n          }\r\n        </button>\r\n        \r\n        <button className=\"button mr-3\" onClick={this.toggleFilterViewPanel}>Show Filters</button>\r\n        <button className=\"button square-button\" onClick={this.refresh}>\r\n          <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n\r\n    if (!isReadOnly) {\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button mr-3\" onClick={this.cancelEdit}>Cancel</button>\r\n            <button className=\"button mr-3\" onClick={this.save}>Save</button>\r\n            <button className=\"button mr-3\" onClick={this.deleteDashboard}>Delete</button>\r\n            <button className=\"button mr-3\" onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\r\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button square-button mr-3\" onClick={this.fullScreen}>\r\n              <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={this.edit}>Edit</button>\r\n            {controlButtons}\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      fullScreenButtonPanel = controlButtons;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-menu-panel row\">\r\n          <div className=\"float-left\">\r\n            {\r\n              isReadOnly || !isEditMode ?\r\n              (\r\n                <div className=\"dashboard-name\">\r\n                  {this.state.name}\r\n                </div>\r\n              ) :(\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"name\" \r\n                  value={this.state.name}\r\n                  onChange={this.handleInputChange} \r\n                  className=\"dashboard-name\"\r\n                  />\r\n              )\r\n            }\r\n            \r\n          </div>\r\n          <div className=\"float-right\">\r\n            {fullScreenButtonPanel}\r\n            {editButtonPanel}\r\n          </div>\r\n        </div>\r\n\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          isEditMode={this.state.isEditMode}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          onHeightChange={this.onHeightChange}\r\n          onBackgroundColorChange={this.onBackgroundColorChange}\r\n          {...this.state.style}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'dashboard-edit-widget-dialog'} \r\n          title={'Widget Edit'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {this.state.objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\nimport './Dashboard.css';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as Constants from '../api/Constants';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      activeDashboardId: 0,\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false,\r\n      name: ''\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      style: {\r\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\r\n        backgroundColor: 'rgba(233, 235, 238, 1)'\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.closeEditPanel();\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.setState({\r\n      activeDashboardId: dashboardId\r\n    });\r\n    this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n  }\r\n\r\n  onDashboardSave = (dashboardId) => {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  onDashboardDelete = (dashboardId) => {\r\n    this.fetchBoards();\r\n    this.setState({\r\n      activeDashboardId: 0\r\n    });\r\n    this.props.history.push('/workspace/dashboard');\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dashboards = [],\r\n      activeDashboardId,\r\n      searchValue\r\n    } = this.state;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.props;\r\n    const showEdit = sysRole === Constants.SYS_ROLE_VIEWER ? false : true;\r\n\r\n    const dashboardRows = [];\r\n    for (let i = 0; i < dashboards.length; i++) {\r\n      const dashboard = dashboards[i];\r\n      const name = dashboard.name;\r\n      const menuActive = activeDashboardId === dashboard.id ? 'dashboard-menu-item-active' : '';\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        dashboardRows.push(\r\n          (\r\n            <div key={i} className={`dashboard-menu-item ellipsis ${menuActive}`} onClick={() => this.view(dashboard.id)}>\r\n              {name}\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dashboard-sidebar\">\r\n          <div style={{margin: '5px'}}>\r\n            {\r\n              showEdit ? (\r\n                <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\r\n                  <FontAwesomeIcon icon=\"plus\" /> New\r\n                </button>\r\n              ) : null\r\n            }\r\n            <input \r\n              type=\"text\" \r\n              name=\"searchValue\" \r\n              value={this.state.searchValue}\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleInputChange} />\r\n          </div>\r\n          <div>\r\n            {dashboardRows}\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route \r\n            path=\"/workspace/dashboard/:id\" \r\n            render={(props) => <DashboardEditView key={props.match.params.id} onDashboardSave={this.onDashboardSave} onDashboardDelete={this.onDashboardDelete} />} \r\n            />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'small-modal-panel'} \r\n          title={'New'} >\r\n          <div>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              />\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.dashboardEditView.loadViewByDashboardName();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView wrappedComponentRef={comp => (this.dashboardEditView = comp)} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst SYS_ROLES = ['viewer', 'developer'];\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      searchValue: '',\r\n      showUpdatePassword: false,\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      this.setState({\r\n        id: user.id,\r\n        username: user.username,\r\n        name: user.name,\r\n        tempPassword: '',\r\n        sysRole: user.sysRole,\r\n        userGroups: user.userGroups\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      userGroupId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: sysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      if (showUpdatePassword && tempPassword) {\r\n        user.tempPassword = tempPassword;\r\n      }\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/user/' + id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n      });\r\n  }\r\n\r\n  addUserGroup = () => {\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId) => {\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      showUpdatePassword,\r\n      users = [],\r\n      groups = [],\r\n      userGroups = []\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const userItems = users.map(user => \r\n      <div key={user.id} className=\"user-card\">\r\n        <p>\r\n          {user.username}\r\n          {user.name}\r\n          {user.sysRole}\r\n          <button className=\"button\" onClick={() => this.openEditPanel(user)}>update</button>\r\n          <button className=\"button\" onClick={() => this.delete(user.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups.length; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups.length; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId}>\r\n                <div>Group: {groups[j].name}</div>\r\n                <button className=\"button\" onClick={() => this.removeUserGroup(groupId)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchValue\"\r\n            value={this.state.searchValue}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Search...\"\r\n            style={{width: '200px'}}\r\n          />\r\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New User\r\n          </button>\r\n        </div>\r\n        <div className=\"row\">\r\n          {userItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'} \r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            { mode === 'Edit' ? \r\n              (\r\n                <div style={{margin: '3px 0px 8px 0px'}}>\r\n                  <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n                </div>\r\n              ) : null\r\n            }\r\n            { mode === 'New' || showUpdatePassword ? \r\n              (\r\n                <div>\r\n                  <label>Password</label>\r\n                  <input \r\n                    type=\"password\" \r\n                    name=\"tempPassword\" \r\n                    value={this.state.tempPassword}\r\n                    onChange={this.handleInputChange} />\r\n                </div>\r\n              ) : null\r\n            }\r\n            \r\n            <label>System Role</label>\r\n            <Select\r\n              name={'sysRole'}\r\n              value={this.state.sysRole}\r\n              onChange={this.handleOptionChange}\r\n              options={SYS_ROLES}\r\n              allowEmpty={false}\r\n            />\r\n            \r\n            <br/>\r\n            \r\n            <label>Groups</label>\r\n            <Select\r\n              name={'userGroupId'}\r\n              value={this.state.userGroupId}\r\n              onChange={this.handleIntegerOptionChange}\r\n              options={groups}\r\n              optionDisplay={'name'}\r\n              optionValue={'id'}\r\n            />\r\n            <button className=\"button\" onClick={this.addUserGroup}>Add</button>\r\n            <div>\r\n              {userGroupItems}\r\n            </div>\r\n\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      this.setState({\r\n        id: group.id,\r\n        name: group.name,\r\n        groupDashboards: group.groupDashboards\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      groupDashboardId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/group/' + id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n      });\r\n  }\r\n\r\n  addGroupDashboard= () => {\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    console.log('addGroupDashboard', groupDashboardId);\r\n    console.log('addGroupDashboard', groupDashboards);\r\n\r\n    if (groupDashboardId) {\r\n      const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n      if (index === -1) {\r\n        const newGroupDashboards = [...groupDashboards];\r\n        newGroupDashboards.push(groupDashboardId);\r\n        this.setState({\r\n          groupDashboards: newGroupDashboards\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId) => {\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const groupItems = groups.map(group => \r\n      <div key={group.id} className=\"group-card\">\r\n        <p>\r\n          {group.name}\r\n          <button className=\"button\" onClick={() => this.openEditPanel(group)}>update</button>\r\n          <button className=\"button\" onClick={() => this.delete(group.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards.length; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards.length; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId}>\r\n                <div>Name: {dashboards[j].name}</div>\r\n                <button className=\"button\" onClick={() => this.removeGroupDashboard(dashboardId)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchValue\"\r\n            value={this.state.searchValue}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Search...\"\r\n            style={{width: '200px'}}\r\n            />\r\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New Group\r\n          </button>\r\n        </div>\r\n        <div className=\"row\">\r\n          {groupItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'} \r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            <label>Dashboards</label>\r\n            <Select\r\n              name={'groupDashboardId'}\r\n              value={this.state.groupDashboardId}\r\n              onChange={this.handleIntegerOptionChange}\r\n              options={dashboards}\r\n              optionDisplay={'name'}\r\n              optionValue={'id'}\r\n            />\r\n            <button className=\"button\" onClick={this.addGroupDashboard}>Add</button>\r\n            <div>\r\n              {groupDashboardItems}\r\n            </div>\r\n            \r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\n\r\nimport User from './User';\r\nimport Group from './Group';\r\nimport Tabs from '../components/Tabs';\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Tabs activeTab=\"Group\">\r\n          <div title=\"Group\">\r\n            <Group />\r\n          </div>\r\n          <div title=\"User\">\r\n            <User />\r\n          </div>\r\n        </Tabs>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const user = res.data;\r\n        this.setState({\r\n          id: user.id,\r\n          username: user.username,\r\n          name: user.name,\r\n          sysRole: user.sysRole,\r\n          apiKey: user.apiKey\r\n        });\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        return;\r\n      }  \r\n\r\n      user.password = password;\r\n    }\r\n\r\n    axios.put('/ws/user/account', user)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>Account</div>\r\n        <div className=\"form-panel\">   \r\n          <label>Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label>System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label>API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button className=\"button\" onClick={this.generateApiKey}>Generate new API Key</button>\r\n          <br/>\r\n\r\n          <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n          {\r\n            showUpdatePassword ?\r\n            (\r\n              <React.Fragment>\r\n                <br/>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label>Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n            ) : null\r\n          }\r\n\r\n          <br/>\r\n          <button className=\"button\" onClick={this.save}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","import React from 'react';\r\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\n\r\nimport Toast from '../components/Toast';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport './Workspace.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data source',\r\n    icon: 'database'\r\n  }, \r\n  {\r\n    link: '/workspace/usermanagement',\r\n    value: 'User Management',\r\n    icon: 'users-cog'\r\n  }\r\n];\r\n\r\nconst ACCOUNT_MENU_LINK = '/workspace/account';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    this.setState({\r\n      currentMenuLink: pathname,\r\n    });\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  logout = () => {\r\n    axios.get('/auth/logout')\r\n      .then(res => {\r\n        this.props.history.push('/login');\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n    } = this.state;\r\n\r\n    const {\r\n      username,\r\n      sysRole\r\n    } = this.props;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.link === '/workspace/dashboard');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li key={menu.link} className={active}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"workspace-nav\">  \r\n          <div className=\"workspace-name\">Poli</div>\r\n          <ul className=\"workspace-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div className=\"workspace-account-menu\">\r\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\r\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\r\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\r\n                <span className=\"workspace-nav-menu-text\">{username}</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"workspace-logout-button inline-block\" onClick={this.logout}>\r\n              <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"workspace-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route exact path=\"/workspace/dashboard/view\" component={DashboardFullScreenView} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n            <Route exact path=\"/workspace/usermanagement\" component={UserManagement} />\r\n            <Route path=\"/workspace/dashboard\" component={() => <Dashboard {...this.props} />} />\r\n          </Switch>\r\n        </div>\r\n        <Toast />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Workspace);\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, withRouter, Component } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport ChangeTempPassword from './views/ChangeTempPassword';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      sysRole: '',\r\n      isAuthorizing: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      sysRole = ''\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    console.log('App - componentDidMount',isAuthenticated);\r\n\r\n    if (!isAuthenticated) {\r\n      console.log('App - componentDidMount', 'cookie');\r\n      this.setState({\r\n        isAuthorizing: true\r\n      }, () => {\r\n        axios.post('/auth/login/cookie')\r\n          .then(res => {\r\n            const loginResponse = res.data;\r\n            if (loginResponse.error) {\r\n              this.setState({\r\n                sysRole: '',\r\n                isAuthorizing: false\r\n              }, () => {\r\n                this.props.history.push('/login');\r\n              });\r\n            } else {\r\n              this.onLoginSuccess(loginResponse);\r\n            }\r\n          });\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n  onLoginSuccess = (loginResponse = {}) => {\r\n    if (loginResponse.tempPassword) {\r\n      this.props.history.push('/changepassword');\r\n    } else {\r\n      this.setState({\r\n        username: loginResponse.username,\r\n        sysRole: loginResponse.sysRole,\r\n        isAuthorizing: false\r\n      }, () => {\r\n        this.props.history.push('/workspace/dashboard');\r\n      });\r\n    }\r\n  }\r\n   \r\n  render() {\r\n    const {\r\n      username,\r\n      sysRole,\r\n      isAuthorizing\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n    console.log('App - render', sysRole, isAuthenticated);\r\n\r\n    if (isAuthorizing) {\r\n      return (\r\n        <FontAwesomeIcon icon='cicle-north' spin={true} size=\"3x\" />\r\n      )\r\n    }\r\n    \r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/login\" render={() => <Login onLoginSuccess={this.onLoginSuccess} />} />\r\n          <Route path=\"/changepassword\" component={ChangeTempPassword} />\r\n          <PrivateRoute \r\n            authenticated={isAuthenticated} \r\n            path='/workspace' \r\n            component={Workspace} \r\n            username={username}\r\n            sysRole={sysRole} \r\n          />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} {...rest}/>\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}