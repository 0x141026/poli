{"version":3,"sources":["views/Login.js","views/ChangeTempPassword.js","api/WebApi.js","components/Modal.js","components/Toast.js","components/SearchInput.js","views/DataSource.js","api/Constants.js","components/ColorPicker.js","components/Checkbox.js","api/Util.js","api/EchartsApi.js","components/GridDraggable.js","components/GridResizable.js","components/TableWidget.js","components/filters/Slicer.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/Tabs.js","components/Select.js","components/WidgetEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/DashboardFullScreenView.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","handleKeyPress","keyCode","login","_this$state","state","username","password","user","axios","post","then","res","loginResponse","data","error","errorMsg","onLoginSuccess","_this2","isAuthenticated","sysRole","react_default","a","createElement","Fragment","className","type","onChange","onKeyDown","onClick","React","Component","withRouter","ChangeTempPassword","changePassword","confirmedPassword","length","history","push","style","fontSize","textAlign","fontWeight","marginBottom","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","concat","onClose","react_fontawesome_index_es","icon","size","COLOR_RED","Toast","message","bgColor","timeoutId","clearTimeout","showToast","backgroundColor","setTimeout","hide","_toastRef","assertThisInitialized","clearInterval","toastStatus","showSuccess","showError","SearchInput","reset","inputWidth","inputStyle","width","margin","placeholder","DataSource","handleNameInputChange","save","showUpdatePassword","id","connectionUrl","driverClassName","ping","ds","put","closeEditPanel","catch","result","clearEditPanel","initialState","openEditPanel","showEditPanel","confirmDelete","_this$state$objectToD","objectToDelete","delete","closeConfirmDeletionPanel","openConfirmDeletionPanel","datasource","showConfirmDeletionPanel","toggleUpdatePassword","prevState","jdbcDataSources","searchValue","webApi","_this$state2","_this$state2$jdbcData","_this$state2$objectTo","mode","jdbcDataSourceItems","_loop","i","includes","key","class","marginRight","src_components_SearchInput","src_components_Modal","rows","CHART","FILTER","WIDGET_TYPES","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","SYS_ROLE_ADMIN","SYS_ROLE_VIEWER","DEFAULT_DASHBOARD_HEIGHT","ColorPicker","handleClick","showPalette","handleClose","handleChange","color","rgb","rgba","r","g","b","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","Checkbox","toggle","checked","_this$props2","checkmarkBoxStyle","jsonToArray","json","array","JSON","parse","e","CHART_COLORS","getPieOption","queryResultData","pieKey","pieValue","legend","series","row","tooltip","orient","center","radius","getPieOptionTemplate","WIDGET_BORDER","GridDraggable","onMouseDown","preventDefault","gridItemNode","ReactDOM","findDOMNode","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","fixedWidth","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","TableWidget","handleTdClick","dashboardId","columnName","columnValue","onTableTdClick","_this$props$data","_this$props$columns","columns","_this$props$drillThro","drillThrough","columnHeaders","forEach","column","header","Header","accessor","index","findIndex","d","Cell","es","defaultPageSize","previousText","nextText","Slicer","toggleSelectAll","newIsSelectAll","isSelectAll","newCheckBoxes","toConsumableArray","checkBoxes","isChecked","handleSearchValueChange","handleCheckBoxChange","x","_this$props$checkBoxe","checkBoxItems","checkBox","src_components_Checkbox","selectText","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","instance","handleOriginal","console","log","drills","widgetDrillThrough","onChartClick","param","echarts","onChartLegendselectchanged","echart","widgetClickEvent","onWidgetContentClick","onSlicerChange","onWidgetFilterInputChange","onSingleValueChange","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","filterType","_this$props$queryResu","queryResult","Util","widgetItem","Constants","src_components_TableWidget","chartOption","EchartsApi","echarts_for_react_lib_default","option","onEvents","components_filters_Slicer","isEditMode","_this$props2$style","_style$showBorder","showBorder","borderColor","showTitle","borderStyle","gridBoxStyle","border","Array","isArray","components_GridDraggable","components_GridResizable","GridLayout","_this$props$widgets","widgets","showGridlines","backgroundSize","backgroundImage","boxItems","map","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","viewWidth","newWidgets","gridWidth","resizeWidgetsToActual","resizeWidgetsToBase","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryFilters","queryCharts","saveWidgets","stringify","w","splice","_this$state$widgets","getFilterParams","_this$state$widgets2","filterParams","filterParam","_widget$checkBoxes","paramValues","j","remark","queryParameter","_widgets$i","queryChart","_widgets$i2","queryFilter","params","_this3","_arr","values","_i","val","_this4","widgetViewWidth","onStyleValueChange","components_ColorPicker","src_components_GridLayout","Tabs","handleTabClick","activeTab","tabHeaders","tabContent","active","Select","handleOptionChange","_this$props$options","options","optionValue","optionDisplay","_this$props$preloadOn","preloadOneEmpty","optionList","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","_widget$data","sqlQuery","jdbcDataSourceId","runQuery","_x","objectSpread","handleAceEditorChange","newValue","handleIntegerOptionChange","intValue","_this$state3","_this$state4","onSave","queryRequest","addDrillThrough","_this$state5","drillColumnName","drillDashboardId","newDrillThrough","removeDrillThrough","drill","generateChart","_this$state6","_this$state6$queryRes","renderChartPreview","_this$state7","_this$state7$queryRes","chartPreview","_this$state8","components_Select","_this$state9","_this$state9$jdbcData","_this$state9$drillThr","_this$state9$drillDas","drillItems","columnItems","col","dataType","showQueryTab","src_components_Tabs","react_ace_lib_default","theme","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","marginTop","DashboardEditView","loadViewByDashboardName","url","location","search","URLSearchParams","dashboardName","fromDashboard","getPageWidth","isFullScreenView","refresh","toggleAutoRefresh","autoRefreshTimerId","refreshInterval","interval","timerId","setInterval","queryWidgets","updateLastRefreshed","refreshWidgetView","widgetViewPanel","current","now","Date","toTimeString","replace","lastRefreshed","dashboard","onDashboardSave","edit","cancelEdit","onSaveWidget","showWidgetEditPanel","openWidgetEditPanel","widgetEditPanel","applyFilters","fullScreen","window","open","undefined","nextDashboard","nextLink","onDashboardDelete","deleteDashboard","lastRefreshLabelTimerId","jdbcDataSourceOptions","createRef","match","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","editButtonPanel","autoRefreshStatus","fullScreenButtonPanel","controlButtons","components_WidgetViewPanel","ref","src_components_WidgetEditPanel","Dashboard","fetchBoards","view","activeDashboardId","pathname","indexOf","Number","substring","_this$state$dashboard","showEdit","dashboardRows","menuActive","Route","path","render","views_DashboardEditView","User","fetchUsers","users","fetchGroups","groups","tempPassword","userGroups","userGroupId","initialEditPanelState","selectedSysRole","addUserGroup","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_this$state3$users","_this$state3$groups","_this$state3$userGrou","_this$state3$objectTo","userItems","userGroupItems","_loop2","Group","fetchDashboards","group","groupDashboards","groupDashboardId","addGroupDashboard","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","UserManagement","views_Group","views_User","Account","fetchUser","apiKey","generateApiKey","DashboardFullScreenView","dashboardEditView","wrappedComponentRef","comp","MENU_ITEMS","link","Workspace","handleMenuClick","menuLink","currentMenuLink","logout","onLogout","startsWith","find","m","menuItems","menuList","filter","menu","Link","to","isAccountMenuActive","Switch","exact","component","views_UserManagement","src_views_Dashboard","src_components_Toast","PageNotFound","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","faCircleNotch","faSearch","faSave","faCalendarPlus","faFilter","faExternalLinkAlt","App","isAuthorizing","directUrl","currentPath","spin","src_views_Login","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","BrowserRouter","basename","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.08b43777.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { sysRole } = this.props;\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      axios.post('/auth/login/cookie')\r\n        .then(res => {\r\n          const loginResponse = res.data;\r\n          if (!loginResponse.error) {\r\n            this.props.onLoginSuccess(loginResponse);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.keyCode === 13) {\r\n      this.login();\r\n    }\r\n  }\r\n\r\n  login = () => {\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const loginResponse = res.data;\r\n        if (loginResponse.error) {\r\n          this.setState({\r\n            errorMsg: loginResponse.error\r\n          });\r\n        } else {\r\n          this.props.onLoginSuccess(loginResponse);\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div className=\"login-app-title\">Poli</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <div className=\"login-panel-body\">\r\n            <div className=\"form-panel\">\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n              <label>Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n              <button className=\"button login-button\" onClick={this.login}>Login</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport './Login.css';\r\n\r\nclass ChangeTempPassword extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  changePassword = () => {\r\n    const {\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    if (password && confirmedPassword\r\n        && password === confirmedPassword) {\r\n      if (password.length < 8) {\r\n        this.setState({\r\n          errorMsg: `Use 8 or more characters.`\r\n        });\r\n        return;\r\n      }\r\n\r\n      const user = {\r\n        password: password\r\n      }\r\n\r\n      axios.post('/auth/login/change-password', user)\r\n        .then(res => {\r\n          const loginResponse = res.data || {};\r\n          if (loginResponse.error) {\r\n            this.setState({\r\n              errorMsg: loginResponse.error\r\n            });\r\n          } else {\r\n            this.props.history.push('/workspace/dashboard');\r\n          }\r\n        });\r\n    } else {\r\n      this.setState({\r\n        errorMsg: `Those passwords didn't match.`\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const titleStyle = {\r\n      fontSize: '22px',\r\n      textAlign: 'center',\r\n      fontWeight: 'bold',\r\n      marginBottom: '15px'\r\n    }\r\n\r\n    const tipStyle = {\r\n      fontWeight: 'bold',\r\n      marginBottom: '5px',\r\n      fontSize: '15px'\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div style={titleStyle}>Change password</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <div className=\"login-panel-body\">\r\n            <div className=\"form-panel\">\r\n              <div style={tipStyle}>* Use 8 or more characters</div>\r\n              <label>New password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n              <label>Confirm password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"confirmedPassword\" \r\n                value={this.state.confirmedPassword}\r\n                onChange={this.handleInputChange} />\r\n              <button className=\"button login-button\" onClick={this.changePassword}>Confirm</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ChangeTempPassword);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      modalClass = '',\r\n      title,\r\n      children\r\n    } = this.props;\r\n\r\n    const modalStatus = show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={`modal-panel ${modalClass}`}>\r\n          <div className=\"model-header row\">\r\n            <div className=\"model-title\">{title}</div>\r\n            <button className=\"model-close-button icon-button\" onClick={() => this.props.onClose()}>\r\n              <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          <div className='modal-body'>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Toast.css';\r\n\r\nconst COLOR_RED = '#FF5630';\r\nconst COLOR_GREEN = '#36B37E';\r\n\r\nclass Toast extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showToast: false,\r\n      message: '',\r\n      backgroundColor: COLOR_RED,\r\n      timeoutId: ''\r\n    };\r\n\r\n    Toast._toastRef = this;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { timeoutId } = this.state;\r\n    if (timeoutId) {\r\n      clearInterval(timeoutId);\r\n    }\r\n  }\r\n\r\n  show = (message, bgColor) => {\r\n    const { timeoutId } = this.state;\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    this.setState({ \r\n      showToast: true,\r\n      message: message,\r\n      backgroundColor: bgColor,\r\n      timeoutId: ''\r\n    }, () => {\r\n      const timeoutId = setTimeout(() => {\r\n        this.hide();\r\n      }, 3000);\r\n      this.setState({\r\n        timeoutId: timeoutId\r\n      });\r\n    });\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({ \r\n      showToast: false,\r\n      message: ''\r\n    });\r\n  }\r\n\r\n  static showSuccess = (message) => {\r\n    Toast._toastRef.show(message, COLOR_GREEN);\r\n  }\r\n\r\n   static showError = (message) => {\r\n    Toast._toastRef.show(message, COLOR_RED);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showToast,\r\n      message,\r\n      backgroundColor\r\n    } = this.state;\r\n\r\n    const toastStatus = showToast ? 'display-block' : 'display-none';\r\n    const style = {\r\n      backgroundColor: backgroundColor\r\n    }\r\n\r\n    return (\r\n      <div className={`toast-container ${toastStatus}`} style={style}>\r\n        {message}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toast;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './SearchInput.css';\r\n\r\nclass SearchInput extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    inputWidth: PropTypes.number\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const { name } = this.props;\r\n    const value = event.target.value;\r\n    this.props.onChange(name, value);\r\n  }\r\n\r\n  reset = () => {\r\n    const { name } = this.props;\r\n    this.props.onChange(name, '');\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      value,\r\n      inputWidth\r\n    } = this.props;\r\n\r\n    let inputStyle = {};\r\n    if (inputWidth) {\r\n      inputStyle.width = inputWidth + 'px';\r\n    }\r\n\r\n    return (\r\n      <div className=\"search-input-container\">\r\n        <div className=\"row\">\r\n          <div className=\"search-input-icon float-left\">\r\n            <FontAwesomeIcon icon=\"search\" style={{margin: '10px'}} />\r\n          </div>\r\n          <div className=\"float-left\">\r\n            <input\r\n              type=\"text\"\r\n              name={name}\r\n              value={value}\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleInputChange}\r\n              className=\"search-input-input\"\r\n              style={inputStyle}\r\n            />\r\n          </div>\r\n          <button className=\"button search-input-reset-button float-left\" onClick={this.reset}>\r\n            <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchInput;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './Datasource.css';\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport SearchInput from '../components/SearchInput';\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      showUpdatePassword: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataSources();\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      driverClassName,\r\n      username,\r\n      password,\r\n      name,\r\n      ping,\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      Toast.showError('Enter a name.');\r\n      return;\r\n    }\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      driverClassName: driverClassName,\r\n      username: username,\r\n      name: name,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword && password) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          Toast.showError('The name exists. Try another.');\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          Toast.showError('The name exists. Try another.');\r\n        });\r\n    } \r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        if (result === 'success') {\r\n          Toast.showSuccess('Ping Succeeded');\r\n        } else {\r\n          Toast.showError(result);\r\n        }\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        driverClassName: ds.driverClassName,\r\n        username: ds.username,\r\n        name: ds.name,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/jdbcdatasource/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (datasource) => {\r\n    this.setState({\r\n      objectToDelete: datasource,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      id,\r\n      jdbcDataSources = [],\r\n      searchValue,\r\n      showConfirmDeletionPanel,\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const jdbcDataSourceItems = [];\r\n    for (let i = 0; i < jdbcDataSources.length; i++) {\r\n      const ds = jdbcDataSources[i];\r\n      const name = ds.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        jdbcDataSourceItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {name}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.ping(ds.id)}>\r\n                  <FontAwesomeIcon icon=\"plug\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"full-page-content\">\r\n        <div class=\"row\">\r\n          <div className=\"float-left\" style={{marginRight: '5px'}}>\r\n            <SearchInput \r\n              name={'searchValue'} \r\n              value={this.state.searchValue} \r\n              onChange={this.handleNameInputChange} \r\n              inputWidth={200}\r\n            />\r\n          </div>\r\n          <button className=\"button float-left\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New\r\n          </button>\r\n        </div>\r\n        <div className=\"row mt-10\">\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Name <span className=\"required\">*</span></label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n            />\r\n\r\n            <label>Connection Url</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label>Driver Class Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"driverClassName\" \r\n              value={this.state.driverClassName}\r\n              onChange={this.handleInputChange} \r\n            />\r\n\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} \r\n            />\r\n            \r\n            { mode === 'Edit' && (\r\n              <div style={{margin: '3px 0px 8px 0px'}}>\r\n                <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n              </div>\r\n            )}\r\n\r\n            { (mode === 'New' || showUpdatePassword) && ( \r\n              <div>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} \r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <label>Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} \r\n            />\r\n            <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","/**\r\n * Constants\r\n */\r\nexport const CHART = 'chart';\r\nexport const FILTER = 'filter';\r\nexport const WIDGET_TYPES = [CHART, FILTER];\r\n\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\r\n\r\nexport const SYS_ROLE_ADMIN = 'admin';\r\nexport const SYS_ROLE_DEVELOPER = 'developer';\r\nexport const SYS_ROLE_VIEWER = 'viewer';\r\n\r\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;","import React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPalette: false\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      showPalette: !prevState.showPalette\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      showPalette: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    const { name } = this.props;\r\n    const rgb = color.rgb;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    this.props.onChange(name, rgba);\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: this.props.value\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: 2\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.showPalette && (\r\n          <div style={popover}>\r\n            <div style={cover} onClick={this.handleClose} />\r\n            <ChromePicker color={this.props.value} onChange={this.handleChange} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    const {\r\n      name,\r\n      checked\r\n    } = this.props;\r\n\r\n    this.props.onChange(name, !checked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      checked\r\n    } = this.props;\r\n\r\n    const checkmarkBoxBgColor = checked ? '#000000' : '#FFFFFF';\r\n    const checkmarkBoxStyle = {\r\n      backgroundColor: checkmarkBoxBgColor\r\n    };\r\n\r\n    return (\r\n      <div className=\"checkbox-container\" onClick={this.toggle}>\r\n        <div className=\"checkbox-checkmark\">\r\n          <div className=\"checkbox-checkmark-box\" style={checkmarkBoxStyle}>\r\n          </div>\r\n        </div>\r\n        <div className=\"checkbox-label\">{value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};\r\n\r\nexport const jsonToArray = (json) => {\r\n  let array;\r\n  try {\r\n    array = JSON.parse(json);\r\n  } catch(e) {\r\n    array = [];\r\n  }\r\n  return array;\r\n}\r\n","import * as Util from '../api/Util';\r\n\r\nconst CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOptionTemplate = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      type: 'scroll',\r\n      orient: 'vertical',\r\n      data: legend,\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['40%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport const getPieOption = (queryResultData, pieKey, pieValue) => {\r\n  let legend = [];\r\n  let series = [];\r\n  for (let i = 0; i < queryResultData.length; i++) {\r\n    const row = queryResultData[i];\r\n    legend.push(row[pieKey]);\r\n    series.push({\r\n      name: row[pieKey],\r\n      value: row[pieValue]\r\n    });  \r\n  }\r\n  return getPieOptionTemplate(legend, series);\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    /*\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n      boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n    */\r\n   \r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport './TableWidget.css';\r\n\r\nclass TableWidget extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  handleTdClick = (dashboardId, columnName, columnValue) => {\r\n    this.props.onTableTdClick(dashboardId, columnName, columnValue);\r\n  }\r\n\r\n  render() {   \r\n    const {\r\n      data = [],\r\n      columns = [],\r\n      drillThrough = [],\r\n      error\r\n    } = this.props;\r\n\r\n    const columnHeaders = [];\r\n    columns.forEach(column => {\r\n      const columnName = column.name;\r\n      const header = {\r\n        Header: columnName,\r\n        accessor: columnName\r\n      };\r\n      if (drillThrough.length > 0) {\r\n        const index = drillThrough.findIndex(d => d.columnName === columnName);\r\n        if (index !== -1) {\r\n          const dashboardId = drillThrough[index].dashboardId;\r\n          header.Cell = (props => \r\n            <span className=\"link-label\" \r\n              onClick={() => this.handleTdClick(dashboardId, columnName, props.value)}>\r\n              {props.value}\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n\r\n      columnHeaders.push(header);\r\n    });\r\n\r\n    if (error) {\r\n      return (\r\n        <div>\r\n          {error}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (data.length === 0 || columns.length === 0) {\r\n      return (\r\n        <div>No data</div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ReactTable\r\n        data={data}\r\n        columns={columnHeaders}\r\n        defaultPageSize={10}\r\n        previousText={'Prev'}\r\n        nextText={'Next'}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableWidget;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Checkbox from '../Checkbox';\r\nimport './Slicer.css';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSelectAll: false,\r\n      searchValue: ''\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    checkBoxes: PropTypes.array.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n  };\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n\r\n    this.props.onChange(this.props.id, newCheckBoxes);\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.id, newCheckBoxes);\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      checkBoxes = [],\r\n    } = this.props;\r\n\r\n    const {\r\n      searchValue,\r\n      isSelectAll\r\n    } = this.state;\r\n\r\n    const checkBoxItems = [];\r\n    for (let i = 0; i < checkBoxes.length; i++) {\r\n      const checkBox = checkBoxes[i];\r\n      const value = checkBox.value;\r\n      if (!searchValue || (searchValue && value.includes(searchValue))) {\r\n        checkBoxItems.push(\r\n          (\r\n            <Checkbox \r\n              key={i} \r\n              name={checkBox.value} \r\n              value={checkBox.value} \r\n              checked={checkBox.isChecked} \r\n              onChange={this.handleCheckBoxChange} \r\n            />\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    const selectText = isSelectAll ? 'Deselect All' : 'Select All'\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" style={{marginBottom: '5px'}} onClick={this.toggleSelectAll}>{selectText}</button>\r\n        <input \r\n          type=\"text\" \r\n          name=\"name\" \r\n          value={this.state.searchValue}\r\n          onChange={this.handleSearchValueChange}\r\n          placeholder=\"Search...\"\r\n        />\r\n        \r\n        <div className=\"slicer-body\">\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\nimport TableWidget from './TableWidget';\r\nimport Slicer from './filters/Slicer';\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough || []; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        const index = drills.findIndex(d => d.columnName === header);\r\n        if (index !== -1) {\r\n          const dashboardId = drills[index].dashboardId;\r\n          // this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  onTableTdClick = (dashboardId, columnName, columnValue) => {\r\n    const widgetClickEvent = {\r\n      type: 'tableTdClick',\r\n      data: {\r\n        dashboardId: dashboardId,\r\n        columnName: columnName,\r\n        columnValue: columnValue\r\n      }\r\n    }\r\n    this.props.onWidgetContentClick(widgetClickEvent);\r\n  }\r\n\r\n  onSlicerChange = (widgetId, checkBoxes) => {\r\n    const data = {\r\n      checkBoxes: checkBoxes\r\n    };\r\n    this.props.onWidgetFilterInputChange(widgetId, data);\r\n  }\r\n\r\n  onSingleValueChange = (widgetId, event) => {\r\n    const value = event.target.value;\r\n    const data = {\r\n      value: value\r\n    };\r\n    this.props.onWidgetFilterInputChange(widgetId, data);\r\n  }\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      id,\r\n      type,\r\n      chartType,\r\n      filterType,\r\n      queryResult = {},\r\n      drillThrough,\r\n      data = {},\r\n      checkBoxes,\r\n      value\r\n    } = this.props;\r\n\r\n    const queryResultData = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    let widgetItem = (<div></div>);\r\n    if (type === Constants.CHART) {\r\n      if (chartType === Constants.TABLE) {\r\n        widgetItem = (\r\n          <TableWidget\r\n            data={queryResultData}\r\n            columns={columns}\r\n            error={error}\r\n            drillThrough={drillThrough}\r\n            onTableTdClick={this.onTableTdClick}\r\n          />\r\n        );\r\n      } else if (chartType === Constants.PIE) {\r\n        const { \r\n          pieKey,\r\n          pieValue\r\n        } = data;\r\n        const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\r\n        widgetItem = (\r\n          <ReactEcharts \r\n            option={chartOption}   \r\n            className=\"echarts\"\r\n            onEvents={onChartEvents}  \r\n          />\r\n        );\r\n      } \r\n    } else if (type === Constants.FILTER) {\r\n      if (filterType === Constants.SLICER) {\r\n        widgetItem = (\r\n          <div className=\"grid-box-content-panel\">\r\n            <Slicer \r\n              id={id} \r\n              checkBoxes={checkBoxes} \r\n              onChange={this.onSlicerChange} \r\n            />\r\n          </div>\r\n        );\r\n      } else if (filterType === Constants.SINGLE_VALUE) {\r\n        widgetItem = (\r\n          <div className=\"grid-box-content-panel\">\r\n            <input \r\n              type=\"text\"  \r\n              value={value}\r\n              onChange={(event) => this.onSingleValueChange(id, event)} \r\n            />\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    \r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      title,\r\n      isEditMode,\r\n      style = {},\r\n      drillThrough\r\n    } = this.props;\r\n\r\n    const { \r\n      showBorder = false,\r\n      showTitle = true,\r\n      borderColor,\r\n      backgroundColor,\r\n      zIndex\r\n    } = style;\r\n\r\n    const borderStyle = showBorder ? `2px solid ${borderColor}` : '2px solid transparent';\r\n\r\n    let gridBoxStyle = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: zIndex,\r\n      border: borderStyle\r\n    };\r\n\r\n    const hasDrillThrough = !Util.isArrayEmpty(drillThrough);\r\n\r\n    /*\r\n    <div className=\"grid-box-file-button-group\">\r\n      <div className=\"inline-block\" onClick={() => this.exportJson(id)}>\r\n        <FontAwesomeIcon icon=\"file-export\" fixedWidth />\r\n      </div>\r\n      \r\n      <div className=\"inline-block\" onClick={() => this.exportCsv(id)}>\r\n        <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\r\n      </div>\r\n      <div className=\"grid-box-file-button-group\">\r\n              <div className=\"inline-block\">\r\n                <FontAwesomeIcon icon=\"external-link-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n    </div>\r\n    */\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={gridBoxStyle}>\r\n        <div className=\"grid-box-title\">\r\n          <div className=\"grid-box-title-value float-left ellipsis\">{title}</div>\r\n\r\n          { isEditMode && (\r\n            <div className=\"float-right\" style={{marginRight: '20px'}}>\r\n              <div className=\"grid-box-icon inline-block\" onClick={() => this.editWidget(id)}>\r\n                <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n              </div>\r\n              <div className=\"grid-box-icon inline-block\" onClick={() => this.removeWidget(id)}>\r\n                <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { isEditMode && (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} \r\n          />\r\n        )}\r\n\r\n        { isEditMode && (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} \r\n          />\r\n        )}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridItem;","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      backgroundColor,\r\n      widgets = [],\r\n      showGridlines\r\n    } = this.props;\r\n\r\n    let style = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      backgroundColor: backgroundColor\r\n    };\r\n\r\n    if (showGridlines) {\r\n      style.backgroundSize = '15px 15px';\r\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n        onWidgetFilterInputChange={this.props.onWidgetFilterInputChange}\r\n        onWidgetContentClick={this.props.onWidgetContentClick}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={style} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ColorPicker from './ColorPicker';\r\nimport Checkbox from './Checkbox';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\nimport Modal from '../components/Modal';\r\nimport * as Constants from '../api/Constants';\r\n\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      snapToGrid: false,\r\n      showGridlines: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('WidgetViewPanel componentDidMount');\r\n  }\r\n\r\n  resizeGrid = (viewWidth) => {\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n\r\n    const gridWidth = viewWidth - 10;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return Math.round(num * gridWidth / BASE_WIDTH);\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Math.round(num * BASE_WIDTH / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, viewWidth) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get(`/ws/widget/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(viewWidth);\r\n          this.queryFilters();\r\n          this.queryCharts();\r\n        });\r\n      });\r\n  }\r\n \r\n  queryCharts() {\r\n    const filterParams = this.getFilterParams();\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const {\r\n        id,\r\n        type,\r\n      } = widgets[i];\r\n      if (type === Constants.CHART) {\r\n        this.queryChart(id, filterParams);\r\n      }\r\n    }\r\n  }\r\n\r\n  queryFilters() {\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const {\r\n        id,\r\n        type,\r\n        filterType\r\n      }  = widgets[i];\r\n      if (type === Constants.FILTER) {\r\n        this.queryFilter(id, filterType);\r\n      }\r\n    }\r\n  }\r\n\r\n  queryChart(widgetId, filterParams) {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    axios.post(`/ws/jdbcquery/widget/${widgetId}`, params)\r\n      .then(res => {\r\n        const queryResult = res.data;\r\n        const index = widgets.findIndex(w => w.id === queryResult.id);\r\n        const newWidgets = [...widgets];\r\n        newWidgets[index].queryResult = queryResult;\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n\r\n  queryFilter(widgetId, filterType) {\r\n    const { widgets } = this.state;\r\n    if (filterType === Constants.SLICER) {\r\n      axios.post(`/ws/jdbcquery/widget/${widgetId}`, [])\r\n        .then(res => {\r\n          const queryResult = res.data;\r\n          const queryResultData = Util.jsonToArray(queryResult.data);\r\n          const checkBoxes = [];\r\n          for (let i = 0; i < queryResultData.length; i++) {\r\n            const values = Object.values(queryResultData[i]);\r\n            for (const val of values) {\r\n              checkBoxes.push({\r\n                value: val,\r\n                isChecked: false\r\n              });\r\n            }\r\n          }\r\n          const index = widgets.findIndex(w => w.id === queryResult.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = queryResult;\r\n          newWidgets[index].checkBoxes = checkBoxes;\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    } else if (filterType === Constants.SINGLE_VALUE) {\r\n      /*\r\n        const values = Object.values(queryResultData);\r\n        let value = '';\r\n        for (const val of values) {\r\n          value = val;\r\n          break;\r\n        }\r\n        newFilters[index].value = value;\r\n      */\r\n      const index = widgets.findIndex(w => w.id === widgetId);\r\n      const newWidgets = [...widgets];\r\n      newWidgets[index].value = '';\r\n      this.setState({\r\n        widgets: newWidgets\r\n      });\r\n    }\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    this.setState({\r\n      [name]: isChecked\r\n    });\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    }, () => {\r\n      // FIXME: only save this widget. Not all.\r\n      this.saveWidgets();\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete\r\n    } = this.state;\r\n    const widgetId = objectToDelete;\r\n    axios.delete(`/ws/widget/${widgetId}`)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (widgetId) => {\r\n    this.setState({\r\n      objectToDelete: widgetId,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  onWidgetFilterInputChange = (widgetId, data) => {\r\n    const { \r\n      widgets = []\r\n    } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widgetId);\r\n    const newWidgets = [...widgets];\r\n    const widget = widgets[index];\r\n    if (widget.filterType === Constants.SLICER) {\r\n      const {\r\n        checkBoxes\r\n      } = data;\r\n      newWidgets[index].checkBoxes = checkBoxes;\r\n    } else if (widget.filterType === Constants.SINGLE_VALUE) {\r\n      const {\r\n        value\r\n      } = data;\r\n      newWidgets[index].value = value;\r\n    }\r\n\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });   \r\n  }\r\n\r\n  /**\r\n   * FIXME: optimize it. No need to calculate this every time.\r\n   */\r\n  getFilterParams = () => {\r\n    const { \r\n      widgets = []\r\n    } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      if (widget.type === Constants.FILTER) {\r\n        const { filterType } = widget;\r\n        const filterParam = {};\r\n        if (filterType === Constants.SLICER) {\r\n          const { \r\n            checkBoxes = []\r\n          } = widget;\r\n          const paramValues = [];\r\n          for (let j = 0; j < checkBoxes.length; j++) {\r\n            const checkBox = checkBoxes[j];\r\n            if (checkBox.isChecked) {\r\n              paramValues.push(checkBox.value);\r\n            }\r\n          }\r\n          filterParam.value = paramValues;\r\n          if (paramValues.length === checkBoxes.length) {\r\n            filterParam.remark = 'select all';\r\n          }\r\n        } else if (filterType === Constants.SINGLE_VALUE) {\r\n          filterParam.value = widget.value;\r\n        }\r\n        filterParam.param = widget.data.queryParameter;\r\n        filterParam.type = widget.filterType;\r\n        filterParams.push(filterParam);\r\n      }\r\n    }\r\n    return filterParams;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      widgetViewWidth,\r\n      isEditMode\r\n    } = this.props;\r\n    const style = {\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {isEditMode && (\r\n          <div className=\"dashboard-attribute-edit-panel\">\r\n            <div className=\"inline-block\">Height:</div>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.props.height}\r\n              onChange={(event) => this.props.onStyleValueChange('height', event.target.value)} \r\n              className=\"inline-block\" \r\n              style={{width: '200px'}}\r\n              />\r\n\r\n            <div>\r\n              Background Color\r\n              <ColorPicker name={'backgroundColor'} value={this.props.backgroundColor} onChange={this.props.onStyleValueChange} />\r\n            </div>\r\n\r\n            <Checkbox name=\"snapToGrid\" value=\"Snap to grid\" checked={this.state.snapToGrid} onChange={this.handleCheckBoxChange} />\r\n            <Checkbox name=\"showGridlines\" value=\"Show gridlines\" checked={this.state.showGridlines} onChange={this.handleCheckBoxChange} />\r\n  \r\n          </div>\r\n        )}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          backgroundColor={this.props.backgroundColor}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.openConfirmDeletionPanel} \r\n          onWidgetFilterInputChange={this.onWidgetFilterInputChange}\r\n          onWidgetContentClick={this.props.onWidgetContentClick}\r\n        />\r\n        \r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete this widget?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","import React from 'react';\r\nimport './Tabs.css';\r\n\r\nclass Tabs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const activeTab = this.props.activeTab;\r\n    this.setState({\r\n      activeTab: activeTab\r\n    });\r\n  }\r\n\r\n  handleTabClick = (title) => {\r\n    this.setState({\r\n      activeTab: title\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children\r\n    } = this.props;\r\n\r\n    const {\r\n      activeTab\r\n    } = this.state;\r\n\r\n    const tabHeaders = [];\r\n    let tabContent = null;\r\n    for (let i = 0; i < children.length; i++) {\r\n      if (children[i]) {\r\n        const title = children[i].props.title;\r\n        let active = '';\r\n        if (title === activeTab) {\r\n          active = 'tab-header-active';\r\n          tabContent = children[i].props.children;\r\n        }\r\n        \r\n        tabHeaders.push(\r\n          <li className={`tab-header-item ${active}`} key={i} onClick={() => this.handleTabClick(title)}>{title}</li>\r\n        );\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className=\"tab-container\">\r\n        <ul className=\"tab-header\">\r\n          {tabHeaders}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {tabContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Select extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    optionDisplay: PropTypes.string,\r\n    optionValue: PropTypes.string,\r\n    preloadOneEmpty: PropTypes.bool\r\n  };\r\n\r\n  handleOptionChange = (event) => {\r\n    const name = this.props.name;\r\n    const value = event.target.value;\r\n    this.props.onChange(name, value);\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      value,\r\n      options = [],\r\n      optionValue,\r\n      optionDisplay,\r\n      preloadOneEmpty = true\r\n    } = this.props;\r\n\r\n    const optionList = [];\r\n    if (preloadOneEmpty) {\r\n      optionList.push(\r\n        <option value=\"\" key=\"\"></option>\r\n      );\r\n    }\r\n    \r\n    options.forEach((option, index) => {\r\n      let value;\r\n      let display;\r\n      if (optionValue && optionDisplay) {\r\n        // The options contain objects.\r\n        value = option[optionValue];\r\n        display = option[optionDisplay];\r\n      } else {\r\n        // The options contain string or number.\r\n        value = option;\r\n        display = option;\r\n      }\r\n      \r\n      optionList.push(\r\n        <option value={value} key={index}>{display}</option>\r\n      ) \r\n    });\r\n\r\n    return (\r\n      <select value={value} onChange={this.handleOptionChange}>\r\n        {optionList}\r\n      </select>\r\n    )\r\n  };\r\n}\r\n\r\nexport default Select;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport AceEditor from 'react-ace';\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nimport './WidgetEditPanel.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport Checkbox from './Checkbox';\r\nimport Tabs from './Tabs';\r\nimport Select from './Select';\r\nimport TableWidget from './TableWidget';\r\nimport ColorPicker from './ColorPicker';\r\n\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      title: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: {},\r\n      type: Constants.CHART,\r\n      filterType: Constants.SINGLE_VALUE,\r\n      chartType: Constants.TABLE,\r\n      style: {\r\n        showBorder: false,\r\n        borderColor: 'rgba(9, 30, 66, 1)',\r\n        showTitle: true,\r\n        backgroundColor: 'rgba(255, 255, 255, 1)',\r\n        zIndex: 50\r\n      },\r\n      queryParameter: '',\r\n      drillThrough: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: '',\r\n      pieKey: '',\r\n      pieValue: '',\r\n      chartOption: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const widget = res.data;\r\n          const {\r\n            type,\r\n            chartType,\r\n            filterType,\r\n            drillThrough\r\n          } = widget;\r\n          if (type === Constants.CHART) {\r\n            this.setState({\r\n              chartType: chartType,\r\n              drillThrough: drillThrough\r\n            });\r\n\r\n            if (chartType === Constants.PIE) {\r\n              const {\r\n                pieKey,\r\n                pieValue\r\n              } = widget.data;\r\n              this.setState({\r\n                pieKey: pieKey,\r\n                pieValue: pieValue\r\n              });\r\n            }\r\n          } else if (type === Constants.FILTER) {\r\n            const {\r\n              queryParameter\r\n            } = widget.data;\r\n            this.setState({\r\n              filterType: filterType,\r\n              queryParameter: queryParameter\r\n            });\r\n            if (filterType === Constants.SLICER) {\r\n\r\n            } else if (filterType === Constants.SINGLE_VALUE) {\r\n\r\n            }\r\n          }\r\n          \r\n          this.setState({\r\n            widgetId: widgetId,\r\n            title: widget.title,\r\n            x: widget.x,\r\n            y: widget.y,\r\n            width: widget.width,\r\n            height: widget.height,\r\n            sqlQuery: widget.sqlQuery,\r\n            type: type,\r\n            jdbcDataSourceId: widget.jdbcDataSourceId,\r\n            style: widget.style\r\n          }, () => {\r\n            this.runQuery();\r\n          });\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  onStyleValueChange = (name, value) => {\r\n    const style = {...this.state.style};\r\n    style[[name]] = value;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n\r\n  save = () => {\r\n    const {\r\n      widgetId,\r\n      title,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      type,\r\n      style\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      title: title,\r\n      dashboardId: this.props.dashboardId,\r\n      type: type,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      style: style\r\n    }\r\n\r\n    if (type === Constants.CHART) {\r\n      const {\r\n        chartType,\r\n        drillThrough\r\n      } = this.state;\r\n      widget.drillThrough = drillThrough;\r\n      widget.chartType = chartType;\r\n\r\n      if (chartType === Constants.TABLE) {\r\n\r\n      } else if (chartType === Constants.PIE) {\r\n        const {\r\n          pieKey,\r\n          pieValue\r\n        } = this.state;\r\n        widget.data = {\r\n          pieKey: pieKey,\r\n          pieValue: pieValue\r\n        }\r\n      }\r\n    } else if (type === Constants.FILTER) {\r\n      const  {\r\n        filterType,\r\n        queryParameter\r\n      } = this.state;\r\n      widget.filterType = filterType;\r\n      widget.data = {\r\n        queryParameter: queryParameter\r\n      }\r\n      if (filterType === Constants.SLICER) {\r\n\r\n      } else if (filterType === Constants.SINGLE_VALUE) {\r\n\r\n      }\r\n    }\r\n    \r\n\r\n    if (widgetId === null) {\r\n      widget.style = {\r\n        showBorder: false,\r\n        borderColor: 'rgba(9, 30, 66, 1)',\r\n        showTitle: true,\r\n        backgroundColor: 'rgba(255, 255, 255, 1)',\r\n        zIndex: 50\r\n      }\r\n\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          queryResult: result\r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = () => {\r\n    const { \r\n      drillThrough,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const index = drillThrough.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrillThrough = [...drillThrough];\r\n      newDrillThrough.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drillThrough: newDrillThrough\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill) => {\r\n    const { drillThrough } = this.state;\r\n    const index = drillThrough.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrillThrough = [...drillThrough];\r\n      newDrillThrough.splice(index, 1);\r\n      this.setState({\r\n        drillThrough: newDrillThrough\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = () => {\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        pieKey, \r\n        pieValue, \r\n        queryResult = {}\r\n      } = this.state;\r\n      const data = Util.jsonToArray(queryResult.data);\r\n      const chartOption = EchartsApi.getPieOption(data, pieKey, pieValue);\r\n      this.setState({\r\n        chartOption: chartOption\r\n      });\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      queryResult = {},\r\n    } = this.state;\r\n    const columns = queryResult.columns || [];\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        chartOption,\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n\r\n      chartPreview = (\r\n        <div>\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label>Aggr Key (string)</label>\r\n          <Select\r\n            name={'pieKey'}\r\n            value={pieKey}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n          />\r\n\r\n\r\n          <label>By Aggr Value (number)</label>\r\n          <Select\r\n            name={'pieValue'}\r\n            value={pieValue}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n          />\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      type,\r\n      queryResult,\r\n      jdbcDataSources = [],\r\n      drillThrough = [],\r\n      drillDashboards = []\r\n    } = this.state;\r\n\r\n    const data = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    const drillItems = drillThrough.map(drill =>\r\n      <div key={drill.columnName} className=\"row\">\r\n        <div className=\"float-left\">Column: {drill.columnName}</div>\r\n        <div className=\"float-left\">Dashboard: {drill.dashboardId}</div>\r\n        <button className=\"button icon-button float-right\"onClick={() => this.removeDrillThrough(drill)}>\r\n          <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    const columnItems = columns.map(col =>\r\n      <div className=\"row\" key={col.name}>\r\n        <div className=\"float-left\">{col.name}</div>\r\n        <div className=\"float-right\">{col.dataType}</div>\r\n      </div>\r\n    );\r\n\r\n    const showQueryTab = type === Constants.CHART || (type === Constants.FILTER && this.state.filterType === Constants.SLICER);\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        <div className=\"row mt-10\">\r\n          <div className=\"float-left\">Type:</div>\r\n          <div className=\"float-left\">\r\n            <Select\r\n              name={'type'}\r\n              value={type}\r\n              onChange={this.handleOptionChange}\r\n              options={Constants.WIDGET_TYPES}\r\n              preloadOneEmpty={false}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mt-10\">\r\n          <Tabs activeTab=\"Basic\">\r\n            <div title=\"Basic\">\r\n              <div className=\"form-panel\">\r\n                <label>Title</label>\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"title\" \r\n                  value={this.state.title}\r\n                  onChange={this.handleInputChange} \r\n                />\r\n\r\n                <Checkbox name=\"showBorder\" value=\"Show border\" checked={this.state.style.showBorder} onChange={this.onStyleValueChange} />\r\n                <Checkbox name=\"showTitle\" value=\"Show title\" checked={this.state.style.showTitle} onChange={this.onStyleValueChange} />\r\n\r\n                <label>Z Index</label>\r\n                <input \r\n                  type=\"number\" \r\n                  name=\"zIndex\" \r\n                  value={this.state.style.zIndex}\r\n                  onChange={(event) => this.onStyleValueChange('zIndex', event.target.value)} \r\n                />\r\n\r\n                <div>\r\n                  Border Color\r\n                  <ColorPicker name={'borderColor'} value={this.state.style.borderColor} onChange={this.onStyleValueChange} />\r\n                </div>\r\n\r\n                <div>\r\n                  Background Color\r\n                  <ColorPicker name={'backgroundColor'} value={this.state.style.backgroundColor} onChange={this.onStyleValueChange} />\r\n                </div>\r\n\r\n                \r\n              </div>\r\n            </div>\r\n\r\n            { type === Constants.FILTER && (  \r\n              <div title=\"Filter\">\r\n                <div className=\"form-panel\">\r\n                  <label>Filter Options</label>\r\n                  <Select\r\n                    name={'filterType'}\r\n                    value={this.state.filterType}\r\n                    onChange={this.handleOptionChange}\r\n                    options={Constants.FILTER_TYPES}\r\n                    preloadOneEmpty={false}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { showQueryTab && (\r\n              <div title=\"Query\">\r\n                <div className=\"form-panel\">\r\n                  <label>DataSource</label>\r\n                  <Select\r\n                    name={'jdbcDataSourceId'}\r\n                    value={this.state.jdbcDataSourceId}\r\n                    onChange={this.handleIntegerOptionChange}\r\n                    options={jdbcDataSources}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'id'}\r\n                    />\r\n                \r\n                  <label>SQL Query</label>\r\n                  <AceEditor\r\n                    value={this.state.sqlQuery}\r\n                    mode=\"mysql\"\r\n                    theme=\"xcode\"\r\n                    name=\"blah2\"\r\n                    onChange={this.handleAceEditorChange}\r\n                    height={'300px'}\r\n                    width={'100%'}\r\n                    fontSize={15}\r\n                    showPrintMargin={false}\r\n                    showGutter={true}\r\n                    highlightActiveLine={true}\r\n                    setOptions={{\r\n                      showLineNumbers: true,\r\n                      tabSize: 2\r\n                    }}\r\n                  />\r\n\r\n                  <div style={{margin: '5px 0px 5px 0px'}}>\r\n                    <button className=\"button\" onClick={this.runQuery}>Run Query</button>\r\n                  </div>\r\n\r\n                  <label>Result</label>\r\n                  <TableWidget\r\n                    data={data}\r\n                    columns={columns}\r\n                    error={error}\r\n                  />\r\n\r\n                  <label style={{marginTop: '5px'}}>Columns Mapping</label>\r\n                  <div>\r\n                    {columnItems}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { type === Constants.CHART && (\r\n              <div title=\"Chart\">\r\n                <div className=\"form-panel\">\r\n                  <label>Chart Type</label>\r\n                  <Select\r\n                    name={'chartType'}\r\n                    value={this.state.chartType}\r\n                    onChange={this.handleOptionChange}\r\n                    options={Constants.CHART_TYPES}\r\n                    preloadOneEmpty={false}\r\n                  />\r\n                  <label>Preview</label>\r\n                  {this.renderChartPreview()} \r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            { type === Constants.CHART && (\r\n              <div title=\"Drill Through\">\r\n                <div className=\"form-panel\">\r\n                  <label>Column</label>\r\n                  <Select\r\n                    name={'drillColumnName'}\r\n                    value={this.state.drillColumnName}\r\n                    options={columns}\r\n                    onChange={this.handleOptionChange}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'name'}\r\n                  />\r\n\r\n                  <label>Dashboard</label>\r\n                  <Select\r\n                    name={'drillDashboardId'}\r\n                    value={this.state.drillDashboardId}\r\n                    options={drillDashboards}\r\n                    onChange={this.handleIntegerOptionChange}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'id'}\r\n                  />\r\n                  <div class=\"row mt-10\">\r\n                    {drillItems}\r\n                  </div>\r\n                  <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { type === Constants.FILTER && (\r\n              <div title=\"Query parameter\">\r\n                <div className=\"form-panel\">\r\n                  <label>Parameter</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    name=\"queryParameter\" \r\n                    value={this.state.queryParameter}\r\n                    onChange={this.handleInputChange} \r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\n\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      isEditMode: false,\r\n      isFullScreenView: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      refreshInterval: 15,\r\n      lastRefreshLabelTimerId: '',\r\n      jdbcDataSourceOptions: [],\r\n      fromDashboard: '',\r\n      dashboardId: 0,\r\n      name: '',\r\n      style: {},\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n\r\n    console.log('DashboardEditView - componentDidMount', dashboardId);\r\n\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    const fromDashboard = params.get('fromDashboard');\r\n    for(let pair of params.entries()) {\r\n      console.log(pair[0]+ ', '+ pair[1]); \r\n    } \r\n\r\n    const widgetViewWidth = this.getPageWidth();\r\n    this.setState({\r\n      widgetViewWidth: widgetViewWidth,\r\n      fromDashboard: fromDashboard\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const dashboard = res.data;\r\n            this.setState({\r\n              dashboardId: dashboard.id,\r\n              name: dashboard.name,\r\n              style: dashboard.style\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n\r\n    const lastRefreshLabelTimerId = setInterval(() => {\r\n      const { lastRefreshed } = this.state;\r\n    }, 10000);\r\n    this.setState({\r\n      lastRefreshLabelTimerId: lastRefreshLabelTimerId\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { \r\n      autoRefreshTimerId,\r\n      lastRefreshLabelTimerId\r\n    } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n    if (lastRefreshLabelTimerId) {\r\n      clearInterval(lastRefreshLabelTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = () => {\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    const dashboardName = params.get('name');\r\n    const showControl = params.get('showControl');\r\n    const fromDashboard = params.get('fromDashboard');\r\n\r\n    const widgetViewWidth = this.getPageWidth();\r\n\r\n    this.setState({\r\n      isFullScreenView: true,\r\n      name: dashboardName,\r\n      widgetViewWidth: widgetViewWidth,\r\n      fromDashboard: fromDashboard\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            style: result.style\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth - 40;\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const { refreshInterval } = this.state;\r\n      let interval = parseInt(refreshInterval, 10) || 15;\r\n      interval = interval < 1 ? 1 : interval;\r\n      const timerId = setInterval(() => {\r\n        this.queryWidgets();\r\n        this.updateLastRefreshed();\r\n      }, interval * 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    this.refreshWidgetView();\r\n    this.updateLastRefreshed();\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n  } \r\n\r\n  queryWidgets = () => {\r\n    this.widgetViewPanel.current.queryCharts();\r\n  }\r\n\r\n  updateLastRefreshed = () => {\r\n    const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\r\n    this.setState({\r\n      lastRefreshed: now\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      style\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      style: style\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.props.onDashboardSave(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    this.widgetEditPanel.current.fetchWidget(widgetId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/workspace/dashboard/view?name=${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onStyleValueChange = (name, value) => {\r\n    const style = {...this.state.style};\r\n    style[[name]] = value;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  onWidgetContentClick = (widgetClickEvent) => {\r\n    const {\r\n      name,\r\n      isFullScreenView\r\n    } = this.state;\r\n\r\n    const {\r\n      type,\r\n      data\r\n    } = widgetClickEvent;\r\n\r\n    if (type === 'tableTdClick') {\r\n      const {\r\n        dashboardId,\r\n        columnName,\r\n        columnValue\r\n      } = data;\r\n\r\n      if (isFullScreenView) {\r\n        axios.get('/ws/dashboard')\r\n          .then(res => {\r\n            const dashboards = res.data;\r\n            const dashboard = dashboards.findIndex(d => d.id === dashboardId);\r\n            if (dashboard !== undefined) {\r\n              const nextDashboard = dashboard.name;\r\n              const nextLink = `/workspace/dashboard/view?name=${nextDashboard}&fromDashboard=${name}&${columnName}=${columnValue}`;\r\n              this.props.history.push(nextLink);\r\n            }\r\n          });\r\n      } else {\r\n        const nextLink = `/workspace/dashboard/${dashboardId}?fromDashboard=${name}&${columnName}=${columnValue}`;\r\n        this.props.history.push(nextLink);\r\n      }\r\n    }\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {},\r\n    } = this.state;\r\n    const dashboardId = objectToDelete.id;\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        this.props.onDashboardDelete(dashboardId);\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  deleteDashboard = () => {\r\n    const { \r\n      dashboardId,\r\n      name\r\n    } = this.state;\r\n    const dashboard = {\r\n      id: dashboardId,\r\n      name: name\r\n    }\r\n    this.openConfirmDeletionPanel(dashboard);\r\n  }\r\n\r\n  openConfirmDeletionPanel = (dashboard) => {\r\n    this.setState({\r\n      objectToDelete: dashboard,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      lastRefreshed,\r\n      isEditMode,\r\n      isFullScreenView,\r\n      fromDashboard\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel = null;\r\n    const controlButtons = (\r\n      <React.Fragment>\r\n        <div className=\"inline-block\">\r\n          <div className=\"inline-block mr-3\">\r\n            Last refreshed: {lastRefreshed}\r\n          </div>\r\n          { autoRefreshStatus === 'OFF' && (\r\n            <input \r\n              type=\"text\" \r\n              name=\"refreshInterval\" \r\n              value={this.state.refreshInterval}\r\n              onChange={this.handleInputChange}\r\n              className=\"inline-block\" \r\n              style={{width: '50px'}}\r\n            />\r\n          )}\r\n        </div>\r\n        <button className=\"button square-button mr-3\" onClick={this.toggleAutoRefresh}>\r\n          {\r\n            autoRefreshStatus === 'ON' ? \r\n            (\r\n              <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\r\n            ) : \r\n            (\r\n              <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\r\n            )\r\n          }\r\n        </button>\r\n        <button className=\"button square-button mr-3\" onClick={this.refresh}>\r\n          <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\r\n        </button>\r\n        <button className=\"button mr-3\" onClick={this.queryWidgets}>\r\n          <FontAwesomeIcon icon=\"filter\" size=\"lg\" fixedWidth /> Apply Filters\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n\r\n    if (!isFullScreenView) {\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button mr-3\" onClick={this.cancelEdit}>\r\n               <FontAwesomeIcon icon=\"times\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button mr-3\" onClick={this.save}>\r\n              <FontAwesomeIcon icon=\"save\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button mr-3\" onClick={this.deleteDashboard}>\r\n               <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>\r\n              <FontAwesomeIcon icon=\"calendar-plus\" size=\"lg\" fixedWidth /> New Widget\r\n            </button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            {controlButtons}\r\n            <button className=\"button square-button mr-3\" onClick={this.fullScreen}>\r\n              <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={this.edit}>\r\n              <FontAwesomeIcon icon=\"edit\" size=\"lg\" fixedWidth />\r\n            </button>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      fullScreenButtonPanel = controlButtons;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-menu-panel row\">\r\n          <div className=\"float-left\">\r\n            {fromDashboard} > \r\n            {\r\n              isFullScreenView || !isEditMode ?\r\n              (\r\n                <div className=\"dashboard-name\">\r\n                  {this.state.name}\r\n                </div>\r\n              ) :(\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"name\" \r\n                  value={this.state.name}\r\n                  onChange={this.handleInputChange} \r\n                  className=\"dashboard-name-input\"\r\n                />\r\n              )\r\n            }\r\n            \r\n          </div>\r\n          <div className=\"float-right\">\r\n            {fullScreenButtonPanel}\r\n            {editButtonPanel}\r\n          </div>\r\n        </div>\r\n\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          isEditMode={this.state.isEditMode}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          onStyleValueChange={this.onStyleValueChange}\r\n          onWidgetContentClick={this.onWidgetContentClick}\r\n          {...this.state.style}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'dashboard-edit-widget-dialog'} \r\n          title={'Widget Edit'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {this.state.objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './Dashboard.css';\r\nimport * as Constants from '../api/Constants';\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport SearchInput from '../components/SearchInput';\r\n\r\nconst ROUTE_WORKSPACE_DASHBOARD = '/workspace/dashboard/';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      activeDashboardId: 0,\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    const index = pathname.indexOf(ROUTE_WORKSPACE_DASHBOARD);\r\n    if (index !== -1) {\r\n      const activeDashboardId = Number(pathname.substring(index + ROUTE_WORKSPACE_DASHBOARD.length));\r\n      this.setState({\r\n        activeDashboardId: activeDashboardId\r\n      })\r\n    }\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false,\r\n      name: ''\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      Toast.showError('Enter a name.');\r\n      return;\r\n    }\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      style: {\r\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\r\n        backgroundColor: 'rgba(233, 235, 238, 1)'\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.closeEditPanel();\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      })\r\n      .catch(error => {\r\n        Toast.showError('The name exists. Try another.');\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.setState({\r\n      activeDashboardId: dashboardId\r\n    }, () => {\r\n      this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n    });\r\n  }\r\n\r\n  onDashboardSave = (dashboardId) => {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  onDashboardDelete = (dashboardId) => {\r\n    this.fetchBoards();\r\n    this.setState({\r\n      activeDashboardId: 0\r\n    }, () => {\r\n      this.props.history.push('/workspace/dashboard');\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dashboards = [],\r\n      activeDashboardId,\r\n      searchValue\r\n    } = this.state;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.props;\r\n    const showEdit = sysRole === Constants.SYS_ROLE_VIEWER ? false : true;\r\n\r\n    const dashboardRows = [];\r\n    for (let i = 0; i < dashboards.length; i++) {\r\n      const dashboard = dashboards[i];\r\n      const name = dashboard.name;\r\n      const menuActive = activeDashboardId === dashboard.id ? 'dashboard-menu-item-active' : '';\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        dashboardRows.push(\r\n          (\r\n            <div key={i} className={`dashboard-menu-item ellipsis ${menuActive}`} onClick={() => this.view(dashboard.id)}>\r\n              {name}\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-sidebar\">\r\n          <div style={{margin: '5px'}}>\r\n            { showEdit && (\r\n              <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\r\n                <FontAwesomeIcon icon=\"plus\" /> New\r\n              </button>\r\n            )}\r\n\r\n            <div style={{marginTop: '5px'}}>\r\n              <SearchInput \r\n                name={'searchValue'} \r\n                value={this.state.searchValue} \r\n                onChange={this.handleNameInputChange} \r\n                inputWidth={117}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            {dashboardRows}\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route \r\n            path=\"/workspace/dashboard/:id\" \r\n            render={(props) => \r\n              <DashboardEditView \r\n                key={props.match.params.id} \r\n                onDashboardSave={this.onDashboardSave} \r\n                onDashboardDelete={this.onDashboardDelete} \r\n              />\r\n            } \r\n            />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'small-modal-panel'} \r\n          title={'New'} >\r\n          <div className=\"form-panel\">\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n            />\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport SearchInput from '../components/SearchInput';\r\nimport Toast from '../components/Toast';\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      searchValue: '',\r\n      showUpdatePassword: false,\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: Constants.SYS_ROLE_VIEWER,\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      this.setState({\r\n        id: user.id,\r\n        username: user.username,\r\n        name: user.name,\r\n        tempPassword: '',\r\n        sysRole: user.sysRole,\r\n        userGroups: user.userGroups\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      userGroupId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    if (!username) {\r\n      Toast.showError('Enter a username.');\r\n      return;\r\n    }\r\n\r\n    if (!tempPassword || tempPassword.length < 8) {\r\n      Toast.showError(`Use 8 or more characters for password.`);\r\n      return;\r\n    }\r\n\r\n    let selectedSysRole = Constants.SYS_ROLE_VIEWER;\r\n    if (Constants.SYS_ROLE_ADMIN === this.props.sysRole) {\r\n      if (sysRole) {\r\n        selectedSysRole = sysRole;\r\n      } else {\r\n        Toast.showError('Select a role.');\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: selectedSysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      if (showUpdatePassword && tempPassword) {\r\n        user.tempPassword = tempPassword;\r\n      }\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  addUserGroup = () => {\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId) => {\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/user/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (user) => {\r\n    this.setState({\r\n      objectToDelete: user,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      showUpdatePassword,\r\n      users = [],\r\n      groups = [],\r\n      userGroups = [],\r\n      searchValue,\r\n      showConfirmDeletionPanel,\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.props;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const userItems = [];\r\n    for (let i = 0; i < users.length; i++) {\r\n      const user = users[i];\r\n      const name = user.name;\r\n      const username = user.username;\r\n      if (!searchValue || (searchValue && (username.includes(searchValue) || name.includes(searchValue)))) {\r\n        userItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {user.username},\r\n                {user.name},\r\n                {user.sysRole}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(user)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(user)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups.length; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups.length; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId} className=\"row\">\r\n                <div className=\"float-left\">Group: {groups[j].name}</div>\r\n                <button className=\"button float-right\"onClick={() => this.removeUserGroup(groupId)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"row\">\r\n          <div className=\"float-left\" style={{marginRight: '5px'}}>\r\n            <SearchInput \r\n              name={'searchValue'} \r\n              value={this.state.searchValue} \r\n              onChange={this.handleNameInputChange} \r\n              inputWidth={200}\r\n            />\r\n          </div>\r\n          <button className=\"button float-left\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New\r\n          </button>\r\n        </div>\r\n        <div className=\"row mt-10\">\r\n          {userItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'mid-modal-panel'} \r\n          title={mode} >\r\n\r\n          <div className=\"row\">\r\n            <div className=\"form-panel float-left\" style={{width: '240px'}}>\r\n              <label>Username <span className=\"required\">*</span></label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} \r\n              />\r\n\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} \r\n              />\r\n\r\n              { mode === 'Edit' && (\r\n                  <div style={{margin: '3px 0px 8px 0px'}}>\r\n                    <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n                  </div>\r\n              )}\r\n              { (mode === 'New' || showUpdatePassword) && ( \r\n                <div>\r\n                  <label>Password</label>\r\n                  <input \r\n                    type=\"password\" \r\n                    name=\"tempPassword\" \r\n                    value={this.state.tempPassword}\r\n                    onChange={this.handleInputChange} />\r\n                </div>\r\n              )}\r\n              \r\n              <label>System Role</label>\r\n              { Constants.SYS_ROLE_ADMIN === sysRole && (\r\n                <Select\r\n                  name={'sysRole'}\r\n                  value={this.state.sysRole}\r\n                  onChange={this.handleNameInputChange}\r\n                  options={[Constants.SYS_ROLE_VIEWER, Constants.SYS_ROLE_DEVELOPER]}\r\n                />\r\n              )}\r\n\r\n              { Constants.SYS_ROLE_DEVELOPER === sysRole && (\r\n                <div>{Constants.SYS_ROLE_VIEWER}</div>\r\n              )}\r\n              \r\n            </div>\r\n            <div className=\"form-panel float-right\" style={{width: '240px'}}>\r\n            \r\n              <label>Groups</label>\r\n              <Select\r\n                name={'userGroupId'}\r\n                value={this.state.userGroupId}\r\n                onChange={this.handleIntegerOptionChange}\r\n                options={groups}\r\n                optionDisplay={'name'}\r\n                optionValue={'id'}\r\n              />\r\n              <button className=\"button\" onClick={this.addUserGroup}>Add</button>\r\n              <div>\r\n                {userGroupItems}\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport SearchInput from '../components/SearchInput';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      showEditPanel: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      this.setState({\r\n        id: group.id,\r\n        name: group.name,\r\n        groupDashboards: group.groupDashboards\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      groupDashboardId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } \r\n  }\r\n\r\n  addGroupDashboard= () => {\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    if (groupDashboardId) {\r\n      const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n      if (index === -1) {\r\n        const newGroupDashboards = [...groupDashboards];\r\n        newGroupDashboards.push(groupDashboardId);\r\n        this.setState({\r\n          groupDashboards: newGroupDashboards\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId) => {\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/group/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (group) => {\r\n    this.setState({\r\n      objectToDelete: group,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = [],\r\n      searchValue,\r\n      showConfirmDeletionPanel,\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const groupItems = [];\r\n    for (let i = 0; i < groups.length; i++) {\r\n      const group = groups[i];\r\n      const name = group.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        groupItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {name}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(group)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(group)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards.length; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards.length; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId} className=\"row\">\r\n                <div className=\"float-left\">Name: {dashboards[j].name}</div>\r\n                <button className=\"button float-right\"onClick={() => this.removeGroupDashboard(dashboardId)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"row\">\r\n          <div className=\"float-left\" style={{marginRight: '5px'}}>\r\n            <SearchInput \r\n              name={'searchValue'} \r\n              value={this.state.searchValue} \r\n              onChange={this.handleNameInputChange} \r\n              inputWidth={200}\r\n            />\r\n          </div>\r\n          <button className=\"button float-left\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New\r\n          </button>\r\n        </div>\r\n        <div className=\"row mt-10\">\r\n          {groupItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'mid-modal-panel'} \r\n          title={mode} >\r\n          <div className=\"row\">\r\n            <div className=\"form-panel float-left\" style={{width: '240px'}}>\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n            </div>\r\n            \r\n            <div className=\"form-panel float-right\" style={{width: '240px'}}>\r\n              <label>Dashboards</label>\r\n              <Select\r\n                name={'groupDashboardId'}\r\n                value={this.state.groupDashboardId}\r\n                onChange={this.handleIntegerOptionChange}\r\n                options={dashboards}\r\n                optionDisplay={'name'}\r\n                optionValue={'id'}\r\n              />\r\n              <button className=\"button\" onClick={this.addGroupDashboard}>Add</button>\r\n              <div>\r\n                {groupDashboardItems}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\n\r\nimport User from './User';\r\nimport Group from './Group';\r\nimport Tabs from '../components/Tabs';\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-page-content\">\r\n        <Tabs activeTab=\"Group\">\r\n          <div title=\"Group\">\r\n            <Group />\r\n          </div>\r\n          <div title=\"User\">\r\n            <User {...this.props} />\r\n          </div>\r\n        </Tabs>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Toast from '../components/Toast';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const user = res.data;\r\n        this.setState({\r\n          id: user.id,\r\n          username: user.username,\r\n          name: user.name,\r\n          sysRole: user.sysRole,\r\n          apiKey: user.apiKey\r\n        });\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n    axios.get('/auth/generate-apikey')\r\n      .then(res => {\r\n        const apiKey = res.data;\r\n        this.setState({\r\n          apiKey: apiKey\r\n        });\r\n      });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        Toast.showError(`Those passwords didn't match.`);\r\n        return;\r\n      }  \r\n\r\n      if (password.length < 8) {\r\n        Toast.showError(`Use 8 or more characters for password.`);\r\n        return;\r\n      }\r\n\r\n      user.password = password;\r\n    }\r\n\r\n    axios.put('/ws/user/account', user)\r\n      .then(res => {\r\n        Toast.showSuccess('Saved.');\r\n      });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"full-page-content\">\r\n        <div className=\"form-panel\" style={{width: '500px'}}>   \r\n          <label>Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\"   \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label>System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label>API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button className=\"button mt-10\" onClick={this.generateApiKey}>Generate new API Key</button>\r\n          <br/>\r\n\r\n          <button className=\"button mt-3\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n          {\r\n            showUpdatePassword && (\r\n              <React.Fragment>\r\n                <br/>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label>Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n          )}\r\n\r\n          <br/>\r\n          <button className=\"button mt-10\" onClick={this.save}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","\r\nimport React from 'react';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('DashboardFullScreenView', 'componentDidMount');\r\n    this.dashboardEditView.loadViewByDashboardName();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView wrappedComponentRef={comp => (this.dashboardEditView = comp)} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","import React from 'react';\r\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\n\r\nimport Toast from '../components/Toast';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport './Workspace.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data Source',\r\n    icon: 'database'\r\n  }, \r\n  {\r\n    link: '/workspace/usermanagement',\r\n    value: 'User Management',\r\n    icon: 'users-cog'\r\n  }\r\n];\r\n\r\nconst ACCOUNT_MENU_LINK = '/workspace/account';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    let link;\r\n    if (pathname.startsWith(ACCOUNT_MENU_LINK)) {\r\n      link = ACCOUNT_MENU_LINK;\r\n    } else {\r\n      const menuItem = MENU_ITEMS.find(m => pathname.startsWith(m.link));\r\n      link = menuItem.link;\r\n    }\r\n\r\n    this.setState({\r\n      currentMenuLink: link,\r\n    });\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  logout = () => {\r\n    axios.get('/auth/logout')\r\n      .then(res => {\r\n        this.props.onLogout();\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n    } = this.state;\r\n    \r\n    console.log('Workspace - render');\r\n\r\n    const {\r\n      username,\r\n      sysRole\r\n    } = this.props;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.link === '/workspace/dashboard');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li key={menu.link} className={active}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"workspace-nav\">  \r\n          <div className=\"workspace-name\">Poli</div>\r\n          <ul className=\"workspace-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div className=\"workspace-account-menu\">\r\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\r\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\r\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\r\n                <span className=\"workspace-nav-menu-text\">{username}</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"workspace-logout-button inline-block\" onClick={this.logout}>\r\n              <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"workspace-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n            <Route exact path=\"/workspace/dashboard/view\" component={DashboardFullScreenView} />\r\n            <Route exact path=\"/workspace/usermanagement\" render={() => <UserManagement {...this.props} />} />\r\n            <Route path=\"/workspace/dashboard\" render={() => <Dashboard {...this.props} />} />\r\n          </Switch>\r\n        </div>\r\n        <Toast />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Workspace);\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch, faSearch, faSave, \r\n  faCalendarPlus, faFilter, faExternalLinkAlt\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport ChangeTempPassword from './views/ChangeTempPassword';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\n\r\n\r\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch, faSearch, faSave, \r\n  faCalendarPlus, faFilter, faExternalLinkAlt\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      sysRole: '',\r\n      isAuthorizing: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    const search = this.props.location.search;\r\n\r\n    const params = new URLSearchParams(search);\r\n    const apiKey = params.get('apiKey');\r\n\r\n    let currentPath = pathname + search;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      this.setState({\r\n        isAuthorizing: true\r\n      }, () => {\r\n        axios.post('/auth/login/cookie')\r\n          .then(res => {\r\n            const loginResponse = res.data;\r\n            if (loginResponse.error) {\r\n                this.setState({\r\n                  sysRole: '',\r\n                  isAuthorizing: false\r\n                }, () => {\r\n                  this.props.history.push('/login');\r\n                });\r\n              } else {\r\n                this.onLoginSuccess(loginResponse, currentPath);\r\n              }\r\n          });\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n  onLoginSuccess = (loginResponse = {}, pathname = null) => {\r\n    if (loginResponse.tempPassword) {\r\n      this.props.history.push('/changepassword');\r\n    } else {\r\n      this.setState({\r\n        username: loginResponse.username,\r\n        sysRole: loginResponse.sysRole,\r\n        isAuthorizing: false\r\n      }, () => {\r\n        let directUrl = '/workspace/dashboard';\r\n        if (pathname) {\r\n          directUrl = pathname;\r\n        }\r\n        this.props.history.push(directUrl);\r\n      });\r\n    }\r\n  }\r\n\r\n  onLogout = () => {\r\n    this.setState({\r\n      username: '',\r\n      sysRole: '',\r\n      isAuthorizing: false\r\n    }, () => {\r\n      this.props.history.push('/login');\r\n    });\r\n  }\r\n   \r\n  render() {\r\n    const {\r\n      username,\r\n      sysRole,\r\n      isAuthorizing\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (isAuthorizing) {\r\n      return (\r\n        <FontAwesomeIcon icon=\"circle-notch\" spin={true} size=\"2x\" />\r\n      )\r\n    }\r\n    \r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Login sysRole={sysRole} onLoginSuccess={this.onLoginSuccess} />} />\r\n          <Route path=\"/login\" render={() => <Login sysRole={sysRole} onLoginSuccess={this.onLoginSuccess} />} />\r\n          <Route path=\"/changepassword\" component={ChangeTempPassword} />\r\n          <PrivateRoute \r\n            authenticated={isAuthenticated} \r\n            path='/workspace' \r\n            component={Workspace} \r\n            username={username}\r\n            sysRole={sysRole} \r\n            onLogout={this.onLogout}\r\n          />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} {...rest} />\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}