{"version":3,"sources":["views/Login.js","views/ChangeTempPassword.js","api/WebApi.js","components/Modal.js","components/Toast.js","components/SearchInput.js","views/DataSource.js","api/Constants.js","components/ColorPicker.js","components/Checkbox.js","api/Util.js","api/EchartsApi.js","components/GridDraggable.js","components/GridResizable.js","components/TableWidget.js","components/filters/Slicer.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/Tabs.js","components/Select.js","components/SelectButtons.js","components/filters/InputRange.js","components/WidgetEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/DashboardFullScreenView.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","handleKeyPress","keyCode","login","_this$state","state","username","password","user","axios","post","then","res","loginResponse","data","error","errorMsg","onLoginSuccess","version","_this2","get","isAuthenticated","sysRole","react_default","a","createElement","className","type","onChange","onKeyDown","onClick","React","Component","withRouter","ChangeTempPassword","changePassword","confirmedPassword","length","history","push","style","fontSize","textAlign","fontWeight","marginBottom","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","sent","abrupt","t0","stop","apply","arguments","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","concat","onClose","react_fontawesome_index_es","icon","size","COLOR_RED","Toast","message","bgColor","timeoutId","clearTimeout","showToast","backgroundColor","setTimeout","hide","_toastRef","assertThisInitialized","clearInterval","toastStatus","showSuccess","showError","SearchInput","reset","inputWidth","inputStyle","width","margin","placeholder","DataSource","handleNameInputChange","save","showUpdatePassword","id","connectionUrl","driverClassName","ping","ds","put","closeEditPanel","catch","result","clearEditPanel","initialState","openEditPanel","showEditPanel","confirmDelete","_this$state$objectToD","objectToDelete","delete","closeConfirmDeletionPanel","openConfirmDeletionPanel","datasource","showConfirmDeletionPanel","toggleUpdatePassword","prevState","jdbcDataSources","searchValue","webApi","_this$state2","_this$state2$jdbcData","_this$state2$objectTo","mode","jdbcDataSourceItems","_loop","i","includes","key","class","marginRight","src_components_SearchInput","src_components_Modal","rows","CHART","FILTER","WIDGET_TYPES","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","SYS_ROLE_ADMIN","SYS_ROLE_VIEWER","DEFAULT_DASHBOARD_HEIGHT","DEFAULT_DASHBOARD_FIXED_WIDTH","ColorPicker","handleClick","showPalette","handleChange","color","rgb","rgba","r","g","b","height","borderRadius","background","lib","Checkbox","toggle","checked","_this$props2","checkmarkBoxStyle","jsonToArray","json","array","JSON","parse","e","getReadableDiffTime","d1","d2","seconds","Math","abs","floor","minutes","hours","CHART_COLORS","getPieOption","queryResultData","pieKey","pieValue","legend","series","row","tooltip","orient","right","top","bottom","center","radius","getPieOptionTemplate","WIDGET_BORDER","GridDraggable","onMouseDown","preventDefault","gridItemNode","ReactDOM","findDOMNode","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","left","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","fixedWidth","TableWidget","handleTdClick","dashboardId","columnName","columnValue","onTableTdClick","_this$props$data","_this$props$columns","columns","_this$props$drillThro","drillThrough","columnHeaders","forEach","column","header","Header","accessor","index","findIndex","d","Cell","es","defaultPageSize","previousText","nextText","Slicer","toggleSelectAll","newIsSelectAll","isSelectAll","newCheckBoxes","toConsumableArray","checkBoxes","isChecked","handleSearchValueChange","handleCheckBoxChange","x","_this$props$checkBoxe","checkBoxItems","checkBox","src_components_Checkbox","selectText","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","instance","handleOriginal","console","log","drills","widgetDrillThrough","onChartClick","param","echarts","onChartLegendselectchanged","echart","widgetClickEvent","onWidgetContentClick","onSlicerChange","onWidgetFilterInputChange","onSingleValueChange","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","filterType","_this$props$queryResu","queryResult","Util","widgetItem","Constants","src_components_TableWidget","chartOption","EchartsApi","echarts_for_react_lib_default","option","onEvents","components_filters_Slicer","isEditMode","_this$props2$style","_style$showBorder","showBorder","_style$showTitle","showTitle","borderColor","titleFontColor","titleBackgroundColor","contentBackgroundColor","zIndex","borderStyle","gridBoxStyle","border","titleStyle","Array","isArray","contentStyle","components_GridDraggable","components_GridResizable","GridLayout","_this$props$widgets","widgets","showGridlines","backgroundSize","backgroundImage","boxItems","map","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","viewWidth","newWidgets","gridWidth","isFixedWidth","resizeWidgetsToActual","resizeWidgetsToBase","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","Number","parseFloat","toFixed","fetchWidgets","queryFilters","queryCharts","saveWidgets","stringify","w","splice","_this$state$widgets","getFilterParams","_this$state$widgets2","filterParams","filterParam","_widget$checkBoxes","paramValues","j","remark","queryParameter","handleSavedWidget","queryChart","urlFilterParams","undefined","_widgets$i","_widgets$i2","queryFilter","params","_this3","_arr","values","_i","val","_this4","widgetViewWidth","showControl","onStyleValueChange","src_components_ColorPicker","src_components_GridLayout","Tabs","handleTabClick","activeTab","tabHeaders","tabContent","active","Select","handleOptionChange","_this$props$options","options","optionValue","optionDisplay","_this$props$preloadOn","preloadOneEmpty","optionList","display","SelectButtons","clickButton","_this$props$selection","selections","buttonItems","current","activeClass","InputRange","min","max","step","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","_widget$data","sqlQuery","jdbcDataSourceId","runQuery","_x","objectSpread","handleAceEditorChange","newValue","handleIntegerOptionChange","intValue","_this$state3","_this$state4","onSave","queryRequest","addDrillThrough","_this$state5","drillColumnName","drillDashboardId","newDrillThrough","removeDrillThrough","drill","generateChart","_this$state6","_this$state6$queryRes","renderChartPreview","_this$state7","_this$state7$queryRes","chartPreview","_this$state8","components_Select","_this$state9","_this$state9$jdbcData","_this$state9$drillThr","_this$state9$drillDas","drillItems","columnItems","col","dataType","showQueryTab","src_components_SelectButtons","src_components_Tabs","components_filters_InputRange","Fragment","react_ace_lib_default","theme","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","marginTop","DashboardEditView","loadViewByDashboardName","dashboardName","match","url","location","search","URLSearchParams","fromDashboard","getPageWidth","isFullScreenView","refresh","toggleAutoRefresh","autoRefreshTimerId","refreshInterval","interval","timerId","setInterval","applyFilters","refreshWidgetView","updateLastRefreshed","widgetViewPanel","now","Date","lastRefreshed","updateReadableLastRefreshed","readableLastRefreshed","dashboard","onDashboardSave","edit","cancelEdit","onWidgetSave","showWidgetEditPanel","openWidgetEditPanel","widgetEditPanel","getUrlFilterParams","fullScreen","window","open","nextDashboard","nextLink","goBackToFromDashboard","goBack","onDashboardDelete","deleteDashboard","searchParams","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","lastRefreshLabelTimerId","jdbcDataSourceOptions","createRef","editButtonPanel","autoRefreshStatus","fullScreenButtonPanel","controlButtons","src_components_WidgetViewPanel","ref","src_components_WidgetEditPanel","Dashboard","fetchBoards","view","activeDashboardId","pathname","indexOf","substring","_this$state$dashboard","showEdit","dashboardRows","menuActive","Route","path","render","views_DashboardEditView","User","fetchUsers","users","fetchGroups","groups","tempPassword","userGroups","userGroupId","initialEditPanelState","selectedSysRole","addUserGroup","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_this$state3$users","_this$state3$groups","_this$state3$userGrou","_this$state3$objectTo","userItems","userGroupItems","_loop2","Group","fetchDashboards","group","groupDashboards","groupDashboardId","addGroupDashboard","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","UserManagement","views_Group","views_User","Account","fetchUser","apiKey","generateApiKey","DashboardFullScreenView","MENU_ITEMS","link","Workspace","handleMenuClick","menuLink","currentMenuLink","logout","onLogout","startsWith","find","m","menuItems","menuList","filter","menu","Link","to","isAccountMenuActive","Switch","exact","component","views_UserManagement","src_views_Dashboard","src_components_Toast","PageNotFound","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","faCircleNotch","faSearch","faSave","faCalendarPlus","faFilter","faExternalLinkAlt","App","handleLoginResponse","currentPath","isAuthorizing","isTempPassword","directUrl","configAxiosInterceptors","interceptors","use","statusCode","status","Promise","reject","loginRequest","spin","src_views_Login","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","BrowserRouter","basename","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ff59c065.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: '',\r\n      version: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('/info/version')\r\n      .then(res => {\r\n        const version = res.data;\r\n        this.setState({\r\n          version: version\r\n        });\r\n      });\r\n\r\n    const { sysRole } = this.props;\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      axios.post('/auth/login/cookie')\r\n        .then(res => {\r\n          const loginResponse = res.data;\r\n          if (!loginResponse.error) {\r\n            this.props.onLoginSuccess(loginResponse);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.keyCode === 13) {\r\n      this.login();\r\n    }\r\n  }\r\n\r\n  login = () => {\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const loginResponse = res.data;\r\n        if (loginResponse.error) {\r\n          this.setState({\r\n            errorMsg: loginResponse.error\r\n          });\r\n        } else {\r\n          this.props.onLoginSuccess(loginResponse);\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login-view\">\r\n        <div className=\"login-panel\">\r\n          <div className=\"login-app-title\">Poli</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <div className=\"login-panel-body\">\r\n            <div className=\"form-panel\">\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n              <label>Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n              <button className=\"button login-button confirm-button\" onClick={this.login}>Login</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"version-number\">\r\n          Version {this.state.version}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport './Login.css';\r\n\r\nclass ChangeTempPassword extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  changePassword = () => {\r\n    const {\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    if (password && confirmedPassword\r\n        && password === confirmedPassword) {\r\n      if (password.length < 8) {\r\n        this.setState({\r\n          errorMsg: `Use 8 or more characters.`\r\n        });\r\n        return;\r\n      }\r\n\r\n      const user = {\r\n        password: password\r\n      }\r\n\r\n      axios.post('/auth/login/change-password', user)\r\n        .then(res => {\r\n          const loginResponse = res.data || {};\r\n          if (loginResponse.error) {\r\n            this.setState({\r\n              errorMsg: loginResponse.error\r\n            });\r\n          } else {\r\n            this.props.history.push('/workspace/dashboard');\r\n          }\r\n        });\r\n    } else {\r\n      this.setState({\r\n        errorMsg: `Those passwords didn't match.`\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const titleStyle = {\r\n      fontSize: '22px',\r\n      textAlign: 'center',\r\n      fontWeight: 'bold',\r\n      marginBottom: '15px'\r\n    }\r\n\r\n    const tipStyle = {\r\n      fontWeight: 'bold',\r\n      marginBottom: '5px',\r\n      fontSize: '15px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"login-view\">\r\n        <div className=\"login-panel\">\r\n          <div style={titleStyle}>Change password</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <div className=\"login-panel-body\">\r\n            <div className=\"form-panel\">\r\n              <div style={tipStyle}>* Use 8 or more characters</div>\r\n              <label>New password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n              <label>Confirm password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"confirmedPassword\" \r\n                value={this.state.confirmedPassword}\r\n                onChange={this.handleInputChange} />\r\n              <button className=\"button login-button confirm-button\" onClick={this.changePassword}>Confirm</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ChangeTempPassword);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      modalClass = '',\r\n      title,\r\n      children\r\n    } = this.props;\r\n\r\n    const modalStatus = show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={`modal-panel ${modalClass}`}>\r\n          <div className=\"model-header row\">\r\n            <div className=\"model-title\">{title}</div>\r\n            <button className=\"model-close-button icon-button\" onClick={() => this.props.onClose()}>\r\n              <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          <div className='modal-body'>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Toast.css';\r\n\r\nconst COLOR_RED = '#FF5630';\r\nconst COLOR_GREEN = '#36B37E';\r\n\r\nclass Toast extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showToast: false,\r\n      message: '',\r\n      backgroundColor: COLOR_RED,\r\n      timeoutId: ''\r\n    };\r\n\r\n    Toast._toastRef = this;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { timeoutId } = this.state;\r\n    if (timeoutId) {\r\n      clearInterval(timeoutId);\r\n    }\r\n  }\r\n\r\n  show = (message, bgColor) => {\r\n    const { timeoutId } = this.state;\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    this.setState({ \r\n      showToast: true,\r\n      message: message,\r\n      backgroundColor: bgColor,\r\n      timeoutId: ''\r\n    }, () => {\r\n      const timeoutId = setTimeout(() => {\r\n        this.hide();\r\n      }, 3000);\r\n      this.setState({\r\n        timeoutId: timeoutId\r\n      });\r\n    });\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({ \r\n      showToast: false,\r\n      message: ''\r\n    });\r\n  }\r\n\r\n  static showSuccess = (message) => {\r\n    Toast._toastRef.show(message, COLOR_GREEN);\r\n  }\r\n\r\n   static showError = (message) => {\r\n    Toast._toastRef.show(message, COLOR_RED);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showToast,\r\n      message,\r\n      backgroundColor\r\n    } = this.state;\r\n\r\n    const toastStatus = showToast ? 'display-block' : 'display-none';\r\n    const style = {\r\n      backgroundColor: backgroundColor\r\n    }\r\n\r\n    return (\r\n      <div className={`toast-container ${toastStatus}`} style={style}>\r\n        {message}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toast;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './SearchInput.css';\r\n\r\nclass SearchInput extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    inputWidth: PropTypes.number\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const { name } = this.props;\r\n    const value = event.target.value;\r\n    this.props.onChange(name, value);\r\n  }\r\n\r\n  reset = () => {\r\n    const { name } = this.props;\r\n    this.props.onChange(name, '');\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      value,\r\n      inputWidth\r\n    } = this.props;\r\n\r\n    let inputStyle = {};\r\n    if (inputWidth) {\r\n      inputStyle.width = inputWidth + 'px';\r\n    }\r\n\r\n    return (\r\n      <div className=\"search-input-container\">\r\n        <div className=\"row\">\r\n          <div className=\"search-input-icon float-left\">\r\n            <FontAwesomeIcon icon=\"search\" style={{margin: '10px'}} />\r\n          </div>\r\n          <div className=\"float-left\">\r\n            <input\r\n              type=\"text\"\r\n              name={name}\r\n              value={value}\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleInputChange}\r\n              className=\"search-input-input\"\r\n              style={inputStyle}\r\n            />\r\n          </div>\r\n          <button className=\"button search-input-reset-button float-right\" onClick={this.reset}>\r\n            <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchInput;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport SearchInput from '../components/SearchInput';\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      showUpdatePassword: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataSources();\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      driverClassName,\r\n      username,\r\n      password,\r\n      name,\r\n      ping,\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      Toast.showError('Enter a name.');\r\n      return;\r\n    }\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      driverClassName: driverClassName,\r\n      username: username,\r\n      name: name,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword && password) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          Toast.showError('The name exists. Try another.');\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          Toast.showError('The name exists. Try another.');\r\n        });\r\n    } \r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        if (result === 'success') {\r\n          Toast.showSuccess('Ping Succeeded');\r\n        } else {\r\n          Toast.showError(result);\r\n        }\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        driverClassName: ds.driverClassName,\r\n        username: ds.username,\r\n        name: ds.name,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/jdbcdatasource/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (datasource) => {\r\n    this.setState({\r\n      objectToDelete: datasource,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      id,\r\n      jdbcDataSources = [],\r\n      searchValue,\r\n      showConfirmDeletionPanel,\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const jdbcDataSourceItems = [];\r\n    for (let i = 0; i < jdbcDataSources.length; i++) {\r\n      const ds = jdbcDataSources[i];\r\n      const name = ds.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        jdbcDataSourceItems.push(\r\n          (\r\n            <div key={i} className=\"card float-left\">\r\n              <div className=\"card-header ellipsis\">\r\n                {name}\r\n              </div>\r\n              <div className=\"card-content\"></div>\r\n              <div className=\"card-footer row\">\r\n                <div className=\"float-right\">\r\n                  <button className=\"icon-button card-icon-button\" onClick={() => this.openEditPanel(ds)}>\r\n                    <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                  </button>\r\n                  <button className=\"icon-button card-icon-button\" onClick={() => this.openConfirmDeletionPanel(ds)}>\r\n                    <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                  </button>\r\n                  <button className=\"icon-button card-icon-button\" onClick={() => this.ping(ds.id)}>\r\n                    <FontAwesomeIcon icon=\"plug\" size=\"lg\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"full-page-content\">\r\n        <div class=\"row\">\r\n          <div className=\"float-left\" style={{marginRight: '5px'}}>\r\n            <SearchInput \r\n              name={'searchValue'} \r\n              value={this.state.searchValue} \r\n              onChange={this.handleNameInputChange} \r\n              inputWidth={200}\r\n            />\r\n          </div>\r\n          <button className=\"button float-left\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New\r\n          </button>\r\n        </div>\r\n        <div className=\"row mt-10\">\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Name <span className=\"required\">*</span></label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n            />\r\n\r\n            <label>Connection Url</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label>Driver Class Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"driverClassName\" \r\n              value={this.state.driverClassName}\r\n              onChange={this.handleInputChange} \r\n            />\r\n\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} \r\n            />\r\n            \r\n            { mode === 'Edit' && (\r\n              <div style={{margin: '3px 0px 8px 0px'}}>\r\n                <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n              </div>\r\n            )}\r\n\r\n            { (mode === 'New' || showUpdatePassword) && ( \r\n              <div>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} \r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <label>Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} \r\n            />\r\n            <button className=\"button mt-3 confirm-button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button delete-button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","/**\r\n * Constants\r\n */\r\nexport const CHART = 'chart';\r\nexport const FILTER = 'filter';\r\nexport const WIDGET_TYPES = [CHART, FILTER];\r\n\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\r\n\r\nexport const SYS_ROLE_ADMIN = 'admin';\r\nexport const SYS_ROLE_DEVELOPER = 'developer';\r\nexport const SYS_ROLE_VIEWER = 'viewer';\r\n\r\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;\r\nexport const DEFAULT_DASHBOARD_FIXED_WIDTH = 800;","import React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport './ColorPicker.css'\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPalette: false\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      showPalette: !prevState.showPalette\r\n    })); \r\n  };\r\n\r\n  handleChange = (color) => {\r\n    const { name } = this.props;\r\n    const rgb = color.rgb;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    this.props.onChange(name, rgba);\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: this.props.value\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"colorpicker-select\" onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.showPalette && (\r\n          <div className=\"colorpicker-popover\">\r\n            <ChromePicker color={this.props.value} onChange={this.handleChange} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    const {\r\n      name,\r\n      checked\r\n    } = this.props;\r\n\r\n    this.props.onChange(name, !checked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      checked\r\n    } = this.props;\r\n\r\n    const checkmarkBoxBgColor = checked ? '#000000' : '#FFFFFF';\r\n    const checkmarkBoxStyle = {\r\n      backgroundColor: checkmarkBoxBgColor\r\n    };\r\n\r\n    return (\r\n      <div className=\"checkbox-container\" onClick={this.toggle}>\r\n        <div className=\"checkbox-checkmark\">\r\n          <div className=\"checkbox-checkmark-box\" style={checkmarkBoxStyle}>\r\n          </div>\r\n        </div>\r\n        <div className=\"checkbox-label\">{value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};\r\n\r\nexport const jsonToArray = (json) => {\r\n  let array;\r\n  try {\r\n    array = JSON.parse(json);\r\n  } catch(e) {\r\n    array = [];\r\n  }\r\n  return array;\r\n}\r\n\r\nexport const getReadableDiffTime = (d1, d2) => {\r\n  const seconds = Math.abs(d1 - d2) / 1000;\r\n  if (seconds <= 5) {\r\n    return 'Just now';\r\n  } else if (seconds > 5 && seconds < 60) {\r\n    return Math.floor(seconds) + ' seconds ago';\r\n  }\r\n\r\n  const minutes = Math.floor(seconds / 60);\r\n  if (minutes == 1) {\r\n    return '1 minute ago';\r\n  } else if (minutes > 1 && minutes < 60) {\r\n    return minutes + \" minutes ago\";\r\n  } \r\n\r\n  const hours = Math.floor(seconds / 3600);\r\n  if (hours == 1) {\r\n    return '1 hour ago';\r\n  }\r\n  return hours + \" hours ago\";\r\n}  \r\n","import * as Util from '../api/Util';\r\n\r\nconst CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nconst getRandomInt = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport const getPieOptionTemplate = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      type: 'scroll',\r\n      orient: 'vertical',\r\n      data: legend,\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['50%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport const getPieOption = (queryResultData, pieKey, pieValue) => {\r\n  let legend = [];\r\n  let series = [];\r\n  for (let i = 0; i < queryResultData.length; i++) {\r\n    const row = queryResultData[i];\r\n    legend.push(row[pieKey]);\r\n    series.push({\r\n      name: row[pieKey],\r\n      value: row[pieValue]\r\n    });  \r\n  }\r\n  return getPieOptionTemplate(legend, series);\r\n}\r\n\r\nconst getBarOptionTemplate = (axisData, seriesData, isHorizontal) => {\r\n\r\n  let xAxis = {};\r\n  let yAxis = {};\r\n  if (isHorizontal) {\r\n    xAxis = {\r\n      type: 'value'\r\n    };\r\n    yAxis = {\r\n      type: 'category',\r\n      data: axisData\r\n    }\r\n  } else {\r\n    xAxis = {\r\n      type: 'category',\r\n      data: axisData\r\n    };\r\n    yAxis = {\r\n      type: 'value'\r\n    }\r\n  }\r\n\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    xAxis: xAxis,\r\n    yAxis: yAxis,\r\n    series: [\r\n      {\r\n        type: 'bar',\r\n        data: seriesData\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nconst getLineOptionTemplate = (xAxisData, seriesData, smooth) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      data: xAxisData\r\n    },\r\n    yAxis: {\r\n      type: 'value'\r\n    },\r\n    series: [\r\n      {\r\n        type: 'line',\r\n        data: seriesData,\r\n        smooth: smooth\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nconst getTimeLineOptionTemplate = (seriesData) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    xAxis: {\r\n      type: 'time',\r\n      axisLabel: {\r\n        formatter: (value, index) => {\r\n          const date = new Date(value);\r\n          return [date.getMonth() + 1, date.getDate()].join('-');\r\n        }\r\n      },\r\n      boundaryGap: false\r\n    },\r\n    yAxis: {\r\n      type: 'value'\r\n    },\r\n    series: [\r\n      {\r\n        type: 'line',\r\n        data: seriesData\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nconst getAreaOptionTemplate = (xAxisData, seriesData, smooth) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      boundaryGap: false,\r\n      data: xAxisData\r\n    },\r\n    yAxis: {\r\n      type: 'value'\r\n    },\r\n    series: [\r\n      {\r\n        type: 'line',\r\n        data: seriesData,\r\n        areaStyle: {},\r\n        smooth: smooth\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nconst getHeatmapOptionTemplate = (min, max, xAxisData, yAxisData, seriesData) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    animation: false,\r\n    grid: {\r\n      y: 10\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      data: xAxisData,\r\n      splitArea: {\r\n          show: true\r\n      }\r\n    },\r\n    yAxis: {\r\n      type: 'category',\r\n      data: yAxisData,\r\n      splitArea: {\r\n        show: true\r\n      }\r\n    },\r\n    visualMap: {\r\n      min: min,\r\n      max: max,\r\n      calculable: true,\r\n      orient: 'horizontal',\r\n      left: 'center',\r\n      itemWidth: 12,\r\n      bottom: 5,\r\n      inRange: {\r\n        // color: ['#121122', 'rgba(3,4,5,0.4)', 'red']\r\n        color: ['#FFFFFF', '#000000']\r\n      }\r\n    },\r\n    series: [{\r\n      type: 'heatmap',\r\n      data: seriesData,\r\n      label: {\r\n        normal: {\r\n          show: true,\r\n          color: '#FFFFFF'\r\n        }\r\n      },\r\n      itemStyle: {\r\n        emphasis: {\r\n          shadowBlur: 10,\r\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n        }\r\n      }\r\n    }]\r\n  }\r\n};\r\n\r\nconst getTreemapOptionTemplate = (seriesData) => {\r\n  return {\r\n    series: [{\r\n      name: 'ALL',\r\n      type: 'treemap',\r\n      data: seriesData,\r\n      levels: [\r\n        {\r\n          itemStyle: {\r\n            normal: {\r\n              borderColor: '#f9f9f9',\r\n              borderWidth: 2,\r\n              gapWidth: 2\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }]\r\n  }\r\n}\r\n\r\nconst getCalendarHeatmapOptionTemplate = (min, max, seriesData) => {\r\n  return {\r\n    visualMap: {\r\n      show: false,\r\n      min: 1,\r\n      max: 10\r\n    },\r\n    calendar: {\r\n      range: '2017'\r\n    },\r\n    series: {\r\n      type: 'heatmap',\r\n      coordinateSystem: 'calendar',\r\n      data: getVirtulData(2017)\r\n    }\r\n  }\r\n}\r\n\r\nfunction formatDate(date) {\r\n  var d = new Date(date),\r\n    month = '' + (d.getMonth() + 1),\r\n    day = '' + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = '0' + month;\r\n  if (day.length < 2) day = '0' + day;\r\n\r\n  return [year, month, day].join('-');\r\n}\r\n\r\nfunction getVirtulData(year) {\r\n    year = year || '2017';\r\n    var date = + new Date(year + '-01-01');\r\n    var end = + new Date(year + '-12-31');\r\n    var dayTime = 3600 * 24 * 1000;\r\n    var data = [];\r\n    for (let time = date; time <= end; time += dayTime) {\r\n      const value = getRandomInt(1, 10);\r\n      data.push([\r\n        formatDate(new Date(time)),\r\n        value\r\n      ]);\r\n    }\r\n    \r\n    return data;\r\n}\r\n\r\nconst buildBarOption = () => {\r\n  const xAxisData = [];\r\n  const seriesData = [];\r\n  for (let i = 1; i <= 10; i++) {\r\n    const name = 'a' + i;\r\n    const value = getRandomInt(1, 10);\r\n    xAxisData.push(name);\r\n    seriesData.push(value);\r\n  }\r\n  return getBarOptionTemplate(xAxisData, seriesData, false);\r\n}\r\n\r\nconst buildBarOption2 = () => {\r\n  const xAxisData = [];\r\n  const seriesData = [];\r\n  for (let i = 1; i <= 10; i++) {\r\n    const name = 'a' + i;\r\n    const value = getRandomInt(1, 10);\r\n    xAxisData.push(name);\r\n    seriesData.push(value);\r\n  }\r\n  return getBarOptionTemplate(xAxisData, seriesData, true);\r\n}\r\n\r\nconst buildLineOption = () => {\r\n  const xAxisData = [];\r\n  const seriesData = [];\r\n  for (let i = 1; i <= 10; i++) {\r\n    const name = 'a' + i;\r\n    const value = getRandomInt(1, 10);\r\n    xAxisData.push(name);\r\n    seriesData.push(value);\r\n  }\r\n  return getLineOptionTemplate(xAxisData, seriesData, false);\r\n}\r\n\r\nconst buildAreaOption = () => {\r\n  const xAxisData = [];\r\n  const seriesData = [];\r\n  for (let i = 1; i <= 10; i++) {\r\n    const name = 'a' + i;\r\n    const value = getRandomInt(1, 10);\r\n    xAxisData.push(name);\r\n    seriesData.push(value);\r\n  }\r\n  return getAreaOptionTemplate(xAxisData, seriesData, true);\r\n}\r\n\r\nconst buildHeatmapOption = () => {\r\n  const xAxisData = [];\r\n  const yAxisData = [];\r\n  const seriesData = [];\r\n  const row = 5;\r\n  const column = 10;\r\n  for (let i = 0; i < row; i++) {\r\n    xAxisData.push('x' + i);\r\n  }\r\n  for (let j = 0; j < column; j++) {\r\n    yAxisData.push('y' + j);\r\n  }\r\n\r\n  for (let i = 0; i < row; i++) {\r\n    for (let j = 0; j < column; j++) {\r\n      const value = getRandomInt(1, 10);\r\n      seriesData.push([i, j, value]);\r\n    }\r\n  }\r\n  return getHeatmapOptionTemplate(1, 10, xAxisData, yAxisData, seriesData);\r\n}\r\n\r\nconst buildTreemapOption = () => {\r\n  const seriesData = [];\r\n  for (let i = 1; i <= 10; i++) {\r\n    const name = 'a' + i;\r\n    const value = getRandomInt(1, 10);\r\n    seriesData.push({\r\n      name: name,\r\n      value: value\r\n    });\r\n  }\r\n  return getTreemapOptionTemplate(seriesData);\r\n}\r\n\r\nconst buildTimeLineOption = () => {\r\n  const seriesData = [];\r\n  for (let i = 1; i <= 10; i++) {\r\n    const name = 'a' + i;\r\n    const epoch = + new Date();\r\n    const date = new Date(epoch);\r\n    const value = getRandomInt(1, 10);\r\n    seriesData.push({\r\n      name: name,\r\n      value: [\r\n        [date.getFullYear(), date.getMonth() + 1, date.getDate()].join('/'), \r\n        value\r\n      ]\r\n    });\r\n  }\r\n\r\n  return getTimeLineOptionTemplate(seriesData);\r\n}\r\n\r\nconst buildCalenarHeatmapOption = () => {\r\n  return getCalendarHeatmapOptionTemplate();\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    /*\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n      boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n    */\r\n   \r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n/**\r\n * <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\r\n */\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport './TableWidget.css';\r\n\r\nclass TableWidget extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  handleTdClick = (dashboardId, columnName, columnValue) => {\r\n    this.props.onTableTdClick(dashboardId, columnName, columnValue);\r\n  }\r\n\r\n  render() {   \r\n    const {\r\n      data = [],\r\n      columns = [],\r\n      drillThrough = [],\r\n      error\r\n    } = this.props;\r\n\r\n    const columnHeaders = [];\r\n    columns.forEach(column => {\r\n      const columnName = column.name;\r\n      const header = {\r\n        Header: columnName,\r\n        accessor: columnName\r\n      };\r\n      if (drillThrough.length > 0) {\r\n        const index = drillThrough.findIndex(d => d.columnName === columnName);\r\n        if (index !== -1) {\r\n          const dashboardId = drillThrough[index].dashboardId;\r\n          header.Cell = (props => \r\n            <span className=\"link-label\" \r\n              onClick={() => this.handleTdClick(dashboardId, columnName, props.value)}>\r\n              {props.value}\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n\r\n      columnHeaders.push(header);\r\n    });\r\n\r\n    if (error) {\r\n      return (\r\n        <div>\r\n          {error}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (data.length === 0 || columns.length === 0) {\r\n      return (\r\n        <div>No data</div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ReactTable\r\n        data={data}\r\n        columns={columnHeaders}\r\n        defaultPageSize={10}\r\n        previousText={'Prev'}\r\n        nextText={'Next'}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableWidget;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Checkbox from '../Checkbox';\r\nimport './Slicer.css';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSelectAll: false,\r\n      searchValue: ''\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    checkBoxes: PropTypes.array.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n  };\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n\r\n    this.props.onChange(this.props.id, newCheckBoxes);\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.id, newCheckBoxes);\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      checkBoxes = [],\r\n    } = this.props;\r\n\r\n    const {\r\n      searchValue,\r\n      isSelectAll\r\n    } = this.state;\r\n\r\n    const checkBoxItems = [];\r\n    for (let i = 0; i < checkBoxes.length; i++) {\r\n      const checkBox = checkBoxes[i];\r\n      const value = checkBox.value;\r\n      if (!searchValue || (searchValue && value.includes(searchValue))) {\r\n        checkBoxItems.push(\r\n          (\r\n            <Checkbox \r\n              key={i} \r\n              name={checkBox.value} \r\n              value={checkBox.value} \r\n              checked={checkBox.isChecked} \r\n              onChange={this.handleCheckBoxChange} \r\n            />\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    const selectText = isSelectAll ? 'Deselect All' : 'Select All'\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" style={{marginBottom: '5px'}} onClick={this.toggleSelectAll}>{selectText}</button>\r\n        <input \r\n          type=\"text\" \r\n          name=\"name\" \r\n          value={this.state.searchValue}\r\n          onChange={this.handleSearchValueChange}\r\n          placeholder=\"Search...\"\r\n        />\r\n        \r\n        <div className=\"slicer-body\">\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\nimport TableWidget from './TableWidget';\r\nimport Slicer from './filters/Slicer';\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough || []; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        const index = drills.findIndex(d => d.columnName === header);\r\n        if (index !== -1) {\r\n          const dashboardId = drills[index].dashboardId;\r\n          // this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  onTableTdClick = (dashboardId, columnName, columnValue) => {\r\n    const widgetClickEvent = {\r\n      type: 'tableTdClick',\r\n      data: {\r\n        dashboardId: dashboardId,\r\n        columnName: columnName,\r\n        columnValue: columnValue\r\n      }\r\n    }\r\n    this.props.onWidgetContentClick(widgetClickEvent);\r\n  }\r\n\r\n  onSlicerChange = (widgetId, checkBoxes) => {\r\n    const data = {\r\n      checkBoxes: checkBoxes\r\n    };\r\n    this.props.onWidgetFilterInputChange(widgetId, data);\r\n  }\r\n\r\n  onSingleValueChange = (widgetId, event) => {\r\n    const value = event.target.value;\r\n    const data = {\r\n      value: value\r\n    };\r\n    this.props.onWidgetFilterInputChange(widgetId, data);\r\n  }\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      id,\r\n      type,\r\n      chartType,\r\n      filterType,\r\n      queryResult = {},\r\n      drillThrough,\r\n      data = {},\r\n      checkBoxes,\r\n      value\r\n    } = this.props;\r\n\r\n    const queryResultData = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    let widgetItem = (<div></div>);\r\n    if (type === Constants.CHART) {\r\n      if (chartType === Constants.TABLE) {\r\n        widgetItem = (\r\n          <TableWidget\r\n            data={queryResultData}\r\n            columns={columns}\r\n            error={error}\r\n            drillThrough={drillThrough}\r\n            onTableTdClick={this.onTableTdClick}\r\n          />\r\n        );\r\n      } else if (chartType === Constants.PIE) {\r\n        const { \r\n          pieKey,\r\n          pieValue\r\n        } = data;\r\n        const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\r\n        widgetItem = (\r\n          <ReactEcharts \r\n            option={chartOption}   \r\n            className=\"echarts\"\r\n            onEvents={onChartEvents}  \r\n          />\r\n        );\r\n      } \r\n    } else if (type === Constants.FILTER) {\r\n      if (filterType === Constants.SLICER) {\r\n        widgetItem = (\r\n          <div className=\"grid-box-content-panel\">\r\n            <Slicer \r\n              id={id} \r\n              checkBoxes={checkBoxes} \r\n              onChange={this.onSlicerChange} \r\n            />\r\n          </div>\r\n        );\r\n      } else if (filterType === Constants.SINGLE_VALUE) {\r\n        widgetItem = (\r\n          <div className=\"grid-box-content-panel\">\r\n            <input \r\n              type=\"text\"  \r\n              value={value}\r\n              onChange={(event) => this.onSingleValueChange(id, event)} \r\n            />\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    \r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      title,\r\n      isEditMode,\r\n      style = {},\r\n      drillThrough\r\n    } = this.props;\r\n\r\n    const { \r\n      showBorder = false,\r\n      showTitle = true,\r\n      borderColor,\r\n      titleFontColor,\r\n      titleBackgroundColor,\r\n      contentBackgroundColor,\r\n      zIndex\r\n    } = style;\r\n\r\n    const borderStyle = showBorder ? `2px solid ${borderColor}` : '2px solid transparent';\r\n\r\n    let gridBoxStyle = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: zIndex,\r\n      border: borderStyle\r\n    };\r\n\r\n    const hasDrillThrough = !Util.isArrayEmpty(drillThrough);\r\n\r\n    const titleStyle = {\r\n      color: titleFontColor,\r\n      backgroundColor: titleBackgroundColor\r\n    };\r\n\r\n    const contentStyle = {\r\n      backgroundColor: contentBackgroundColor\r\n    }\r\n\r\n    /*\r\n    <div className=\"grid-box-file-button-group\">\r\n      <div className=\"inline-block\" onClick={() => this.exportJson(id)}>\r\n        <FontAwesomeIcon icon=\"file-export\" fixedWidth />\r\n      </div>\r\n      \r\n      <div className=\"inline-block\" onClick={() => this.exportCsv(id)}>\r\n        <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\r\n      </div>\r\n      <div className=\"grid-box-file-button-group\">\r\n              <div className=\"inline-block\">\r\n                <FontAwesomeIcon icon=\"external-link-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n    </div>\r\n    */\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={gridBoxStyle}>\r\n        { isEditMode && (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} \r\n          >\r\n            { showTitle && (\r\n              <div className=\"grid-box-title\" style={titleStyle}>\r\n                <div className=\"grid-box-title-value ellipsis\" style={{marginRight: '50px'}}>{title}</div>\r\n              </div>\r\n            )}\r\n          </GridDraggable>\r\n        )}\r\n\r\n        { (!isEditMode && showTitle) && (\r\n          <div className=\"grid-box-title\" style={titleStyle}>\r\n            <div className=\"grid-box-title-value ellipsis\">{title}</div>\r\n          </div>\r\n        )}\r\n\r\n        { isEditMode && (\r\n          <div className=\"grid-edit-panel\">\r\n            <div className=\"grid-box-icon inline-block\" onClick={() => this.editWidget(id)}>\r\n              <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n            </div>\r\n            <div className=\"grid-box-icon inline-block\" onClick={() => this.removeWidget(id)}>\r\n              <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"grid-box-content\" style={contentStyle}>\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { isEditMode && (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} \r\n          />\r\n        )}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridItem;","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      backgroundColor,\r\n      widgets = [],\r\n      showGridlines\r\n    } = this.props;\r\n\r\n    let style = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      backgroundColor: backgroundColor\r\n    };\r\n\r\n    if (showGridlines) {\r\n      style.backgroundSize = '15px 15px';\r\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n        onWidgetFilterInputChange={this.props.onWidgetFilterInputChange}\r\n        onWidgetContentClick={this.props.onWidgetContentClick}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={style} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ColorPicker from './ColorPicker';\r\nimport Checkbox from './Checkbox';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\nimport Modal from '../components/Modal';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './WidgetViewPanel.css';\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      snapToGrid: false,\r\n      showGridlines: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  resizeGrid = (viewWidth) => {\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n    let gridWidth = viewWidth - 10;\r\n\r\n    const { \r\n      isFixedWidth,\r\n      fixedWidth\r\n    } = this.props;\r\n    if (isFixedWidth) {\r\n      gridWidth = fixedWidth;\r\n    } \r\n\r\n    \r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return num * gridWidth / BASE_WIDTH / 100;\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Number.parseFloat(num * BASE_WIDTH / gridWidth).toFixed(2) * 100;\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, viewWidth) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get(`/ws/widget/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(viewWidth);\r\n          this.queryFilters();\r\n          this.queryCharts();\r\n        });\r\n      });\r\n  }\r\n \r\n  queryCharts(urlFilterParams = []) {\r\n    // Append the url filter params to the existing filer params if it exists.\r\n    const filterParams = this.getFilterParams().concat(urlFilterParams);\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const {\r\n        id,\r\n        type,\r\n      } = widgets[i];\r\n      if (type === Constants.CHART) {\r\n        this.queryChart(id, filterParams);\r\n      }\r\n    }\r\n  }\r\n\r\n  queryFilters() {\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const {\r\n        id,\r\n        type,\r\n        filterType\r\n      }  = widgets[i];\r\n      if (type === Constants.FILTER) {\r\n        this.queryFilter(id, filterType);\r\n      }\r\n    }\r\n  }\r\n\r\n  queryChart(widgetId, filterParams) {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    axios.post(`/ws/jdbcquery/widget/${widgetId}`, params)\r\n      .then(res => {\r\n        const queryResult = res.data;\r\n        const index = widgets.findIndex(w => w.id === queryResult.id);\r\n        const newWidgets = [...widgets];\r\n        newWidgets[index].queryResult = queryResult;\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n\r\n  queryFilter(widgetId, filterType) {\r\n    const { widgets } = this.state;\r\n    if (filterType === Constants.SLICER) {\r\n      axios.post(`/ws/jdbcquery/widget/${widgetId}`, [])\r\n        .then(res => {\r\n          const queryResult = res.data;\r\n          const queryResultData = Util.jsonToArray(queryResult.data);\r\n          const checkBoxes = [];\r\n          for (let i = 0; i < queryResultData.length; i++) {\r\n            const values = Object.values(queryResultData[i]);\r\n            for (const val of values) {\r\n              checkBoxes.push({\r\n                value: val,\r\n                isChecked: false\r\n              });\r\n            }\r\n          }\r\n          const index = widgets.findIndex(w => w.id === queryResult.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = queryResult;\r\n          newWidgets[index].checkBoxes = checkBoxes;\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    } else if (filterType === Constants.SINGLE_VALUE) {\r\n      const index = widgets.findIndex(w => w.id === widgetId);\r\n      const newWidgets = [...widgets];\r\n      newWidgets[index].value = '';\r\n      this.setState({\r\n        widgets: newWidgets\r\n      });\r\n    }\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    this.setState({\r\n      [name]: isChecked\r\n    });\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    }, () => {\r\n      // FIXME: only save this widget. Not all.\r\n      this.saveWidgets();\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete\r\n    } = this.state;\r\n    const widgetId = objectToDelete;\r\n    axios.delete(`/ws/widget/${widgetId}`)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (widgetId) => {\r\n    this.setState({\r\n      objectToDelete: widgetId,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  onWidgetFilterInputChange = (widgetId, data) => {\r\n    const { \r\n      widgets = []\r\n    } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widgetId);\r\n    const newWidgets = [...widgets];\r\n    const widget = widgets[index];\r\n    if (widget.filterType === Constants.SLICER) {\r\n      const {\r\n        checkBoxes\r\n      } = data;\r\n      newWidgets[index].checkBoxes = checkBoxes;\r\n    } else if (widget.filterType === Constants.SINGLE_VALUE) {\r\n      const {\r\n        value\r\n      } = data;\r\n      newWidgets[index].value = value;\r\n    }\r\n\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });   \r\n  }\r\n\r\n  /**\r\n   * FIXME: optimize it. No need to calculate this every time.\r\n   */\r\n  getFilterParams = () => {\r\n    const { \r\n      widgets = []\r\n    } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      if (widget.type === Constants.FILTER) {\r\n        const { filterType } = widget;\r\n        const filterParam = {};\r\n        if (filterType === Constants.SLICER) {\r\n          const { \r\n            checkBoxes = []\r\n          } = widget;\r\n          const paramValues = [];\r\n          for (let j = 0; j < checkBoxes.length; j++) {\r\n            const checkBox = checkBoxes[j];\r\n            if (checkBox.isChecked) {\r\n              paramValues.push(checkBox.value);\r\n            }\r\n          }\r\n          filterParam.value = paramValues;\r\n          if (paramValues.length === checkBoxes.length) {\r\n            filterParam.remark = 'select all';\r\n          }\r\n        } else if (filterType === Constants.SINGLE_VALUE) {\r\n          filterParam.value = widget.value;\r\n        }\r\n        filterParam.param = widget.data.queryParameter;\r\n        filterParam.type = widget.filterType;\r\n        filterParams.push(filterParam);\r\n      }\r\n    }\r\n    return filterParams;\r\n  }\r\n\r\n  handleSavedWidget = (widgetId) => {\r\n    axios.get(`/ws/widget/${widgetId}`)\r\n      .then(res => {\r\n        const widget = res.data;\r\n        const { \r\n          widgets, \r\n          gridWidth \r\n        } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widget.id);\r\n        const newWidgets = [...widgets];\r\n        // Resize the widget.\r\n        widget.x = this.scaleToActual(widget.x, gridWidth);\r\n        widget.width = this.scaleToActual(widget.width, gridWidth);\r\n        if (index === -1) {\r\n          // New widget.\r\n          newWidgets.push(widget);\r\n        } else {\r\n          // Existing widget.\r\n          newWidgets[index] = widget;\r\n        }\r\n        this.setState({\r\n          widgets: newWidgets\r\n        }, () => {\r\n          // Query the widget.\r\n          const filterParams = this.getFilterParams();\r\n          const {\r\n            id,\r\n            type,\r\n          } = widget;\r\n          if (type === Constants.CHART) {\r\n            this.queryChart(id, filterParams);\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      widgetViewWidth,\r\n      isEditMode,\r\n      showControl\r\n    } = this.props;\r\n\r\n    const top = showControl ? '50px' : '10px';\r\n    const style = {\r\n      top: top,\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {isEditMode && (\r\n          <div className=\"dashboard-attribute-edit-panel\">\r\n            <div className=\"form-panel\">\r\n              <label>Height</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"height\" \r\n                value={this.props.height}\r\n                onChange={(event) => this.props.onStyleValueChange('height', event.target.value)} \r\n              />\r\n\r\n              <Checkbox name=\"isFixedWidth\" value=\"Fixed width\" checked={this.props.isFixedWidth} onChange={this.props.onStyleValueChange} />\r\n\r\n              { this.props.isFixedWidth && (\r\n                <div>\r\n                  <label>Fixed Width</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    name=\"fixedWidth\" \r\n                    value={this.props.fixedWidth}\r\n                    onChange={(event) => this.props.onStyleValueChange('fixedWidth', event.target.value)} \r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              <label>Background Color</label>\r\n              <ColorPicker name={'backgroundColor'} value={this.props.backgroundColor} onChange={this.props.onStyleValueChange} />\r\n\r\n              <Checkbox name=\"snapToGrid\" value=\"Snap to grid\" checked={this.state.snapToGrid} onChange={this.handleCheckBoxChange} />\r\n              <Checkbox name=\"showGridlines\" value=\"Show gridlines\" checked={this.state.showGridlines} onChange={this.handleCheckBoxChange} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          backgroundColor={this.props.backgroundColor}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.openConfirmDeletionPanel} \r\n          onWidgetFilterInputChange={this.onWidgetFilterInputChange}\r\n          onWidgetContentClick={this.props.onWidgetContentClick}\r\n        />\r\n        \r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete this widget?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","import React from 'react';\r\nimport './Tabs.css';\r\n\r\nclass Tabs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const activeTab = this.props.activeTab;\r\n    this.setState({\r\n      activeTab: activeTab\r\n    });\r\n  }\r\n\r\n  handleTabClick = (title) => {\r\n    this.setState({\r\n      activeTab: title\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children\r\n    } = this.props;\r\n\r\n    const {\r\n      activeTab\r\n    } = this.state;\r\n\r\n    const tabHeaders = [];\r\n    let tabContent = null;\r\n    for (let i = 0; i < children.length; i++) {\r\n      if (children[i]) {\r\n        const title = children[i].props.title;\r\n        let active = '';\r\n        if (title === activeTab) {\r\n          active = 'tab-header-active';\r\n          tabContent = children[i].props.children;\r\n        }\r\n        \r\n        tabHeaders.push(\r\n          <li className={`tab-header-item ${active}`} key={i} onClick={() => this.handleTabClick(title)}>{title}</li>\r\n        );\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className=\"tab-container\">\r\n        <ul className=\"tab-header\">\r\n          {tabHeaders}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {tabContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Select extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    optionDisplay: PropTypes.string,\r\n    optionValue: PropTypes.string,\r\n    preloadOneEmpty: PropTypes.bool\r\n  };\r\n\r\n  handleOptionChange = (event) => {\r\n    const name = this.props.name;\r\n    const value = event.target.value;\r\n    this.props.onChange(name, value);\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      value,\r\n      options = [],\r\n      optionValue,\r\n      optionDisplay,\r\n      preloadOneEmpty = true\r\n    } = this.props;\r\n\r\n    const optionList = [];\r\n    if (preloadOneEmpty) {\r\n      optionList.push(\r\n        <option value=\"\" key=\"\"></option>\r\n      );\r\n    }\r\n    \r\n    options.forEach((option, index) => {\r\n      let value;\r\n      let display;\r\n      if (optionValue && optionDisplay) {\r\n        // The options contain objects.\r\n        value = option[optionValue];\r\n        display = option[optionDisplay];\r\n      } else {\r\n        // The options contain string or number.\r\n        value = option;\r\n        display = option;\r\n      }\r\n      \r\n      optionList.push(\r\n        <option value={value} key={index}>{display}</option>\r\n      ) \r\n    });\r\n\r\n    return (\r\n      <select value={value} onChange={this.handleOptionChange}>\r\n        {optionList}\r\n      </select>\r\n    )\r\n  };\r\n}\r\n\r\nexport default Select;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SelectButtons.css';\r\n\r\nclass SelectButtons extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    selections: PropTypes.array.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n  };\r\n\r\n  clickButton = (value) => {\r\n    const { name } = this.props;\r\n    this.props.onChange(name, value);\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      value,\r\n      selections = []\r\n    } =  this.props;\r\n    const buttonItems = [];\r\n    for (let i = 0; i < selections.length; i++) {\r\n      const current = selections[i];\r\n      const activeClass = current === value ? 'select-button-active' : '';\r\n      buttonItems.push(\r\n        <div className={`select-button ${activeClass}`} onClick={() => this.clickButton(current)} key={current}>{current}</div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"selectbuttons-container\">\r\n        {buttonItems}\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default SelectButtons;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './InputRange.css';\r\n\r\nclass InputRange extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    min: PropTypes.number.isRequired,\r\n    max: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    step: PropTypes.number.isRequired\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const { name } = this.props;\r\n    const value = Number(event.target.value);\r\n    this.props.onChange(name, value);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      min,\r\n      max,\r\n      value,\r\n      step\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"input-range-container\">\r\n        <div>\r\n          <span className=\"input-range-value\">{value}</span>\r\n        </div>\r\n        <input \r\n          type=\"range\" \r\n          name={name} \r\n          min={min} \r\n          max={max} \r\n          value={value} \r\n          onChange={this.handleInputChange}\r\n          step={step}\r\n          className=\"input-range\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputRange;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport AceEditor from 'react-ace';\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nimport './WidgetEditPanel.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport Checkbox from './Checkbox';\r\nimport Tabs from './Tabs';\r\nimport Select from './Select';\r\nimport TableWidget from './TableWidget';\r\nimport ColorPicker from './ColorPicker';\r\nimport SelectButtons from './SelectButtons';\r\nimport InputRange from './filters/InputRange';\r\n\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      title: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: {},\r\n      type: Constants.CHART,\r\n      filterType: Constants.SINGLE_VALUE,\r\n      chartType: Constants.TABLE,\r\n      style: {\r\n        showBorder: false,\r\n        borderColor: 'rgba(9, 30, 66, 1)',\r\n        showTitle: true,\r\n        titleFontColor: 'rgba(9, 30, 66, 1)',\r\n        titleBackgroundColor: 'rgba(255, 255, 255, 1)',\r\n        contentBackgroundColor: 'rgba(255, 255, 255, 1)',\r\n        zIndex: 50\r\n      },\r\n      queryParameter: '',\r\n      drillThrough: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: '',\r\n      pieKey: '',\r\n      pieValue: '',\r\n      chartOption: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const widget = res.data;\r\n          const {\r\n            type,\r\n            chartType,\r\n            filterType,\r\n            drillThrough\r\n          } = widget;\r\n          if (type === Constants.CHART) {\r\n            this.setState({\r\n              chartType: chartType,\r\n              drillThrough: drillThrough\r\n            });\r\n\r\n            if (chartType === Constants.PIE) {\r\n              const {\r\n                pieKey,\r\n                pieValue\r\n              } = widget.data;\r\n              this.setState({\r\n                pieKey: pieKey,\r\n                pieValue: pieValue\r\n              });\r\n            }\r\n          } else if (type === Constants.FILTER) {\r\n            const {\r\n              queryParameter\r\n            } = widget.data;\r\n            this.setState({\r\n              filterType: filterType,\r\n              queryParameter: queryParameter\r\n            });\r\n            if (filterType === Constants.SLICER) {\r\n\r\n            } else if (filterType === Constants.SINGLE_VALUE) {\r\n\r\n            }\r\n          }\r\n          \r\n          this.setState({\r\n            widgetId: widgetId,\r\n            title: widget.title,\r\n            x: widget.x,\r\n            y: widget.y,\r\n            width: widget.width,\r\n            height: widget.height,\r\n            sqlQuery: widget.sqlQuery,\r\n            type: type,\r\n            jdbcDataSourceId: widget.jdbcDataSourceId,\r\n            style: widget.style\r\n          }, () => {\r\n            this.runQuery();\r\n          });\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  onStyleValueChange = (name, value) => {\r\n    const style = {...this.state.style};\r\n    style[[name]] = value;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n\r\n  save = () => {\r\n    const {\r\n      widgetId,\r\n      title,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      type,\r\n      style\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      title: title,\r\n      dashboardId: this.props.dashboardId,\r\n      type: type,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      style: style\r\n    }\r\n\r\n    if (type === Constants.CHART) {\r\n      const {\r\n        chartType,\r\n        drillThrough\r\n      } = this.state;\r\n      widget.drillThrough = drillThrough;\r\n      widget.chartType = chartType;\r\n\r\n      if (chartType === Constants.TABLE) {\r\n\r\n      } else if (chartType === Constants.PIE) {\r\n        const {\r\n          pieKey,\r\n          pieValue\r\n        } = this.state;\r\n        widget.data = {\r\n          pieKey: pieKey,\r\n          pieValue: pieValue\r\n        }\r\n      }\r\n    } else if (type === Constants.FILTER) {\r\n      const  {\r\n        filterType,\r\n        queryParameter\r\n      } = this.state;\r\n      widget.filterType = filterType;\r\n      widget.data = {\r\n        queryParameter: queryParameter\r\n      }\r\n      if (filterType === Constants.SLICER) {\r\n\r\n      } else if (filterType === Constants.SINGLE_VALUE) {\r\n\r\n      }\r\n    }\r\n    \r\n\r\n    if (widgetId === null) {\r\n      widget.style = {\r\n        showBorder: false,\r\n        borderColor: 'rgba(9, 30, 66, 1)',\r\n        showTitle: true,\r\n        titleFontColor: 'rgba(9, 30, 66, 1)',\r\n        titleBackgroundColor: 'rgba(255, 255, 255, 1)',\r\n        contentBackgroundColor: 'rgba(255, 255, 255, 1)',\r\n        zIndex: 50\r\n      }\r\n\r\n      widget.x = 0;\r\n      widget.y = 0;\r\n      widget.width = 200 * 100;\r\n      widget.height = 200;\r\n\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          const widgetId = res.data;\r\n          this.props.onSave(widgetId);\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave(widgetId);\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          queryResult: result\r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = () => {\r\n    const { \r\n      drillThrough,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const index = drillThrough.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrillThrough = [...drillThrough];\r\n      newDrillThrough.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drillThrough: newDrillThrough\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill) => {\r\n    const { drillThrough } = this.state;\r\n    const index = drillThrough.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrillThrough = [...drillThrough];\r\n      newDrillThrough.splice(index, 1);\r\n      this.setState({\r\n        drillThrough: newDrillThrough\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = () => {\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        pieKey, \r\n        pieValue, \r\n        queryResult = {}\r\n      } = this.state;\r\n      const data = Util.jsonToArray(queryResult.data);\r\n      const chartOption = EchartsApi.getPieOption(data, pieKey, pieValue);\r\n      this.setState({\r\n        chartOption: chartOption\r\n      });\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      queryResult = {},\r\n    } = this.state;\r\n    const columns = queryResult.columns || [];\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        chartOption,\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n\r\n      chartPreview = (\r\n        <div>\r\n          <div>For example, count \"value\" by \"key\"</div>\r\n          <label>Key (text)</label>\r\n          <Select\r\n            name={'pieKey'}\r\n            value={pieKey}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n          />\r\n\r\n          <label>Value (number)</label>\r\n          <Select\r\n            name={'pieValue'}\r\n            value={pieValue}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n          />\r\n          <button className=\"button\" onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      type,\r\n      queryResult,\r\n      jdbcDataSources = [],\r\n      drillThrough = [],\r\n      drillDashboards = []\r\n    } = this.state;\r\n\r\n    const data = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    const drillItems = drillThrough.map(drill =>\r\n      <div key={drill.columnName} className=\"row table-row\">\r\n        <div className=\"float-left ellipsis\">Column: {drill.columnName}, Dashboard: {drill.dashboardId}</div>\r\n        <button className=\"button table-row-button float-right\"onClick={() => this.removeDrillThrough(drill)}>\r\n          <FontAwesomeIcon icon=\"trash-alt\" />\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    const columnItems = columns.map(col =>\r\n      <div className=\"table-row row\" key={col.name}>\r\n        <div className=\"float-left\">{col.name}</div>\r\n        <div className=\"float-right\">{col.dataType}</div>\r\n      </div>\r\n    );\r\n\r\n    const showQueryTab = type === Constants.CHART || (type === Constants.FILTER && this.state.filterType === Constants.SLICER);\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button confirm-button\" style={{width: '80px'}} onClick={this.save}>Save</button>\r\n        <div className=\"mt-10\">\r\n          <SelectButtons\r\n            name={'type'}\r\n            value={type}\r\n            onChange={this.handleOptionChange}\r\n            selections={Constants.WIDGET_TYPES}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"mt-10\">\r\n          <Tabs activeTab=\"Basic\">\r\n            <div title=\"Basic\">\r\n              <div className=\"form-panel\">\r\n                <label>Title</label>\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"title\" \r\n                  value={this.state.title}\r\n                  onChange={this.handleInputChange} \r\n                />\r\n                <hr/>\r\n\r\n                <label>Z Index</label>\r\n                <input \r\n                  type=\"number\" \r\n                  name=\"zIndex\" \r\n                  value={this.state.style.zIndex}\r\n                  onChange={(event) => this.onStyleValueChange('zIndex', event.target.value)} \r\n                />\r\n                <InputRange\r\n                  name=\"zIndex\" \r\n                  value={this.state.style.zIndex}\r\n                  onChange={this.onStyleValueChange} \r\n                  min={1}\r\n                  max={50}\r\n                  step={1}\r\n                />\r\n                <hr/>\r\n\r\n                <Checkbox name=\"showBorder\" value=\"Show border\" checked={this.state.style.showBorder} onChange={this.onStyleValueChange} />\r\n                { this.state.style.showBorder && (\r\n                  <div>\r\n                    <label>Border Color</label>\r\n                    <ColorPicker name={'borderColor'} value={this.state.style.borderColor} onChange={this.onStyleValueChange} />\r\n                  </div>\r\n                )}\r\n                <hr/>\r\n\r\n                <Checkbox name=\"showTitle\" value=\"Show title\" checked={this.state.style.showTitle} onChange={this.onStyleValueChange} />\r\n                { this.state.style.showTitle && (\r\n                  <React.Fragment>\r\n                    <div>\r\n                      <label>Title Font Color</label>\r\n                      <ColorPicker name={'titleFontColor'} value={this.state.style.titleFontColor} onChange={this.onStyleValueChange} />\r\n                    </div>\r\n\r\n                    <div>\r\n                      <label>Title Background Color</label>\r\n                      <ColorPicker name={'titleBackgroundColor'} value={this.state.style.titleBackgroundColor} onChange={this.onStyleValueChange} />\r\n                    </div>\r\n                  </React.Fragment>\r\n                )}\r\n                <hr/>\r\n\r\n                <div>\r\n                  <label>Content Background Color</label>\r\n                  <ColorPicker name={'contentBackgroundColor'} value={this.state.style.contentBackgroundColor} onChange={this.onStyleValueChange} />\r\n                </div>\r\n\r\n                \r\n              </div>\r\n            </div>\r\n\r\n            { type === Constants.FILTER && (  \r\n              <div title=\"Filter\">\r\n                <div className=\"form-panel\">\r\n                  <label>Filter Options</label>\r\n                  <Select\r\n                    name={'filterType'}\r\n                    value={this.state.filterType}\r\n                    onChange={this.handleOptionChange}\r\n                    options={Constants.FILTER_TYPES}\r\n                    preloadOneEmpty={false}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { showQueryTab && (\r\n              <div title=\"Query\">\r\n                <div className=\"form-panel\">\r\n                  <label>DataSource</label>\r\n                  <Select\r\n                    name={'jdbcDataSourceId'}\r\n                    value={this.state.jdbcDataSourceId}\r\n                    onChange={this.handleIntegerOptionChange}\r\n                    options={jdbcDataSources}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'id'}\r\n                    />\r\n                \r\n                  <label>SQL Query</label>\r\n                  <AceEditor\r\n                    value={this.state.sqlQuery}\r\n                    mode=\"mysql\"\r\n                    theme=\"xcode\"\r\n                    name=\"blah2\"\r\n                    onChange={this.handleAceEditorChange}\r\n                    height={'300px'}\r\n                    width={'100%'}\r\n                    fontSize={15}\r\n                    showPrintMargin={false}\r\n                    showGutter={true}\r\n                    highlightActiveLine={true}\r\n                    setOptions={{\r\n                      showLineNumbers: true,\r\n                      tabSize: 2\r\n                    }}\r\n                  />\r\n\r\n                  <div style={{margin: '5px 0px 8px 0px'}}>\r\n                    <button className=\"button\" onClick={this.runQuery}>Run Query</button>\r\n                  </div>\r\n\r\n                  <label>Result</label>\r\n                  <TableWidget\r\n                    data={data}\r\n                    columns={columns}\r\n                    error={error}\r\n                  />\r\n\r\n                  <label style={{marginTop: '8px'}}>Columns Mapping</label>\r\n                  <div>\r\n                    {columnItems}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { type === Constants.CHART && (\r\n              <div title=\"Chart\">\r\n                <div className=\"form-panel\">\r\n                  <label>Chart Type</label>\r\n                  <Select\r\n                    name={'chartType'}\r\n                    value={this.state.chartType}\r\n                    onChange={this.handleOptionChange}\r\n                    options={Constants.CHART_TYPES}\r\n                    preloadOneEmpty={false}\r\n                  />\r\n                  <label>Preview</label>\r\n                  {this.renderChartPreview()} \r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            { type === Constants.CHART && (\r\n              <div title=\"Drill Through\">\r\n                <div className=\"form-panel\">\r\n                  <label>Column</label>\r\n                  <Select\r\n                    name={'drillColumnName'}\r\n                    value={this.state.drillColumnName}\r\n                    options={columns}\r\n                    onChange={this.handleOptionChange}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'name'}\r\n                  />\r\n\r\n                  <label>Dashboard</label>\r\n                  <Select\r\n                    name={'drillDashboardId'}\r\n                    value={this.state.drillDashboardId}\r\n                    options={drillDashboards}\r\n                    onChange={this.handleIntegerOptionChange}\r\n                    optionDisplay={'name'}\r\n                    optionValue={'id'}\r\n                  />\r\n                  <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\r\n                  <div style={{marginTop: '8px'}}>\r\n                    {drillItems}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            { type === Constants.FILTER && (\r\n              <div title=\"Query parameter\">\r\n                <div className=\"form-panel\">\r\n                  <label>Parameter</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    name=\"queryParameter\" \r\n                    value={this.state.queryParameter}\r\n                    onChange={this.handleInputChange} \r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\n\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport * as Util from '../api/Util';\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      showControl: true,\r\n      objectToDelete: {},\r\n      isEditMode: false,\r\n      isFullScreenView: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      refreshInterval: 15,\r\n      lastRefreshLabelTimerId: '',\r\n      jdbcDataSourceOptions: [],\r\n      fromDashboard: '',\r\n      dashboardId: 0,\r\n      name: '',\r\n      style: {},\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    if (id === undefined) {\r\n      // If the drill through is triggered from the full-dashboard page already, this component is remounted but not FullScreenView.\r\n      const dashboardName = this.props.match.params.name;\r\n      if (dashboardName !== undefined) {\r\n        this.loadViewByDashboardName();\r\n        return;\r\n      }\r\n    }\r\n    const dashboardId = id !== undefined ? id : null;\r\n\r\n    const url = this.props.location.search;\r\n    const searchParams = new URLSearchParams(url);\r\n    const fromDashboard = searchParams.get('$fromDashboard');\r\n    \r\n    const widgetViewWidth = this.getPageWidth();\r\n    this.setState({\r\n      widgetViewWidth: widgetViewWidth,\r\n      fromDashboard: fromDashboard\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const dashboard = res.data;\r\n            this.setState({\r\n              dashboardId: dashboard.id,\r\n              name: dashboard.name,\r\n              style: dashboard.style\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n\r\n    const lastRefreshLabelTimerId = setInterval(() => {\r\n      this.updateReadableLastRefreshed();\r\n    }, 5000);\r\n    this.setState({\r\n      lastRefreshLabelTimerId: lastRefreshLabelTimerId\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { \r\n      autoRefreshTimerId,\r\n      lastRefreshLabelTimerId\r\n    } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n    if (lastRefreshLabelTimerId) {\r\n      clearInterval(lastRefreshLabelTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = () => {\r\n    const dashboardName = this.props.match.params.name;\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n\r\n    let showControl = params.get('$showControl');\r\n    showControl = showControl == null ? true : (showControl ? true: false);\r\n    const fromDashboard = params.get('$fromDashboard');\r\n\r\n    const widgetViewWidth = this.getPageWidth();\r\n\r\n    this.setState({\r\n      isFullScreenView: true,\r\n      name: dashboardName,\r\n      widgetViewWidth: widgetViewWidth,\r\n      fromDashboard: fromDashboard,\r\n      showControl: showControl\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            style: result.style\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth - 40;\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const { refreshInterval } = this.state;\r\n      let interval = parseInt(refreshInterval, 10) || 15;\r\n      interval = interval < 1 ? 1 : interval;\r\n      const timerId = setInterval(() => {\r\n        this.applyFilters();\r\n      }, interval * 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    this.refreshWidgetView();\r\n    this.updateLastRefreshed();\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n  }\r\n\r\n  updateLastRefreshed = () => {\r\n    const now = new Date();\r\n    this.setState({\r\n      lastRefreshed: now\r\n    }, () => {\r\n      this.updateReadableLastRefreshed();\r\n    });\r\n  }\r\n\r\n  updateReadableLastRefreshed = () => {\r\n    const { lastRefreshed } = this.state;\r\n    if (lastRefreshed instanceof Date) {\r\n      const readableLastRefreshed = Util.getReadableDiffTime(lastRefreshed, new Date());\r\n      this.setState({\r\n        readableLastRefreshed: readableLastRefreshed\r\n      })\r\n    }\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      style\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      style: style\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n        this.props.onDashboardSave(dashboardId);\r\n        this.setState({\r\n          isEditMode: false\r\n        });\r\n      });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  onWidgetSave = (widgetId) => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    this.widgetViewPanel.current.handleSavedWidget(widgetId);\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    this.widgetEditPanel.current.fetchWidget(widgetId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = () => {\r\n    this.widgetViewPanel.current.queryCharts(this.getUrlFilterParams());\r\n    this.updateLastRefreshed();\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/workspace/dashboard/full/${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onStyleValueChange = (name, value) => {\r\n    const style = {...this.state.style};\r\n    style[[name]] = value;\r\n    this.setState({\r\n      style: style\r\n    }, () => {\r\n      if (name === 'isFixedWidth' || name === 'fixedWidth') {\r\n        this.refreshWidgetView();\r\n      }\r\n    });\r\n  }\r\n\r\n  onWidgetContentClick = (widgetClickEvent) => {\r\n    const {\r\n      name,\r\n      isFullScreenView\r\n    } = this.state;\r\n\r\n    const {\r\n      type,\r\n      data\r\n    } = widgetClickEvent;\r\n\r\n    if (type === 'tableTdClick') {\r\n      const {\r\n        dashboardId,\r\n        columnName,\r\n        columnValue\r\n      } = data;\r\n\r\n      if (isFullScreenView) {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const dashboard = res.data;\r\n            const nextDashboard = dashboard.name;\r\n            const nextLink = `/workspace/dashboard/full/${nextDashboard}?$fromDashboard=${name}&${columnName}=${columnValue}`;\r\n            this.props.history.push(nextLink);\r\n          });\r\n      } else {\r\n        const nextLink = `/workspace/dashboard/${dashboardId}?$fromDashboard=${name}&${columnName}=${columnValue}`;\r\n        this.props.history.push(nextLink);\r\n      }\r\n    }\r\n  }\r\n\r\n  goBackToFromDashboard = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {},\r\n    } = this.state;\r\n    const dashboardId = objectToDelete.id;\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        this.props.onDashboardDelete(dashboardId);\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  deleteDashboard = () => {\r\n    const { \r\n      dashboardId,\r\n      name\r\n    } = this.state;\r\n    const dashboard = {\r\n      id: dashboardId,\r\n      name: name\r\n    }\r\n    this.openConfirmDeletionPanel(dashboard);\r\n  }\r\n\r\n  openConfirmDeletionPanel = (dashboard) => {\r\n    this.setState({\r\n      objectToDelete: dashboard,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  getUrlFilterParams = () => {\r\n    const urlFilterParams = [];\r\n    const url = this.props.location.search;\r\n    const searchParams = new URLSearchParams(url);\r\n    for(let pair of searchParams.entries()) {\r\n      const key = pair[0];\r\n      const value = pair[1];\r\n      const filterParam = {\r\n        type: Constants.SINGLE_VALUE,\r\n        param: key,\r\n        value: value\r\n      };\r\n      urlFilterParams.push(filterParam);\r\n    }\r\n    return urlFilterParams;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      readableLastRefreshed,\r\n      isEditMode,\r\n      isFullScreenView,\r\n      fromDashboard,\r\n      showControl\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel = null;\r\n    const controlButtons = (\r\n      <React.Fragment>\r\n        <div className=\"inline-block\">\r\n          <div className=\"inline-block\" style={{marginRight: '8px'}}>\r\n            Last refreshed: {readableLastRefreshed}\r\n          </div>\r\n          { autoRefreshStatus === 'OFF' && (\r\n            <input \r\n              type=\"text\" \r\n              name=\"refreshInterval\" \r\n              value={this.state.refreshInterval}\r\n              onChange={this.handleInputChange}\r\n              className=\"inline-block\" \r\n              style={{width: '50px'}}\r\n            />\r\n          )}\r\n        </div>\r\n        <button className=\"button square-button mr-3\" onClick={this.toggleAutoRefresh}>\r\n          {\r\n            autoRefreshStatus === 'ON' ? \r\n            (\r\n              <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\r\n            ) : \r\n            (\r\n              <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\r\n            )\r\n          }\r\n        </button>\r\n        <button className=\"button square-button mr-3\" onClick={this.refresh}>\r\n          <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\r\n        </button>\r\n        <button className=\"button mr-3\" onClick={this.applyFilters}>\r\n          <FontAwesomeIcon icon=\"filter\" size=\"lg\" fixedWidth /> Apply Filters\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n\r\n    if (!isFullScreenView) {\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button mr-3\" onClick={this.cancelEdit}>\r\n               <FontAwesomeIcon icon=\"times\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button mr-3\" onClick={this.save}>\r\n              <FontAwesomeIcon icon=\"save\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button mr-3\" onClick={this.deleteDashboard}>\r\n               <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>\r\n              <FontAwesomeIcon icon=\"calendar-plus\" size=\"lg\" fixedWidth /> New Widget\r\n            </button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            {controlButtons}\r\n            <button className=\"button square-button mr-3\" onClick={this.fullScreen}>\r\n              <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={this.edit}>\r\n              <FontAwesomeIcon icon=\"edit\" size=\"lg\" fixedWidth />\r\n            </button>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      fullScreenButtonPanel = controlButtons;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        { showControl && (\r\n          <div className=\"dashboard-menu-panel row\">\r\n            <div className=\"float-left\">\r\n              {fromDashboard && (\r\n                <div className=\"dashboard-drillthrough-name\" onClick={this.goBackToFromDashboard}>\r\n                  <span className=\"link-label\">{fromDashboard}</span> >\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"float-left\">\r\n              {\r\n                isFullScreenView || !isEditMode ?\r\n                (\r\n                  <div className=\"dashboard-name\">\r\n                    {this.state.name}\r\n                  </div>\r\n                ) :(\r\n                  <input \r\n                    type=\"text\" \r\n                    name=\"name\" \r\n                    value={this.state.name}\r\n                    onChange={this.handleInputChange} \r\n                    className=\"dashboard-name-input\"\r\n                  />\r\n                )\r\n              }\r\n              \r\n            </div>\r\n            <div className=\"float-right\">\r\n              {fullScreenButtonPanel}\r\n              {editButtonPanel}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          isEditMode={this.state.isEditMode}\r\n          showControl={this.state.showControl}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          onStyleValueChange={this.onStyleValueChange}\r\n          onWidgetContentClick={this.onWidgetContentClick}\r\n          {...this.state.style}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'dashboard-edit-widget-dialog'} \r\n          title={'Widget Edit'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onWidgetSave}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {this.state.objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button delete-button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './Dashboard.css';\r\nimport * as Constants from '../api/Constants';\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport SearchInput from '../components/SearchInput';\r\n\r\nconst ROUTE_WORKSPACE_DASHBOARD = '/workspace/dashboard/';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      activeDashboardId: 0,\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    const index = pathname.indexOf(ROUTE_WORKSPACE_DASHBOARD);\r\n    if (index !== -1) {\r\n      const activeDashboardId = Number(pathname.substring(index + ROUTE_WORKSPACE_DASHBOARD.length));\r\n      this.setState({\r\n        activeDashboardId: activeDashboardId\r\n      })\r\n    }\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false,\r\n      name: ''\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      Toast.showError('Enter a name.');\r\n      return;\r\n    }\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      style: {\r\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\r\n        backgroundColor: 'rgba(233, 235, 238, 1)',\r\n        isFixedWidth: true,\r\n        fixedWidth: Constants.DEFAULT_DASHBOARD_FIXED_WIDTH\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.closeEditPanel();\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      })\r\n      .catch(error => {\r\n        Toast.showError('The name exists. Try another.');\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.setState({\r\n      activeDashboardId: dashboardId\r\n    }, () => {\r\n      this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n    });\r\n  }\r\n\r\n  onDashboardSave = (dashboardId) => {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  onDashboardDelete = (dashboardId) => {\r\n    this.fetchBoards();\r\n    this.setState({\r\n      activeDashboardId: 0\r\n    }, () => {\r\n      this.props.history.push('/workspace/dashboard');\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dashboards = [],\r\n      activeDashboardId,\r\n      searchValue\r\n    } = this.state;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.props;\r\n    const showEdit = sysRole === Constants.SYS_ROLE_VIEWER ? false : true;\r\n\r\n    const dashboardRows = [];\r\n    for (let i = 0; i < dashboards.length; i++) {\r\n      const dashboard = dashboards[i];\r\n      const name = dashboard.name;\r\n      const menuActive = activeDashboardId === dashboard.id ? 'dashboard-menu-item-active' : '';\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        dashboardRows.push(\r\n          (\r\n            <div key={i} className={`dashboard-menu-item ellipsis ${menuActive}`} onClick={() => this.view(dashboard.id)}>\r\n              {name}\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-sidebar\">\r\n          <div style={{margin: '5px'}}>\r\n            { showEdit && (\r\n              <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\r\n                <FontAwesomeIcon icon=\"plus\" /> New\r\n              </button>\r\n            )}\r\n\r\n            <div style={{marginTop: '5px'}}>\r\n              <SearchInput \r\n                name={'searchValue'} \r\n                value={this.state.searchValue} \r\n                onChange={this.handleNameInputChange} \r\n                inputWidth={117}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            {dashboardRows}\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route \r\n            path=\"/workspace/dashboard/:id\" \r\n            render={(props) => \r\n              <DashboardEditView \r\n                key={props.match.params.id} \r\n                onDashboardSave={this.onDashboardSave} \r\n                onDashboardDelete={this.onDashboardDelete} \r\n              />\r\n            } \r\n            />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'small-modal-panel'} \r\n          title={'New'} >\r\n          <div className=\"form-panel\">\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n            />\r\n            <button className=\"button confirm-button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport SearchInput from '../components/SearchInput';\r\nimport Toast from '../components/Toast';\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      searchValue: '',\r\n      showUpdatePassword: false,\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: Constants.SYS_ROLE_VIEWER,\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      axios.get('/ws/user/' + user.id)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            id: result.id,\r\n            username: result.username,\r\n            name: result.name,\r\n            tempPassword: '',\r\n            sysRole: result.sysRole,\r\n            userGroups: result.userGroups\r\n          });\r\n        });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      userGroupId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    if (!username) {\r\n      Toast.showError('Enter a username.');\r\n      return;\r\n    }\r\n\r\n    let selectedSysRole = Constants.SYS_ROLE_VIEWER;\r\n    if (Constants.SYS_ROLE_ADMIN === this.props.sysRole) {\r\n      if (sysRole) {\r\n        selectedSysRole = sysRole;\r\n      } else {\r\n        Toast.showError('Select a role.');\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: selectedSysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      if (showUpdatePassword) {\r\n        if (!tempPassword || tempPassword.length < 8) {\r\n          Toast.showError(`Use 8 or more characters for password.`);\r\n          return;\r\n        }\r\n        user.tempPassword = tempPassword;\r\n      }\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      if (!tempPassword || tempPassword.length < 8) {\r\n        Toast.showError(`Use 8 or more characters for password.`);\r\n        return;\r\n      }\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  addUserGroup = () => {\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId) => {\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/user/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (user) => {\r\n    this.setState({\r\n      objectToDelete: user,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      showUpdatePassword,\r\n      users = [],\r\n      groups = [],\r\n      userGroups = [],\r\n      searchValue,\r\n      showConfirmDeletionPanel,\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const {\r\n      sysRole\r\n    } = this.props;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const userItems = [];\r\n    for (let i = 0; i < users.length; i++) {\r\n      const user = users[i];\r\n      const name = user.name;\r\n      const username = user.username;\r\n      if (!searchValue || (searchValue && (username.includes(searchValue) || name.includes(searchValue)))) {\r\n        userItems.push(\r\n          (\r\n            <div key={i} className=\"card float-left\">\r\n              <div className=\"card-header ellipsis\">\r\n                {user.username}\r\n              </div>\r\n              <div className=\"card-content\">\r\n                {user.name}\r\n                <br/>\r\n                {user.sysRole}\r\n              </div>\r\n              <div className=\"card-footer row\">\r\n                <div className=\"float-right\">\r\n                  <button className=\"icon-button card-icon-button\" onClick={() => this.openEditPanel(user)}>\r\n                    <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                  </button>\r\n                  <button className=\"icon-button card-icon-button\" onClick={() => this.openConfirmDeletionPanel(user)}>\r\n                    <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups.length; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups.length; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId} className=\"row table-row\">\r\n                <div className=\"float-left ellipsis \">{groups[j].name}</div>\r\n                <button className=\"button table-row-button float-right\" onClick={() => this.removeUserGroup(groupId)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" />\r\n                </button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"row\">\r\n          <div className=\"float-left\" style={{marginRight: '5px'}}>\r\n            <SearchInput \r\n              name={'searchValue'} \r\n              value={this.state.searchValue} \r\n              onChange={this.handleNameInputChange} \r\n              inputWidth={200}\r\n            />\r\n          </div>\r\n          <button className=\"button float-left\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New\r\n          </button>\r\n        </div>\r\n        <div className=\"row mt-10\">\r\n          {userItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'mid-modal-panel'} \r\n          title={mode} >\r\n\r\n          <div className=\"row\">\r\n            <div className=\"form-panel float-left\" style={{width: '240px'}}>\r\n              <label>Username <span className=\"required\">*</span></label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} \r\n              />\r\n\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} \r\n              />\r\n\r\n              { mode === 'Edit' && (\r\n                  <div style={{margin: '3px 0px 8px 0px'}}>\r\n                    <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n                  </div>\r\n              )}\r\n              { (mode === 'New' || showUpdatePassword) && ( \r\n                <div>\r\n                  <label>Password</label>\r\n                  <input \r\n                    type=\"password\" \r\n                    name=\"tempPassword\" \r\n                    value={this.state.tempPassword}\r\n                    onChange={this.handleInputChange} />\r\n                </div>\r\n              )}\r\n              \r\n              <label>System Role</label>\r\n              { Constants.SYS_ROLE_ADMIN === sysRole && (\r\n                <Select\r\n                  name={'sysRole'}\r\n                  value={this.state.sysRole}\r\n                  onChange={this.handleNameInputChange}\r\n                  options={[Constants.SYS_ROLE_VIEWER, Constants.SYS_ROLE_DEVELOPER]}\r\n                />\r\n              )}\r\n\r\n              { Constants.SYS_ROLE_DEVELOPER === sysRole && (\r\n                <div>{Constants.SYS_ROLE_VIEWER}</div>\r\n              )}\r\n              \r\n            </div>\r\n            <div className=\"form-panel float-right\" style={{width: '240px'}}>\r\n            \r\n              <label>Groups</label>\r\n              <Select\r\n                name={'userGroupId'}\r\n                value={this.state.userGroupId}\r\n                onChange={this.handleIntegerOptionChange}\r\n                options={groups}\r\n                optionDisplay={'name'}\r\n                optionValue={'id'}\r\n              />\r\n              <button className=\"button\" onClick={this.addUserGroup}>Add</button>\r\n              <div style={{marginTop: '8px'}}>\r\n                {userGroupItems}\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <button className=\"button mt-3 confirm-button\" onClick={this.save}>Save</button>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button delete-button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport SearchInput from '../components/SearchInput';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      showEditPanel: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleNameInputChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      axios.get('/ws/group/' + group.id)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            id: result.id,\r\n            name: result.name,\r\n            groupDashboards: result.groupDashboards\r\n          });\r\n        });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      groupDashboardId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } \r\n  }\r\n\r\n  addGroupDashboard= () => {\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    if (groupDashboardId) {\r\n      const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n      if (index === -1) {\r\n        const newGroupDashboards = [...groupDashboards];\r\n        newGroupDashboards.push(groupDashboardId);\r\n        this.setState({\r\n          groupDashboards: newGroupDashboards\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId) => {\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/group/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (group) => {\r\n    this.setState({\r\n      objectToDelete: group,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = [],\r\n      searchValue,\r\n      showConfirmDeletionPanel,\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const groupItems = [];\r\n    for (let i = 0; i < groups.length; i++) {\r\n      const group = groups[i];\r\n      const name = group.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        groupItems.push(\r\n          (\r\n            <div key={i} className=\"card float-left\">\r\n              <div className=\"card-header ellipsis\">\r\n                {name}\r\n              </div>\r\n              <div className=\"card-content\"></div>\r\n              <div className=\"card-footer row\">\r\n                <div className=\"float-right\">\r\n                  <button className=\"icon-button card-icon-button\" onClick={() => this.openEditPanel(group)}>\r\n                    <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                  </button>\r\n                  <button className=\"icon-button card-icon-button\" onClick={() => this.openConfirmDeletionPanel(group)}>\r\n                    <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards.length; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards.length; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId} className=\"row table-row\">\r\n                <div className=\"float-left ellipsis\">{dashboards[j].name}</div>\r\n                <button className=\"button table-row-button float-right\" onClick={() => this.removeGroupDashboard(dashboardId)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" />\r\n                </button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"row\">\r\n          <div className=\"float-left\" style={{marginRight: '5px'}}>\r\n            <SearchInput \r\n              name={'searchValue'} \r\n              value={this.state.searchValue} \r\n              onChange={this.handleNameInputChange} \r\n              inputWidth={200}\r\n            />\r\n          </div>\r\n          <button className=\"button float-left\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New\r\n          </button>\r\n        </div>\r\n        <div className=\"row mt-10\">\r\n          {groupItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'mid-modal-panel'} \r\n          title={mode} >\r\n          <div className=\"row\">\r\n            <div className=\"form-panel float-left\" style={{width: '240px'}}>\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n            </div>\r\n            \r\n            <div className=\"form-panel float-right\" style={{width: '240px'}}>\r\n              <label>Dashboards</label>\r\n              <Select\r\n                name={'groupDashboardId'}\r\n                value={this.state.groupDashboardId}\r\n                onChange={this.handleIntegerOptionChange}\r\n                options={dashboards}\r\n                optionDisplay={'name'}\r\n                optionValue={'id'}\r\n              />\r\n              <button className=\"button\" onClick={this.addGroupDashboard}>Add</button>\r\n              <div style={{marginTop: '8px'}}>\r\n                {groupDashboardItems}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"button mt-3 confirm-button\" onClick={this.save}>Save</button>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button delete-button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\n\r\nimport User from './User';\r\nimport Group from './Group';\r\nimport Tabs from '../components/Tabs';\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-page-content\">\r\n        <Tabs activeTab=\"Group\">\r\n          <div title=\"Group\">\r\n            <Group />\r\n          </div>\r\n          <div title=\"User\">\r\n            <User {...this.props} />\r\n          </div>\r\n        </Tabs>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Toast from '../components/Toast';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const user = res.data;\r\n        this.setState({\r\n          id: user.id,\r\n          username: user.username,\r\n          name: user.name,\r\n          sysRole: user.sysRole,\r\n          apiKey: user.apiKey\r\n        });\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n    axios.get('/auth/generate-apikey')\r\n      .then(res => {\r\n        const apiKey = res.data;\r\n        this.setState({\r\n          apiKey: apiKey\r\n        });\r\n      });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        Toast.showError(`Those passwords didn't match.`);\r\n        return;\r\n      }  \r\n\r\n      if (password.length < 8) {\r\n        Toast.showError(`Use 8 or more characters for password.`);\r\n        return;\r\n      }\r\n\r\n      user.password = password;\r\n    }\r\n\r\n    axios.put('/ws/user/account', user)\r\n      .then(res => {\r\n        Toast.showSuccess('Saved.');\r\n      });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"full-page-content\">\r\n        <div className=\"form-panel\" style={{width: '400px'}}>   \r\n          <label>Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\"   \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label>System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label>API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button className=\"button mt-10\" onClick={this.generateApiKey}>Generate new API Key</button>\r\n          <br/>\r\n\r\n          <button className=\"button mt-3\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n          {\r\n            showUpdatePassword && (\r\n              <React.Fragment>\r\n                <br/>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label>Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n          )}\r\n\r\n          <br/>\r\n          <button className=\"button mt-10 confirm-button\" onClick={this.save}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","\r\nimport React from 'react';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const pathname = this.props.location.pathname;\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView key={pathname} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","import React from 'react';\r\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\n\r\nimport Toast from '../components/Toast';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport './Workspace.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data Source',\r\n    icon: 'database'\r\n  }, \r\n  {\r\n    link: '/workspace/usermanagement',\r\n    value: 'User Management',\r\n    icon: 'users-cog'\r\n  }\r\n];\r\n\r\nconst ACCOUNT_MENU_LINK = '/workspace/account';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathname = this.props.location.pathname;\r\n    let link;\r\n    if (pathname.startsWith(ACCOUNT_MENU_LINK)) {\r\n      link = ACCOUNT_MENU_LINK;\r\n    } else {\r\n      const menuItem = MENU_ITEMS.find(m => pathname.startsWith(m.link));\r\n      link = menuItem.link;\r\n    }\r\n\r\n    this.setState({\r\n      currentMenuLink: link,\r\n    });\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  logout = () => {\r\n    axios.get('/auth/logout')\r\n      .then(res => {\r\n        this.props.onLogout();\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n    } = this.state;\r\n    \r\n    const {\r\n      username,\r\n      sysRole\r\n    } = this.props;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.link === '/workspace/dashboard');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li key={menu.link} className={active}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"workspace-nav\">  \r\n          <div className=\"workspace-name\">Poli</div>\r\n          <ul className=\"workspace-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div className=\"workspace-account-menu\">\r\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\r\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\r\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\r\n                <span className=\"workspace-nav-menu-text\">{username}</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"workspace-logout-button inline-block\" onClick={this.logout}>\r\n              <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"workspace-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n            <Route exact path=\"/workspace/dashboard/full/:name\" component={DashboardFullScreenView} />\r\n            <Route exact path=\"/workspace/usermanagement\" render={() => <UserManagement {...this.props} />} />\r\n            <Route path=\"/workspace/dashboard\" render={() => <Dashboard {...this.props} />} />\r\n          </Switch>\r\n        </div>\r\n        <Toast />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Workspace);\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch, faSearch, faSave, \r\n  faCalendarPlus, faFilter, faExternalLinkAlt\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport ChangeTempPassword from './views/ChangeTempPassword';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\n\r\n\r\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv, faCircleNotch, faSearch, faSave, \r\n  faCalendarPlus, faFilter, faExternalLinkAlt\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      sysRole: '',\r\n      isAuthorizing: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.configAxiosInterceptors();\r\n\r\n    const pathname = this.props.location.pathname;\r\n    const search = this.props.location.search;\r\n    const currentPath = pathname + search;\r\n\r\n    const params = new URLSearchParams(search);\r\n    const apiKey = params.get('$apiKey');\r\n    // Check if the page is using api key to authenticate first.\r\n    if (apiKey != null) {\r\n      const loginRequest = {\r\n        apiKey: apiKey\r\n      };\r\n      this.setState({\r\n        isAuthorizing: true\r\n      }, () => {\r\n        axios.post('/auth/login/apikey', loginRequest)\r\n          .then(res => {\r\n            this.handleLoginResponse(res.data, currentPath);\r\n          });\r\n      });\r\n      return;\r\n    }\r\n\r\n    const {\r\n      sysRole\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      this.setState({\r\n        isAuthorizing: true\r\n      }, () => {\r\n        axios.post('/auth/login/cookie')\r\n          .then(res => {\r\n            this.handleLoginResponse(res.data, currentPath);\r\n          });\r\n      });\r\n    }\r\n  }\r\n\r\n  handleLoginResponse = (loginResponse, currentPath) => {\r\n    if (loginResponse.error) {\r\n      this.setState({\r\n        sysRole: '',\r\n        isAuthorizing: false\r\n      }, () => {\r\n        this.props.history.push('/login');\r\n      });\r\n    } else {\r\n      this.onLoginSuccess(loginResponse, currentPath);\r\n    }\r\n  }\r\n\r\n  onLoginSuccess = (loginResponse = {}, pathname = null) => {\r\n    if (loginResponse.isTempPassword) {\r\n      this.props.history.push('/changepassword');\r\n    } else {\r\n      this.setState({\r\n        username: loginResponse.username,\r\n        sysRole: loginResponse.sysRole,\r\n        isAuthorizing: false\r\n      }, () => {\r\n        let directUrl = '/workspace/dashboard';\r\n        if (pathname) {\r\n          directUrl = pathname;\r\n        }\r\n        this.props.history.push(directUrl);\r\n      });\r\n    }\r\n  }\r\n\r\n  onLogout = () => {\r\n    this.setState({\r\n      username: '',\r\n      sysRole: '',\r\n      isAuthorizing: false\r\n    }, () => {\r\n      this.props.history.push('/login');\r\n    });\r\n  }\r\n\r\n  configAxiosInterceptors = () => {\r\n    axios.interceptors.response.use((response) => {\r\n        return response;\r\n      }, (error) => {\r\n        const statusCode = error.response.status;\r\n        if(statusCode === 401 || statusCode === 403) { \r\n          this.onLogout();\r\n        }\r\n        return Promise.reject(error);\r\n    });\r\n  }\r\n   \r\n  render() {\r\n    const {\r\n      username,\r\n      sysRole,\r\n      isAuthorizing\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (isAuthorizing) {\r\n      return (\r\n        <div className=\"authenticating-panel\">\r\n          <div className=\"authenticating-panel-title\">Poli</div>\r\n          <FontAwesomeIcon icon=\"circle-notch\" spin={true} size=\"2x\" />\r\n        </div>\r\n      )\r\n    }\r\n    \r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Login sysRole={sysRole} onLoginSuccess={this.onLoginSuccess} />} />\r\n          <Route path=\"/login\" render={() => <Login sysRole={sysRole} onLoginSuccess={this.onLoginSuccess} />} />\r\n          <Route path=\"/changepassword\" component={ChangeTempPassword} />\r\n          <PrivateRoute \r\n            authenticated={isAuthenticated} \r\n            path='/workspace' \r\n            component={Workspace} \r\n            username={username}\r\n            sysRole={sysRole} \r\n            onLogout={this.onLogout}\r\n          />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} {...rest} />\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}