{"version":3,"sources":["views/Login.js","views/ChangeTempPassword.js","api/WebApi.js","components/Modal.js","components/Toast.js","views/DataSource.js","components/Checkbox.js","components/Slicer.js","api/Util.js","components/NumberRange.js","api/Constants.js","components/FilterViewPanel.js","components/ColorPicker.js","components/GridDraggable.js","components/GridResizable.js","api/EchartsApi.js","components/TableWidget.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/Tabs.js","components/Select.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/DashboardFullScreenView.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","handleKeyPress","keyCode","login","_this$state","state","username","password","user","axios","post","then","res","loginResponse","data","error","errorMsg","onLoginSuccess","_this2","console","log","react_default","a","createElement","Fragment","className","type","onChange","onKeyDown","onClick","React","Component","withRouter","ChangeTempPassword","save","confirmedPassword","newPassword","class","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","concat","onClose","index_es","icon","size","Toast","message","showToast","setTimeout","hide","_toastRef","assertThisInitialized","toastStatus","DataSource","showUpdatePassword","id","connectionUrl","driverClassName","ping","ds","put","closeEditPanel","catch","result","clearEditPanel","initialState","openEditPanel","showEditPanel","confirmDelete","_this$state$objectToD","objectToDelete","delete","closeConfirmDeletionPanel","openConfirmDeletionPanel","datasource","showConfirmDeletionPanel","toggleUpdatePassword","prevState","clearSearch","searchValue","jdbcDataSources","webApi","_this$state2","_this$state2$jdbcData","_this$state2$objectTo","mode","jdbcDataSourceItems","_loop","i","includes","push","key","length","placeholder","style","width","src_components_Modal","rows","margin","Checkbox","toggle","checked","_this$props2","checkmarkBoxStyle","backgroundColor","Slicer","isSelectAll","toggleSelectAll","newIsSelectAll","newCheckBoxes","toConsumableArray","checkBoxes","isChecked","filterId","handleSearchValueChange","indexOf","handleCheckBoxChange","index","findIndex","x","_this$props$checkBoxe","checkBoxItems","map","box","src_components_Checkbox","jsonToArray","json","array","JSON","parse","e","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","DEFAULT_FILTER_VIEW_WIDTH","DEFAULT_DASHBOARD_HEIGHT","FilterViewPanel","fetchFilters","dashboardId","filters","queryFilters","filter","Constants","queryRequest","queryResult","queryResultData","Util","f","newFilters","_arr","values","_i2","val","_arr2","_i3","renderFilterPanel","filterPanel","filterComponent","src_components_Slicer","onSlicerChange","onSingleValueChange","isEditMode","edit","fixedWidth","onEdit","applyFilters","_this$state$filters","filterParams","filterParam","_filter$checkBoxes","paramValues","j","checkBox","remark","param","onApplyFilters","splice","ColorPicker","handleClick","showPalette","handleClose","handleChange","color","rgb","rgba","r","g","b","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","WIDGET_BORDER","GridDraggable","onMouseDown","preventDefault","gridItemNode","ReactDOM","findDOMNode","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","CHART_COLORS","getPieOption","pieKey","pieValue","legend","series","row","tooltip","orient","center","radius","getPieOptionTemplate","TableWidget","_this$props$data","_this$props$columns","columns","_this$props$drillThro","drillThrough","columnHeaders","forEach","column","columnName","header","Header","accessor","d","Cell","href","es","defaultPageSize","previousText","nextText","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","instance","handleOriginal","drills","widgetDrillThrough","history","onChartClick","echarts","onChartLegendselectchanged","echart","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","_this$props$queryResu","widgetItem","src_components_TableWidget","chartOption","EchartsApi","echarts_for_react_lib_default","option","onEvents","_this$props2$style","_style$showBorder","showBorder","borderStyle","styles","border","marginRight","components_GridDraggable","components_GridResizable","GridLayout","_this$props$widgets","widgets","showGridlines","backgroundSize","backgroundImage","boxItems","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","isResizeToBase","preGridWidth","gridWidth","newWidgets","resizeWidgetsToBase","resizeWidgetsToActual","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryWidgets","params","w","handleHeightChange","onHeightChange","onBackgroundColorChange","saveWidgets","stringify","widgetViewWidth","components_ColorPicker","src_components_GridLayout","Tabs","handleTabClick","activeTab","_this$props$children","tabHeaders","tabContent","active","Select","handleOptionChange","_this$props$options","options","optionValue","optionDisplay","optionList","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","_result$data","sqlQuery","jdbcDataSourceId","runQuery","_x","_x2","objectSpread","handleAceEditorChange","newValue","handleIntegerOptionChange","intValue","onSave","addDrillThrough","_this$state3","drillColumnName","drillDashboardId","newDrills","removeDrillThrough","drill","generateChart","_this$state4","_this$state4$queryRes","renderChartPreview","_this$state5","_this$state5$queryRes","chartPreview","_this$state6","components_Select","_this$state7","_this$state7$jdbcData","_this$state7$drillDas","drillItems","columnItems","col","dataType","src_components_Tabs","react_ace_lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","FilterEditPanel","fetchFilter","useQuery","_this$state2$queryRes","requireSql","DashboardEditView","loadViewByDashboardName","url","location","search","URLSearchParams","dashboardName","showFilterViewPanel","pageWidth","getPageWidth","isReadOnly","refresh","toggleAutoRefresh","autoRefreshTimerId","clearInterval","refreshInterval","interval","timerId","setInterval","filterViewPanel","current","updateLastRefreshed","refreshWidgetView","refreshFilterView","widgetViewPanel","now","Date","toTimeString","replace","lastRefreshed","dashboard","onDashboardSave","cancelEdit","onSaveWidget","showWidgetEditPanel","onSaveFilter","showFilterEditPanel","toggleFilterViewPanel","resizePageLayout","openFilterEditPanel","filterEditPanel","openWidgetEditPanel","widgetEditPanel","fullScreen","window","open","onTableCellClick","onDashboardDelete","deleteDashboard","jdbcDataSourceOptions","createRef","match","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","editButtonPanel","_this3","autoRefreshStatus","fullScreenButtonPanel","controlButtons","components_WidgetViewPanel","ref","src_components_FilterViewPanel","src_components_WidgetEditPanel","src_components_FilterEditPanel","Dashboard","fetchBoards","view","activeDashboardId","_this$state$dashboard","dashboardRows","menuActive","Route","path","render","views_DashboardEditView","DashboardFullScreenView","dashboardEditView","wrappedComponentRef","comp","SYS_ROLES","User","fetchUsers","users","fetchGroups","groups","tempPassword","sysRole","userGroups","userGroupId","initialEditPanelState","addUserGroup","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_React$createElement","_this$state3$users","_this$state3$groups","_this$state3$userGrou","userItems","userGroupItems","Group","fetchDashboards","group","groupDashboards","groupDashboardId","addGroupDashboard","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","UserManagement","views_Group","views_User","Account","fetchUser","generateApiKey","alert","apiKey","MENU_ITEMS","link","Workspace","handleMenuClick","menuLink","currentMenuLink","logout","pathname","menuItems","menuList","m","menu","Link","to","isAccountMenuActive","Switch","exact","component","src_components_Toast","PageNotFound","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","faCircleNotch","App","isTempPassword","isAuthorizing","_this$state$sysRole","isAuthenticated","spin","src_views_Login","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.2ce37082.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.css';\n\nclass Login extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorMsg: '',\n      username: '',\n      password: ''\n    };\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    console.log('Login', 'componentDidMount');\n    console.log('Login - componentDidMount', 'cookie');\n    axios.post('/auth/login/cookie')\n      .then(res => {\n        const loginResponse = res.data || {};\n        if (!loginResponse.error) {\n          this.props.onLoginSuccess(loginResponse);\n        }\n      });\n  }\n\n  handleKeyPress = (event) => {\n    if(event.keyCode === 13) {\n      this.login();\n    }\n  }\n\n  login = () => {\n    const {\n      username,\n      password\n    } = this.state;\n\n    const user = {\n      username: username,\n      password: password\n    }\n\n    if (!username) {\n      this.setState({\n        errorMsg: 'Enter username'\n      });\n      return;\n    }\n\n    if (!password) {\n      this.setState({\n        errorMsg: 'Enter password'\n      });\n      return;\n    }\n\n    axios.post('/auth/login/user', user)\n      .then(res => {\n        const loginResponse = res.data || {};\n        if (loginResponse.error) {\n          this.setState({\n            errorMsg: loginResponse.error\n          });\n        } else {\n          this.props.onLoginSuccess(loginResponse);\n        }\n      });\n  }\n\n  render() {\n    console.log('Login', 'render');\n\n    return (\n      <React.Fragment>\n        <div className=\"login-panel\">\n          <div className=\"login-app-title\">Poli</div>\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\n          <div className=\"long-panel-body\">\n            <div className=\"form-group\">\n              <label>Username</label>\n              <input \n                type=\"text\" \n                name=\"username\" \n                value={this.state.username}\n                onChange={this.handleInputChange} \n                onKeyDown={this.handleKeyPress} \n              />\n              <label>Password</label>\n              <input \n                type=\"password\" \n                name=\"password\" \n                value={this.state.password}\n                onChange={this.handleInputChange} \n                onKeyDown={this.handleKeyPress} \n              />\n            </div>\n            <button className=\"button login-button\" onClick={this.login}>Login</button>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withRouter(Login);","\nimport React from 'react';\nimport axios from 'axios';\n\nclass ChangeTempPassword extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorMsg: '',\n      password: '',\n      confirmedPassword: ''\n    };\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  componentDidMount() {\n      console.log('ChangeTempPassword - componentDidMount');\n  }\n\n  save = () => {\n    const {\n      password,\n      confirmedPassword\n    } = this.state;\n\n    if (password || confirmedPassword) {\n      if (password === confirmedPassword) {\n\n      }\n    } else {\n      this.setState({\n        errorMsg: `Those passwords didn't match.`\n      })\n    }\n\n    const newPassword = {\n      password: password\n    }\n\n    axios.post('/ws/auth/login/changepassword', newPassword)\n      .then(res => {\n        const result = res.data;\n      });\n  }\n\n  render() {\n\n    return (\n      <React.Fragment>\n        <label>{this.state.errorMsg}</label>\n        <div class=\"form-group\">\n          <label>New password</label>\n          <input \n            type=\"text\" \n            name=\"username\" \n            value={this.state.username}\n            onChange={this.handleInputChange} />\n          <label>Confirm password</label>\n          <input \n            type=\"password\" \n            name=\"password\" \n            value={this.state.password}\n            onChange={this.handleInputChange} />\n          <button onClick={this.login}>Login</button>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default ChangeTempPassword;","import axios from 'axios';\n\nconst JSON_HEADER = {\n  headers: {\n    'Content-Type': 'application/json',\n  }\n};\n\nexport const fetchDataSources = async () => {\n  try {\n    const response = await axios.get('/ws/jdbcdatasource');\n    return response.data || [];\n  } catch (e) {\n    return [];\n  }\n};\n\nexport const fetchDashboardById = async (id) => {\n  return await get(`/ws/dashboard/${id}`);\n}\n\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\n}\n\nconst get = async (url) => {\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (e) {\n    return [];\n  }\n} \n\n\n\n\n","import React from 'react';\nimport './Modal.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass Modal extends React.Component {\n\n  render() {\n    const {\n      show,\n      modalClass = '',\n      title,\n      children\n    } = this.props;\n\n    const modalStatus = show ? 'display-block' : 'display-none';\n    return (\n      <div className={`modal-overlay ${modalStatus}`}>\n        <div className={`modal-panel ${modalClass}`}>\n          <div className=\"model-header row\">\n            <div className=\"model-title\">{title}</div>\n            <button className=\"model-close-button icon-button\" onClick={() => this.props.onClose()}>\n              <FontAwesomeIcon icon=\"times\" size=\"lg\" />\n            </button>\n          </div>\n          <hr/>\n          <div className='modal-body'>\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;","import React from 'react';\nimport './Toast.css';\n\nclass Toast extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showToast: false,\n      message: ''\n    };\n\n    Toast._toastRef = this;\n  }\n\n  show = (message) => {\n    this.setState({ \n      showToast: true,\n      message: message\n    }, () => {\n      setTimeout(() => {\n        this.hide();\n      }, 3500);\n    });\n  }\n\n  hide = () => {\n    this.setState({ \n      showToast: false,\n      message: ''\n    });\n  }\n\n  static show = (message) => {\n    Toast._toastRef.show(message);\n  }\n\n  render() {\n    const {\n      showToast,\n      message\n    } = this.state;\n\n    const toastStatus = showToast ? 'display-block' : 'display-none';\n\n    return (\n      <div className={`toast-container ${toastStatus}`}>\n        <button className=\"button\" onClick={this.hide}>X</button>\n        <div>\n          {message}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Toast;","\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport * as webApi from '../api/WebApi';\nimport Modal from '../components/Modal';\nimport Toast from '../components/Toast';\nimport './Datasource.css';\n\nclass DataSource extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      jdbcDataSources: [],\n      showEditPanel: false,\n      showConfirmDeletionPanel: false,\n      objectToDelete: {},\n      showUpdatePassword: false,\n      searchValue: '',\n      id: null,\n      name: '',\n      connectionUrl: '',\n      driverClassName: '',\n      username: '',\n      password: '',\n      ping: ''\n    };\n  }\n\n  get initialState() {\n    return {\n      showUpdatePassword: false,\n      id: null,\n      name: '',\n      connectionUrl: '',\n      driverClassName: '',\n      username: '',\n      password: '',\n      ping: ''\n    };\n  }\n\n  componentDidMount() {\n    this.fetchDataSources();\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  async fetchDataSources() {\n    const jdbcDataSources = await webApi.fetchDataSources();\n    this.setState({ \n      jdbcDataSources: jdbcDataSources \n    });\n  }\n\n  save = () => {\n    const {\n      showUpdatePassword,\n      id,\n      connectionUrl,\n      driverClassName,\n      username,\n      password,\n      name,\n      ping,\n    } = this.state;\n\n    if (!name) {\n      return;\n    }\n\n    let ds = {\n      connectionUrl: connectionUrl,\n      driverClassName: driverClassName,\n      username: username,\n      name: name,\n      ping: ping\n    };\n\n    if (id !== null) {\n      ds.id = id;\n      if (showUpdatePassword) {\n        ds.password = password;\n      }\n\n      // Update\n      axios.put('/ws/jdbcdatasource', ds)\n        .then(res => {\n          this.closeEditPanel();\n          this.fetchDataSources();\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    } else {\n      ds.password = password;\n\n      // New\n      axios.post('/ws/jdbcdatasource', ds)\n        .then(res => {\n          this.closeEditPanel();\n          this.fetchDataSources();\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    } \n  }\n\n  ping = (id) => {\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\n      .then(res => {\n        const result = res.data;\n        Toast.show(result);\n      });\n  }\n\n  clearEditPanel = () => {\n    this.setState(this.initialState);\n  }\n\n  openEditPanel = (ds) => {\n    if (ds !== null) {\n      this.setState({\n        showUpdatePassword: false,\n        id: ds.id,\n        connectionUrl: ds.connectionUrl,\n        driverClassName: ds.driverClassName,\n        username: ds.username,\n        password: ds.password,\n        name: ds.name,\n        ping: ds.ping\n      });\n    } else {\n      this.clearEditPanel();\n    }\n    \n    this.setState({\n      showEditPanel: true\n    }); \n  }\n\n  closeEditPanel = () => {\n    this.setState({\n      showEditPanel: false\n    });\n  }\n\n  confirmDelete = () => {\n    const { \n      objectToDelete = {} \n    } = this.state;\n    axios.delete('/ws/jdbcdatasource/' + objectToDelete.id)\n      .then(res => {\n        this.fetchDataSources();\n        this.closeConfirmDeletionPanel();\n      });\n  }\n\n  openConfirmDeletionPanel = (datasource) => {\n    this.setState({\n      objectToDelete: datasource,\n      showConfirmDeletionPanel: true\n    });\n  }\n\n  closeConfirmDeletionPanel = () => {\n    this.setState({\n      objectToDelete: {},\n      showConfirmDeletionPanel: false\n    });\n  }\n\n  toggleUpdatePassword = () => {\n    this.setState(prevState => ({\n      showUpdatePassword: !prevState.showUpdatePassword\n    })); \n  }\n\n  clearSearch = () => {\n    this.setState({\n      searchValue: ''\n    });\n  }\n\n  render() {\n    const { \n      showUpdatePassword,\n      showConfirmDeletionPanel,\n      searchValue,\n      id,\n      jdbcDataSources = [],\n      objectToDelete = {}\n    } = this.state;\n\n    const mode = id === null ? 'New' : 'Edit';\n\n    const jdbcDataSourceItems = [];\n    for (let i = 0; i < jdbcDataSources.length; i++) {\n      const ds = jdbcDataSources[i];\n      const name = ds.name;\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\n        jdbcDataSourceItems.push(\n          (\n            <div key={i} className=\"datasource-card row\">\n              <div className=\"float-left ellipsis datasource-row-name\">\n                {name}\n              </div>\n              <div className=\"float-right\">\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(ds)}>\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\n                </button>\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(ds)}>\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\n                </button>\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.ping(ds.id)}>\n                  <FontAwesomeIcon icon=\"plug\" size=\"lg\" />\n                </button>\n              </div>\n            </div>\n          )\n        )\n      }\n    }\n\n    return (\n      <div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"searchValue\"\n            value={this.state.searchValue}\n            onChange={this.handleInputChange}\n            placeholder=\"Search...\"\n            style={{width: '200px'}}\n            />\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\n            <FontAwesomeIcon icon=\"plus\" /> New datasource\n          </button>\n          </div>\n        <div className=\"table-panel\">\n          {jdbcDataSourceItems}\n        </div>\n\n        <Modal \n          show={this.state.showEditPanel}\n          onClose={this.closeEditPanel}\n          modalClass={'small-modal-panel'}\n          title={mode} >\n\n          <div className=\"form-panel\">\n            <label>Name <span className=\"required\">*</span></label>\n            <input \n              type=\"text\" \n              name=\"name\" \n              value={this.state.name}\n              onChange={this.handleInputChange} />\n\n            <label>Connection Url</label>\n            <textarea\n              rows=\"4\"\n              type=\"text\" \n              name=\"connectionUrl\" \n              value={this.state.connectionUrl}\n              onChange={this.handleInputChange} >\n            </textarea>\n\n            <label>Driver class name</label>\n            <input \n              type=\"text\" \n              name=\"driverClassName\" \n              value={this.state.driverClassName}\n              onChange={this.handleInputChange} />\n\n            <label>Username</label>\n            <input \n              type=\"text\" \n              name=\"username\" \n              value={this.state.username}\n              onChange={this.handleInputChange} />\n            \n            { mode === 'Edit' ? \n              (\n                <div style={{margin: '3px 0px 8px 0px'}}>\n                  <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\n                </div>\n              ) : null\n            }\n            { mode === 'New' || showUpdatePassword ? \n              (\n                <div>\n                  <label>Password</label>\n                  <input \n                    type=\"password\" \n                    name=\"password\" \n                    value={this.state.password}\n                    onChange={this.handleInputChange} />\n                </div>\n              ) : null\n            }\n\n            <label className=\"form-label\" className=\"mt-3\">Ping</label>\n            <input \n              type=\"text\" \n              name=\"ping\" \n              value={this.state.ping}\n              onChange={this.handleInputChange} />\n            <button className=\"button mt-3\" onClick={this.save}>Save</button>\n          </div>\n        </Modal>\n\n        <Modal \n          show={showConfirmDeletionPanel}\n          onClose={this.closeConfirmDeletionPanel}\n          modalClass={'small-modal-panel'}\n          title={'Confirm Deletion'} >\n          <div className=\"confirm-deletion-panel\">\n            Are you sure you want to delete {objectToDelete.name}?\n          </div>\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default DataSource;\n","import React from 'react';\nimport './Checkbox.css';\n\nclass Checkbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n    };\n  }\n\n  toggle = () => {\n    const {\n      name,\n      checked\n    } = this.props;\n\n    this.props.onChange(name, !checked);\n  }\n\n  render() {\n    const {\n      value,\n      checked\n    } = this.props;\n\n    const checkmarkBoxBgColor = checked ? '#000000' : '#FFFFFF';\n    const checkmarkBoxStyle = {\n      backgroundColor: checkmarkBoxBgColor\n    };\n\n    return (\n      <div className=\"checkbox-container\" onClick={this.toggle}>\n        <div className=\"checkbox-checkmark\">\n          <div className=\"checkbox-checkmark-box\" style={checkmarkBoxStyle}>\n          </div>\n        </div>\n        <div className=\"checkbox-label\">{value}</div>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;\n","import React from 'react';\nimport Checkbox from './Checkbox';\nimport './Slicer.css';\n\nclass Slicer extends React.Component {\n\n  state = {\n    isSelectAll: false,\n    searchValue: ''\n  }\n\n  toggleSelectAll = () => {\n    const newIsSelectAll = !this.state.isSelectAll;\n    const newCheckBoxes = [...this.props.checkBoxes];\n    for (let i = 0; i < newCheckBoxes.length; i++) {\n      newCheckBoxes[i].isChecked = newIsSelectAll;\n    }\n    this.props.onChange(this.props.filterId, newCheckBoxes);\n\n    this.setState(prevState => ({\n      isSelectAll: !prevState.isSelectAll\n    }));\n  }\n\n  handleSearchValueChange = (event) => {\n    const searchValue = event.target.value;\n    if (searchValue) {\n      const result = [];\n      const { checkBoxes } = this.props;\n      for (let i = 0; i < checkBoxes.length; i++) {\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\n          result.push(checkBoxes[i]);\n        }\n      }\n    }\n\n    this.setState({\n      searchValue: searchValue\n    });\n\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\n  }\n\n  handleCheckBoxChange = (name, isChecked) => {\n    const newCheckBoxes = [...this.props.checkBoxes];\n    const index = newCheckBoxes.findIndex(x => x.value === name);\n    newCheckBoxes[index].isChecked = isChecked;\n    this.props.onChange(this.props.filterId, newCheckBoxes);\n  }\n\n  render() {\n    const { \n      checkBoxes = []\n    } = this.props;\n    const checkBoxItems = checkBoxes.map((box, index) => \n      <Checkbox \n        key={index} \n        name={box.value} \n        value={box.value} \n        checked={box.isChecked} \n        onChange={this.handleCheckBoxChange} \n      />\n    );\n\n    return (\n      <div>\n        <button className=\"button\" onClick={this.toggleSelectAll}>Select All {this.state.isSelectAll}</button>\n        <input \n            type=\"text\" \n            name=\"name\" \n            value={this.state.searchValue}\n            onChange={this.handleSearchValueChange}\n            placeholder=\"Search...\"\n          />\n        \n        <div className=\"slicer-body\">\n          {checkBoxItems}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Slicer;\n","\nexport const isArrayEmpty = (array) => {\n  return !Array.isArray(array) || !array.length;\n};\n\nexport const jsonToArray = (json) => {\n  let array;\n  try {\n    array = JSON.parse(json);\n  } catch(e) {\n    array = [];\n  }\n  return array;\n}\n","import React from 'react';\n\nclass NumberRange extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        min\n        <input type=\"number\" name=\"min\" />\n        max\n        <input type=\"number\" name=\"max\" />\n      </div>\n    );\n  }\n}\n\nexport default NumberRange;","/**\n * Constants\n */\nexport const SLICER = 'slicer';\nexport const SINGLE_VALUE= 'single';\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\n\nexport const PIE = 'pie';\nexport const TABLE = 'table';\nexport const CHART_TYPES = [TABLE, PIE];\n\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\n\nexport const SYS_ROLE_ADMIN = 'admin';\nexport const SYS_ROLE_DEVELOPER = 'developer';\nexport const SYS_ROLE_VIEWER = 'viewer';\n\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;","import React, { Component } from 'react';\nimport Slicer from \"./Slicer\";\nimport NumberRange from \"./NumberRange\";\nimport * as Util from '../api/Util';\nimport * as Constants from '../api/Constants';\n\nimport axios from 'axios';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './FilterViewPanel.css';\nimport Modal from '../components/Modal';\n\nclass FilterViewPanel extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      dashboardId: null,\n      filters: [],\n      showConfirmDeletionPanel: false,\n      objectToDelete: {}\n    };\n  }\n\n  fetchFilters = (dashboardId) => {\n    if (dashboardId === null) {\n      return;\n    }\n\n    this.setState({\n      dashboardId: dashboardId\n    })\n\n    axios.get('/ws/filter/dashboard/' + dashboardId)\n      .then(res => {\n        const result = res.data;\n        this.setState({\n          filters: result,\n        }, this.queryFilters);\n      });\n  }\n\n  queryFilters = () => {\n    const { filters } = this.state;\n    for (let i = 0; i < filters.length; i++) {\n      const filter = filters[i];\n      if (filter.type === Constants.SLICER) {\n        const queryRequest = filter.data;\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\n          .then(res => {\n            const queryResult = res.data;\n            const queryResultData = Util.jsonToArray(queryResult.data);\n\n            const index = filters.findIndex(f => f.id === queryResult.id);\n            const newFilters = [...this.state.filters];\n            newFilters[index].queryResult = queryResult;\n            const type = newFilters[index].type;\n            if (type === Constants.SLICER) {\n              const checkBoxes = [];\n              for (let i = 0; i < queryResultData.length; i++) {\n                const values = Object.values(queryResultData[i]);\n                for (const val of values) {\n                  checkBoxes.push({\n                    value: val,\n                    isChecked: false\n                  });\n                }\n              }\n\n              newFilters[index].checkBoxes = checkBoxes;\n            } else if (type === Constants.SINGLE_VALUE) {\n              const values = Object.values(queryResultData);\n              let value = '';\n              for (const val of values) {\n                value = val;\n                break;\n              }\n              newFilters[index].value = value;\n            }\n\n            this.setState({\n              filters: newFilters\n            });\n          });\n      }\n    }\n  }\n\n  renderFilterPanel = () => {\n    const filterPanel = [];\n    const filters = this.state.filters;\n    for (let i = 0; i < filters.length; i++) {\n      const filter = filters[i];\n      let filterComponent = (<div>NONE</div>);\n      if (filter.type === Constants.SLICER) {\n        const checkBoxes = filter.checkBoxes;\n        filterComponent = (\n          <Slicer \n            key={i} \n            filterId={filter.id} \n            checkBoxes={checkBoxes} \n            onChange={this.onSlicerChange} \n          />\n        );\n      } else if (filter.type === Constants.SINGLE_VALUE) {\n        filterComponent = (\n          <input \n            type=\"text\"  \n            value={filter.value}\n            onChange={(event) => this.onSingleValueChange(filter.id, event)} \n          />\n        );\n      }\n\n      filterPanel.push(\n        (\n          <div className=\"filter-card\">\n            <div className=\"filter-card-title\">\n              {filter.title}\n\n              { this.props.isEditMode ? \n                (\n                  <div className=\"icon-button-group\">\n                    <div className=\"inline-block\" onClick={() => this.edit(filter.id)}>\n                      <FontAwesomeIcon icon=\"edit\" fixedWidth />\n                    </div>\n                    <div className=\"inline-block\" onClick={() => this.openConfirmDeletionPanel(filter.id)}>\n                      <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\n                    </div>\n                  </div>\n                ): null \n              }\n            </div>\n            <div>\n              {filterComponent}\n            </div>\n          </div>\n        )\n      );\n    }\n    return filterPanel;\n  }\n\n  edit = (filterId) => {\n    this.props.onEdit(filterId);\n  }\n\n  onSlicerChange = (filterId, checkBoxes) => {\n    const index = this.state.filters.findIndex(f => f.id === filterId);\n    const newFilters = [...this.state.filters];\n    newFilters[index].checkBoxes = [...checkBoxes];\n    this.setState({\n      filters: newFilters\n    });  \n  }\n\n  onSingleValueChange = (filterId, event) => {\n    const { filters } = this.state;\n    const value = event.target.value;\n    const index = filters.findIndex(f => f.id === filterId);\n    const newFilters = [...filters];\n    newFilters[index].value = value;\n    this.setState({\n      filters: newFilters\n    });\n  }\n\n  applyFilters = () => {\n    const { \n      filters = []\n    } = this.state;\n    const filterParams = [];\n    for (let i = 0; i < filters.length; i++) {\n      const filter = filters[i];\n      const filterParam = {};\n      if (filter.type === Constants.SLICER) {\n        const { \n          checkBoxes = []\n        } = filter;\n        const paramValues = [];\n        for (let j = 0; j < checkBoxes.length; j++) {\n          const checkBox = checkBoxes[j];\n          if (checkBox.isChecked) {\n            paramValues.push(checkBox.value);\n          }\n        }\n        filterParam.value = paramValues;\n        if (paramValues.length === checkBoxes.length) {\n          filterParam.remark = 'select all';\n        }\n      } else if (filter.type === Constants.SINGLE_VALUE) {\n        filterParam.value = filter.value;\n      }\n      filterParam.param = filter.data.param;\n      filterParam.type = filter.type;\n      filterParams.push(filterParam);\n    }\n\n    this.props.onApplyFilters(filterParams);\n  }\n\n  confirmDelete = () => {\n    const { \n      objectToDelete\n    } = this.state;\n    const filterId = objectToDelete;\n    axios.delete(`/ws/filter/${filterId}`)\n      .then(res => {\n        const index = this.state.filters.findIndex(f => f.id === filterId);\n        const newFilters = [...this.state.filters];\n        newFilters.splice(index, 1);\n        this.setState({\n          filters: newFilters\n        });\n        this.closeConfirmDeletionPanel();\n      });\n  }\n\n  openConfirmDeletionPanel = (filterId) => {\n    this.setState({\n      objectToDelete: filterId,\n      showConfirmDeletionPanel: true\n    });\n  }\n\n  closeConfirmDeletionPanel = () => {\n    this.setState({\n      objectToDelete: {},\n      showConfirmDeletionPanel: false\n    });\n  }\n\n  render() {\n    const { show } = this.props;\n    const style = {};\n    if (show) {\n      style.width = Constants.DEFAULT_FILTER_VIEW_WIDTH + 'px';\n    } else {\n      style.width = '0px';\n    }\n\n    return (\n      <div className=\"dashboard-content-filter-panel\" style={style}>\n        <div>Filters</div>\n        <button className=\"button\" onClick={this.applyFilters}>Run</button>\n        <div className=\"filter-view-panel\">\n          {this.renderFilterPanel()}\n        </div>\n\n        <Modal \n          show={this.state.showConfirmDeletionPanel}\n          onClose={this.closeConfirmDeletionPanel}\n          modalClass={'small-modal-panel'}\n          title={'Confirm Deletion'} >\n          <div className=\"confirm-deletion-panel\">\n            Are you sure you want to delete this filter?\n          </div>\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\n        </Modal>\n      </div>\n    )\n  };\n}\n\nexport default FilterViewPanel;","import React from 'react';\nimport { ChromePicker } from 'react-color';\n\nclass ColorPicker extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPalette: false\n    }\n  }\n\n  handleClick = () => {\n    this.setState(prevState => ({\n      showPalette: !prevState.showPalette\n    })); \n  };\n\n  handleClose = () => {\n    this.setState({ \n      showPalette: false \n    });\n  };\n\n  handleChange = (color) => {\n    const rgb = color.rgb;\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\n    this.props.onChange(rgba);\n  };\n\n  render() {\n\n    const color = {\n      width: '36px',\n      height: '14px',\n      borderRadius: '2px',\n      background: this.props.value\n    };\n\n    const swatch = {\n      padding: '5px',\n      background: '#fff',\n      borderRadius: '1px',\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n      display: 'inline-block',\n      cursor: 'pointer'\n    };\n\n    const popover = {\n      position: 'absolute',\n      zIndex: '2'\n    };\n\n    const cover = {\n      position: 'fixed',\n      top: '0px',\n      right: '0px',\n      bottom: '0px',\n      left: '0px'\n    };\n\n    return (\n      <div>\n        <div style={swatch} onClick={this.handleClick}>\n          <div style={color} />\n        </div>\n        { this.state.showPalette ? \n          (\n            <div style={popover}>\n              <div style={cover} onClick={this.handleClose} />\n              <ChromePicker color={this.props.value} onChange={this.handleChange} />\n            </div>\n          ) : null }\n      </div>\n    )\n  };\n}\n\nexport default ColorPicker;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst WIDGET_BORDER = 2;\n\nclass GridDraggable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      xOffset: 0,\n      yOffset: 0\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\n    const yOffset = event.clientY - gridItemNode.offsetTop;\n\n    let boxes = document.getElementsByClassName(\"grid-box\");\n    for (let i = 0; i < boxes.length; i++) {\n        boxes[i].style.zIndex = 20;\n    }\n    gridItemNode.style.zIndex = 30;\n\n    const { ownerDocument } = gridItemNode;\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\n    this.setState({\n      xOffset: xOffset,\n      yOffset: yOffset\n    });\n\n    this.props.onMouseDown('drag');\n  }\n\n  onMouseUp = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n    this.props.onMouseUp();\n  }\n\n  onMouseMove = (event) => {\n    event.preventDefault();\n    if (this.props.mode !== 'drag') {\n      return; \n    }\n\n    let gridCell = 1;\n    if (this.props.snapToGrid) {\n      gridCell = 4;\n    }\n\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    let currentX = event.clientX - this.state.xOffset;\n    let currentY = event.clientY - this.state.yOffset;\n    \n    const containerNode = gridItemNode.parentNode;\n    const containerWidth = containerNode.clientWidth;\n    const containerHeight = containerNode.clientHeight;\n    \n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\n\n    if (currentX < 0) {\n      currentX = 0;\n    }\n    if (currentY < 0) {\n      currentY = 0;\n    }\n    if (currentX + boxWidth > containerWidth) {\n      currentX = containerWidth - boxWidth;\n    }\n    if (currentY + boxHeight > containerHeight) {\n      currentY = containerHeight - boxHeight;\n    }\n\n    currentX = Math.floor(currentX / gridCell) * gridCell;\n    currentY = Math.floor(currentY / gridCell) * gridCell;\n\n    gridItemNode.style.left = currentX + 'px';\n    gridItemNode.style.top = currentY + 'px';\n  }\n\n  render() {\n    return (\n      <div className=\"grid-draggable\"\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp}>\n        <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\n      </div>\n    )\n  }\n}\n\nexport default GridDraggable;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst MIN_WIDTH = 30;\nconst MIN_HEIGHT = 30;\nconst WIDGET_BORDER = 2;\n\n\nclass GridResizable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentX: 0,\n      currentY: 0,\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    const currentX = event.clientX;\n    const currentY = event.clientY;\n    \n    const { ownerDocument } = thisNode;\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\n    this.setState({\n      currentX: currentX,\n      currentY: currentY\n    });\n\n    this.props.onMouseDown('resize');\n  }\n\n  onMouseUp = (event) => {\n    event.preventDefault();\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n    this.props.onMouseUp();\n  }\n\n  onMouseMove = (event) => {\n    event.preventDefault();\n    if (this.props.mode !== 'resize') {\n      return; \n    }\n\n    let xOffset = event.clientX - this.state.currentX;\n    let yOffset = event.clientY - this.state.currentY;\n\n    const thisNode = ReactDOM.findDOMNode(this);\n    const gridItemNode = thisNode.parentNode;\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\n\n    const containerNode = gridItemNode.parentNode;\n    const containerWidth = containerNode.clientWidth;\n    const containerHeight = containerNode.clientHeight;\n\n    let newWidth = Math.floor(prevWidth + xOffset);\n    let newHeight = Math.floor(prevHeight + yOffset);\n\n    if (newWidth < MIN_WIDTH) {\n      newWidth = MIN_WIDTH;\n    }\n    \n    if (newHeight < MIN_HEIGHT) {\n      newHeight = MIN_HEIGHT;\n    }\n\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\n\n    if (newWidth +  left > containerWidth) {\n      newWidth = containerWidth - left;\n    }\n\n    if (newHeight + top > containerHeight) {\n      newHeight = containerHeight - top;\n    }\n\n    gridItemNode.style.width = newWidth + 'px';\n    gridItemNode.style.height = newHeight + 'px';\n\n    this.setState({\n      currentX: event.clientX,\n      currentY: event.clientY\n    });\n  }\n\n  render() {\n    return (\n      <div \n        className=\"grid-resizable\"\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp} >\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\n      </div>\n    )\n  }\n}\n\nexport default GridResizable;","import * as Util from '../api/Util';\n\nconst CHART_COLORS = [\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\n];\n\nexport const getPieOptionTemplate = (legend, series) => {\n  return {\n    color: CHART_COLORS,\n    tooltip: {\n    },\n    legend: {\n      type: 'scroll',\n      orient: 'vertical',\n      data: legend,\n      right: 10,\n      top: 10,\n      bottom: 10\n    },\n    series: [\n      {\n        type:'pie',\n        center: ['40%', '50%'],\n        radius: '50%',\n        data: series\n      }\n    ]\n  }\n};\n\nexport const getPieOption = (queryResultData, pieKey, pieValue) => {\n  let legend = [];\n  let series = [];\n  for (let i = 0; i < queryResultData.length; i++) {\n    const row = queryResultData[i];\n    legend.push(row[pieKey]);\n    series.push({\n      name: row[pieKey],\n      value: row[pieValue]\n    });  \n  }\n  return getPieOptionTemplate(legend, series);\n}\n","import React from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport './TableWidget.css';\n\nclass TableWidget extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n    };\n  }\n\n  render() {   \n    const {\n      data = [],\n      columns = [],\n      drillThrough = [],\n      error\n    } = this.props;\n\n    const columnHeaders = [];\n    columns.forEach(column => {\n      const columnName = column.name;\n      const header = {\n        Header: columnName,\n        accessor: columnName\n      };\n      if (drillThrough.length > 0) {\n        const index = drillThrough.findIndex(d => d.columnName === columnName);\n        if (index !== -1) {\n          const dashboardId = drillThrough[index].dashboardId;\n          header.Cell = (props => <a href={`/poli/workspace/dashboard/${dashboardId}?${columnName}=${props.value}`}>{props.value}</a>);\n        }\n      }\n\n      columnHeaders.push(header);\n    });\n\n    if (error) {\n      return (\n        <div>\n          {error}\n        </div>\n      )\n    }\n\n    return (\n      <ReactTable\n        data={data}\n        columns={columnHeaders}\n        defaultPageSize={10}\n        previousText={'Prev'}\n        nextText={'Next'}\n      />\n    );\n  }\n}\n\nexport default TableWidget;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GridDraggable from './GridDraggable';\nimport GridResizable from './GridResizable';\n\nimport { withRouter } from 'react-router-dom';\n\nimport * as Util from '../api/Util';\nimport * as Constants from '../api/Constants';\n\nimport ReactEcharts from 'echarts-for-react';\nimport * as EchartsApi from '../api/EchartsApi';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport TableWidget from './TableWidget';\n\nclass GridItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: ''\n    };\n  }\n\n  componentWillUnmount() {\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const { ownerDocument } = thisNode;\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  onMouseDown = (mode) => {\n    console.log('GridItem onMouseDown', mode);\n    this.setState({\n      mode: mode\n    });\n  }\n\n  onMouseUp = () => {\n    console.log('GridItem onMouseUp');\n    this.setState({\n      mode: ''\n    });\n\n    const thisNode = ReactDOM.findDOMNode(this);\n    const x = thisNode.offsetLeft;\n    const y = thisNode.offsetTop;\n    const width = parseInt(thisNode.style.width, 10);\n    const height = parseInt(thisNode.style.height, 10);\n    const widgetId = this.props.id;\n\n    const widget = {\n      id: widgetId,\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n\n    this.props.onWidgetMove(widget);\n  }\n\n  onMouseMove = (event, mode, state) => {\n    event.preventDefault();   \n  }\n\n  editWidget = (widgetId) => {\n    this.props.onWidgetEdit(widgetId);\n  }\n\n  exportCsv = (widgetId) => {\n\n  }\n\n  exportJson = (widgetId) => {\n\n  }\n\n  removeWidget = (widgetId) => {\n    this.props.onWidgetRemove(widgetId);\n  }\n\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\n    return {\n      onClick: (e, handleOriginal) => {\n        console.log(\"A Td Element was clicked!\");\n        console.log(\"it produced this event:\", e);\n        console.log(\"It was in this column:\", column);\n        console.log(\"It was in this row:\", rowInfo);\n        console.log(\"It was in this table instance:\", instance);\n        \n        const header = column.Header;\n        const row = rowInfo.row;\n        const value = row[header];\n        const drills = instance.props.widgetDrillThrough || []; \n        console.log('onTableTdPropsChange', header, value, drills);\n        const index = drills.findIndex(d => d.columnName === header);\n        if (index !== -1) {\n          const dashboardId = drills[index].dashboardId;\n          this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\n        }\n      }\n    };\n  }\n\n  onChartClick = (param, echarts) => {\n    console.log('onChartClick', param, echarts);\n  };\n\n  onChartLegendselectchanged = (param, echart) => {\n    console.log('onChartLegendselectchanged', param, echart);\n  };\n\n  renderWidgetContent = () => {\n    const onChartEvents = {\n      'click': this.onChartClick,\n      'legendselectchanged': this.onChartLegendselectchanged\n    };\n\n    const { \n      chartType,\n      queryResult = {},\n      drillThrough,\n      data = {}\n    } = this.props;\n\n    const queryResultData = Util.jsonToArray(queryResult.data);\n    const columns = queryResult.columns || [];\n    const error = queryResult.error;\n\n    let widgetItem = (<div></div>);\n    if (chartType === Constants.TABLE) {\n      widgetItem = (\n        <TableWidget\n          data={queryResultData}\n          columns={columns}\n          error={error}\n          drillThrough={drillThrough}\n        />\n      );\n    } else if (chartType === Constants.PIE) {\n      const { \n        pieKey,\n        pieValue\n      } = data;\n      const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\n      widgetItem = (\n        <ReactEcharts \n          option={chartOption}   \n          className=\"echarts\"\n          onEvents={onChartEvents}  \n        />\n      );\n    } \n\n    return widgetItem;\n  }\n\n  render() {\n    const {\n      id,\n      title,\n      isEditMode,\n      style = {}\n    } = this.props;\n\n    const { \n      showBorder = false \n    } = style;\n\n    const borderStyle = showBorder ? '2px solid #4b4f56' : '2px solid #FFFFFF';\n\n    let styles = {\n      left: this.props.x + 'px',\n      top: this.props.y + 'px',\n      width: this.props.width + 'px',\n      height: this.props.height + 'px',\n      zIndex: 1,\n      border: borderStyle\n    };\n\n    return (\n      <div className=\"grid-box\" style={styles}>\n        <div className=\"grid-box-title\">\n          {title}\n\n          { isEditMode ? (\n            <div className=\"float-right\" style={{marginRight: '20px'}}>\n              <div className=\"inline-block\" onClick={() => this.editWidget(id)}>\n                <FontAwesomeIcon icon=\"edit\" fixedWidth />\n              </div>\n              <div className=\"inline-block\" onClick={() => this.removeWidget(id)}>\n                <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\n              </div>\n            </div>\n          ) : (\n            <div className=\"grid-box-file-button-group\">\n              <div className=\"inline-block\" onClick={() => this.exportJson(id)}>\n                <FontAwesomeIcon icon=\"file-export\" fixedWidth />\n              </div>\n              \n              <div className=\"inline-block\" onClick={() => this.exportCsv(id)}>\n                <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\n              </div>\n            </div>\n          )}\n          \n        </div>\n        <div className=\"grid-box-content\">\n          {this.renderWidgetContent()}\n        </div>\n\n        { isEditMode ? (\n          <GridDraggable \n            onMouseUp={this.onMouseUp}\n            onMouseDown={this.onMouseDown}\n            onMouseMove={this.onMouseMove}\n            mode={this.state.mode}\n            snapToGrid={this.props.snapToGrid} />\n        ): null}\n\n        { isEditMode ? (\n          <GridResizable \n            onMouseUp={this.onMouseUp}\n            onMouseDown={this.onMouseDown}\n            onMouseMove={this.onMouseMove}\n            mode={this.state.mode} />\n        ): null}\n        \n      </div>\n    )\n  }\n}\n\nexport default withRouter(GridItem);","import React from 'react';\n\nimport GridItem from './GridItem';\nimport './GridLayout.css';\n\nclass GridLayout extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const {\n      width,\n      height,\n      backgroundColor,\n      widgets = [],\n      showGridlines\n    } = this.props;\n\n    let style = {\n      width: width + 'px',\n      height: height + 'px',\n      backgroundColor: backgroundColor\n    };\n\n    if (showGridlines) {\n      style.backgroundSize = '15px 15px';\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\n    }\n\n    const boxItems = widgets.map((widget, index) => \n      <GridItem\n        key={index}\n        snapToGrid={this.props.snapToGrid}\n        isEditMode={this.props.isEditMode}\n        {...widget}\n        onWidgetMove={this.props.onWidgetMove}\n        onWidgetEdit={this.props.onWidgetEdit}\n        onWidgetRemove={this.props.onWidgetRemove}\n      />\n    );\n\n\n    return (\n      <div\n        className=\"grid-layout\"\n        style={style} >\n        {boxItems}\n      </div>\n    )\n  }\n}\n\nexport default GridLayout;","\nimport React from 'react';\nimport axios from 'axios';\n\nimport ColorPicker from './ColorPicker';\nimport Checkbox from './Checkbox';\n\nimport GridLayout from './GridLayout';\nimport * as Util from '../api/Util';\nimport Modal from '../components/Modal';\n\nconst BASE_WIDTH = 1200;\n\nclass WidgetViewPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      widgets: [],\n      gridWidth: 1200,\n      snapToGrid: false,\n      showGridlines: false,\n      showConfirmDeletionPanel: false,\n      objectToDelete: {}\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  resizeGrid = (width, isResizeToBase) => {\n    const preGridWidth = this.state.gridWidth;\n    const { widgets } = this.state;\n    const newWidgets = [...widgets];\n    if (isResizeToBase) {\n      this.resizeWidgetsToBase(newWidgets, preGridWidth);\n    }\n\n    const gridWidth = width - 10;\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\n    this.setState({\n      widgets: newWidgets,\n      gridWidth: gridWidth\n    });\n  }\n\n  resizeWidgetsToBase = (widgets, gridWidth) => {\n    for (let i = 0; i < widgets.length; i++) {\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\n      widgets[i].x = baseX;\n      widgets[i].width = baseWidth;\n    }\n  }\n\n  resizeWidgetsToActual = (widgets, gridWidth) => {\n    for (let i = 0; i < widgets.length; i++) {\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\n      widgets[i].x = actualX;\n      widgets[i].width = actualdWidth;\n    }\n  }\n\n  scaleToActual = (num, gridWidth) => {\n    return Math.round(num * gridWidth / BASE_WIDTH);\n  }\n\n  scaleToBase = (num, gridWidth) => {\n    return Math.round(num * BASE_WIDTH / gridWidth);\n  }\n\n  fetchWidgets = (dashboardId, width, filterParams) => {\n    if (dashboardId === null) {\n      return;\n    }\n    axios.get('/ws/widget/dashboard/' + dashboardId)\n      .then(res => {\n        const result = res.data;\n        this.setState({\n          widgets: result\n        }, () => {\n          this.resizeGrid(width, false);\n          this.queryWidgets(filterParams);\n        });\n      });\n  }\n\n  queryWidgets = (filterParams) => {\n    const params = filterParams === null ? [] : filterParams;\n    const { widgets } = this.state;\n    for (let i = 0; i < widgets.length; i++) {\n      const widget = widgets[i];\n      axios.post('/ws/jdbcquery/widget/' + widget.id, params)\n        .then(res => {\n          const result = res.data;\n          const index = widgets.findIndex(w => w.id === result.id);\n          const newWidgets = [...widgets];\n          newWidgets[index].queryResult = result;\n          this.setState({\n            widgets: newWidgets\n          });\n        });\n    }\n  }\n\n  handleCheckBoxChange = (name, isChecked) => {\n    this.setState({\n      [name]: isChecked\n    });\n  }\n\n  handleHeightChange = (event) => {\n    this.props.onHeightChange(event.target.value);\n  }\n\n  onBackgroundColorChange = (color) => {\n    this.props.onBackgroundColorChange(color);\n  }\n\n  saveWidgets = () => {\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\n    const { gridWidth } = this.state;\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\n    axios.post('/ws/widget/position', newWidgets)\n      .then(res => {\n      });\n  }\n\n  onWidgetMove = (widget) => {\n    const { widgets } = this.state;\n    const index = widgets.findIndex(w => w.id === widget.id);\n    const newWidgets = [...widgets];\n    newWidgets[index].x = widget.x;\n    newWidgets[index].y = widget.y;\n    newWidgets[index].width = widget.width;\n    newWidgets[index].height = widget.height;\n    this.setState({\n      widgets: newWidgets\n    });\n  }\n\n  confirmDelete = () => {\n    const { \n      objectToDelete\n    } = this.state;\n    const widgetId = objectToDelete;\n    axios.delete(`/ws/widget/${widgetId}`)\n      .then(res => {\n        const { widgets } = this.state;\n        const index = widgets.findIndex(w => w.id === widgetId);\n        const newWidgets = [...widgets];\n        newWidgets.splice(index, 1);\n        this.setState({\n          widgets: newWidgets\n        });\n        this.closeConfirmDeletionPanel();\n      });\n  }\n\n  openConfirmDeletionPanel = (widgetId) => {\n    this.setState({\n      objectToDelete: widgetId,\n      showConfirmDeletionPanel: true\n    });\n  }\n\n  closeConfirmDeletionPanel = () => {\n    this.setState({\n      objectToDelete: {},\n      showConfirmDeletionPanel: false\n    });\n  }\n\n  render() {\n    const { widgetViewWidth } = this.props;\n    const style = {\n      width: widgetViewWidth + 'px'\n    }\n\n    return (\n      <div className=\"dashboard-content-widget-panel\" style={style}>\n\n        {this.props.isEditMode ?\n        (\n          <div className=\"dashboard-attribute-edit-panel\">\n            <div className=\"inline-block\">Height:</div>\n            <input \n              type=\"text\" \n              name=\"height\" \n              value={this.props.height}\n              onChange={this.handleHeightChange} \n              className=\"inline-block\" \n              style={{width: '200px'}}\n              />\n\n            <div>\n              Background Color\n              <ColorPicker value={this.props.backgroundColor} onChange={this.onBackgroundColorChange} />\n            </div>\n\n            <Checkbox name=\"snapToGrid\" value=\"Snap to grid\" checked={this.state.snapToGrid} onChange={this.handleCheckBoxChange} />\n            <Checkbox name=\"showGridlines\" value=\"Show gridlines\" checked={this.state.showGridlines} onChange={this.handleCheckBoxChange} />\n  \n          </div>\n        ) : null}\n        \n        <GridLayout \n          width={this.state.gridWidth}\n          height={this.props.height}\n          backgroundColor={this.props.backgroundColor}\n          snapToGrid={this.state.snapToGrid}\n          showGridlines={this.state.showGridlines}\n          widgets={this.state.widgets}\n          isEditMode={this.props.isEditMode}\n          onWidgetMove={this.onWidgetMove}\n          onWidgetEdit={this.props.onWidgetEdit} \n          onWidgetRemove={this.openConfirmDeletionPanel} />\n        \n        <Modal \n          show={this.state.showConfirmDeletionPanel}\n          onClose={this.closeConfirmDeletionPanel}\n          modalClass={'small-modal-panel'}\n          title={'Confirm Deletion'} >\n          <div className=\"confirm-deletion-panel\">\n            Are you sure you want to delete this widget?\n          </div>\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\n        </Modal>\n      </div>\n    )\n  };\n}\n\nexport default WidgetViewPanel;","import React from 'react';\nimport './Tabs.css';\n\nclass Tabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n    };\n  }\n\n  componentDidMount() {\n    const activeTab = this.props.activeTab;\n    this.setState({\n      activeTab: activeTab\n    });\n  }\n\n  handleTabClick = (title) => {\n    this.setState({\n      activeTab: title\n    });\n  }\n\n  render() {\n    const {\n      children = []\n    } = this.props;\n\n    const {\n      activeTab\n    } = this.state;\n\n    const tabHeaders = [];\n    let tabContent = null;\n    for (let i = 0; i < children.length; i++) {\n      const title = children[i].props.title;\n      let active = '';\n      if (title === activeTab) {\n        active = 'tab-header-active';\n        tabContent = children[i].props.children;\n      }\n      \n      tabHeaders.push(\n        <li className={`tab-header-item ${active}`} key={i} onClick={() => this.handleTabClick(title)}>{title}</li>\n      );\n    }\n\n    return (\n      <div className=\"tab-container\">\n        <ul className=\"tab-header\">\n          {tabHeaders}\n        </ul>\n        <div className=\"tab-content\">\n          {tabContent}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Select extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    options: PropTypes.array.isRequired,\n    optionDisplay: PropTypes.string,\n    optionValue: PropTypes.string\n  };\n\n  handleOptionChange = (event) => {\n    const name = this.props.name;\n    const value = event.target.value;\n    this.props.onChange(name, value);\n  }\n  \n  render() {\n    const {\n      value,\n      options = [],\n      optionValue,\n      optionDisplay\n    } = this.props;\n\n    const optionList = [];\n    optionList.push(\n      <option value=\"\" key=\"\"></option>\n    );\n    options.forEach((option, index) => {\n      let value;\n      let display;\n      if (optionValue && optionDisplay) {\n        // The options contain objects.\n        value = option[optionValue];\n        display = option[optionDisplay];\n      } else {\n        // The options contain string or number.\n        value = option;\n        display = option;\n      }\n      \n      optionList.push(\n        <option value={value} key={index}>{display}</option>\n      )\n    });\n\n    return (\n      <select value={value} onChange={this.handleOptionChange}>\n        {optionList}\n      </select>\n    )\n  };\n}\n\nexport default Select;","\nimport React from 'react';\n\nimport AceEditor from 'react-ace';\n\nimport 'brace/mode/mysql';\nimport 'brace/theme/xcode';\n\nimport TableWidget from './TableWidget';\n\nimport axios from 'axios';\n\nimport * as webApi from '../api/WebApi';\nimport * as Util from '../api/Util';\nimport * as EchartsApi from '../api/EchartsApi';\nimport * as Constants from '../api/Constants';\n\nimport ReactEcharts from 'echarts-for-react';\n\nimport './WidgetEditPanel.css';\n\nimport Checkbox from './Checkbox';\nimport Tabs from '../components/Tabs';\nimport Select from '../components/Select';\n\nclass WidgetEditPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {\n      jdbcDataSources: [],\n      widgetId: null,\n      title: '',\n      sqlQuery: '',\n      jdbcDataSourceId: '',\n      queryResult: {},\n      chartType: Constants.TABLE,\n      style: {\n        showBorder: false\n      },\n      pieKey: '',\n      pieValue: '',\n      chartOption: {},\n      drills: [],\n      drillDashboards: [],\n      drillColumnName: '',\n      drillDashboardId: ''\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  fetchWidget = async (widgetId, dashboardId) => {\n    this.setState(this.initialState);\n\n    const jdbcDataSources = await webApi.fetchDataSources();\n    this.setState({ \n      jdbcDataSources: jdbcDataSources \n    });\n\n    axios.get('/ws/dashboard')\n      .then(res => {\n        const dashboards = res.data;\n        this.setState({ \n          drillDashboards: dashboards \n        });\n      });\n\n    if (widgetId === null) {\n      this.setState({\n        widgetId: null\n      })\n    } else {\n      this.setState({\n        widgetId: widgetId\n      })\n      axios.get('/ws/widget/' + widgetId)\n        .then(res => {\n          const result = res.data;\n          const { chartType } = result;\n          if (chartType === Constants.PIE) {\n            const {\n              pieKey,\n              pieValue\n            } = result.data;\n            this.setState({\n              pieKey: pieKey,\n              pieValue: pieValue\n            });\n          }\n\n          this.setState({\n            widgetId: widgetId,\n            title: result.title,\n            x: result.x,\n            y: result.y,\n            width: result.width,\n            height: result.height,\n            sqlQuery: result.sqlQuery,\n            chartType: result.chartType,\n            jdbcDataSourceId: result.jdbcDataSourceId,\n            drills: result.drillThrough,\n            style: result.style\n          }, () => {\n            this.runQuery();\n          });\n\n        });\n    }\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleCheckBoxChange = (name, isChecked) => {\n    if (name === 'showBorder') {\n      const style = {...this.state.style};\n      style.showBorder = isChecked;\n      this.setState({\n        style: style\n      });\n    }\n  }\n\n  handleAceEditorChange = (newValue) => {\n    this.setState({\n      sqlQuery: newValue\n    });\n  }\n\n  handleIntegerOptionChange = (name, value) => {\n    const intValue = parseInt(value, 10) || 0;\n    this.setState({ \n      [name]: intValue\n    });\n  }\n\n  handleOptionChange = (name, value) => {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  save = () => {\n    const {\n      widgetId,\n      title,\n      jdbcDataSourceId,\n      sqlQuery,\n      chartType,\n      drills,\n      style\n    } = this.state;\n\n    const widget = {\n      title: title,\n      dashboardId: this.props.dashboardId,\n      chartType: chartType,\n      jdbcDataSourceId: jdbcDataSourceId,\n      sqlQuery: sqlQuery,\n      drillThrough: drills,\n      style: style\n    }\n\n    if (chartType === Constants.TABLE) {\n\n    } else if (chartType === Constants.PIE) {\n      const {\n        pieKey,\n        pieValue\n      } = this.state;\n      widget.data = {\n        pieKey: pieKey,\n        pieValue: pieValue\n      }\n    }\n\n    if (widgetId === null) {\n      axios.post('/ws/widget', widget)\n        .then(res => {\n          this.props.onSave();\n        });\n    } else {\n      widget.id = widgetId;\n      axios.put('/ws/widget', widget)\n        .then(res => {\n          this.props.onSave();\n        });\n    }\n  }\n\n  runQuery = () => {\n    const queryRequest ={\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\n      sqlQuery: this.state.sqlQuery\n    };\n\n    axios.post('/ws/jdbcquery/query', queryRequest)\n      .then(res => {\n        const result = res.data;\n        this.setState({\n          queryResult: result\n        });\n      });\n  }\n\n  addDrillThrough = () => {\n    const { \n      drills,\n      drillColumnName,\n      drillDashboardId\n    } = this.state;\n    const filterId = this.state.filterId;\n    const index = drills.findIndex(d => d.columnName === drillColumnName);\n    if (index === -1) {\n      const newDrills = [...drills];\n      newDrills.push({\n        columnName: drillColumnName,\n        dashboardId: drillDashboardId\n      });\n      this.setState({\n        drills: newDrills\n      });\n    } \n  }\n\n  removeDrillThrough = (drill) => {\n    const { drills } = this.state;\n    const index = drills.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\n    if (index !== -1) {\n      const newDrills = [...drills];\n      newDrills.splice(index, 1);\n      this.setState({\n        drills: newDrills\n      });\n    } \n  }\n\n  generateChart = () => {\n    if (this.state.chartType === Constants.PIE) {\n      const { \n        pieKey, \n        pieValue, \n        queryResult = {}\n      } = this.state;\n      console.log(\"generateChart\", pieKey, pieValue);\n      const data = Util.jsonToArray(queryResult.data);\n      const chartOption = EchartsApi.getPieOption(data, pieKey, pieValue);\n      this.setState({\n        chartOption: chartOption\n      });\n    }\n  }\n\n  renderChartPreview = () => {\n    const { \n      chartType,\n      queryResult = {},\n    } = this.state;\n    const columns = queryResult.columns || [];\n\n    let chartPreview = (<div>NOT SUPPORTED</div>);\n    if (chartType === Constants.TABLE) {\n\n    } else if (chartType === Constants.PIE) {\n      const { \n        chartOption,\n        pieKey,\n        pieValue\n      } = this.state;\n\n      chartPreview = (\n        <div>\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\n          <div>Count \"value\" by \"key\"</div>\n          <label>Aggr Key (string)</label>\n          <Select\n            name={'pieKey'}\n            value={pieKey}\n            onChange={this.handleOptionChange}\n            options={columns}\n            optionDisplay={'name'}\n            optionValue={'name'}\n            />\n\n\n          <label>By Aggr Value (number)</label>\n          <Select\n            name={'pieValue'}\n            value={pieValue}\n            onChange={this.handleOptionChange}\n            options={columns}\n            optionDisplay={'name'}\n            optionValue={'name'}\n            />\n          <button onClick={this.generateChart}>Generete Chart</button>\n          <ReactEcharts \n            option={chartOption} \n            style={{height: '350px', width: '100%'}}  \n            className='react_for_echarts' />\n        </div>\n      );\n    }\n    return chartPreview;\n  }\n\n  render() {\n    const { \n      queryResult,\n      jdbcDataSources = [],\n      drills,\n      drillDashboards = []\n    } = this.state;\n\n    const data = Util.jsonToArray(queryResult.data);\n    const columns = queryResult.columns || [];\n    const error = queryResult.error;\n\n    const drillItems = (drills || []).map(drill =>\n      <div key={drill.columnName}>\n        <div>Column: {drill.columnName}</div>\n        <div>Dashboard: {drill.dashboardId}</div>\n        <button onClick={() => this.removeDrillThrough(drill)}>delete</button>\n      </div>\n    );\n\n    const columnItems = columns.map(col =>\n      <div key={col.name}>{col.name} {col.dataType}</div>\n    );\n\n    return (\n      <div>\n        <button className=\"button\" onClick={this.save}>Save</button>\n        \n        <div className=\"form-panel\">\n          <Tabs activeTab=\"basic\">\n            <div title=\"basic\">\n              <label>Title</label>\n              <input \n                type=\"text\" \n                name=\"title\" \n                value={this.state.title}\n                onChange={this.handleInputChange} \n              />\n\n              <Checkbox name=\"showBorder\" value=\"Show border\" checked={this.state.style.showBorder} onChange={this.handleCheckBoxChange} />\n            </div>\n\n            <div title=\"Query\">\n              <label>DataSource</label>\n              <Select\n                name={'jdbcDataSourceId'}\n                value={this.state.jdbcDataSourceId}\n                onChange={this.handleIntegerOptionChange}\n                options={jdbcDataSources}\n                optionDisplay={'name'}\n                optionValue={'id'}\n                />\n            \n              <label>SQL Query</label>\n              <AceEditor\n                style={{ marginTop: '8px' }}\n                value={this.state.sqlQuery}\n                mode=\"mysql\"\n                theme=\"xcode\"\n                name=\"blah2\"\n                onChange={this.handleAceEditorChange}\n                height={'300px'}\n                width={'100%'}\n                fontSize={15}\n                showPrintMargin={false}\n                showGutter={true}\n                highlightActiveLine={true}\n                setOptions={{\n                  showLineNumbers: true,\n                  tabSize: 2\n                }}\n              />\n\n              <div className=\"mt-3\">\n                <button className=\"button\" onClick={this.runQuery}>Run Query</button>\n              </div>\n\n              <label>Result</label>\n              <TableWidget\n                data={data}\n                columns={columns}\n                error={error}\n              />\n\n              <label>Columns Mapping</label>\n              <div>\n                {columnItems}\n              </div>\n            </div>\n\n            <div title=\"Chart\">\n              <label>Chart Options</label>\n              <Select\n                name={'chartType'}\n                value={this.state.chartType}\n                onChange={this.handleOptionChange}\n                options={Constants.CHART_TYPES}\n              />\n              <label>Preview</label>\n              {this.renderChartPreview()}  \n            </div>\n\n            <div title=\"Drill through\">\n              <label>Drill through</label>\n              <label>Column</label>\n              <Select\n                name={'drillColumnName'}\n                value={this.state.drillColumnName}\n                options={columns}\n                onChange={this.handleOptionChange}\n                optionDisplay={'name'}\n                optionValue={'name'}\n              />\n\n              <label>Dashboard</label>\n              <Select\n                name={'drillDashboardId'}\n                value={this.state.drillDashboardId}\n                options={drillDashboards}\n                onChange={this.handleIntegerOptionChange}\n                optionDisplay={'name'}\n                optionValue={'id'}\n              />\n              <div>\n                {drillItems}\n              </div>\n              <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\n            </div>\n          </Tabs>\n\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default WidgetEditPanel;","import React from 'react';\nimport AceEditor from 'react-ace';\n\nimport 'brace/mode/mysql';\nimport 'brace/theme/xcode';\n\nimport axios from 'axios';\n\nimport * as webApi from '../api/WebApi';\nimport * as Util from '../api/Util';\nimport * as Constants from '../api/Constants';\nimport TableWidget from './TableWidget';\nimport Select from './Select';\n\n\nimport './FilterEditPanel.css';\n\nclass FilterEditPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {\n      jdbcDataSources: [],\n      filterId: null,\n      title: '',\n      type: Constants.SLICER,\n      data: {},\n      sqlQuery: '',\n      jdbcDataSourceId: '',\n      queryResult: {},\n      param: '',\n    };\n  }\n\n  fetchFilter = async (filterId) => {\n    this.setState(this.initialState);\n\n    const jdbcDataSources = await webApi.fetchDataSources();\n    this.setState({ \n      jdbcDataSources: jdbcDataSources \n    });\n\n    if (filterId === null) {\n      this.setState({\n        filterId: null\n      })\n    } else {\n      axios.get('/ws/filter/' + filterId)\n        .then(res => {\n          const result = res.data;\n          const { \n            data,\n            type\n          } = result;\n          this.setState({\n            filterId: filterId,\n            title: result.title,\n            type: result.type,\n            jdbcDataSourceId: result.jdbcDataSourceId,\n            data: data\n          });\n\n          if (type === Constants.SLICER) {\n            this.setState({\n              sqlQuery: data.sqlQuery,\n              param: data.param\n            });\n          } else if (type === Constants.SINGLE_VALUE) {\n            this.setState({\n              sqlQuery: data.sqlQuery,\n              param: data.param\n            });\n          }\n        });\n      \n    }\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleAceEditorChange = (newValue) => {\n    this.setState({\n      sqlQuery: newValue\n    });\n  }\n\n  handleOptionChange = (name, value) => {\n    this.setState({ \n      [name]: value\n    });\n  }\n\n  handleIntegerOptionChange = (name, value) => {\n    const intValue = parseInt(value, 10) || 0;\n    this.setState({ \n      [name]: intValue\n    });\n  }\n\n  save = () => {\n    const {\n      filterId,\n      title,\n      type,\n      jdbcDataSourceId,\n      sqlQuery,\n      param\n    } = this.state;\n\n    const filter = {\n      title: title,\n      type: type,\n      dashboardId: this.props.dashboardId,\n      jdbcDataSourceId: jdbcDataSourceId\n    };\n\n    if (type === Constants.SLICER) {\n      filter.data = {\n        sqlQuery: sqlQuery,\n        param: param\n      }\n    } else if (type === Constants.SINGLE_VALUE) {\n      filter.data = {\n        useQuery: false,\n        sqlQuery: sqlQuery,\n        param: param,\n      }\n    }\n\n    if (filterId === null) {\n      axios.post('/ws/filter', filter)\n        .then(res => {\n          this.props.onSave();\n        });\n    } else {\n      filter.id = filterId;\n      axios.put('/ws/filter', filter)\n        .then(res => {\n          this.props.onSave();\n        });\n    }\n  }\n\n  runQuery = () => {\n    const queryRequest ={\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\n      sqlQuery: this.state.sqlQuery\n    };\n\n    axios.post('/ws/jdbcquery/query', queryRequest)\n      .then(res => {\n        const result = res.data;\n        const queryResult = result;\n        this.setState({\n          queryResult: queryResult\n        });\n      });\n  }\n\n  render() {\n\n    const { \n      queryResult = {},\n      jdbcDataSources = [],\n      type\n    } = this.state;\n\n    const data = Util.jsonToArray(queryResult.data);\n    const columns = queryResult.columns || [];\n    const error = queryResult.error;\n\n    const requireSql = type === Constants.SLICER;\n\n    return (\n      <div>\n        <button className=\"button\" onClick={this.save}>Save</button>\n        <button className=\"button\" onClick={this.runQuery}>Run</button>\n\n        <div className=\"form-panel\">\n          <label>Title</label>\n          <input \n            type=\"text\" \n            name=\"title\" \n            value={this.state.title}\n            onChange={this.handleInputChange} \n          />\n\n          <label>Type</label>\n          <Select\n            name={'type'} \n            value={this.state.type} \n            onChange={this.handleOptionChange}\n            options={Constants.FILTER_TYPES}\n          />\n\n          {\n            requireSql ?\n            (\n              <React.Fragment>\n                <label>DataSource</label>\n                <Select\n                  name={'jdbcDataSourceId'} \n                  value={this.state.jdbcDataSourceId} \n                  onChange={this.handleIntegerOptionChange}\n                  options={jdbcDataSources}\n                  optionDisplay={'name'}\n                  optionValue={'id'}\n                />\n    \n                <label>SQL Query</label>\n                <AceEditor\n                  style={{marginTop: '8px'}}\n                  value={this.state.sqlQuery}\n                  mode=\"mysql\"\n                  theme=\"xcode\"\n                  name=\"blah2\"\n                  onChange={this.handleAceEditorChange}\n                  height={'300px'}\n                  width={'100%'}\n                  fontSize={15}\n                  showPrintMargin={false}\n                  showGutter={true}\n                  highlightActiveLine={true}\n                  setOptions={{\n                    showLineNumbers: true,\n                    tabSize: 2\n                  }}\n                />\n\n                <label>Result</label>\n                <TableWidget\n                  data={data}\n                  columns={columns}\n                  error={error}\n                />\n              </React.Fragment>\n            ) : null\n          }\n\n          <label>Param</label>\n          <input \n            type=\"text\" \n            name=\"param\" \n            value={this.state.param}\n            onChange={this.handleInputChange} \n          />\n\n        </div>\n\n      </div>\n    )\n  };\n}\n\nexport default FilterEditPanel;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { withRouter } from 'react-router-dom';\n\nimport FilterViewPanel from '../components/FilterViewPanel';\nimport WidgetViewPanel from '../components/WidgetViewPanel';\nimport WidgetEditPanel from '../components/WidgetEditPanel';\nimport FilterEditPanel from '../components/FilterEditPanel';\n\nimport Modal from '../components/Modal';\n\nimport * as Constants from '../api/Constants';\n\nimport './Dashboard.css';\n\nimport * as webApi from '../api/WebApi';\nimport axios from 'axios';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass DashboardEditView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      showWidgetEditPanel: false,\n      showFilterEditPanel: false,\n      showFilterViewPanel: true,\n      showConfirmDeletionPanel: false,\n      objectToDelete: {},\n      isEditMode: false,\n      isReadOnly: false,\n      autoRefreshTimerId: '',\n      lastRefreshed: '',\n      refreshInterval: 15,\n      jdbcDataSourceOptions: [],\n      dashboardId: 0,\n      name: '',\n      style: {},\n      widgetViewWidth: 1000\n    }\n\n    this.filterViewPanel = React.createRef();\n    this.filterEditPanel = React.createRef();\n    this.widgetViewPanel = React.createRef();\n    this.widgetEditPanel = React.createRef();\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    const dashboardId = id !== undefined ? id : null;\n    console.log('DashboardEditView', dashboardId);\n\n    const url = this.props.location.search;\n    console.log('url', url);\n    const params = new URLSearchParams(url);\n    console.log('params', params);\n    for(let pair of params.entries()) {\n      console.log(pair[0]+ ', '+ pair[1]); \n    } \n\n    const pageWidth = this.getPageWidth();\n    const widgetViewWidth = this.state.showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\n    console.log('componentDidMount', pageWidth, widgetViewWidth);\n    this.setState({\n      pageWidth: pageWidth,\n      widgetViewWidth: widgetViewWidth\n    }, () => {\n      if (dashboardId === null) {\n        this.setState({\n          dashboardId: null\n        });\n      } else {\n        axios.get(`/ws/dashboard/${dashboardId}`)\n          .then(res => {\n            const result = res.data;\n            this.setState({\n              dashboardId: result.id,\n              name: result.name,\n              style: result.style\n            }, () => {\n              this.refresh();\n            });\n          });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    const { autoRefreshTimerId } = this.state;\n    if (autoRefreshTimerId) {\n      clearInterval(autoRefreshTimerId);\n    }\n  }\n\n  loadViewByDashboardName = () => {\n    const url = this.props.location.search;\n    const params = new URLSearchParams(url);\n    const dashboardName = params.get('name');\n    const showFilter = params.get('showFilter');\n\n    const showFilterViewPanel = showFilter == 'true';\n\n    const pageWidth = this.getPageWidth();\n    const widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\n    \n    this.setState({\n      pageWidth: pageWidth,\n      widgetViewWidth: widgetViewWidth,\n      isReadOnly: true,\n      name: dashboardName,\n      showFilterViewPanel: showFilterViewPanel\n    }, () => {\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\n        .then(res => {\n          const result = res.data;\n          this.setState({\n            dashboardId: result.id,\n            name: result.name,\n            style: result.style\n          }, () => {\n            this.refresh();\n          });\n        });\n    });\n  }\n\n  getPageWidth = () => {\n    const thisNode = ReactDOM.findDOMNode(this);\n    return thisNode.clientWidth - 40;\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  toggleAutoRefresh = () => {\n    const { autoRefreshTimerId } = this.state;\n    if (autoRefreshTimerId) {\n      clearInterval(autoRefreshTimerId);\n      this.setState({\n        autoRefreshTimerId: ''\n      });\n    } else {\n      const { refreshInterval } = this.state;\n      let interval = parseInt(refreshInterval, 10) || 15;\n      interval = interval < 1 ? 1 : interval;\n      const timerId = setInterval(() => {\n        this.filterViewPanel.current.applyFilters();\n        this.updateLastRefreshed();\n      }, interval * 1000);\n      this.setState({\n        autoRefreshTimerId: timerId\n      });\n    }\n  }\n\n  refresh = () => {\n    this.refreshWidgetView();\n    this.refreshFilterView();\n    this.updateLastRefreshed();\n  }\n\n  refreshFilterView = () => {\n    const { \n      dashboardId\n    } = this.state;\n    this.filterViewPanel.current.fetchFilters(dashboardId);\n  }\n\n  refreshWidgetView = () => {\n    const { \n      dashboardId,\n      widgetViewWidth\n    } = this.state;\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\n  } \n\n  updateLastRefreshed = () => {\n    const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\n    this.setState({\n      lastRefreshed: now\n    });\n  }\n\n  save = () => {\n    console.log('save');\n    const {\n      dashboardId,\n      name,\n      style\n    } = this.state;\n\n    const dashboard = {\n      id: dashboardId, \n      name: name,\n      style: style\n    };\n\n    axios.put('/ws/dashboard/', dashboard)\n      .then(res => {\n      });\n\n    this.widgetViewPanel.current.saveWidgets();\n\n    this.props.onDashboardSave(dashboardId);\n\n    this.setState({\n      isEditMode: false\n    });\n  }\n\n  edit = () => {\n    this.setState({\n      isEditMode: true\n    });\n  }\n\n  cancelEdit = () => {\n    this.setState({\n      isEditMode: false\n    });\n  }\n\n  onSaveWidget = () => {\n    this.setState({ \n      showWidgetEditPanel: false \n    });\n    // FIXME: not need to refresh. Just add to state.widgets\n    this.refreshWidgetView();\n  }\n\n  onSaveFilter = () => {\n    this.setState({ \n      showFilterEditPanel: false \n    });\n    // FIXME: not need to refresh. Just add to state.widgets\n    this.refreshFilterView();\n  }\n\n  toggleFilterViewPanel = () => {\n    const { \n      showFilterViewPanel\n    } = this.state;\n    this.resizePageLayout(!showFilterViewPanel);\n  }\n\n  resizePageLayout = (showFilterViewPanel) => {\n    const pageWidth = this.getPageWidth();;\n    let widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\n    this.widgetViewPanel.current.resizeGrid(widgetViewWidth, true);\n\n    this.setState({\n      showFilterViewPanel: showFilterViewPanel,\n      widgetViewWidth: widgetViewWidth\n    }); \n  }\n\n  openFilterEditPanel = (filterId) => {\n    this.filterEditPanel.current.fetchFilter(filterId);\n    this.setState({\n      showFilterEditPanel: true\n    });\n  }\n\n  openWidgetEditPanel = (widgetId) => {\n    const { dashboardId } = this.state;\n    this.widgetEditPanel.current.fetchWidget(widgetId, dashboardId);\n    this.setState({\n      showWidgetEditPanel: true\n    });\n  }\n\n  applyFilters = (filterParams) => {\n    this.widgetViewPanel.current.queryWidgets(filterParams);\n  }\n\n  fullScreen = () => {\n    const { name } = this.state;\n    const url = `/workspace/dashboard/view?name=${name}`;\n    window.open(url, '_blank');\n  }\n\n  onTableCellClick = () => {\n    this.props.history.push(`/workspace/dashboard/drill?name=&`);\n  }\n\n  onHeightChange = (height) => {\n    const style = {...this.state.style};\n    style.height = height;\n    this.setState({\n      style: style\n    });\n  }\n\n  onBackgroundColorChange = (color) => {\n    const style = {...this.state.style};\n    style.backgroundColor = color;\n    this.setState({\n      style: style\n    });\n  }\n\n  confirmDelete = () => {\n    const { \n      objectToDelete = {},\n    } = this.state;\n    const dashboardId = objectToDelete.id;\n    axios.delete(`/ws/dashboard/${dashboardId}`)\n      .then(res => {\n        this.props.onDashboardDelete(dashboardId);\n        this.closeConfirmDeletionPanel();\n      });\n  }\n\n  deleteDashboard = () => {\n    const { \n      dashboardId,\n      name\n    } = this.state;\n    const dashboard = {\n      id: dashboardId,\n      name: name\n    }\n    this.openConfirmDeletionPanel(dashboard);\n  }\n\n  openConfirmDeletionPanel = (dashboard) => {\n    this.setState({\n      objectToDelete: dashboard,\n      showConfirmDeletionPanel: true\n    });\n  }\n\n  closeConfirmDeletionPanel = () => {\n    this.setState({\n      objectToDelete: {},\n      showConfirmDeletionPanel: false\n    });\n  }\n\n  render() {\n    const {\n      autoRefreshTimerId,\n      lastRefreshed,\n      isEditMode,\n      isReadOnly\n    } = this.state;\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\n\n    let editButtonPanel;\n    let fullScreenButtonPanel = null;\n    const controlButtons = (\n      <React.Fragment>\n        <span className=\"mr-3\">Last refreshed: {lastRefreshed}</span>\n        {\n          autoRefreshStatus === 'OFF' ? \n          (\n            <input \n              type=\"text\" \n              name=\"refreshInterval\" \n              value={this.state.refreshInterval}\n              onChange={this.handleInputChange}\n              className=\"inline-block\" \n              style={{width: '50px'}}\n            />\n          ) : null\n        }\n        <button className=\"button square-button mr-3\" onClick={this.toggleAutoRefresh}>\n          {\n            autoRefreshStatus === 'ON' ? \n            (\n              <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\n            ) : \n            (\n              <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\n            )\n          }\n        </button>\n        \n        <button className=\"button mr-3\" onClick={this.toggleFilterViewPanel}>Show Filters</button>\n        <button className=\"button square-button\" onClick={this.refresh}>\n          <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\n        </button>\n      </React.Fragment>\n    );\n\n    if (!isReadOnly) {\n      if (isEditMode) {\n        editButtonPanel = (\n          <React.Fragment>\n            <button className=\"button mr-3\" onClick={this.cancelEdit}>Cancel</button>\n            <button className=\"button mr-3\" onClick={this.save}>Save</button>\n            <button className=\"button mr-3\" onClick={this.deleteDashboard}>Delete</button>\n            <button className=\"button mr-3\" onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\n          </React.Fragment>\n        );\n      } else {\n        editButtonPanel = (\n          <React.Fragment>\n            <button className=\"button square-button mr-3\" onClick={this.fullScreen}>\n              <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\n            </button>\n            <button className=\"button\" onClick={this.edit}>Edit</button>\n            {controlButtons}\n          </React.Fragment>\n        );\n      }\n    } else {\n      fullScreenButtonPanel = controlButtons;\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"dashboard-menu-panel row\">\n          <div className=\"float-left\">\n            {\n              isReadOnly || !isEditMode ?\n              (\n                <div className=\"dashboard-name\">\n                  {this.state.name}\n                </div>\n              ) :(\n                <input \n                  type=\"text\" \n                  name=\"name\" \n                  value={this.state.name}\n                  onChange={this.handleInputChange} \n                  className=\"dashboard-name\"\n                  />\n              )\n            }\n            \n          </div>\n          <div className=\"float-right\">\n            {fullScreenButtonPanel}\n            {editButtonPanel}\n          </div>\n        </div>\n\n        <WidgetViewPanel \n          ref={this.widgetViewPanel} \n          isEditMode={this.state.isEditMode}\n          widgetViewWidth={this.state.widgetViewWidth}\n          onWidgetEdit={this.openWidgetEditPanel}\n          onHeightChange={this.onHeightChange}\n          onBackgroundColorChange={this.onBackgroundColorChange}\n          {...this.state.style}\n        />\n        <FilterViewPanel \n          ref={this.filterViewPanel} \n          onEdit={this.openFilterEditPanel}\n          onApplyFilters={this.applyFilters}\n          isEditMode={this.state.isEditMode}\n          show={this.state.showFilterViewPanel}\n        />\n\n        <Modal \n          show={this.state.showWidgetEditPanel}\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\n          modalClass={'dashboard-edit-widget-dialog'} \n          title={'Widget Edit'} >\n          <WidgetEditPanel \n            ref={this.widgetEditPanel} \n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\n            dashboardId={this.state.dashboardId}\n            onSave={this.onSaveWidget}\n          />\n        </Modal>\n\n        <Modal \n          show={this.state.showFilterEditPanel}\n          onClose={() => this.setState({ showFilterEditPanel: false })}\n          modalClass={'dashboard-edit-filter-dialog'} \n          title={'Filter Edit'}>\n          <FilterEditPanel\n            ref={this.filterEditPanel}\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\n            dashboardId={this.state.dashboardId}\n            onSave={this.onSaveFilter}\n          />\n        </Modal>\n\n        <Modal \n          show={this.state.showConfirmDeletionPanel}\n          onClose={this.closeConfirmDeletionPanel}\n          modalClass={'small-modal-panel'}\n          title={'Confirm Deletion'} >\n          <div className=\"confirm-deletion-panel\">\n            Are you sure you want to delete {this.state.objectToDelete.name}?\n          </div>\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\n        </Modal>\n\n      </React.Fragment>\n    )\n  };\n}\n\nexport default withRouter(DashboardEditView);\n","\nimport React, { Component } from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport DashboardEditView from './DashboardEditView';\nimport Modal from '../components/Modal';\nimport './Dashboard.css';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as Constants from '../api/Constants';\n\nclass Dashboard extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchValue: '',\n      dashboards: [],\n      showEditPanel: false,\n      activeDashboardId: 0,\n      name: ''\n    }\n  }\n\n  componentDidMount() {\n    this.fetchBoards();\n  }\n\n  fetchBoards = () => {\n    axios.get('/ws/dashboard')\n      .then(res => {\n        const dashboards = res.data;\n        this.setState({ \n          dashboards: dashboards \n        });\n      });\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  closeEditPanel = () => {\n    this.setState({\n      showEditPanel: false,\n      name: ''\n    });\n  }\n\n  save = () => {\n    const {\n      name\n    } = this.state;\n\n    const dashboard = {\n      name: name,\n      style: {\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\n        backgroundColor: 'rgba(233, 235, 238, 1)'\n      }\n    };\n\n    axios.post('/ws/dashboard', dashboard)\n      .then(res => {\n        const dashboardId = res.data;\n        this.closeEditPanel();\n        this.fetchBoards();\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  view = (dashboardId) => {\n    this.setState({\n      activeDashboardId: dashboardId\n    });\n    this.props.history.push(`/workspace/dashboard/${dashboardId}`);\n  }\n\n  onDashboardSave = (dashboardId) => {\n    this.fetchBoards();\n  }\n\n  onDashboardDelete = (dashboardId) => {\n    this.fetchBoards();\n    this.setState({\n      activeDashboardId: 0\n    });\n    this.props.history.push('/workspace/dashboard');\n  }\n\n  render() {\n    const {\n      dashboards = [],\n      activeDashboardId,\n      searchValue\n    } = this.state;\n\n    \n    const dashboardRows = [];\n    for (let i = 0; i < dashboards.length; i++) {\n      const dashboard = dashboards[i];\n      const name = dashboard.name;\n      const menuActive = activeDashboardId === dashboard.id ? 'dashboard-menu-item-active' : '';\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\n        dashboardRows.push(\n          (\n            <div key={i} className={`dashboard-menu-item ellipsis ${menuActive}`} onClick={() => this.view(dashboard.id)}>\n              {name}\n            </div>\n          )\n        )\n      }\n    }\n\n    return (\n      <div>\n        <div className=\"dashboard-sidebar\">\n          <div style={{margin: '5px'}}>\n            <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\n              <FontAwesomeIcon icon=\"plus\" /> New\n            </button>\n            <input \n              type=\"text\" \n              name=\"searchValue\" \n              value={this.state.searchValue}\n              placeholder=\"Search...\"\n              onChange={this.handleInputChange} />\n          </div>\n          <div>\n            {dashboardRows}\n          </div>\n        </div>\n        <div className=\"dashboard-content\">\n          <Route \n            path=\"/workspace/dashboard/:id\" \n            render={(props) => <DashboardEditView key={props.match.params.id} onDashboardSave={this.onDashboardSave} onDashboardDelete={this.onDashboardDelete} />} \n            />\n        </div>\n\n        <Modal \n          show={this.state.showEditPanel}\n          onClose={() => this.setState({ showEditPanel: false })}\n          modalClass={'small-modal-panel'} \n          title={'New'} >\n          <div>\n            <label>Name</label>\n            <input \n              type=\"text\" \n              name=\"name\" \n              value={this.state.name}\n              onChange={this.handleInputChange} \n              />\n            <button className=\"button\" onClick={this.save}>Save</button>\n          </div>\n        </Modal>\n\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Dashboard);\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport DashboardEditView from './DashboardEditView';\n\nclass DashboardFullScreenView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  componentDidMount() {\n    this.dashboardEditView.loadViewByDashboardName();\n  }\n\n  render() {\n    return (\n      <div className=\"full-screen-view\">\n        <DashboardEditView wrappedComponentRef={comp => (this.dashboardEditView = comp)} />\n      </div>\n    )\n  };\n}\n\nexport default DashboardFullScreenView;\n","\nimport React from 'react';\nimport axios from 'axios';\nimport Modal from '../components/Modal';\nimport Select from '../components/Select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst SYS_ROLES = ['developer', 'viewer'];\n\nclass User extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      groups: [],\n      searchValue: '',\n      showEditPanel: false,\n      id: null,\n      username: '',\n      name: '',\n      tempPassword: '',\n      sysRole: '',\n      userGroupId: '',\n      userGroups: []\n    };\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleOptionChange = (name, value) => {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleIntegerOptionChange = (name, value) => {\n    const intValue = parseInt(value, 10) || 0;\n    this.setState({ \n      [name]: intValue\n    });\n  }\n\n  get initialEditPanelState() {\n    return {\n      id: null,\n      username: '',\n      name: '',\n      tempPassword: '',\n      sysRole: '',\n      userGroupId: '',\n      userGroups: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n    this.fetchGroups();\n  }\n\n  fetchUsers = () => {\n    axios.get('/ws/user')\n      .then(res => {\n        const users = res.data;\n        this.setState({ \n          users: users \n        });\n      });\n  }\n\n  fetchGroups = () => {\n    axios.get('/ws/group')\n      .then(res => {\n        const groups = res.data;\n        this.setState({ \n          groups: groups \n        });\n      });\n  }\n\n  openEditPanel = (user) => {\n    if (user !== null) {\n      this.setState({\n        id: user.id,\n        username: user.username,\n        name: user.name,\n        tempPassword: '',\n        sysRole: user.sysRole,\n        userGroups: user.userGroups\n      });\n    } else {\n      this.clearEditPanel();\n    }\n\n    this.setState({\n      userGroupId: '',\n      showEditPanel: true\n    }); \n  }\n\n  closeEditPanel = () => {\n    this.setState({\n      showEditPanel: false\n    });\n  }\n\n  clearEditPanel = () => {\n    this.setState(this.initialEditPanelState);\n  }\n\n  save = () => {\n    const {\n      id,\n      username,\n      name,\n      tempPassword,\n      sysRole,\n      userGroups\n    } = this.state;\n\n    let user = {\n      username: username,\n      name: name,\n      sysRole: sysRole,\n      userGroups: userGroups\n    };\n\n    if (id !== null) {\n      user.id = id;\n      \n      axios.put('/ws/user', user)\n        .then(res => {\n          this.clearEditPanel();\n          this.closeEditPanel();\n          this.fetchUsers();\n        });\n    } else {\n      user.tempPassword = tempPassword;\n\n      axios.post('/ws/user', user)\n        .then(res => {\n          this.clearEditPanel();\n          this.closeEditPanel();\n          this.fetchUsers();\n        });\n    } \n  }\n\n  delete = (id) => {\n    axios.delete('/ws/user/' + id)\n      .then(res => {\n        this.fetchUsers();\n      });\n  }\n\n  addUserGroup = () => {\n    const { \n      userGroupId,\n      userGroups = []\n    } = this.state;\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\n    if (index === -1) {\n      const newUserGroups = [...userGroups];\n      newUserGroups.push(userGroupId);\n      this.setState({\n        userGroups: newUserGroups\n      });\n    }\n  }\n\n  removeUserGroup = (groupId) => {\n    const { \n      userGroups = [] \n    } = this.state;\n    const index = userGroups.findIndex(id => id === groupId);\n    if (index !== -1) {\n      const newUserGroups = [...userGroups];\n      newUserGroups.splice(index, 1);\n      this.setState({\n        userGroups: newUserGroups\n      });\n    } \n  }\n\n  render() {\n    const { \n      users = [],\n      groups = [],\n      userGroups = []\n    } = this.state;\n\n    const userItems = users.map(user => \n      <div key={user.id} className=\"user-card\">\n        <p>\n          {user.username}\n          {user.name}\n          {user.sysRole}\n          <button className=\"button\" onClick={() => this.openEditPanel(user)}>update</button>\n          <button className=\"button\" onClick={() => this.delete(user.id)}>delete</button>\n        </p>\n      </div>\n    );\n\n    const userGroupItems = [];\n    for (let i = 0; i < userGroups.length; i++) {\n      const groupId = userGroups[i];\n      for (let j = 0; j < groups.length; j++) {\n        if (groupId === groups[j].id) {\n          userGroupItems.push(\n            (\n              <div key={groupId}>\n                <div>Group: {groups[j].name}</div>\n                <button className=\"button\" onClick={() => this.removeUserGroup(groupId)}>delete</button>\n              </div>\n            )\n          );\n          break;\n        }\n      }\n    }\n\n    return (\n      <div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"searchValue\"\n            value={this.state.searchValue}\n            onChange={this.handleInputChange}\n            placeholder=\"Search...\"\n            style={{width: '200px'}}\n          />\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\n            <FontAwesomeIcon icon=\"plus\" /> New User\n          </button>\n        </div>\n        <div className=\"row\">\n          {userItems}\n        </div>\n\n        <Modal \n          show={this.state.showEditPanel}\n          onClose={this.closeEditPanel}\n          modalClass={'small-modal-panel'} \n          title={'User'} >\n\n          <div className=\"form-panel\">\n            <label>Username</label>\n            <input \n              type=\"text\" \n              name=\"username\" \n              value={this.state.username}\n              onChange={this.handleInputChange} />\n\n            <label>Name</label>\n            <input \n              type=\"text\" \n              name=\"name\" \n              value={this.state.name}\n              onChange={this.handleInputChange} />\n\n            <label>Temp password</label>\n            <input \n              type=\"password\" \n              name=\"tempPassword\" \n              value={this.state.tempPassword}\n              onChange={this.handleInputChange} />\n            \n            <label>System Role</label>\n            <Select\n              name={'sysRole'}\n              value={this.state.sysRole}\n              onChange={this.handleOptionChange}\n              options={SYS_ROLES}\n            />\n            \n            <br/>\n            \n            <label>Groups</label>\n            <Select\n              name={'userGroupId'}\n              value={this.state.userGroupId}\n              onChange={this.handleIntegerOptionChange}\n              options={groups}\n              optionDisplay={'name'}\n              optionValue={'id'}\n            />\n            <button className=\"button\" onClick={this.addUserGroup}>Add</button>\n            <div>\n              {userGroupItems}\n            </div>\n\n            <button className=\"button\" className=\"button\" onClick={this.save}>Save</button>\n          </div>\n        </Modal>\n        \n      </div>\n    )\n  }\n}\n\nexport default User;","\nimport React from 'react';\nimport axios from 'axios';\nimport Modal from '../components/Modal';\nimport Select from '../components/Select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass Group extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      groups: [],\n      dashboards: [],\n      showEditPanel: false,\n      searchValue: '',\n      id: null,\n      name: '',\n      groupDashboardId: '',\n      groupDashboards: []\n    };\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleIntegerOptionChange = (name, value) => {\n    const intValue = parseInt(value, 10) || 0;\n    this.setState({ \n      [name]: intValue\n    });\n  }\n\n  get initialEditPanelState() {\n    return {\n      id: null,\n      name: '',\n      groupDashboardId: '',\n      groupDashboards: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchGroups();\n    this.fetchDashboards();\n  }\n\n  fetchGroups = () => {\n    axios.get('/ws/group')\n      .then(res => {\n        const groups = res.data;\n        this.setState({ \n          groups: groups \n        });\n      });\n  }\n\n  fetchDashboards = () => {\n    axios.get('/ws/dashboard')\n      .then(res => {\n        const dashboards = res.data;\n        this.setState({ \n          dashboards: dashboards \n        });\n      });\n  }\n\n  openEditPanel = (group) => {\n    if (group !== null) {\n      this.setState({\n        id: group.id,\n        name: group.name,\n        groupDashboards: group.groupDashboards\n      });\n    } else {\n      this.clearEditPanel();\n    }\n    this.setState({\n      groupDashboardId: '',\n      showEditPanel: true\n    }); \n  }\n\n  closeEditPanel = () => {\n    this.setState({\n      showEditPanel: false\n    });\n  }\n\n  clearEditPanel = () => {\n    this.setState(this.initialEditPanelState);\n  }\n\n  save = () => {\n    const {\n      id,\n      name,\n      groupDashboards\n    } = this.state;\n\n    let group = {\n      name: name,\n      groupDashboards: groupDashboards\n    };\n\n    if (id !== null) {\n      group.id = id;\n      axios.put('/ws/group', group)\n        .then(res => {\n          this.clearEditPanel();\n          this.fetchGroups();\n          this.closeEditPanel();\n        });\n    } else {\n      axios.post('/ws/group', group)\n        .then(res => {\n          this.clearEditPanel();\n          this.fetchGroups();\n          this.closeEditPanel();\n        });\n    } \n  }\n\n  delete = (id) => {\n    axios.delete('/ws/group/' + id)\n      .then(res => {\n        this.fetchGroups();\n      });\n  }\n\n  addGroupDashboard= () => {\n    const { \n      groupDashboardId,\n      groupDashboards = []\n    } = this.state;\n\n    console.log('addGroupDashboard', groupDashboardId);\n    console.log('addGroupDashboard', groupDashboards);\n\n    if (groupDashboardId) {\n      const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\n      if (index === -1) {\n        const newGroupDashboards = [...groupDashboards];\n        newGroupDashboards.push(groupDashboardId);\n        this.setState({\n          groupDashboards: newGroupDashboards\n        });\n      }\n    }\n  }\n\n  removeGroupDashboard = (dashboardId) => {\n    const { \n      groupDashboards = [] \n    } = this.state;\n    const index = groupDashboards.findIndex(id => id === dashboardId);\n    if (index !== -1) {\n      const newGroupDashboards = [...groupDashboards];\n      newGroupDashboards.splice(index, 1);\n      this.setState({\n        groupDashboards: newGroupDashboards\n      });\n    } \n  }\n\n  render() {\n    const { \n      id,\n      groups = [],\n      dashboards = [],\n      groupDashboards = []\n    } = this.state;\n\n    const mode = id === null ? 'New' : 'Edit';\n\n    const groupItems = groups.map(group => \n      <div key={group.id} className=\"group-card\">\n        <p>\n          {group.name}\n          <button className=\"button\" onClick={() => this.openEditPanel(group)}>update</button>\n          <button className=\"button\" onClick={() => this.delete(group.id)}>delete</button>\n        </p>\n      </div>\n    );\n\n    const groupDashboardItems = [];\n    for (let i = 0; i < groupDashboards.length; i++) {\n      const dashboardId = groupDashboards[i];\n      for (let j = 0; j < dashboards.length; j++) {\n        if (dashboardId === dashboards[j].id) {\n          groupDashboardItems.push(\n            (\n              <div key={dashboardId}>\n                <div>Name: {dashboards[j].name}</div>\n                <button className=\"button\" onClick={() => this.removeGroupDashboard(dashboardId)}>delete</button>\n              </div>\n            )\n          );\n          break;\n        }\n      }\n    }\n\n    return (\n      <div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"searchValue\"\n            value={this.state.searchValue}\n            onChange={this.handleInputChange}\n            placeholder=\"Search...\"\n            style={{width: '200px'}}\n            />\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\n            <FontAwesomeIcon icon=\"plus\" /> New Group\n          </button>\n        </div>\n        <div className=\"row\">\n          {groupItems}\n        </div>\n\n        <Modal \n          show={this.state.showEditPanel}\n          onClose={this.closeEditPanel}\n          modalClass={'small-modal-panel'} \n          title={mode} >\n\n          <div className=\"form-panel\">\n            <label>Name</label>\n            <input \n              type=\"text\" \n              name=\"name\" \n              value={this.state.name}\n              onChange={this.handleInputChange} />\n            \n            <label>Dashboards</label>\n            <Select\n              name={'groupDashboardId'}\n              value={this.state.groupDashboardId}\n              onChange={this.handleIntegerOptionChange}\n              options={dashboards}\n              optionDisplay={'name'}\n              optionValue={'id'}\n            />\n            <button className=\"button\" onClick={this.addGroupDashboard}>Add</button>\n            <div>\n              {groupDashboardItems}\n            </div>\n            \n            <button className=\"button\" onClick={this.save}>Save</button>\n          </div>\n        </Modal>\n        \n      </div>\n    )\n  }\n}\n\nexport default Group;","\nimport React from 'react';\n\nimport User from './User';\nimport Group from './Group';\nimport Tabs from '../components/Tabs';\n\nclass UserManagement extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Tabs activeTab=\"Group\">\n          <div title=\"Group\">\n            <Group />\n          </div>\n          <div title=\"User\">\n            <User />\n          </div>\n        </Tabs>\n      </React.Fragment>\n    )\n  };\n}\n\nexport default UserManagement;","\nimport React from 'react';\nimport axios from 'axios';\n\nclass Account extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showUpdatePassword: false,\n      id: null,\n      username: '',\n      name: '',\n      sysRole: '',\n      apiKey: '',\n      password: '',\n      confirmedPassword: ''\n    };\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  fetchUser = () => {\n    axios.get('/ws/user/account')\n      .then(res => {\n        const result = res.data;\n      });\n  }\n\n  generateApiKey = () => {\n  }\n\n  save = () => {\n    const {\n      showUpdatePassword,\n      name,\n      password,\n      confirmedPassword\n    } = this.state;\n\n    const user = {\n      name: name\n    }\n\n    if (showUpdatePassword) {\n      if (password !== confirmedPassword) {\n        alert('confirm password');\n        return;\n      }\n      \n      user.password = password;\n    }\n  }\n\n  toggleUpdatePassword = () => {\n    this.setState(prevState => ({\n      showUpdatePassword: !prevState.showUpdatePassword\n    })); \n  }\n\n  render() {\n    const {\n      showUpdatePassword,\n      username,\n      sysRole,\n      apiKey\n    } = this.state;\n\n    return (\n      <div>\n        <div>Account</div>\n        <div className=\"form-panel\">   \n          <label>Username</label>\n          <div>{username}</div>\n\n          <label>Name</label>\n          <input \n            type=\"text\" \n            name=\"name\" \n            value={this.state.name}\n            onChange={this.handleInputChange} />\n\n          <label>System Role</label>\n          <div>{sysRole}</div>\n\n          <label>API Key</label>\n          <div>{apiKey}</div>\n          <button className=\"button\" onClick={this.generateApiKey}>Generate new API Key</button>\n          <br/>\n\n          <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\n          {\n            showUpdatePassword ?\n            (\n              <React.Fragment>\n                <br/>\n                <label>Password</label>\n                <input \n                  type=\"password\" \n                  name=\"password\" \n                  value={this.state.password}\n                  onChange={this.handleInputChange} />\n                <label>Confirm Password</label>\n                <input \n                  type=\"password\" \n                  name=\"confirmedPassword\" \n                  value={this.state.confirmedPassword}\n                  onChange={this.handleInputChange} />\n              </React.Fragment>\n            ) : null\n          }\n\n          <br/>\n          <button className=\"button\" onClick={this.save}>Save</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Account;","import React from 'react';\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\nimport axios from 'axios';\nimport DataSource from './DataSource';\nimport Dashboard from './Dashboard';\nimport DashboardFullScreenView from './DashboardFullScreenView';\nimport UserManagement from './UserManagement';\nimport Account from './Account';\n\nimport Toast from '../components/Toast';\n\nimport * as Constants from '../api/Constants';\nimport './Workspace.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst MENU_ITEMS = [\n  {\n    link: '/workspace/dashboard',\n    value: 'Dashboard',\n    icon: 'chalkboard',\n  }, \n  {\n    link: '/workspace/datasource',\n    value: 'Data source',\n    icon: 'database'\n  }, \n  {\n    link: '/workspace/usermanagement',\n    value: 'User Management',\n    icon: 'users-cog'\n  }\n];\n\nconst ACCOUNT_MENU_LINK = '/workspace/account';\n\nclass Workspace extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentMenuLink: '/workspace/dashboard'\n    }\n  }\n\n  componentDidMount() {\n    const pathname = this.props.location.pathname;\n    this.setState({\n      currentMenuLink: pathname,\n    });\n  }\n\n  handleMenuClick = (menuLink) => {\n    this.setState({\n      currentMenuLink: menuLink\n    });\n  }\n\n  logout = () => {\n    axios.get('/auth/logout')\n      .then(res => {\n        this.props.history.push('/login');\n      });\n  }\n\n  render() {\n    const {\n      currentMenuLink,\n    } = this.state;\n\n    const {\n      username,\n      sysRole\n    } = this.props;\n\n    console.log('Workspace - render', sysRole);\n\n    let menuItems = [];\n    let menuList = [];\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\n      menuList = MENU_ITEMS.filter(m => m.link === '/workspace/dashboard');\n    } else {\n      menuList = MENU_ITEMS;\n    }\n    for (let i = 0; i < menuList.length; i++) {\n      const menu = menuList[i];\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\n      menuItems.push(\n        (\n          <li key={menu.link} className={active}>\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\n            </Link>\n          </li>\n        )\n      );\n    }\n\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\n\n    return (\n      <React.Fragment>\n        <div className=\"workspace-nav\">  \n          <div className=\"workspace-name\">Poli</div>\n          <ul className=\"workspace-nav-menu\">\n            {menuItems}\n          </ul>\n          <div className=\"workspace-account-menu\">\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\n                <span className=\"workspace-nav-menu-text\">{username}</span>\n              </Link>\n            </div>\n            <div className=\"workspace-logout-button inline-block\" onClick={this.logout}>\n              <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\n            </div>\n          </div>\n        </div>\n        <div className=\"workspace-content\">\n          <Switch>\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\n            <Route exact path=\"/workspace/dashboard/view\" component={DashboardFullScreenView} />\n            <Route exact path=\"/workspace/account\" component={Account} />\n            <Route exact path=\"/workspace/usermanagement\" component={UserManagement} />\n            <Route path=\"/workspace/dashboard\" component={Dashboard} />\n          </Switch>\n        </div>\n        <Toast />\n      </React.Fragment>\n    );\n  }\n}\nexport default withRouter(Workspace);\n","\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass PageNotFound extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <h1>PageNotFound</h1>\n        <Link to=\"/login\">Login</Link>\n      </React.Fragment>\n    )\n  };\n}\n\nexport default PageNotFound;","import React from 'react';\nimport { Route, Switch, Redirect, withRouter, Component } from \"react-router-dom\";\nimport axios from 'axios';\nimport './App.css';\n\nimport Login from './views/Login';\nimport ChangeTempPassword from './views/ChangeTempPassword';\nimport Workspace from './views/Workspace';\nimport PageNotFound from './views/PageNotFound';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { \n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\n  faFileExport, faFileCsv, faCircleNotch\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\n  faFileExport, faFileCsv, faCircleNotch\n);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      sysRole: '',\n      isAuthorizing: false\n    }\n  }\n\n  componentDidMount() {\n    const {\n      sysRole = ''\n    } = this.state;\n\n    let isAuthenticated = false;\n    if (sysRole) {\n      isAuthenticated = true;\n    }\n\n    console.log('App - componentDidMount',isAuthenticated);\n\n    if (!isAuthenticated) {\n      console.log('App - componentDidMount', 'cookie');\n      this.setState({\n        isAuthorizing: true\n      }, () => {\n        axios.post('/auth/login/cookie')\n          .then(res => {\n            const loginResponse = res.data;\n            if (loginResponse.error) {\n              this.setState({\n                sysRole: '',\n                isAuthorizing: false\n              }, () => {\n                this.props.history.push('/login');\n              });\n            } else {\n              this.onLoginSuccess(loginResponse);\n            }\n          });\n      });\n      \n    }\n  }\n\n  onLoginSuccess = (loginResponse = {}) => {\n    console.log('App - onLoginSuccess', loginResponse);\n    if (loginResponse.isTempPassword) {\n      this.props.history.push('/changepassword');\n    } else {\n      this.setState({\n        username: loginResponse.username,\n        sysRole: loginResponse.sysRole,\n        isAuthorizing: false\n      }, () => {\n        this.props.history.push('/workspace/dashboard');\n      });\n    }\n  }\n   \n  render() {\n    const {\n      username,\n      sysRole,\n      isAuthorizing\n    } = this.state;\n\n    let isAuthenticated = false;\n    if (sysRole) {\n      isAuthenticated = true;\n    }\n    console.log('App - render', sysRole, isAuthenticated);\n\n    if (isAuthorizing) {\n      return (\n        <FontAwesomeIcon icon='cicle-north' spin={true} size=\"3x\" />\n      )\n    }\n    \n    return (\n      <div className=\"app\">\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/login\" render={() => <Login onLoginSuccess={this.onLoginSuccess} />} />\n          <Route path=\"/changepassword\" component={ChangeTempPassword} />\n          <PrivateRoute \n            authenticated={isAuthenticated} \n            path='/workspace' \n            component={Workspace} \n            username={username}\n            sysRole={sysRole} \n          />\n          <Route component={PageNotFound} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\n  return (\n    <Route\n      {...rest}\n      render={\n        (props) => authenticated === true\n        ? <Component {...props} {...rest}/>\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\n      }\n    />\n  )\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/poli\">\n    <App />\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}