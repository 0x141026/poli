{"version":3,"sources":["views/Login.js","api/WebApi.js","components/Modal.js","views/DataSource.js","components/Slicer.js","api/Util.js","components/NumberRange.js","api/Constants.js","components/FilterViewPanel.js","components/ColorPicker.js","components/GridDraggable.js","components/GridResizable.js","api/EchartsApi.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/SingleTest.js","views/DashboardFullScreenView.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","tryLogin","axios","post","then","res","data","login","preventDefault","_this$state","state","username","password","user","history","push","errorMsg","react_default","a","createElement","Fragment","className","type","onChange","onClick","React","Component","withRouter","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","fetchFiltersByDashboardId","_ref3","_callee3","dashboardId","_context3","concat","_x2","_ref4","_callee4","url","_context4","_x3","Modal","modalStatus","show","modalClass","title","onClose","children","DataSource","save","showUpdatePassword","id","connectionUrl","ds","ping","put","closeEditPanel","delete","console","log","clearEditPanel","initialState","openEditPanel","showEditPanel","openDeletePanel","toggleUpdatePassword","prevState","jdbcDataSources","webApi","mode","_this2","_this$state2","jdbcDataSourceItems","map","index","key","passwordInput","placeholder","src_components_Modal","row","Slicer","isSelectAll","searchValue","handleChange","isChecked","checked","newCheckBoxes","toConsumableArray","checkBoxes","findIndex","x","filterId","toggleSelectAll","newIsSelectAll","i","length","handleSearchValueChange","result","indexOf","checkBoxItems","undefined","box","isArrayEmpty","array","Array","isArray","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","DEFAULT_FILTER_VIEW_WIDTH","FilterViewPanel","fetchFilters","filters","queryFilters","filter","Constants","queryRequest","queryResult","JSON","parse","f","newFilters","Util","values","_i2","val","_i3","renderFilterPanel","filterPanel","_loop","filterComponent","components_Slicer","onSlicerChange","onSingleValueChange","isEditMode","edit","remove","onEdit","splice","applyFilters","filterParams","filterParam","paramValues","j","checkBox","remark","param","onApplyFilters","style","width","ColorPicker","displayColorPicker","color","r","g","b","handleClick","handleClose","rgb","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","WIDGET_BORDER","GridDraggable","onMouseDown","gridItemNode","ReactDOM","findDOMNode","assertThisInitialized","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","class","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","CHART_COLORS","getPieOption","legend","series","tooltip","orient","center","radius","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","column","instance","e","handleOriginal","header","Header","drills","widgetDrillThrough","d","columnName","onChartClick","echarts","onChartLegendselectchanged","echart","renderWidgetContent","onChartEvents","click","legendselectchanged","_this$props","chartType","drillThrough","widgetItem","headers","obj","keys","_i","accessor","es","columns","minRows","showPagination","getTdProps","_this$props$data","chartOption","EchartsApi","echarts_for_react_lib_default","option","onEvents","styles","marginRight","components_GridDraggable","components_GridResizable","GridLayout","showGridlines","backgroundSize","backgroundImage","boxItems","widgets","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","isResizeToBase","preGridWidth","gridWidth","newWidgets","resizeWidgetsToBase","resizeWidgetsToActual","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryWidgets","params","w","saveWidgets","stringify","widgetViewWidth","components_ColorPicker","src_components_GridLayout","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","jdbcDataSourceId","sqlQuery","_x","handleAceEditorChange","newValue","handleDataSourceChange","handleChartTypeChange","handleColumnChange","handleDrillColumnChange","drillColumnName","handleDrillDashboardChange","drillDashboardId","aggrKey","aggrValue","onSave","runQuery","queryResultData","addDrillThrough","_this$state3","newDrills","removeDrillThrough","drill","generateChart","_this$state4","renderChartPreview","_this$state5","columnOptions","col","chartPreview","queryResultItem","_this$state6","dataSourceOptions","chartOptionList","o","dashboardOptions","dash","drillItems","columnItems","dataType","react_ace_lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","FilterEditPanel","fetchFilter","handleTypeChange","useQuery","typeOptions","t","DashboardEditView","loadViewByDashboardName","dashboardName","pageWidth","getPageWidth","showFilterViewPanel","isReadOnly","refresh","toggleAutoRefresh","autoRefreshTimerId","clearInterval","timerId","setInterval","refreshWidgetView","now","Date","toTimeString","replace","lastRefreshed","refreshFilterView","filterViewPanel","current","widgetViewPanel","dashboard","onSaveDashboard","cancelEdit","onSaveWidget","showWidgetEditPanel","onSaveFilter","showFilterEditPanel","toggleFilterViewPanel","resizePageLayout","openFilterEditPanel","filterEditPanel","openWidgetEditPanel","widgetEditPanel","fullScreen","window","open","onTableCellClick","jdbcDataSourceOptions","createRef","match","location","search","URLSearchParams","editButtonPanel","fullScreenButtonPanel","_this3","autoRefreshStatus","components_WidgetViewPanel","ref","components_FilterViewPanel","components_WidgetEditPanel","components_FilterEditPanel","Dashboard","fetchBoards","view","dashboardRows","Route","path","render","views_DashboardEditView","SingleTest","getOption","text","trigger","toolbox","feature","saveAsImage","grid","containLabel","xAxis","boundaryGap","yAxis","stack","areaStyle","normal","DashboardFullScreenView","dashboardEditView","wrappedComponentRef","comp","SYS_ROLES","User","handleOptionChange","fetchUsers","users","fetchGroups","groups","tempPassword","sysRole","userGroups","initialEditPanelState","addUserGroup","userGroupId","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_this$state3$users","_this$state3$groups","_this$state3$userGrou","userItems","groupOptions","group","sysRoleOptions","groupName","userGroupItems","Group","fetchDashboards","groupDashboards","addGroupDashboard","groupDashboardId","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","MENU_ITEMS","link","icon","UserManagement","handleMenuClick","menuLink","currentMenuLink","menuItems","menu","active","Link","to","Switch","component","Account","fetchUser","generateApiKey","confirmedPassword","alert","apiKey","Workspace","menuList","m","exact","PageNotFound","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","pathname","from","App","isAuthenticated","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.77449411.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tryLogin();\r\n  }\r\n\r\n  tryLogin = () => {\r\n    axios.post('/auth/login/cookie')\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  login = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password'\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.history.push('/workspace/dashboard');\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div>Poli</div>\r\n          <label>{this.state.errorMsg}</label>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n              <label>Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} />\r\n            </div>\r\n            <button onClick={this.login}>Login</button>\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n} \r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const modalStatus = this.props.show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={this.props.modalClass}>\r\n          <div>\r\n            {this.props.title}\r\n          </div>\r\n          <button onClick={() => this.props.onClose()}>Close</button>\r\n          <div className='modal-body'>\r\n            {this.props.children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      username: '',\r\n      password: '',\r\n      type: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      username: '',\r\n      password: '',\r\n      type: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Fetch all datasources\r\n    this.fetchDataSources();\r\n    \r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      username,\r\n      password,\r\n      name,\r\n      type,\r\n      ping,\r\n    } = this.state;\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      username: username,\r\n      name: name,\r\n      type: type,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.fetchDataSources();\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      // New\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    console.log('delete', id);\r\n    axios.delete('/ws/jdbcdatasource/' + id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n      });\r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        console.log('ping', res.data);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        type: ds.type,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  openDeletePanel = () => {\r\n\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      id,\r\n      jdbcDataSources\r\n    } = this.state;\r\n\r\n    const jdbcDataSourceItems = jdbcDataSources.map((ds, index) => \r\n      <div key={index} className=\"datasource-panel\">\r\n        <p>\r\n          {ds.name}\r\n          {ds.connectionUrl}\r\n          {ds.username}\r\n          {ds.ping}\r\n          <button onClick={() => this.openEditPanel(ds)}>update</button>\r\n          <button onClick={() => this.delete(ds.id)}>delete</button>\r\n          <button onClick={() => this.ping(ds.id)}>ping</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    let mode;\r\n    let passwordInput = (\r\n      <div>\r\n        <label>Password</label>\r\n        <input \r\n          type=\"password\" \r\n          name=\"password\" \r\n          value={this.state.password}\r\n          onChange={this.handleInputChange} />\r\n      </div>\r\n    );\r\n    if (id === null) {\r\n      mode = 'New';\r\n    } else {\r\n      mode = 'Update';\r\n      if (!showUpdatePassword) {\r\n        passwordInput = (\r\n          <button onClick={this.toggleUpdatePassword}>Update password</button>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Data Sources</h1>\r\n        <input\r\n          type=\"text\"\r\n          name=\"searchValue\"\r\n          placeholder=\"Data source name...\"\r\n          />\r\n        <div className=\"row\">\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n        <button onClick={() => this.openEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'lg-modal-panel'} >\r\n\r\n          <div>\r\n            <h3>{mode}</h3>\r\n            <form>\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Connection Url</label>\r\n              <textarea\r\n                row=\"3\"\r\n                type=\"text\" \r\n                name=\"connectionUrl\" \r\n                value={this.state.connectionUrl}\r\n                onChange={this.handleInputChange} >\r\n              </textarea>\r\n\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n              \r\n              {passwordInput}\r\n              <br/>\r\n\r\n              <label>Type</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"type\" \r\n                value={this.state.type}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Ping</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"ping\" \r\n                value={this.state.ping}\r\n                onChange={this.handleInputChange} />\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","import React from 'react';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n    searchValue: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const isChecked = target.checked;\r\n\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    if (searchValue) {\r\n      const result = [];\r\n      const { checkBoxes } = this.props;\r\n      for (let i = 0; i < checkBoxes.length; i++) {\r\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\r\n          result.push(checkBoxes[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n\r\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\r\n    // TODO: If value is too long, add.. to the end.\r\n  }\r\n\r\n  render() {\r\n    const checkBoxes = this.props.checkBoxes;\r\n    let checkBoxItems = [];\r\n    if (checkBoxes !== undefined && checkBoxes.length !== 0) {\r\n      checkBoxItems = this.props.checkBoxes.map((box, index) => \r\n        <div key={index}>\r\n          <input \r\n            type=\"checkbox\" \r\n            name={box.value} \r\n            value={box.value} \r\n            checked={box.isChecked} \r\n            onChange={this.handleChange}\r\n            />\r\n            {box.value}\r\n          <br/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button onClick={this.toggleSelectAll}>Toggle Select All {this.state.isSelectAll}</button>\r\n        <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.searchValue}\r\n            onChange={this.handleSearchValueChange} \r\n          />\r\n        \r\n        <div>\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};","import React from 'react';\r\n\r\nclass NumberRange extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        min\r\n        <input type=\"number\" name=\"min\" />\r\n        max\r\n        <input type=\"number\" name=\"max\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberRange;","/**\r\n * Constants\r\n */\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;","import React, { Component } from 'react';\r\nimport Slicer from \"./Slicer\";\r\nimport NumberRange from \"./NumberRange\";\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nclass FilterViewPanel extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      dashboardId: null,\r\n      filters: []\r\n    };\r\n  }\r\n\r\n  fetchFilters = (dashboardId) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      dashboardId: dashboardId\r\n    })\r\n\r\n    axios.get('/ws/filter/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          filters: result,\r\n        }, this.queryFilters);\r\n      });\r\n  }\r\n\r\n  queryFilters = () => {\r\n    const { filters } = this.state;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === Constants.SLICER) {\r\n        const queryRequest = filter.data;\r\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\r\n          .then(res => {\r\n            const result = res.data;\r\n            const queryResult = JSON.parse(result.data);\r\n\r\n            const index = filters.findIndex(f => f.id === result.id);\r\n            const newFilters = [...this.state.filters];\r\n            newFilters[index].queryResult = queryResult;\r\n            const type = newFilters[index].type;\r\n            if (type === Constants.SLICER) {\r\n              const checkBoxes = [];\r\n              if (!Util.isArrayEmpty(queryResult)) {\r\n                for (let i = 0; i < queryResult.length; i++) {\r\n                  const values = Object.values(queryResult[i]);\r\n                  for (const val of values) {\r\n                    checkBoxes.push({\r\n                      value: val,\r\n                      isChecked: false\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n\r\n              newFilters[index].checkBoxes = checkBoxes;\r\n            } else if (type === Constants.SINGLE_VALUE) {\r\n              const values = Object.values(queryResult);\r\n              let value = '';\r\n              for (const val of values) {\r\n                value = val;\r\n                break;\r\n              }\r\n              newFilters[index].value = value;\r\n            }\r\n\r\n            this.setState({\r\n              filters: newFilters\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderFilterPanel = () => {\r\n    const filterPanel = [];\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      let filterComponent = (<div>NONE</div>);\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        filterComponent = (\r\n          <Slicer \r\n            key={i} \r\n            filterId={filter.id} \r\n            checkBoxes={checkBoxes} \r\n            onChange={this.onSlicerChange} \r\n          />\r\n        );\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterComponent = (\r\n          <input \r\n            type=\"text\"  \r\n            value={filter.value}\r\n            onChange={(event) => this.onSingleValueChange(filter.id, event)} \r\n          />\r\n        );\r\n      }\r\n\r\n      filterPanel.push(\r\n          (\r\n            <div className=\"filter-card\">\r\n              <div className=\"filter-card-title\">\r\n                {filter.name}\r\n\r\n                { this.props.isEditMode ? \r\n                  (\r\n                    <div className=\"icon-button-group\">\r\n                      <div className=\"icon-btn\" onClick={() => this.edit(filter.id)}>\r\n                        <i className=\"fas fa-edit fa-fw\"></i>\r\n                      </div>\r\n                      <div className=\"icon-btn\" onClick={() => this.remove(filter.id)}>\r\n                        <i className=\"fas fa-trash-alt fa-fw\"></i>\r\n                      </div>\r\n                    </div>\r\n                  ): null \r\n                }\r\n              </div>\r\n              <div>\r\n                {filterComponent}\r\n              </div>\r\n            </div>\r\n          )\r\n        );\r\n    }\r\n    return filterPanel;\r\n  }\r\n\r\n  edit = (filterId) => {\r\n    this.props.onEdit(filterId);\r\n  }\r\n\r\n  remove = (filterId) => {\r\n    axios.delete('/ws/filter/' + filterId)\r\n      .then(res => {\r\n        const index = this.state.filters.findIndex(f => f.id === filterId);\r\n        const newFilters = [...this.state.filters];\r\n        newFilters.splice(index, 1);\r\n        this.setState({\r\n          filters: newFilters\r\n        });\r\n      });\r\n  }\r\n\r\n  onSlicerChange = (filterId, checkBoxes) => {\r\n    const index = this.state.filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...this.state.filters];\r\n    newFilters[index].checkBoxes = [...checkBoxes];\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n\r\n    // TODO: select all.\r\n    // const isSelectAll = checked.length === checkBoxes.length;    \r\n  }\r\n\r\n  onSingleValueChange = (filterId, event) => {\r\n    const { filters } = this.state;\r\n    const value = event.target.value;\r\n    const index = filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...filters];\r\n    newFilters[index].value = value;\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n  }\r\n\r\n  applyFilters = () => {\r\n    console.log('applyFilters');\r\n    const { filters } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      const filterParam = {};\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        const paramValues = [];\r\n        for (let j = 0; j < checkBoxes.length; j++) {\r\n          const checkBox = checkBoxes[j];\r\n          if (checkBox.isChecked) {\r\n            paramValues.push(checkBox.value);\r\n          }\r\n        }\r\n        filterParam.value = paramValues;\r\n        if (paramValues.length === checkBoxes.length) {\r\n          filterParam.remark = 'select all';\r\n        }\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterParam.value = filter.value;\r\n      }\r\n      filterParam.param = filter.data.param;\r\n      filterParam.type = filter.type;\r\n      filterParams.push(filterParam);\r\n    }\r\n\r\n    this.props.onApplyFilters(filterParams);\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n    const style = {};\r\n    if (show) {\r\n      style.width = Constants.DEFAULT_FILTER_VIEW_WIDTH + 'px';\r\n    } else {\r\n      style.width = '0px';\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-filter-panel\" style={style}>\r\n        <h5>FilterViewPanel</h5>\r\n        <button onClick={this.applyFilters}>Run</button>\r\n        <div className=\"filterViewPanel\">\r\n          {this.renderFilterPanel()}\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterViewPanel;","import React, { Component } from 'react';\r\nimport { ChromePicker  } from 'react-color';\r\n\r\nclass ColorPicker extends Component {\r\n   state = {\r\n    displayColorPicker: false,\r\n    color: {\r\n      r: '241',\r\n      g: '112',\r\n      b: '19',\r\n      a: '1',\r\n    },\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      displayColorPicker: !prevState.displayColorPicker\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      displayColorPicker: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    this.setState({ \r\n      color: color.rgb \r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: `rgba(${ this.state.color.r }, ${ this.state.color.g }, ${ this.state.color.b }, ${ this.state.color.a })`\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: '2'\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.displayColorPicker ? <div style={popover}>\r\n          <div style={cover} onClick={this.handleClose}/>\r\n          <ChromePicker color={this.state.color} onChange={this.handleChange} />\r\n        </div> : null }\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <i class=\"fas fa-expand-arrows-alt fa-fw\"></i>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <i class=\"fas fa-compress fa-fw\"></i>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","const CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOption = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      data: legend,\r\n      orient: 'vertical',\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['50%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        if (!Util.isArrayEmpty(drills)) {\r\n          const index = drills.findIndex(d => d.columnName === header);\r\n          if (index !== -1) {\r\n            const dashboardId = drills[index].dashboardId;\r\n            this.props.history.push(`/dashboards/${dashboardId}?${header}=${value}`);\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      chartType,\r\n      queryResult,\r\n      drillThrough\r\n    } = this.props;\r\n    let widgetItem = (<div>NONE</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n      const headers = [];\r\n      if (!Util.isArrayEmpty(queryResult)) {\r\n        const obj = queryResult[0];\r\n        const keys = Object.keys(obj);\r\n        for (const key of keys) {\r\n          headers.push({\r\n            Header: key,\r\n            accessor: key\r\n          })\r\n        }\r\n      }\r\n\r\n      widgetItem = (\r\n        <ReactTable\r\n          data={queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n          getTdProps={this.onTableTdPropsChange}\r\n          widgetDrillThrough={drillThrough}  \r\n        />\r\n      );\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        name,\r\n        value\r\n      } = this.props.data;\r\n      if (!Util.isArrayEmpty(queryResult)) {\r\n        let legend = [];\r\n        let series = [];\r\n        for (let i = 0; i < queryResult.length; i++) {\r\n          const row = queryResult[i];\r\n          legend.push(row[name]);\r\n          series.push({\r\n            name: row[name],\r\n            value: row[value]\r\n          });\r\n        }\r\n        const chartOption = EchartsApi.getPieOption(legend, series);\r\n        widgetItem = (\r\n          <ReactEcharts \r\n            option={chartOption}   \r\n            className=\"echarts\"\r\n            onEvents={onChartEvents}  />\r\n        );\r\n      }\r\n      \r\n    } \r\n\r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    let styles = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: 1\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {this.props.name}\r\n\r\n          { this.props.isEditMode ? (\r\n            <div className=\"icon-button-group\" style={{marginRight: '20px'}}>\r\n              <div className=\"icon-btn\" onClick={() => this.editWidget(this.props.id)}>\r\n                <i className=\"fas fa-edit fa-fw\"></i>\r\n              </div>\r\n              <div className=\"icon-btn\" onClick={() => this.removeWidget(this.props.id)}>\r\n                <i className=\"fas fa-trash-alt fa-fw\"></i>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"icon-button-group\" style={{marginRight: '20px'}}>\r\n              <div className=\"icon-btn\" onClick={() => this.exportJson(this.props.id)}>\r\n                <i class=\"fas fa-file-export fa-fw\"></i>\r\n              </div>\r\n              <div className=\"icon-btn\" onClick={() => this.exportCsv(this.props.id)}>\r\n                <i className=\"fas fa-file-csv fa-fw\"></i>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { this.props.isEditMode ? (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} />\r\n        ): null}\r\n\r\n        { this.props.isEditMode ? (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} />\r\n        ): null}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(GridItem);","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let styles = {\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px'\r\n    };\r\n\r\n    if (this.props.showGridlines) {\r\n      styles.backgroundSize = '15px 15px';\r\n      styles.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = this.props.widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={styles} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport ColorPicker from './ColorPicker';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\n\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      height: 600,\r\n      snapToGrid: false,\r\n      showGridlines: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  resizeGrid = (width, isResizeToBase) => {\r\n    const preGridWidth = this.state.gridWidth;\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n    if (isResizeToBase) {\r\n      this.resizeWidgetsToBase(newWidgets, preGridWidth);\r\n    }\r\n\r\n    const gridWidth = width - 20;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return Math.round(num * gridWidth / BASE_WIDTH);\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Math.round(num * BASE_WIDTH / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, width, filterParams) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get('/ws/widget/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(width, false);\r\n          this.queryWidgets(filterParams);\r\n        });\r\n      });\r\n  }\r\n\r\n  queryWidgets = (filterParams) => {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      axios.post('/ws/jdbcquery/widget/' + widget.id, params)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const index = widgets.findIndex(w => w.id === result.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = JSON.parse(result.data);\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const isChecked = target.checked;\r\n    this.setState({\r\n      [name]: isChecked\r\n    })\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });\r\n  }\r\n\r\n  onWidgetRemove = (widgetId) => {\r\n    axios.delete('/ws/widget/' + widgetId)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { widgetViewWidth } = this.props;\r\n    const style = {\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {this.props.isEditMode ?\r\n        (\r\n          <div>\r\n            <input \r\n            type=\"checkbox\" \r\n            name=\"snapToGrid\"\r\n            value=\"snapToGrid\"\r\n            checked={this.state.snapToGrid} \r\n            onChange={this.handleChange} />\r\n            snapToGrid\r\n            <br/>\r\n            <input \r\n              type=\"checkbox\" \r\n              name=\"showGridlines\"\r\n              value=\"showGridlines\"\r\n              checked={this.state.showGridlines} \r\n              onChange={this.handleChange} />\r\n              showGridlines\r\n            <br/>\r\n\r\n            <label>Background Color</label>\r\n            \r\n            <ColorPicker />\r\n\r\n          </div>\r\n        ) : null}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.onWidgetRemove} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      name: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      columns: [],\r\n      queryResultData: [],\r\n      chartType: Constants.TABLE,\r\n      aggrKey: '',\r\n      aggrValue: '',\r\n      chartOption: {},\r\n      drills: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId, dashboardId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    const filters = await webApi.fetchFiltersByDashboardId(dashboardId);\r\n    this.setState({ \r\n      filters: filters \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n\r\n      if (filters.length !== 0) {\r\n        this.setState({\r\n          filterId: filters[0].id\r\n        });\r\n      }\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            widgetId: widgetId,\r\n            name: result.name,\r\n            x: result.x,\r\n            y: result.y,\r\n            width: result.width,\r\n            height: result.height,\r\n            sqlQuery: result.sqlQuery,\r\n            chartType: result.chartType,\r\n            jdbcDataSourceId: result.jdbcDataSourceId,\r\n            drills: result.drillThrough\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    const jdbcDataSourceId = parseInt(event.target.value, 10);\r\n    this.setState({ \r\n      jdbcDataSourceId: jdbcDataSourceId\r\n    });\r\n  }\r\n\r\n  handleChartTypeChange = (event) => {\r\n    this.setState({ \r\n      chartType: event.target.value\r\n    });\r\n  }\r\n\r\n  handleColumnChange = (name, event) => {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleDrillColumnChange = (event) => {\r\n    this.setState({ \r\n      drillColumnName: event.target.value\r\n    });\r\n  }\r\n\r\n  handleDrillDashboardChange = (event) => {\r\n    const drillDashboardId = parseInt(event.target.value, 10);\r\n    this.setState({ \r\n      drillDashboardId: drillDashboardId\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      widgetId,\r\n      name,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      chartType,\r\n      drills\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      name: name,\r\n      dashboardId: this.props.dashboardId,\r\n      chartType: chartType,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      drillThrough: drills\r\n    }\r\n\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const {\r\n        aggrKey,\r\n        aggrValue\r\n      } = this.state;\r\n      widget.data = {\r\n        name: aggrKey,\r\n        value: aggrValue\r\n      }\r\n    }\r\n\r\n    if (widgetId === null) {\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const columns = result.columns;\r\n        const data = JSON.parse(result.data);\r\n        this.setState({\r\n          queryResultData: data,\r\n          columns: columns \r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      drills,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const filterId = this.state.filterId;\r\n    const index = drills.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill, event) => {\r\n    event.preventDefault();\r\n    const { drills } = this.state;\r\n    const index = drills.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.splice(index, 1);\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        aggrKey, \r\n        aggrValue, \r\n        queryResultData \r\n      } = this.state;\r\n      if (!Util.isArrayEmpty(queryResultData)) {\r\n        let legend = [];\r\n        let series = [];\r\n        for (let i = 0; i < queryResultData.length; i++) {\r\n          const row = queryResultData[i];\r\n          legend.push(row[aggrKey]);\r\n          series.push({\r\n            name: row[aggrKey],\r\n            value: row[aggrValue]\r\n          });\r\n        }\r\n        const chartOption = EchartsApi.getPieOption(legend, series);\r\n        this.setState({\r\n          chartOption: chartOption\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      columns \r\n    } = this.state;\r\n    const columnOptions = (columns || []).map(col =>\r\n      <option value={col.name} key={col.name}>{col.name}</option>\r\n    );\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      chartPreview = (\r\n        <div>\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label>Aggr Key (string)</label>\r\n          <select value={this.state.aggrKey} onChange={(event) => this.handleColumnChange('aggrKey', event)}>\r\n            {columnOptions}\r\n          </select>\r\n\r\n          <label>By Aggr Value (number)</label>\r\n          <select value={this.state.aggrValue} onChange={(event) => this.handleColumnChange('aggrValue', event)}>\r\n            {columnOptions}\r\n          </select>\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={this.state.chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      columns,\r\n      queryResultData,\r\n      jdbcDataSources,\r\n      drills,\r\n      drillDashboards\r\n    } = this.state;\r\n\r\n    const dataSourceOptions = (jdbcDataSources || []).map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const columnOptions = (columns || []).map(col =>\r\n      <option value={col.name} key={col.name}>{col.name}</option>\r\n    );\r\n\r\n    const chartOptionList = Constants.CHART_TYPES.map(o =>\r\n      <option value={o} key={o}>{o}</option>\r\n    );\r\n\r\n    const dashboardOptions = (drillDashboards || []).map(dash =>\r\n      <option value={dash.id} key={dash.id}>{dash.name}</option>\r\n    );\r\n\r\n    const drillItems = (drills || []).map(drill =>\r\n      <div key={drill.columnName}>\r\n        <div>Column: {drill.columnName}</div>\r\n        <div>Dashboard: {drill.dashboardId}</div>\r\n        <button onClick={(event) => this.removeDrillThrough(drill, event)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const headers = [];\r\n    let queryResultItem;\r\n    if (!Util.isArrayEmpty(queryResultData)) {\r\n      const obj = queryResultData[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        });\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={queryResultData}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResultData}</div>\r\n      );\r\n    }\r\n\r\n    const columnItems = (columns || []).map(col =>\r\n      <div key={col.name}>{col.name} {col.dataType}</div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <h3>WidgetEditPanel: {this.state.widgetId}</h3>\r\n        <button onClick={this.save}>Save</button>\r\n        <button onClick={this.runQuery}>Run Query</button>\r\n\r\n        <form>\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>DataSource</label>\r\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n            {dataSourceOptions}\r\n          </select>\r\n        \r\n          <label>SQL Query</label>\r\n          <AceEditor\r\n            style={{ marginTop: '8px' }}\r\n            value={this.state.sqlQuery}\r\n            mode=\"mysql\"\r\n            theme=\"xcode\"\r\n            name=\"blah2\"\r\n            onChange={this.handleAceEditorChange}\r\n            height={'300px'}\r\n            width={'100%'}\r\n            fontSize={15}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              showLineNumbers: true,\r\n              tabSize: 2\r\n            }}\r\n          />\r\n\r\n          <label>Result</label>\r\n          {queryResultItem}\r\n\r\n          <label>Columns Mapping</label>\r\n          <div>\r\n             {columnItems}\r\n          </div>\r\n\r\n          <label>Chart Options</label>\r\n          <select value={this.state.chartType} onChange={this.handleChartTypeChange}>\r\n            {chartOptionList}\r\n          </select>\r\n\r\n          <label>Preview</label>\r\n          {this.renderChartPreview()}  \r\n\r\n          <label>Drill through</label>\r\n          <div>\r\n            <label>Column</label>\r\n            <select value={this.state.drillColumnName} onChange={this.handleDrillColumnChange}>\r\n              {columnOptions}\r\n            </select>\r\n            <label>Dashboard</label>\r\n            <select value={this.state.drillDashboardId} onChange={this.handleDrillDashboardChange}>\r\n              {dashboardOptions}\r\n            </select>\r\n            <div>\r\n              {drillItems}\r\n            </div>\r\n            <button onClick={this.addDrillThrough}>Add</button>\r\n          </div>\r\n\r\n        </form>\r\n        \r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","import React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nclass FilterEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      filterId: null,\r\n      name: '',\r\n      type: Constants.SLICER,\r\n      data: {},\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: [],\r\n      param: '',\r\n    };\r\n  }\r\n\r\n  fetchFilter = async (filterId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    if (filterId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n      this.setState({\r\n        filterId: null\r\n      })\r\n    } else {\r\n      axios.get('/ws/filter/' + filterId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { \r\n            data,\r\n            type\r\n          } = result;\r\n          this.setState({\r\n            filterId: filterId,\r\n            name: result.name,\r\n            type: result.type,\r\n            data: data\r\n          });\r\n\r\n          if (type === Constants.SLICER) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          } else if (type === Constants.SINGLE_VALUE) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          }\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    this.setState({ \r\n      jdbcDataSourceId: event.target.value\r\n    });\r\n  }\r\n\r\n  handleTypeChange = (event) => {\r\n    this.setState({ \r\n      type: event.target.value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      filterId,\r\n      name,\r\n      type,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      param\r\n    } = this.state;\r\n\r\n    const filter = {\r\n      name: name,\r\n      type: type,\r\n      dashboardId: this.props.dashboardId\r\n    };\r\n\r\n    if (type === Constants.SLICER) {\r\n      filter.data = {\r\n        jdbcDataSourceId: jdbcDataSourceId,\r\n        sqlQuery: sqlQuery,\r\n        param: param\r\n      }\r\n    } else if (type === Constants.SINGLE_VALUE) {\r\n      filter.data = {\r\n        useQuery: false,\r\n        jdbcDataSourceId: jdbcDataSourceId,\r\n        sqlQuery: sqlQuery,\r\n        param: param,\r\n      }\r\n    }\r\n\r\n    if (filterId === null) {\r\n      axios.post('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      filter.id = filterId;\r\n      axios.put('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { \r\n      queryResult,\r\n      jdbcDataSources\r\n    } = this.state;\r\n\r\n    const dataSourceOptions = jdbcDataSources.map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const typeOptions = Constants.FILTER_TYPES.map(t =>\r\n      <option value={t} key={t}>{t}</option>\r\n    );\r\n\r\n    const headers = [];\r\n    let queryResultItem;\r\n    if (!Util.isArrayEmpty(queryResult)) {\r\n      console.log('queryResult', queryResult);\r\n      const obj = queryResult[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        })\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={this.state.queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResult}</div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>FilterEditPanel: {this.state.filterId}</h3>\r\n        <button onClick={this.save}>Save</button>\r\n        <button onClick={this.runQuery}>Run</button>\r\n\r\n        <form>\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>Type</label>\r\n          <select value={this.state.type} onChange={this.handleTypeChange}>\r\n            {typeOptions}\r\n          </select>\r\n\r\n          <label>DataSource</label>\r\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n            {dataSourceOptions}\r\n          </select>\r\n        \r\n          <label>SQL Query</label>\r\n          <AceEditor\r\n            style={{ marginTop: '8px' }}\r\n            value={this.state.sqlQuery}\r\n            mode=\"mysql\"\r\n            theme=\"xcode\"\r\n            name=\"blah2\"\r\n            onChange={this.handleAceEditorChange}\r\n            height={'300px'}\r\n            width={'100%'}\r\n            fontSize={15}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              showLineNumbers: true,\r\n              tabSize: 2\r\n            }}\r\n          />\r\n\r\n          <label>Result</label>\r\n          {queryResultItem}\r\n\r\n          <label>Param</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"param\" \r\n            value={this.state.param}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport FilterViewPanel from '../components/FilterViewPanel';\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\nimport FilterEditPanel from '../components/FilterEditPanel';\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showFilterEditPanel: false,\r\n      showFilterViewPanel: true,\r\n      isEditMode: false,\r\n      isReadOnly: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      height: 0,\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.filterViewPanel = React.createRef();\r\n    this.filterEditPanel = React.createRef();\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    console.log('DashboardEditView', dashboardId);\r\n\r\n    const url = this.props.location.search;\r\n    console.log('url', url);\r\n    const params = new URLSearchParams(url);\r\n    console.log('params', params);\r\n\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = this.state.showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    console.log('componentDidMount', pageWidth, widgetViewWidth);\r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const result = res.data;\r\n            this.setState({\r\n              dashboardId: result.id,\r\n              name: result.name,\r\n              height: result.height,\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = (dashboardName) => {\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = this.state.showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    console.log('loadViewByDashboardName', pageWidth, widgetViewWidth);\r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth,\r\n      isReadOnly: true\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            height: result.height,\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth;\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const timerId = setInterval(() => {\r\n        this.refreshWidgetView();\r\n        const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\r\n        this.setState({\r\n          lastRefreshed: now\r\n        });\r\n      }, 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    console.log('refresh');\r\n    this.refreshWidgetView();\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  refreshFilterView = () => {\r\n    const { \r\n      dashboardId\r\n    } = this.state;\r\n    this.filterViewPanel.current.fetchFilters(dashboardId);\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n  } \r\n\r\n  save = () => {\r\n    console.log('save');\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      height\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      height: height\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.widgetViewPanel.current.saveWidgets();\r\n\r\n    this.props.onSaveDashboard(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  delete = () => {\r\n    const { dashboardId } = this.state;\r\n    console.log('delete', dashboardId);\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        //this.fetchBoards();\r\n      });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  onSaveFilter = () => {\r\n    this.setState({ \r\n      showFilterEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  toggleFilterViewPanel = () => {\r\n    const { \r\n      showFilterViewPanel\r\n    } = this.state;\r\n    this.resizePageLayout(!showFilterViewPanel);\r\n  }\r\n\r\n  resizePageLayout = (showFilterViewPanel) => {\r\n    const pageWidth = this.getPageWidth();;\r\n    let widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    this.widgetViewPanel.current.resizeGrid(widgetViewWidth, true);\r\n\r\n    this.setState({\r\n      showFilterViewPanel: showFilterViewPanel,\r\n      widgetViewWidth: widgetViewWidth\r\n    }); \r\n  }\r\n\r\n  openFilterEditPanel = (filterId) => {\r\n    this.filterEditPanel.current.fetchFilter(filterId);\r\n    this.setState({\r\n      showFilterEditPanel: true\r\n    });\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    const { dashboardId } = this.state;\r\n    this.widgetEditPanel.current.fetchWidget(widgetId, dashboardId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/poli/workspace/dashboard/view?name=${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onTableCellClick = () => {\r\n    this.props.history.push(`/dashboards/drill?name=&`);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      lastRefreshed,\r\n      isEditMode,\r\n      isReadOnly\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel;\r\n    if (!isReadOnly) {\r\n      fullScreenButtonPanel = (\r\n        <React.Fragment>\r\n          <button onClick={this.fullScreen}>Full Screen</button>\r\n        </React.Fragment>\r\n      );\r\n\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button onClick={this.cancelEdit}>Cancel</button>\r\n            <button onClick={this.save}>Save</button>\r\n            <button onClick={this.delete}>Delete</button>\r\n            <button onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\r\n            <button onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button onClick={this.edit}>Edit</button>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n    \r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n           <div className=\"inline-block\">Name:</div>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n            className=\"inline-block\" \r\n            style={{width: '200px'}}\r\n            />\r\n\r\n          <div className=\"inline-block\">H:</div>\r\n          <input \r\n            type=\"text\" \r\n            name=\"height\" \r\n            value={this.state.height}\r\n            onChange={this.handleInputChange} \r\n            className=\"inline-block\" \r\n            style={{width: '200px'}}\r\n            />\r\n        </div>\r\n        \r\n        <button onClick={this.toggleAutoRefresh}>AUTO: {autoRefreshStatus} - {lastRefreshed}</button>\r\n        <button onClick={this.refresh}>Refresh</button>\r\n        <button onClick={this.toggleFilterViewPanel}>Show Filters</button>\r\n        \r\n        {fullScreenButtonPanel}\r\n        {editButtonPanel}\r\n        \r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          isEditMode={this.state.isEditMode}\r\n          height={this.state.height}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n        />\r\n        <FilterViewPanel \r\n          ref={this.filterViewPanel} \r\n          onEdit={this.openFilterEditPanel}\r\n          onApplyFilters={this.applyFilters}\r\n          isEditMode={this.state.isEditMode}\r\n          show={this.state.showFilterViewPanel}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'lg-modal-panel'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showFilterEditPanel}\r\n          onClose={() => this.setState({ showFilterEditPanel: false })}\r\n          modalClass={'lg-modal-panel'} >\r\n          <FilterEditPanel\r\n            ref={this.filterEditPanel}\r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveFilter}\r\n          />\r\n        </Modal>\r\n\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\nimport './Dashboard.css';\r\n\r\nimport { Route } from \"react-router-dom\";\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      name: '',\r\n      width: 1200,\r\n      height: 800\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name,\r\n      width,\r\n      height\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      width: width,\r\n      height: height\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.setState({ \r\n          showEditPanel: false \r\n        });\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n  }\r\n\r\n  onSaveDashboard = (dashboardId) => {\r\n    console.log('onSaveDashboard', dashboardId);\r\n    this.fetchBoards();\r\n  }\r\n\r\n  render() {\r\n    const dashboardRows = this.state.dashboards.map((d, index) => \r\n      <div key={index} className=\"dashboard-menu-item\" onClick={() => this.view(d.id)}>\r\n        <div>{d.id} {d.name}</div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dashboard-sidebar\">\r\n          <button onClick={() => this.setState({ showEditPanel: true })}>Add</button>\r\n          <label>Search</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"searchValue\" \r\n            value={this.state.searchValue}\r\n            placeholder=\"Dashboard\"\r\n            onChange={this.handleInputChange} />\r\n          {dashboardRows}\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route path=\"/workspace/dashboard/:id\" render={(props) => <DashboardEditView key={props.match.params.id} onSaveDashboard={this.onSaveDashboard} />} />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'lg-modal-panel'} >\r\n          <div>New dashboard</div>\r\n          <button onClick={this.save}>Save</button>\r\n          <form>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              style={{width: '200px'}}\r\n              />\r\n\r\n            <label>Width</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"width\" \r\n              value={this.state.width}\r\n              onChange={this.handleInputChange} \r\n              style={{width: '100px'}}\r\n              />\r\n\r\n            <label>Height</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.state.height}\r\n              onChange={this.handleInputChange} \r\n              style={{width: '100px'}}\r\n              />\r\n            \r\n          </form>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React, { Component } from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nclass SingleTest extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  getOption = () => {\r\n    return {\r\n      color: CHART_COLORS,\r\n      title: {\r\n        text: 'Test'\r\n      },\r\n      tooltip : {\r\n        trigger: 'axis'\r\n      },\r\n      legend: {\r\n        data:['C1','C2','C3']\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          saveAsImage: {}\r\n        }\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      xAxis : [\r\n        {\r\n          type : 'category',\r\n          boundaryGap : false,\r\n          data : ['Mon','Tue','Wed','Thu','Fri','Sat','Sun']\r\n        }\r\n      ],\r\n      yAxis : [\r\n        {\r\n          type : 'value'\r\n        }\r\n      ],\r\n      series : [\r\n        {\r\n          name:'C1',\r\n          type:'line',\r\n          stack: 'Total',\r\n          areaStyle: {normal: {}},\r\n          data:[120, 132, 101, 134, 90, 230, 210]\r\n        },\r\n        {\r\n          name:'C2',\r\n          type:'line',\r\n          stack: 'Total',\r\n          areaStyle: {normal: {}},\r\n          data:[220, 182, 191, 234, 290, 330, 310]\r\n        },\r\n        {\r\n          name:'C3',\r\n          type:'line',\r\n          stack: 'Total',\r\n          areaStyle: {normal: {}},\r\n          data:[150, 232, 201, 154, 190, 330, 410]\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n\r\n  render() {\r\n    let onEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h5>SingleTest</h5>\r\n        <div style={{width: '500px'}}>\r\n          <ReactEcharts \r\n            option={this.getOption()} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts'\r\n            onEvents={onEvents} />\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default SingleTest;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const url = this.props.location.search;\r\n    console.log('url', url);\r\n    const params = new URLSearchParams(url);\r\n    const dashboardName = params.get('name');\r\n    console.log('name', dashboardName);\r\n    console.log('dashboardEditView', this.dashboardEditView);\r\n\r\n    this.dashboardEditView.loadViewByDashboardName(dashboardName);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView wrappedComponentRef={comp => (this.dashboardEditView = comp)} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\n\r\nconst SYS_ROLES = ['developer', 'viewer'];\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      searchValue: '',\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, event) => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      this.setState({\r\n        id: user.id,\r\n        username: user.username,\r\n        name: user.name,\r\n        tempPassword: '',\r\n        sysRole: user.sysRole,\r\n        userGroups: user.userGroups\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  search = () => {\r\n    const { searchValue } = this.state;\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: sysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/user/' + id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n      });\r\n  }\r\n\r\n  addUserGroup = (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId, event) => {\r\n    event.preventDefault();\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      users = [],\r\n      groups = [],\r\n      userGroups = []\r\n    } = this.state;\r\n\r\n    const userItems = users.map(user => \r\n      <div key={user.id} className=\"user-card\">\r\n        <p>\r\n          {user.username}\r\n          {user.name}\r\n          {user.sysRole}\r\n          <button onClick={() => this.openEditPanel(user)}>update</button>\r\n          <button onClick={() => this.delete(user.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupOptions = groups.map(group => \r\n      <option value={group.id} key={group.id}>{group.name}</option>\r\n    );\r\n\r\n    const sysRoleOptions = SYS_ROLES.map(groupName => \r\n      <option value={groupName} key={groupName}>{groupName}</option>\r\n    );\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId}>\r\n                <div>Group: {groups[j].name}</div>\r\n                <button onClick={(event) => this.removeUserGroup(groupId, event)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>User</h1>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Username...\"\r\n          />\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Group...\"\r\n          />\r\n        <button onClick={this.search}>Search</button>\r\n        <div className=\"row\">\r\n          {userItems}\r\n        </div>\r\n        <button onClick={() => this.openEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'lg-modal-panel'} \r\n          title={'User'} >\r\n\r\n          <div>\r\n            <h3>{'User'}</h3>\r\n            <form>\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Temp password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"tempPassword\" \r\n                value={this.state.tempPassword}\r\n                onChange={this.handleInputChange} />\r\n              \r\n              <label>System Role</label>\r\n              <select value={this.state.sysRole} onChange={(event) => this.handleOptionChange('sysRole', event)}>\r\n                {sysRoleOptions}\r\n              </select>\r\n              <br/>\r\n              \r\n              <label>Groups</label>\r\n              <select value={this.state.userGroupId} onChange={(event) => this.handleOptionChange('userGroupId', event)}>\r\n                {groupOptions}\r\n              </select>\r\n              <button onClick={this.addUserGroup}>Add</button>\r\n              <div>\r\n                {userGroupItems}\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, event) => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      this.setState({\r\n        id: group.id,\r\n        name: group.name,\r\n        groupDashboards: group.groupDashboards\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/group/' + id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n      });\r\n  }\r\n\r\n  addGroupDashboard= (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n    if (index === -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.push(groupDashboardId);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId, event) => {\r\n    event.preventDefault();\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    const dashboardOptions = dashboards.map(dash => \r\n      <option value={dash.id} key={dash.id}>{dash.name}</option>\r\n    );\r\n\r\n    const groupItems = groups.map(group => \r\n      <div key={group.id} className=\"group-card\">\r\n        <p>\r\n          {group.name}\r\n          <button onClick={() => this.openEditPanel(group)}>update</button>\r\n          <button onClick={() => this.delete(group.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId}>\r\n                <div>Name: {dashboards[j].name}</div>\r\n                <button onClick={(event) => this.removeGroupDashboard(dashboardId, event)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Group</h1>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Group...\"\r\n          />\r\n        <button onClick={this.search}>Search</button>\r\n        <div className=\"row\">\r\n          {groupItems}\r\n        </div>\r\n        <button onClick={() => this.openEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'lg-modal-panel'} \r\n          title={'Group'} >\r\n\r\n          <div>\r\n            <h3>{'Group'}</h3>\r\n            <form>\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n              \r\n              <label>Dashboards</label>\r\n              <select value={this.state.groupDashboardId} onChange={(event) => this.handleOptionChange('groupDashboardId', event)}>\r\n                {dashboardOptions}\r\n              </select>\r\n              <button onClick={this.addGroupDashboard}>Add</button>\r\n              <div>\r\n                {groupDashboardItems}\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\nimport { Route, Link, Switch } from \"react-router-dom\";\r\nimport User from './User';\r\nimport Group from './Group';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/user-management/user',\r\n    value: 'User',\r\n    icon: 'fa-user'\r\n  }, \r\n  {\r\n    link: '/user-management/group',\r\n    value: 'Group',\r\n    icon: 'fa-chalkboard',\r\n  }\r\n];\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: 'group',\r\n    }\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let menuItems = [];\r\n    for (let i = 0; i < MENU_ITEMS.length; i++) {\r\n      const menu = MENU_ITEMS[i];\r\n      const active = this.state.currentMenuLink === menu.link ? 'active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li className={active} key={menu.name}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <i className={`fas ${menu.icon} fa-fw`}></i>\r\n              <span className=\"app-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>UserManagement</h3>\r\n        {menuItems}\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/user-management/user\" component={User} />\r\n            <Route path=\"/user-management/group\" component={Group} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        alert('confirm password');\r\n        return;\r\n      }\r\n      \r\n      user.password = password;\r\n    }\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h3>Account</h3>\r\n        <form>\r\n          <label>Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label>System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label>API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button>Generate new API Key</button>\r\n\r\n          <label>Update password</label>\r\n          {\r\n            showUpdatePassword ?\r\n            (\r\n              <React.Fragment>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label>Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n            ) :\r\n            (\r\n              <button onClick={this.toggleUpdatePassword}>Update password</button>\r\n            )\r\n          }\r\n\r\n          <button onClick={this.save}>Save</button>\r\n\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","import React from 'react';\r\n\r\nimport { Route, Link, Switch } from \"react-router-dom\";\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport SingleTest from './SingleTest';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\n\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'fa-chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data source',\r\n    icon: 'fa-database'\r\n  }, \r\n  {\r\n    link: '/workspace/single-test',\r\n    value: 'Single test',\r\n    icon: ''\r\n  },\r\n  {\r\n    link: '/workspace/user-management',\r\n    value: 'User Management',\r\n    icon: 'fa-users-cog'\r\n  }, \r\n  {\r\n    link: '/workspace/account',\r\n    value: 'Account',\r\n    icon: 'fa-user'\r\n  }\r\n];\r\n\r\nconst SYS_ROLE_ADMIN = 'admin';\r\nconst SYS_ROLE_DEVELOPER = 'developer';\r\nconst SYS_ROLE_VIEWER = 'viewer';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard',\r\n      username: '',\r\n      sysRole: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Workspace - componentDidMount');\r\n    // TODO: fetch user information\r\n    const sysRole = SYS_ROLE_DEVELOPER;\r\n    this.setState({\r\n      username: 'testuser',\r\n      sysRole: sysRole\r\n    });\r\n\r\n    \r\n    const isAuthenticated = sysRole !== '' ? true : false;\r\n\r\n    \r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n      sysRole\r\n    } = this.state;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.name === 'dashboard' || m.name === 'account');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li className={active} key={menu.link}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <i className={`fas ${menu.icon} fa-fw`}></i>\r\n              <span className=\"app-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"app-nav\">\r\n          <div className=\"app-name\">Poli</div>\r\n          <ul className=\"app-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div style={{position: 'absolute', top: '0px', right: '0px'}}>\r\n            <Link to=\"/login\">logout</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"app-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route path=\"/workspace/dashboard\" component={Dashboard} />\r\n            <Route exact path=\"/workspace/single-test\" component={SingleTest} />\r\n            <Route exact path=\"/workspace/dashboard/view\" component={DashboardFullScreenView} />\r\n            <Route path=\"/workspace/user-management\" component={UserManagement} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n          </Switch>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Workspace;\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, Component } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAuthenticated: true\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('App - componentDidMount');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n          <PrivateRoute authenticated={this.state.isAuthenticated} path='/workspace' component={Workspace} />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute ({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} />\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}