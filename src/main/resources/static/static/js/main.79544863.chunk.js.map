{"version":3,"sources":["api/AuthStore.js","views/Login.js","api/WebApi.js","components/Modal.js","views/DataSource.js","components/Slicer.js","api/Util.js","components/NumberRange.js","api/Constants.js","components/FilterViewPanel.js","components/GridDraggable.js","components/GridResizable.js","api/EchartsApi.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","components/ColorPicker.js","views/DashboardEditView.js","views/Dashboard.js","views/DashboardFullScreenView.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["api_AuthStore","AuthStore","Object","classCallCheck","this","_sysRole","_username","sysRole","username","Login","props","_this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","tryLogin","axios","post","then","res","data","login","preventDefault","_this$state","state","password","user","history","push","errorMsg","react_default","a","createElement","Fragment","className","type","onChange","onClick","React","Component","withRouter","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","fetchFiltersByDashboardId","_ref3","_callee3","dashboardId","_context3","concat","_x2","_ref4","_callee4","url","_context4","_x3","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","onClose","index_es","icon","DataSource","save","showUpdatePassword","id","connectionUrl","ds","ping","put","closeEditPanel","delete","console","log","clearEditPanel","initialState","openEditPanel","showEditPanel","openDeletePanel","toggleUpdatePassword","prevState","jdbcDataSources","webApi","mode","_this2","_this$state2","_this$state2$jdbcData","jdbcDataSourceItems","map","index","key","fixedWidth","passwordInput","placeholder","src_components_Modal","rows","Slicer","isSelectAll","searchValue","handleChange","isChecked","checked","newCheckBoxes","toConsumableArray","checkBoxes","findIndex","x","filterId","toggleSelectAll","newIsSelectAll","i","length","handleSearchValueChange","result","indexOf","checkBoxItems","undefined","box","isArrayEmpty","array","Array","isArray","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","DEFAULT_FILTER_VIEW_WIDTH","FilterViewPanel","fetchFilters","filters","queryFilters","filter","Constants","queryRequest","queryResult","JSON","parse","f","newFilters","Util","_arr","values","_i2","val","_arr2","_i3","renderFilterPanel","filterPanel","_loop","filterComponent","components_Slicer","onSlicerChange","onSingleValueChange","isEditMode","edit","remove","onEdit","splice","applyFilters","filterParams","filterParam","paramValues","j","checkBox","remark","param","onApplyFilters","style","width","WIDGET_BORDER","GridDraggable","onMouseDown","gridItemNode","ReactDOM","findDOMNode","assertThisInitialized","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","zIndex","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","height","Math","floor","left","top","class","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","CHART_COLORS","getPieOption","legend","series","color","tooltip","orient","right","bottom","center","radius","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","column","instance","e","handleOriginal","header","Header","row","drills","widgetDrillThrough","d","columnName","onChartClick","echarts","onChartLegendselectchanged","echart","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","drillThrough","widgetItem","headers","obj","keys","_i","accessor","es","columns","minRows","showPagination","getTdProps","_this$props$data","chartOption","EchartsApi","lib_default","option","onEvents","styles","marginRight","components_GridDraggable","components_GridResizable","GridLayout","showGridlines","backgroundSize","backgroundImage","boxItems","widgets","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","isResizeToBase","preGridWidth","gridWidth","newWidgets","resizeWidgetsToBase","resizeWidgetsToActual","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryWidgets","params","w","saveWidgets","stringify","widgetViewWidth","src_components_GridLayout","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","jdbcDataSourceId","sqlQuery","_x","handleAceEditorChange","newValue","handleDataSourceChange","handleChartTypeChange","handleColumnChange","handleDrillColumnChange","drillColumnName","handleDrillDashboardChange","drillDashboardId","aggrKey","aggrValue","onSave","runQuery","queryResultData","addDrillThrough","_this$state3","newDrills","removeDrillThrough","drill","generateChart","_this$state4","renderChartPreview","_this$state5","columnOptions","col","chartPreview","queryResultItem","_this$state6","dataSourceOptions","chartOptionList","o","dashboardOptions","dash","drillItems","columnItems","dataType","react_ace_lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","FilterEditPanel","fetchFilter","handleTypeChange","useQuery","typeOptions","t","ColorPicker","displayColorPicker","r","g","b","handleClick","handleClose","rgb","borderRadius","background","padding","boxShadow","display","cursor","position","react_color_lib","DashboardEditView","loadViewByDashboardName","dashboardName","pageWidth","getPageWidth","showFilterViewPanel","isReadOnly","refresh","toggleAutoRefresh","autoRefreshTimerId","clearInterval","timerId","setInterval","refreshWidgetView","refreshFilterView","filterViewPanel","current","widgetViewPanel","now","Date","toTimeString","replace","lastRefreshed","dashboard","onSaveDashboard","cancelEdit","onSaveWidget","showWidgetEditPanel","onSaveFilter","showFilterEditPanel","toggleFilterViewPanel","resizePageLayout","openFilterEditPanel","filterEditPanel","openWidgetEditPanel","widgetEditPanel","fullScreen","window","open","onTableCellClick","jdbcDataSourceOptions","createRef","match","location","search","URLSearchParams","editButtonPanel","fullScreenButtonPanel","_this3","autoRefreshStatus","size","readOnly","components_ColorPicker","components_WidgetViewPanel","ref","src_components_FilterViewPanel","components_WidgetEditPanel","components_FilterEditPanel","Dashboard","fetchBoards","view","_this$state$dashboard","dashboardRows","margin","Route","path","render","views_DashboardEditView","DashboardFullScreenView","dashboardEditView","wrappedComponentRef","comp","SYS_ROLES","User","handleOptionChange","fetchUsers","users","fetchGroups","groups","tempPassword","userGroups","initialEditPanelState","addUserGroup","userGroupId","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_this$state3$users","_this$state3$groups","_this$state3$userGrou","userItems","groupOptions","group","sysRoleOptions","groupName","userGroupItems","Group","fetchDashboards","groupDashboards","addGroupDashboard","groupDashboardId","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","MENU_ITEMS","link","UserManagement","handleMenuClick","menuLink","currentMenuLink","menuItems","menu","active","Link","to","Switch","component","Account","fetchUser","generateApiKey","confirmedPassword","alert","apiKey","Workspace","pathname","isAuthenticated","menuList","m","isAccountMenuActive","exact","PageNotFound","PrivateRoute","authenticated","rest","objectWithoutProperties","Redirect","from","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","App","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.79544863.chunk.js","sourcesContent":["\r\nclass AuthStore {\r\n\r\n  constructor() {\r\n    this._sysRole = '';\r\n    this._username = '';\r\n  }\r\n\r\n  set sysRole(sysRole) {\r\n    this._sysRole = sysRole;\r\n  }\r\n\r\n  get sysRole() {\r\n    return this._sysRole;\r\n  }\r\n\r\n  set username(username) {\r\n    this._username = username;\r\n  }\r\n\r\n  get username() {\r\n    return this._username;\r\n  }\r\n\r\n  get isAuthenticated() {\r\n    return true; // this._sysRole !== '';\r\n  }\r\n}\r\n\r\nexport default new AuthStore();","\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AuthStore from '../api/AuthStore';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tryLogin();\r\n  }\r\n\r\n  tryLogin = () => {\r\n    axios.post('/auth/login/cookie')\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  login = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password'\r\n      });\r\n      return;\r\n    }\r\n\r\n    AuthStore.username = 'testuser';\r\n    AuthStore.sysRole = 'developer';\r\n    this.props.history.push('/workspace/dashboard');\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div className=\"login-app-title\">Poli</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n              <label>Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} />\r\n            </div>\r\n            <button className=\"button login-button\" onClick={this.login}>Login</button>\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      modalClass = '',\r\n      title,\r\n      children\r\n    } = this.props;\r\n\r\n    const modalStatus = show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={`modal-panel ${modalClass}`}>\r\n          <div className=\"model-header row\">\r\n            <div className=\"model-title\">{title}</div>\r\n            <button className=\"model-close-btn button icon-button\" onClick={() => this.props.onClose()}>\r\n              <FontAwesomeIcon icon=\"times\" />\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          <div className='modal-body'>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\nimport './Datasource.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Fetch all datasources\r\n    this.fetchDataSources();\r\n    \r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      username,\r\n      password,\r\n      name,\r\n      ping,\r\n    } = this.state;\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      username: username,\r\n      name: name,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.fetchDataSources();\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      // New\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    console.log('delete', id);\r\n    axios.delete('/ws/jdbcdatasource/' + id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n      });\r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        console.log('ping', res.data);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  openDeletePanel = () => {\r\n\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      id,\r\n      jdbcDataSources = []\r\n    } = this.state;\r\n\r\n    const jdbcDataSourceItems = jdbcDataSources.map((ds, index) => \r\n      <div key={index} className=\"datasource-card row\">\r\n        <div className=\"float-left ellipsis\">\r\n          {ds.name}\r\n        </div>\r\n        <div className=\"float-right\">\r\n          <button className=\"button icon-button\" onClick={() => this.openEditPanel(ds)}>\r\n            <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n          </button>\r\n          <button className=\"button icon-button\" onClick={() => this.delete(ds.id)}>\r\n            <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n          </button>\r\n          <button className=\"button icon-button\" onClick={() => this.ping(ds.id)}>\r\n            <FontAwesomeIcon icon=\"plug\" fixedWidth />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    let mode;\r\n    let passwordInput = (\r\n      <div>\r\n        <label>Password</label>\r\n        <input \r\n          type=\"password\" \r\n          name=\"password\" \r\n          value={this.state.password}\r\n          onChange={this.handleInputChange} />\r\n      </div>\r\n    );\r\n    if (id === null) {\r\n      mode = 'New';\r\n    } else {\r\n      mode = 'Update';\r\n      if (!showUpdatePassword) {\r\n        passwordInput = (\r\n          <React.Fragment>\r\n            <br/>\r\n            <button onClick={this.toggleUpdatePassword}>Update password</button>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"searchValue\"\r\n          placeholder=\"Datasource name...\"\r\n          />\r\n        <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n          <FontAwesomeIcon icon=\"plus\" /> New datasource\r\n        </button>\r\n        <div>\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={mode} >\r\n\r\n          <div>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Connection Url</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            {passwordInput}\r\n\r\n            <label>Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <button className=\"button\"onClick={this.save}>Save</button>\r\n          </div>\r\n\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","import React from 'react';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n    searchValue: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const isChecked = target.checked;\r\n\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    if (searchValue) {\r\n      const result = [];\r\n      const { checkBoxes } = this.props;\r\n      for (let i = 0; i < checkBoxes.length; i++) {\r\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\r\n          result.push(checkBoxes[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n\r\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\r\n    // TODO: If value is too long, add.. to the end.\r\n  }\r\n\r\n  render() {\r\n    const checkBoxes = this.props.checkBoxes;\r\n    let checkBoxItems = [];\r\n    if (checkBoxes !== undefined && checkBoxes.length !== 0) {\r\n      checkBoxItems = this.props.checkBoxes.map((box, index) => \r\n        <div key={index}>\r\n          <input \r\n            type=\"checkbox\" \r\n            name={box.value} \r\n            value={box.value} \r\n            checked={box.isChecked} \r\n            onChange={this.handleChange}\r\n            />\r\n            {box.value}\r\n          <br/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button onClick={this.toggleSelectAll}>Toggle Select All {this.state.isSelectAll}</button>\r\n        <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.searchValue}\r\n            onChange={this.handleSearchValueChange} \r\n          />\r\n        \r\n        <div>\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};","import React from 'react';\r\n\r\nclass NumberRange extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        min\r\n        <input type=\"number\" name=\"min\" />\r\n        max\r\n        <input type=\"number\" name=\"max\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberRange;","/**\r\n * Constants\r\n */\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\r\n\r\nexport const SYS_ROLE_ADMIN = 'admin';\r\nexport const SYS_ROLE_DEVELOPER = 'developer';\r\nexport const SYS_ROLE_VIEWER = 'viewer';","import React, { Component } from 'react';\r\nimport Slicer from \"./Slicer\";\r\nimport NumberRange from \"./NumberRange\";\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './FilterViewPanel.css';\r\n\r\nclass FilterViewPanel extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      dashboardId: null,\r\n      filters: []\r\n    };\r\n  }\r\n\r\n  fetchFilters = (dashboardId) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      dashboardId: dashboardId\r\n    })\r\n\r\n    axios.get('/ws/filter/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          filters: result,\r\n        }, this.queryFilters);\r\n      });\r\n  }\r\n\r\n  queryFilters = () => {\r\n    const { filters } = this.state;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === Constants.SLICER) {\r\n        const queryRequest = filter.data;\r\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\r\n          .then(res => {\r\n            const result = res.data;\r\n            const queryResult = JSON.parse(result.data);\r\n\r\n            const index = filters.findIndex(f => f.id === result.id);\r\n            const newFilters = [...this.state.filters];\r\n            newFilters[index].queryResult = queryResult;\r\n            const type = newFilters[index].type;\r\n            if (type === Constants.SLICER) {\r\n              const checkBoxes = [];\r\n              if (!Util.isArrayEmpty(queryResult)) {\r\n                for (let i = 0; i < queryResult.length; i++) {\r\n                  const values = Object.values(queryResult[i]);\r\n                  for (const val of values) {\r\n                    checkBoxes.push({\r\n                      value: val,\r\n                      isChecked: false\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n\r\n              newFilters[index].checkBoxes = checkBoxes;\r\n            } else if (type === Constants.SINGLE_VALUE) {\r\n              const values = Object.values(queryResult);\r\n              let value = '';\r\n              for (const val of values) {\r\n                value = val;\r\n                break;\r\n              }\r\n              newFilters[index].value = value;\r\n            }\r\n\r\n            this.setState({\r\n              filters: newFilters\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderFilterPanel = () => {\r\n    const filterPanel = [];\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      let filterComponent = (<div>NONE</div>);\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        filterComponent = (\r\n          <Slicer \r\n            key={i} \r\n            filterId={filter.id} \r\n            checkBoxes={checkBoxes} \r\n            onChange={this.onSlicerChange} \r\n          />\r\n        );\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterComponent = (\r\n          <input \r\n            type=\"text\"  \r\n            value={filter.value}\r\n            onChange={(event) => this.onSingleValueChange(filter.id, event)} \r\n          />\r\n        );\r\n      }\r\n\r\n      filterPanel.push(\r\n          (\r\n            <div className=\"filter-card\">\r\n              <div className=\"filter-card-title\">\r\n                {filter.name}\r\n\r\n                { this.props.isEditMode ? \r\n                  (\r\n                    <div className=\"icon-button-group\">\r\n                      <div className=\"icon-btn\" onClick={() => this.edit(filter.id)}>\r\n                        <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n                      </div>\r\n                      <div className=\"icon-btn\" onClick={() => this.remove(filter.id)}>\r\n                        <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n                      </div>\r\n                    </div>\r\n                  ): null \r\n                }\r\n              </div>\r\n              <div>\r\n                {filterComponent}\r\n              </div>\r\n            </div>\r\n          )\r\n        );\r\n    }\r\n    return filterPanel;\r\n  }\r\n\r\n  edit = (filterId) => {\r\n    this.props.onEdit(filterId);\r\n  }\r\n\r\n  remove = (filterId) => {\r\n    axios.delete('/ws/filter/' + filterId)\r\n      .then(res => {\r\n        const index = this.state.filters.findIndex(f => f.id === filterId);\r\n        const newFilters = [...this.state.filters];\r\n        newFilters.splice(index, 1);\r\n        this.setState({\r\n          filters: newFilters\r\n        });\r\n      });\r\n  }\r\n\r\n  onSlicerChange = (filterId, checkBoxes) => {\r\n    const index = this.state.filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...this.state.filters];\r\n    newFilters[index].checkBoxes = [...checkBoxes];\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n\r\n    // TODO: select all.\r\n    // const isSelectAll = checked.length === checkBoxes.length;    \r\n  }\r\n\r\n  onSingleValueChange = (filterId, event) => {\r\n    const { filters } = this.state;\r\n    const value = event.target.value;\r\n    const index = filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...filters];\r\n    newFilters[index].value = value;\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n  }\r\n\r\n  applyFilters = () => {\r\n    console.log('applyFilters');\r\n    const { filters } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      const filterParam = {};\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        const paramValues = [];\r\n        for (let j = 0; j < checkBoxes.length; j++) {\r\n          const checkBox = checkBoxes[j];\r\n          if (checkBox.isChecked) {\r\n            paramValues.push(checkBox.value);\r\n          }\r\n        }\r\n        filterParam.value = paramValues;\r\n        if (paramValues.length === checkBoxes.length) {\r\n          filterParam.remark = 'select all';\r\n        }\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterParam.value = filter.value;\r\n      }\r\n      filterParam.param = filter.data.param;\r\n      filterParam.type = filter.type;\r\n      filterParams.push(filterParam);\r\n    }\r\n\r\n    this.props.onApplyFilters(filterParams);\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n    const style = {};\r\n    if (show) {\r\n      style.width = Constants.DEFAULT_FILTER_VIEW_WIDTH + 'px';\r\n    } else {\r\n      style.width = '0px';\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-filter-panel\" style={style}>\r\n        <div>Filters</div>\r\n        <button onClick={this.applyFilters}>Run</button>\r\n        <div className=\"filterViewPanel\">\r\n          {this.renderFilterPanel()}\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterViewPanel;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <i class=\"fas fa-expand-arrows-alt fa-fw\"></i>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <i class=\"fas fa-compress fa-fw\"></i>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","const CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOption = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      data: legend,\r\n      orient: 'vertical',\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['50%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        if (!Util.isArrayEmpty(drills)) {\r\n          const index = drills.findIndex(d => d.columnName === header);\r\n          if (index !== -1) {\r\n            const dashboardId = drills[index].dashboardId;\r\n            this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      chartType,\r\n      queryResult,\r\n      drillThrough\r\n    } = this.props;\r\n    let widgetItem = (<div></div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n      const headers = [];\r\n      if (!Util.isArrayEmpty(queryResult)) {\r\n        const obj = queryResult[0];\r\n        const keys = Object.keys(obj);\r\n        for (const key of keys) {\r\n          headers.push({\r\n            Header: key,\r\n            accessor: key\r\n          })\r\n        }\r\n      }\r\n\r\n      widgetItem = (\r\n        <ReactTable\r\n          data={queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n          getTdProps={this.onTableTdPropsChange}\r\n          widgetDrillThrough={drillThrough}  \r\n        />\r\n      );\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        name,\r\n        value\r\n      } = this.props.data;\r\n      if (!Util.isArrayEmpty(queryResult)) {\r\n        let legend = [];\r\n        let series = [];\r\n        for (let i = 0; i < queryResult.length; i++) {\r\n          const row = queryResult[i];\r\n          legend.push(row[name]);\r\n          series.push({\r\n            name: row[name],\r\n            value: row[value]\r\n          });\r\n        }\r\n        const chartOption = EchartsApi.getPieOption(legend, series);\r\n        widgetItem = (\r\n          <ReactEcharts \r\n            option={chartOption}   \r\n            className=\"echarts\"\r\n            onEvents={onChartEvents}  />\r\n        );\r\n      }\r\n      \r\n    } \r\n\r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    let styles = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: 1\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {this.props.name}\r\n\r\n          { this.props.isEditMode ? (\r\n            <div className=\"icon-button-group\" style={{marginRight: '20px'}}>\r\n              <div className=\"icon-btn\" onClick={() => this.editWidget(this.props.id)}>\r\n                <i className=\"fas fa-edit fa-fw\"></i>\r\n              </div>\r\n              <div className=\"icon-btn\" onClick={() => this.removeWidget(this.props.id)}>\r\n                <i className=\"fas fa-trash-alt fa-fw\"></i>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"icon-button-group\" style={{marginRight: '20px'}}>\r\n              <div className=\"icon-btn\" onClick={() => this.exportJson(this.props.id)}>\r\n                <i class=\"fas fa-file-export fa-fw\"></i>\r\n              </div>\r\n              <div className=\"icon-btn\" onClick={() => this.exportCsv(this.props.id)}>\r\n                <i className=\"fas fa-file-csv fa-fw\"></i>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { this.props.isEditMode ? (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} />\r\n        ): null}\r\n\r\n        { this.props.isEditMode ? (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} />\r\n        ): null}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(GridItem);","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let styles = {\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px'\r\n    };\r\n\r\n    if (this.props.showGridlines) {\r\n      styles.backgroundSize = '15px 15px';\r\n      styles.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = this.props.widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={styles} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\n\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      height: 600,\r\n      snapToGrid: false,\r\n      showGridlines: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  resizeGrid = (width, isResizeToBase) => {\r\n    const preGridWidth = this.state.gridWidth;\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n    if (isResizeToBase) {\r\n      this.resizeWidgetsToBase(newWidgets, preGridWidth);\r\n    }\r\n\r\n    const gridWidth = width - 20;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return Math.round(num * gridWidth / BASE_WIDTH);\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Math.round(num * BASE_WIDTH / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, width, filterParams) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get('/ws/widget/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(width, false);\r\n          this.queryWidgets(filterParams);\r\n        });\r\n      });\r\n  }\r\n\r\n  queryWidgets = (filterParams) => {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      axios.post('/ws/jdbcquery/widget/' + widget.id, params)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const index = widgets.findIndex(w => w.id === result.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = JSON.parse(result.data);\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });\r\n  }\r\n\r\n  onWidgetRemove = (widgetId) => {\r\n    axios.delete('/ws/widget/' + widgetId)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { widgetViewWidth } = this.props;\r\n    const style = {\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {this.props.isEditMode ?\r\n        (\r\n          <div>\r\n            <input \r\n            type=\"checkbox\" \r\n            name=\"snapToGrid\"\r\n            value=\"snapToGrid\"\r\n            checked={this.state.snapToGrid} \r\n            onChange={this.handleInputChange} />\r\n            snapToGrid\r\n            <br/>\r\n            <input \r\n              type=\"checkbox\" \r\n              name=\"showGridlines\"\r\n              value=\"showGridlines\"\r\n              checked={this.state.showGridlines} \r\n              onChange={this.handleInputChange} />\r\n              showGridlines\r\n            <br/>\r\n          </div>\r\n        ) : null}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.onWidgetRemove} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      name: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      columns: [],\r\n      queryResultData: [],\r\n      chartType: Constants.TABLE,\r\n      aggrKey: '',\r\n      aggrValue: '',\r\n      chartOption: {},\r\n      drills: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId, dashboardId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    const filters = await webApi.fetchFiltersByDashboardId(dashboardId);\r\n    this.setState({ \r\n      filters: filters \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n\r\n      if (filters.length !== 0) {\r\n        this.setState({\r\n          filterId: filters[0].id\r\n        });\r\n      }\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            widgetId: widgetId,\r\n            name: result.name,\r\n            x: result.x,\r\n            y: result.y,\r\n            width: result.width,\r\n            height: result.height,\r\n            sqlQuery: result.sqlQuery,\r\n            chartType: result.chartType,\r\n            jdbcDataSourceId: result.jdbcDataSourceId,\r\n            drills: result.drillThrough\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    const jdbcDataSourceId = parseInt(event.target.value, 10);\r\n    this.setState({ \r\n      jdbcDataSourceId: jdbcDataSourceId\r\n    });\r\n  }\r\n\r\n  handleChartTypeChange = (event) => {\r\n    this.setState({ \r\n      chartType: event.target.value\r\n    });\r\n  }\r\n\r\n  handleColumnChange = (name, event) => {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleDrillColumnChange = (event) => {\r\n    this.setState({ \r\n      drillColumnName: event.target.value\r\n    });\r\n  }\r\n\r\n  handleDrillDashboardChange = (event) => {\r\n    const drillDashboardId = parseInt(event.target.value, 10);\r\n    this.setState({ \r\n      drillDashboardId: drillDashboardId\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      widgetId,\r\n      name,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      chartType,\r\n      drills\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      name: name,\r\n      dashboardId: this.props.dashboardId,\r\n      chartType: chartType,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      drillThrough: drills\r\n    }\r\n\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const {\r\n        aggrKey,\r\n        aggrValue\r\n      } = this.state;\r\n      widget.data = {\r\n        name: aggrKey,\r\n        value: aggrValue\r\n      }\r\n    }\r\n\r\n    if (widgetId === null) {\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const columns = result.columns;\r\n        const data = JSON.parse(result.data);\r\n        this.setState({\r\n          queryResultData: data,\r\n          columns: columns \r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      drills,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const filterId = this.state.filterId;\r\n    const index = drills.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill, event) => {\r\n    event.preventDefault();\r\n    const { drills } = this.state;\r\n    const index = drills.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.splice(index, 1);\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        aggrKey, \r\n        aggrValue, \r\n        queryResultData \r\n      } = this.state;\r\n      if (!Util.isArrayEmpty(queryResultData)) {\r\n        let legend = [];\r\n        let series = [];\r\n        for (let i = 0; i < queryResultData.length; i++) {\r\n          const row = queryResultData[i];\r\n          legend.push(row[aggrKey]);\r\n          series.push({\r\n            name: row[aggrKey],\r\n            value: row[aggrValue]\r\n          });\r\n        }\r\n        const chartOption = EchartsApi.getPieOption(legend, series);\r\n        this.setState({\r\n          chartOption: chartOption\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      columns \r\n    } = this.state;\r\n    const columnOptions = (columns || []).map(col =>\r\n      <option value={col.name} key={col.name}>{col.name}</option>\r\n    );\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      chartPreview = (\r\n        <div>\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label>Aggr Key (string)</label>\r\n          <select value={this.state.aggrKey} onChange={(event) => this.handleColumnChange('aggrKey', event)}>\r\n            {columnOptions}\r\n          </select>\r\n\r\n          <label>By Aggr Value (number)</label>\r\n          <select value={this.state.aggrValue} onChange={(event) => this.handleColumnChange('aggrValue', event)}>\r\n            {columnOptions}\r\n          </select>\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={this.state.chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      columns,\r\n      queryResultData,\r\n      jdbcDataSources,\r\n      drills,\r\n      drillDashboards\r\n    } = this.state;\r\n\r\n    const dataSourceOptions = (jdbcDataSources || []).map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const columnOptions = (columns || []).map(col =>\r\n      <option value={col.name} key={col.name}>{col.name}</option>\r\n    );\r\n\r\n    const chartOptionList = Constants.CHART_TYPES.map(o =>\r\n      <option value={o} key={o}>{o}</option>\r\n    );\r\n\r\n    const dashboardOptions = (drillDashboards || []).map(dash =>\r\n      <option value={dash.id} key={dash.id}>{dash.name}</option>\r\n    );\r\n\r\n    const drillItems = (drills || []).map(drill =>\r\n      <div key={drill.columnName}>\r\n        <div>Column: {drill.columnName}</div>\r\n        <div>Dashboard: {drill.dashboardId}</div>\r\n        <button onClick={(event) => this.removeDrillThrough(drill, event)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const headers = [];\r\n    let queryResultItem;\r\n    if (!Util.isArrayEmpty(queryResultData)) {\r\n      const obj = queryResultData[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        });\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={queryResultData}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResultData}</div>\r\n      );\r\n    }\r\n\r\n    const columnItems = (columns || []).map(col =>\r\n      <div key={col.name}>{col.name} {col.dataType}</div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <h3>WidgetEditPanel: {this.state.widgetId}</h3>\r\n        <button onClick={this.save}>Save</button>\r\n        <button onClick={this.runQuery}>Run Query</button>\r\n\r\n        <form>\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>DataSource</label>\r\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n            {dataSourceOptions}\r\n          </select>\r\n        \r\n          <label>SQL Query</label>\r\n          <AceEditor\r\n            style={{ marginTop: '8px' }}\r\n            value={this.state.sqlQuery}\r\n            mode=\"mysql\"\r\n            theme=\"xcode\"\r\n            name=\"blah2\"\r\n            onChange={this.handleAceEditorChange}\r\n            height={'300px'}\r\n            width={'100%'}\r\n            fontSize={15}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              showLineNumbers: true,\r\n              tabSize: 2\r\n            }}\r\n          />\r\n\r\n          <label>Result</label>\r\n          {queryResultItem}\r\n\r\n          <label>Columns Mapping</label>\r\n          <div>\r\n             {columnItems}\r\n          </div>\r\n\r\n          <label>Chart Options</label>\r\n          <select value={this.state.chartType} onChange={this.handleChartTypeChange}>\r\n            {chartOptionList}\r\n          </select>\r\n\r\n          <label>Preview</label>\r\n          {this.renderChartPreview()}  \r\n\r\n          <label>Drill through</label>\r\n          <div>\r\n            <label>Column</label>\r\n            <select value={this.state.drillColumnName} onChange={this.handleDrillColumnChange}>\r\n              {columnOptions}\r\n            </select>\r\n            <label>Dashboard</label>\r\n            <select value={this.state.drillDashboardId} onChange={this.handleDrillDashboardChange}>\r\n              {dashboardOptions}\r\n            </select>\r\n            <div>\r\n              {drillItems}\r\n            </div>\r\n            <button onClick={this.addDrillThrough}>Add</button>\r\n          </div>\r\n\r\n        </form>\r\n        \r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","import React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nclass FilterEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      filterId: null,\r\n      name: '',\r\n      type: Constants.SLICER,\r\n      data: {},\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: [],\r\n      param: '',\r\n    };\r\n  }\r\n\r\n  fetchFilter = async (filterId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    if (filterId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n      this.setState({\r\n        filterId: null\r\n      })\r\n    } else {\r\n      axios.get('/ws/filter/' + filterId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { \r\n            data,\r\n            type\r\n          } = result;\r\n          this.setState({\r\n            filterId: filterId,\r\n            name: result.name,\r\n            type: result.type,\r\n            data: data\r\n          });\r\n\r\n          if (type === Constants.SLICER) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          } else if (type === Constants.SINGLE_VALUE) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          }\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    this.setState({ \r\n      jdbcDataSourceId: event.target.value\r\n    });\r\n  }\r\n\r\n  handleTypeChange = (event) => {\r\n    this.setState({ \r\n      type: event.target.value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      filterId,\r\n      name,\r\n      type,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      param\r\n    } = this.state;\r\n\r\n    const filter = {\r\n      name: name,\r\n      type: type,\r\n      dashboardId: this.props.dashboardId\r\n    };\r\n\r\n    if (type === Constants.SLICER) {\r\n      filter.data = {\r\n        jdbcDataSourceId: jdbcDataSourceId,\r\n        sqlQuery: sqlQuery,\r\n        param: param\r\n      }\r\n    } else if (type === Constants.SINGLE_VALUE) {\r\n      filter.data = {\r\n        useQuery: false,\r\n        jdbcDataSourceId: jdbcDataSourceId,\r\n        sqlQuery: sqlQuery,\r\n        param: param,\r\n      }\r\n    }\r\n\r\n    if (filterId === null) {\r\n      axios.post('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      filter.id = filterId;\r\n      axios.put('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { \r\n      queryResult,\r\n      jdbcDataSources\r\n    } = this.state;\r\n\r\n    const dataSourceOptions = jdbcDataSources.map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const typeOptions = Constants.FILTER_TYPES.map(t =>\r\n      <option value={t} key={t}>{t}</option>\r\n    );\r\n\r\n    const headers = [];\r\n    let queryResultItem;\r\n    if (!Util.isArrayEmpty(queryResult)) {\r\n      console.log('queryResult', queryResult);\r\n      const obj = queryResult[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        })\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={this.state.queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResult}</div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>FilterEditPanel: {this.state.filterId}</h3>\r\n        <button onClick={this.save}>Save</button>\r\n        <button onClick={this.runQuery}>Run</button>\r\n\r\n        <form>\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>Type</label>\r\n          <select value={this.state.type} onChange={this.handleTypeChange}>\r\n            {typeOptions}\r\n          </select>\r\n\r\n          <label>DataSource</label>\r\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n            {dataSourceOptions}\r\n          </select>\r\n        \r\n          <label>SQL Query</label>\r\n          <AceEditor\r\n            style={{ marginTop: '8px' }}\r\n            value={this.state.sqlQuery}\r\n            mode=\"mysql\"\r\n            theme=\"xcode\"\r\n            name=\"blah2\"\r\n            onChange={this.handleAceEditorChange}\r\n            height={'300px'}\r\n            width={'100%'}\r\n            fontSize={15}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              showLineNumbers: true,\r\n              tabSize: 2\r\n            }}\r\n          />\r\n\r\n          <label>Result</label>\r\n          {queryResultItem}\r\n\r\n          <label>Param</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"param\" \r\n            value={this.state.param}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterEditPanel;","import React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nclass ColorPicker extends React.Component {\r\n   state = {\r\n    displayColorPicker: false,\r\n    color: {\r\n      r: '241',\r\n      g: '112',\r\n      b: '19',\r\n      a: '1',\r\n    },\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      displayColorPicker: !prevState.displayColorPicker\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      displayColorPicker: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    this.setState({ \r\n      color: color.rgb \r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: `rgba(${ this.state.color.r }, ${ this.state.color.g }, ${ this.state.color.b }, ${ this.state.color.a })`\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: '2'\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.displayColorPicker ? <div style={popover}>\r\n          <div style={cover} onClick={this.handleClose}/>\r\n          <ChromePicker color={this.state.color} onChange={this.handleChange} />\r\n        </div> : null }\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport FilterViewPanel from '../components/FilterViewPanel';\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\nimport FilterEditPanel from '../components/FilterEditPanel';\r\nimport ColorPicker from '../components/ColorPicker';\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showFilterEditPanel: false,\r\n      showFilterViewPanel: true,\r\n      isEditMode: false,\r\n      isReadOnly: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      height: 0,\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.filterViewPanel = React.createRef();\r\n    this.filterEditPanel = React.createRef();\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    console.log('DashboardEditView', dashboardId);\r\n\r\n    const url = this.props.location.search;\r\n    console.log('url', url);\r\n    const params = new URLSearchParams(url);\r\n    console.log('params', params);\r\n\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = this.state.showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    console.log('componentDidMount', pageWidth, widgetViewWidth);\r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const result = res.data;\r\n            this.setState({\r\n              dashboardId: result.id,\r\n              name: result.name,\r\n              height: result.height,\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = (dashboardName) => {\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = this.state.showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    console.log('loadViewByDashboardName', pageWidth, widgetViewWidth);\r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth,\r\n      isReadOnly: true\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            height: result.height,\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth;\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const timerId = setInterval(() => {\r\n        this.refreshWidgetView();\r\n      }, 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    console.log('refresh');\r\n    this.refreshWidgetView();\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  refreshFilterView = () => {\r\n    const { \r\n      dashboardId\r\n    } = this.state;\r\n    this.filterViewPanel.current.fetchFilters(dashboardId);\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n\r\n    const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\r\n    this.setState({\r\n      lastRefreshed: now\r\n    });\r\n  } \r\n\r\n  save = () => {\r\n    console.log('save');\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      height\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      height: height\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.widgetViewPanel.current.saveWidgets();\r\n\r\n    this.props.onSaveDashboard(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  delete = () => {\r\n    const { dashboardId } = this.state;\r\n    console.log('delete', dashboardId);\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        //this.fetchBoards();\r\n      });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  onSaveFilter = () => {\r\n    this.setState({ \r\n      showFilterEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  toggleFilterViewPanel = () => {\r\n    const { \r\n      showFilterViewPanel\r\n    } = this.state;\r\n    this.resizePageLayout(!showFilterViewPanel);\r\n  }\r\n\r\n  resizePageLayout = (showFilterViewPanel) => {\r\n    const pageWidth = this.getPageWidth();;\r\n    let widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    this.widgetViewPanel.current.resizeGrid(widgetViewWidth, true);\r\n\r\n    this.setState({\r\n      showFilterViewPanel: showFilterViewPanel,\r\n      widgetViewWidth: widgetViewWidth\r\n    }); \r\n  }\r\n\r\n  openFilterEditPanel = (filterId) => {\r\n    this.filterEditPanel.current.fetchFilter(filterId);\r\n    this.setState({\r\n      showFilterEditPanel: true\r\n    });\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    const { dashboardId } = this.state;\r\n    this.widgetEditPanel.current.fetchWidget(widgetId, dashboardId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/workspace/dashboard/view?name=${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onTableCellClick = () => {\r\n    this.props.history.push(`/workspace/dashboard/drill?name=&`);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      lastRefreshed,\r\n      isEditMode,\r\n      isReadOnly\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel;\r\n    if (!isReadOnly) {\r\n      fullScreenButtonPanel = (\r\n        <React.Fragment>\r\n          <button className=\"button icon-button\" onClick={this.fullScreen}>\r\n            <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\r\n          </button>\r\n        </React.Fragment>\r\n      );\r\n\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button\" onClick={this.cancelEdit}>Cancel</button>\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n            <button className=\"button\" onClick={this.delete}>Delete</button>\r\n            <button className=\"button\" onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\r\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button onClick={this.edit}>Edit</button>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"float-left\">\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              style={{width: '200px'}}\r\n              readOnly={isReadOnly || !isEditMode}\r\n              />\r\n          </div>\r\n          <div className=\"float-right\">\r\n            <span>Last refreshed: {lastRefreshed}</span>\r\n            <button className=\"button icon-button\" onClick={this.toggleAutoRefresh}>\r\n              {\r\n                autoRefreshStatus === 'ON' ? \r\n                (\r\n                  <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\r\n                ) : \r\n                (\r\n                  <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\r\n                )\r\n              }\r\n            </button>\r\n            <button className=\"button icon-button\" onClick={this.refresh}>\r\n              <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={this.toggleFilterViewPanel}>Show Filters</button>\r\n            \r\n            {fullScreenButtonPanel}\r\n            {editButtonPanel}\r\n          </div>\r\n        </div>\r\n        {\r\n          (!isReadOnly && isEditMode) ?\r\n          (\r\n            <div>\r\n              <div className=\"inline-block\">Height:</div>\r\n              <input \r\n                type=\"text\" \r\n                name=\"height\" \r\n                value={this.state.height}\r\n                onChange={this.handleInputChange} \r\n                className=\"inline-block\" \r\n                style={{width: '200px'}}\r\n                />\r\n\r\n              <div className=\"inline-block\">Background Color</div>\r\n              <ColorPicker />\r\n\r\n            </div>\r\n          ) : null\r\n        }\r\n\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          isEditMode={this.state.isEditMode}\r\n          height={this.state.height}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n        />\r\n        <FilterViewPanel \r\n          ref={this.filterViewPanel} \r\n          onEdit={this.openFilterEditPanel}\r\n          onApplyFilters={this.applyFilters}\r\n          isEditMode={this.state.isEditMode}\r\n          show={this.state.showFilterViewPanel}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'lg-modal-panel'} \r\n          title={'Widget Edit'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showFilterEditPanel}\r\n          onClose={() => this.setState({ showFilterEditPanel: false })}\r\n          modalClass={'lg-modal-panel'}\r\n          title={'Filter Edit'}>\r\n          <FilterEditPanel\r\n            ref={this.filterEditPanel}\r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveFilter}\r\n          />\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\nimport './Dashboard.css';\r\n\r\nimport { Route } from \"react-router-dom\";\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      name: '',\r\n      height: 800\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name,\r\n      height\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      height: height\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.setState({ \r\n          showEditPanel: false \r\n        });\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n  }\r\n\r\n  onSaveDashboard = (dashboardId) => {\r\n    console.log('onSaveDashboard', dashboardId);\r\n    this.fetchBoards();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dashboards = []\r\n    } = this.state;\r\n    \r\n    const dashboardRows = dashboards.map((d, index) => \r\n      <div key={index} className=\"dashboard-menu-item ellipsis\" onClick={() => this.view(d.id)}>\r\n        {d.name}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dashboard-sidebar\">\r\n          <div style={{margin: '5px'}}>\r\n            <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\r\n              <FontAwesomeIcon icon=\"plus\" /> New dashboard\r\n            </button>\r\n            <input \r\n              type=\"text\" \r\n              name=\"searchValue\" \r\n              value={this.state.searchValue}\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleInputChange} />\r\n          </div>\r\n          <div>\r\n            {dashboardRows}\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route \r\n            path=\"/workspace/dashboard/:id\" \r\n            render={(props) => <DashboardEditView key={props.match.params.id} onSaveDashboard={this.onSaveDashboard} />} \r\n            />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'small-modal-panel'} \r\n          title={'New'} >\r\n          <div>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              />\r\n            <label>Height</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.state.height}\r\n              onChange={this.handleInputChange} \r\n              />\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const url = this.props.location.search;\r\n    console.log('url', url);\r\n    const params = new URLSearchParams(url);\r\n    const dashboardName = params.get('name');\r\n    console.log('name', dashboardName);\r\n    console.log('dashboardEditView', this.dashboardEditView);\r\n\r\n    this.dashboardEditView.loadViewByDashboardName(dashboardName);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView wrappedComponentRef={comp => (this.dashboardEditView = comp)} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\n\r\nconst SYS_ROLES = ['developer', 'viewer'];\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      searchValue: '',\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, event) => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      this.setState({\r\n        id: user.id,\r\n        username: user.username,\r\n        name: user.name,\r\n        tempPassword: '',\r\n        sysRole: user.sysRole,\r\n        userGroups: user.userGroups\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  search = () => {\r\n    const { searchValue } = this.state;\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: sysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/user/' + id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n      });\r\n  }\r\n\r\n  addUserGroup = (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId, event) => {\r\n    event.preventDefault();\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      users = [],\r\n      groups = [],\r\n      userGroups = []\r\n    } = this.state;\r\n\r\n    const userItems = users.map(user => \r\n      <div key={user.id} className=\"user-card\">\r\n        <p>\r\n          {user.username}\r\n          {user.name}\r\n          {user.sysRole}\r\n          <button onClick={() => this.openEditPanel(user)}>update</button>\r\n          <button onClick={() => this.delete(user.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupOptions = groups.map(group => \r\n      <option value={group.id} key={group.id}>{group.name}</option>\r\n    );\r\n\r\n    const sysRoleOptions = SYS_ROLES.map(groupName => \r\n      <option value={groupName} key={groupName}>{groupName}</option>\r\n    );\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId}>\r\n                <div>Group: {groups[j].name}</div>\r\n                <button onClick={(event) => this.removeUserGroup(groupId, event)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>User</div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Username...\"\r\n          />\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Group...\"\r\n          />\r\n        <button onClick={this.search}>Search</button>\r\n        <div className=\"row\">\r\n          {userItems}\r\n        </div>\r\n        <button onClick={() => this.openEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'lg-modal-panel'} \r\n          title={'User'} >\r\n\r\n          <div>\r\n            <h3>{'User'}</h3>\r\n            <form>\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n\r\n              <label>Temp password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"tempPassword\" \r\n                value={this.state.tempPassword}\r\n                onChange={this.handleInputChange} />\r\n              \r\n              <label>System Role</label>\r\n              <select value={this.state.sysRole} onChange={(event) => this.handleOptionChange('sysRole', event)}>\r\n                {sysRoleOptions}\r\n              </select>\r\n              <br/>\r\n              \r\n              <label>Groups</label>\r\n              <select value={this.state.userGroupId} onChange={(event) => this.handleOptionChange('userGroupId', event)}>\r\n                {groupOptions}\r\n              </select>\r\n              <button onClick={this.addUserGroup}>Add</button>\r\n              <div>\r\n                {userGroupItems}\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, event) => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      this.setState({\r\n        id: group.id,\r\n        name: group.name,\r\n        groupDashboards: group.groupDashboards\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/group/' + id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n      });\r\n  }\r\n\r\n  addGroupDashboard= (event) => {\r\n    event.preventDefault();\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n    if (index === -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.push(groupDashboardId);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId, event) => {\r\n    event.preventDefault();\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    const dashboardOptions = dashboards.map(dash => \r\n      <option value={dash.id} key={dash.id}>{dash.name}</option>\r\n    );\r\n\r\n    const groupItems = groups.map(group => \r\n      <div key={group.id} className=\"group-card\">\r\n        <p>\r\n          {group.name}\r\n          <button onClick={() => this.openEditPanel(group)}>update</button>\r\n          <button onClick={() => this.delete(group.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId}>\r\n                <div>Name: {dashboards[j].name}</div>\r\n                <button onClick={(event) => this.removeGroupDashboard(dashboardId, event)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Group</h1>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          placeholder=\"By Group...\"\r\n          />\r\n        <button onClick={this.search}>Search</button>\r\n        <div className=\"row\">\r\n          {groupItems}\r\n        </div>\r\n        <button onClick={() => this.openEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'lg-modal-panel'} \r\n          title={'Group'} >\r\n\r\n          <div>\r\n            <h3>{'Group'}</h3>\r\n            <form>\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.name}\r\n                onChange={this.handleInputChange} />\r\n              \r\n              <label>Dashboards</label>\r\n              <select value={this.state.groupDashboardId} onChange={(event) => this.handleOptionChange('groupDashboardId', event)}>\r\n                {dashboardOptions}\r\n              </select>\r\n              <button onClick={this.addGroupDashboard}>Add</button>\r\n              <div>\r\n                {groupDashboardItems}\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <div>\r\n              <button onClick={this.save}>Save</button>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\nimport { Route, Link, Switch } from \"react-router-dom\";\r\nimport User from './User';\r\nimport Group from './Group';\r\nimport './UserManagement.css';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/user-management/user',\r\n    value: 'User',\r\n    icon: 'fa-users'\r\n  }, \r\n  {\r\n    link: '/workspace/user-management/group',\r\n    value: 'Group',\r\n    icon: 'fa-user-cog',\r\n  }\r\n];\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: 'group',\r\n    }\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let menuItems = [];\r\n    for (let i = 0; i < MENU_ITEMS.length; i++) {\r\n      const menu = MENU_ITEMS[i];\r\n      const active = this.state.currentMenuLink === menu.link ? 'active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li className={active} key={i}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <i className={`fas ${menu.icon} fa-fw`}></i>\r\n              <span className=\"app-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <ul className=\"nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/workspace/user-management/user\" component={User} />\r\n            <Route path=\"/workspace/user-management/group\" component={Group} />\r\n          </Switch>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        alert('confirm password');\r\n        return;\r\n      }\r\n      \r\n      user.password = password;\r\n    }\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>Account</div>\r\n        <div className=\"form-panel\">   \r\n          <label>Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label>System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label>API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button className=\"button\" onClick={this.generateApiKey}>Generate new API Key</button>\r\n          <br/>\r\n\r\n          {\r\n            showUpdatePassword ?\r\n            (\r\n              <React.Fragment>\r\n                <br/>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label>Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n            ) :\r\n            (\r\n              <React.Fragment>\r\n                <br/>\r\n                <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n              </React.Fragment>\r\n            )\r\n          }\r\n\r\n          <br/>\r\n          <button className=\"button\" onClick={this.save}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","import React from 'react';\r\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\n\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport AuthStore from '../api/AuthStore';\r\nimport './Workspace.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data source',\r\n    icon: 'database'\r\n  }, \r\n  {\r\n    link: '/workspace/user-management',\r\n    value: 'User Management',\r\n    icon: 'users-cog'\r\n  }\r\n];\r\n\r\nconst ACCOUNT_MENU_LINK = '/workspace/account';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard',\r\n      username: '',\r\n      sysRole: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Workspace - componentDidMount');\r\n    const pathname = this.props.location.pathname;\r\n    // TODO: fetch user information\r\n    this.setState({\r\n      currentMenuLink: pathname,\r\n    });\r\n    if (AuthStore.isAuthenticated) {\r\n      const sysRole = AuthStore.sysRole;\r\n      this.setState({\r\n        sysRole: sysRole\r\n      });\r\n    } else {\r\n      // Try login. If not, redirect\r\n    }\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n      sysRole\r\n    } = this.state;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.name === 'dashboard' || m.name === 'account');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li className={active} key={menu.link}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"workspace-nav\">  \r\n          <div className=\"workspace-name\">Poli</div>\r\n          <ul className=\"workspace-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div className=\"workspace-account-menu\">\r\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\r\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\r\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\r\n                <span className=\"workspace-nav-menu-text\">Account</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"workspace-logout-button inline-block\">\r\n              <Link to=\"/login\">\r\n                <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"workspace-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route exact path=\"/workspace/dashboard/view\" component={DashboardFullScreenView} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n            <Route path=\"/workspace/dashboard\" component={Dashboard} />\r\n            <Route path=\"/workspace/user-management\" component={UserManagement} />\r\n          </Switch>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Workspace);\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, Component } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\n\r\nimport AuthStore from './api/AuthStore';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\r\n  faTv, faPlug, faUser, faSignOutAlt\r\n} from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \r\n  faTv, faPlug, faUser, faSignOutAlt\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('App - componentDidMount', AuthStore.isAuthenticated);\r\n  }\r\n   \r\n  render() {\r\n    console.log('App - render', AuthStore.isAuthenticated);\r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <PrivateRoute authenticated={AuthStore.isAuthenticated} path='/workspace' component={Workspace} />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} />\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}