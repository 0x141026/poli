{"version":3,"sources":["views/Overview.js","api/WebApi.js","views/DataSources.js","views/Dashboards.js","components/GridDraggable.js","components/GridResizable.js","components/GridItem.js","components/GridLayout.js","views/Test.js","views/EditDataSource.js","components/QuerySlicer.js","components/NumberRange.js","api/Util.js","components/FilterViewPanel.js","components/WidgetViewPanel.js","api/EchartsApi.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","components/Modal.js","views/DashboardEditView.js","views/SingleTest.js","App.js","index.js"],"names":["Overview","react_default","a","createElement","Component","fetchDataSources","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","get","abrupt","sent","stop","this","apply","arguments","fetchFiltersByDashboardId","_ref3","_callee3","dashboardId","_context3","concat","_x2","_ref4","_callee4","url","response","_context4","axios","data","t0","_x3","DataSources","state","jdbcDataSources","showEditPanel","id","name","connectionUrl","username","password","type","ping","handleInputChange","event","target","value","_this","setState","defineProperty","save","preventDefault","ds","post","then","res","initData","update","console","log","put","delete","clearEditPanel","showDeletePanel","webApi","_this2","filterDrawerClass","jdbcDataSourceItems","map","index","key","onClick","mode","className","onChange","row","Dashboard","dashboards","fetchBoards","dashboard","props","history","push","jump","panelClass","dashboardRows","d","withRouter","WIDGET_BORDER","GridDraggable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onMouseDown","gridItemNode","ReactDOM","findDOMNode","assertThisInitialized","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","i","length","style","zIndex","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","width","boxHeight","height","Math","floor","left","top","React","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","GridItem","x","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","removeWidget","onWidgetRemove","onTdPropsChange","rowInfo","column","instance","e","handleOriginal","renderWidgetContent","widgetItem","headers","queryResult","undefined","Array","isArray","obj","keys","_i","Header","accessor","es","columns","minRows","showPagination","getTdProps","styles","marginRight","components_GridDraggable","components_GridResizable","GridLayout","showGridlines","backgroundSize","backgroundImage","boxItems","widgets","components_GridItem","assign","Test","selectedOption","firstName","lastName","newValue","submit","handleChange","src_components_GridLayout","PureComponent","EditDataSource","router","reset","initialState","match","params","QuerySlicer","isSelectAll","isChecked","checked","newCheckBoxes","toConsumableArray","checkBoxes","findIndex","filterId","toggleSelectAll","newIsSelectAll","prevState","checkBoxItems","box","NumberRange","isArrayEmpty","array","FilterViewPanel","fetchFilters","result","filters","queryFilters","filter","queryRequest","f","newFilters","JSON","parse","util","values","_i2","val","renderFilterPanel","filterPanel","_loop","edit","remove","components_QuerySlicer","onQuerySlicerChange","components_NumberRange","onEdit","splice","applyFilters","filterParams","paramValues","j","checkBox","param","onApplyFilters","show","onClose","WidgetViewPanel","fetchWidgets","queryWidgets","w","newWidgets","CHART_COLORS","getPieOption","legend","series","color","tooltip","orient","right","bottom","center","radius","PIE","CHART_TYPES","WidgetEditPanel","fetchWidget","jdbcDataSourceId","sqlQuery","_x","handleAceEditorChange","handleDataSourceChange","handleChartTypeChange","chartType","close","runQuery","addFilterParam","newFilterParams","removeFilterParam","handleFilterChange","generateChart","_this$state","aggrKey","aggrValue","chartOption","echartsApi","queryResultItem","dataSourceOptions","filterOptions","filterParamItems","chartOptionList","o","lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","class","echarts_for_react_lib_default","option","TYPES","FilterEditPanel","fetchFilter","handleTypeChange","typeOptions","t","Modal","modalStatus","modalClass","children","DashboardEditView","refresh","filterViewPanel","current","widgetViewPanel","openFilterEditPanel","filterEditPanel","showFilterEditPanel","openWidgetEditPanel","widgetEditPanel","showWidgetEditPanel","showFilterViewPanel","jdbcDataSourceOptions","createRef","components_WidgetViewPanel","ref","components_Modal","components_FilterViewPanel","components_WidgetEditPanel","components_FilterEditPanel","SingleTest","getOption","title","text","trigger","toolbox","feature","saveAsImage","grid","containLabel","xAxis","boundaryGap","yAxis","stack","areaStyle","normal","onChartClick","echarts","onChartLegendselectchanged","echart","onEvents","click","legendselectchanged","App","handleClick","toggleMenu","menuMin","appName","Link","to","margin","Route","exact","path","component","Dashboards","render","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.5c10a898.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\n\r\nclass Overview extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Overview</h1>     \r\n        <h5>Number of data sources</h5>\r\n        <h5>Number of dashboards</h5>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Overview;\r\n","import axios from 'axios';\n\nconst JSON_HEADER = {\n  headers: {\n    'Content-Type': 'application/json',\n  }\n};\n\nexport const fetchDataSources = async () => {\n  return await get('/ws/jdbcdatasource');\n};\n\nexport const fetchDashboardById = async (id) => {\n  return await get(`/ws/dashboard/${id}`);\n}\n\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\n}\n\nconst get = async (url) => {\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (e) {\n    return null;\n  }\n} \n\n\n","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as webApi from '../api/WebApi';\r\n\r\nclass DataSources extends Component {\r\n\r\n  state = { \r\n    jdbcDataSources: [],\r\n    showEditPanel: false,\r\n    id: null,\r\n    name: '',\r\n    connectionUrl: '',\r\n    username: '',\r\n    password: '',\r\n    type: '',\r\n    ping: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Fetch all datasources\r\n    this.initData();\r\n    \r\n  }\r\n\r\n  async initData() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const ds = {\r\n      connectionUrl: this.state.connectionUrl,\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      name: this.state.name,\r\n      type: this.state.password,\r\n      ping: this.state.ping\r\n    };\r\n\r\n    axios.post('/ws/jdbcdatasource', ds)\r\n      .then(res => {\r\n        this.initData();\r\n      });\r\n  }\r\n\r\n  update = (ds) => {\r\n    console.log('update', ds);\r\n\r\n    axios.put('/ws/jdbcdatasource', ds)\r\n      .then(res => {\r\n        this.initData();\r\n      });\r\n  }\r\n\r\n  delete = (id) => {\r\n    console.log('delete', id);\r\n    axios.delete('/ws/jdbcdatasource/' + id)\r\n      .then(res => {\r\n        this.initData();\r\n      });\r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        console.log('ping', res.data);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState({\r\n      id: null,\r\n      connectionUrl: '',\r\n      username: '',\r\n      password: '',\r\n      name: '',\r\n      type: '',\r\n      ping: ''\r\n    });\r\n  }\r\n\r\n  showEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        type: ds.type,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  showDeletePanel = () => {\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const filterDrawerClass = this.state.showEditPanel ? 'right-drawer display-block' : 'right-drawer display-none';\r\n\r\n    const jdbcDataSourceItems = this.state.jdbcDataSources.map((ds, index) => \r\n      <tr key={index}>\r\n        <td>{ds.name}</td>\r\n        <td>{ds.connectionUrl}</td>\r\n        <td>{ds.type}</td>\r\n        <td>{ds.username}</td>\r\n        <td>{ds.ping}</td>\r\n        <td><button onClick={() => this.showEditPanel(ds)}>update</button></td>\r\n        <td><button onClick={() => this.delete(ds.id)}>delete</button></td>\r\n        <td><button onClick={() => this.ping(ds.id)}>ping</button></td>\r\n      </tr>\r\n    );\r\n\r\n    const mode = this.state.id === null ? 'New' : 'Update';\r\n\r\n    return (\r\n      <div>\r\n        <h1>Data Sources</h1>\r\n        <div>\r\n          <h2>Table</h2>\r\n\r\n          <table>\r\n            <thead>\r\n            </thead>\r\n            <tbody>\r\n              {jdbcDataSourceItems}\r\n            </tbody>\r\n          </table>\r\n\r\n        </div>\r\n        <button onClick={() => this.showEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <div className={filterDrawerClass}>\r\n          <h3>{mode}</h3>\r\n          <button onClick={() => this.setState({showEditPanel: false })}>Close</button>\r\n          <form>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Connection Url</label>\r\n            <textarea\r\n              row=\"3\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Password</label>\r\n            <input \r\n              type=\"password\" \r\n              name=\"password\" \r\n              value={this.state.password}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Type</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"type\" \r\n              value={this.state.type}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} />\r\n          </form>\r\n\r\n          <div>\r\n            <button onClick={this.save}>Save</button>\r\n            <button onClick={this.ping}>Ping</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSources;\r\n","\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n  state = { \r\n    dashboards: [],\r\n    showEditPanel: false,\r\n    name: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const dashboard = {\r\n      name: this.state.name\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.props.history.push(`/dashboard/edit/${dashboardId}`);\r\n      });\r\n  }\r\n\r\n  update = (dashboardId) => {\r\n    this.props.history.push(`/dashboard/edit/${dashboardId}`);\r\n  }\r\n\r\n  delete = (dashboardId) => {\r\n    console.log('delete', dashboardId);\r\n    axios.delete('/ws/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        this.fetchBoards();\r\n      });\r\n  }\r\n\r\n  jump = () => {\r\n    this.props.history.push('/overview');\r\n  }\r\n\r\n  render() {\r\n    const panelClass = this.state.showEditPanel ? 'right-drawer display-block' : 'right-drawer display-none';\r\n\r\n    const dashboardRows = this.state.dashboards.map((d, index) => \r\n      <tr key={index}>\r\n        <td>{d.id}</td>\r\n        <td>{d.name}</td>\r\n        <td><button onClick={() => this.update(d.id)}>update</button></td>\r\n        <td><button onClick={() => this.delete(d.id)}>delete</button></td>\r\n      </tr>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        Board\r\n        <button onClick={this.jump}>Overview</button>\r\n        <button onClick={() => this.setState({ showEditPanel: true })}>Add</button>\r\n\r\n        <table>\r\n          <thead>\r\n          </thead>\r\n          <tbody>\r\n            {dashboardRows}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className={panelClass}>\r\n          <div>New dashboard</div>\r\n          <button onClick={() => this.setState({showEditPanel: false })}>Close</button>\r\n          <button onClick={this.save}>Save</button>\r\n          <form>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    console.log('GridDraggable onMouseMove', event);\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    console.log('onMouseDown', event);\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    console.log('GridResizer onMouseMove', event);\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      x: this.props.x,\r\n      y: this.props.y,\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    console.log('GridItem onMouseMove', event);\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    console.log('editWidget', widgetId);\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n\r\n        // IMPORTANT! React-Table uses onClick internally to trigger\r\n        // events like expanding SubComponents and pivots.\r\n        // By default a custom 'onClick' handler will override this functionality.\r\n        // If you want to fire the original onClick handler, call the\r\n        // 'handleOriginal' function.\r\n        if (handleOriginal) {\r\n          handleOriginal();\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  renderWidgetContent = () => {\r\n    const widget = this.props;\r\n    let widgetItem = (<div>NONE</div>);\r\n    if (widget.type === 'table') {\r\n\r\n      const headers = [];\r\n      const queryResult = widget.queryResult;\r\n      if (queryResult !== undefined \r\n        && queryResult.length !== 0 \r\n        && Array.isArray(queryResult)) {\r\n        const obj = queryResult[0];\r\n        const keys = Object.keys(obj);\r\n        for (const key of keys) {\r\n          headers.push({\r\n            Header: key,\r\n            accessor: key\r\n          })\r\n        }\r\n      }\r\n\r\n      widgetItem = (\r\n        <ReactTable\r\n          data={queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n          getTdProps={this.onTdPropsChange}\r\n        />\r\n      );\r\n    } \r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    let styles = {\r\n      left: this.state.x,\r\n      top: this.state.y,\r\n      width: this.props.width,\r\n      height: this.props.height,\r\n      zIndex: 1\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {this.props.name}\r\n\r\n          <div className=\"icon-button-group\" style={{marginRight: '20px'}}>\r\n            <div className=\"icon-btn\" onClick={() => this.editWidget(this.props.id)}>\r\n              <i className=\"fas fa-edit fa-fw\"></i>\r\n            </div>\r\n            <div className=\"icon-btn\" onClick={() => this.removeWidget(this.props.id)}>\r\n              <i className=\"fas fa-trash-alt fa-fw\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        <GridDraggable \r\n          onMouseUp={this.onMouseUp}\r\n          onMouseDown={this.onMouseDown}\r\n          onMouseMove={this.onMouseMove}\r\n          mode={this.state.mode}\r\n          snapToGrid={this.props.snapToGrid} />\r\n\r\n        <GridResizable \r\n          onMouseUp={this.onMouseUp}\r\n          onMouseDown={this.onMouseDown}\r\n          onMouseMove={this.onMouseMove}\r\n          mode={this.state.mode} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridItem;","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let styles = {\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px'\r\n    };\r\n\r\n    if (this.props.showGridlines) {\r\n      styles.backgroundSize = '15px 15px';\r\n      styles.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = this.props.widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={styles} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport GridLayout from '../components/GridLayout';\r\n\r\nconst options = [\r\n  { value: 'chocolate', label: 'Chocolate' },\r\n  { value: 'strawberry', label: 'Strawberry' },\r\n  { value: 'vanilla', label: 'Vanilla' }\r\n];\r\n\r\nconst widgets = [\r\n   {\r\n    id: 1,\r\n    name: 'title1',\r\n    x: 0,\r\n    y: 0,\r\n    width: 100,\r\n    height: 100\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'title2',\r\n    x: 100,\r\n    y: 100,\r\n    width: 100,\r\n    height: 100\r\n  }\r\n];\r\n\r\nclass Test extends React.PureComponent {\r\n\r\n  state = {\r\n    selectedOption: null,\r\n    data: [\r\n      {firstName: 'a1', lastName: 'b1'},\r\n      {firstName: 'a2', lastName: 'b2'},\r\n      {firstName: 'a3', lastName: 'b3'}\r\n    ]\r\n  }\r\n\r\n  onChange = (newValue) => {\r\n    console.log('change',newValue);\r\n  }\r\n\r\n  submit = () => {\r\n    console.log('submit', );\r\n  }\r\n\r\n  handleChange = (selectedOption) => {\r\n    this.setState({ selectedOption });\r\n    console.log(`Option selected:`, selectedOption);\r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    console.log('editWidget', widgetId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n          <GridLayout \r\n            width={800}\r\n            height={600}\r\n            snapToGrid={false}\r\n            showGridlines={true}\r\n            widgets={widgets} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass EditDataSource extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {\n      id: 0,\n      name: '',\n      connectionUrl: '',\n      username: '',\n      password: '',\n      type: '',\n      ping: '',\n      mode: ''\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    console.log(\"id\", id);\n    let mode = 'Edit';\n    if (id === undefined) {\n      mode = 'New';\n    }\n    this.setState({\n      mode: mode\n    });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  save = (event) => {\n    event.preventDefault();\n    const ds = {\n      connectionUrl: this.state.connectionUrl,\n      username: this.state.username,\n      password: this.state.password,\n      name: this.state.name,\n      type: this.state.password,\n      ping: this.state.ping\n    };\n\n    const { router } = this.props;\n\n    axios.post('/ws/jdbcdatasource', ds)\n      .then(res => {\n        this.reset();\n        router.push('/datasources');\n      });\n  }\n\n  reset = () => {\n    this.setState(this.initialState);\n  }\n\n  ping = () => {\n    \n  }\n\n  render() {\n\n    return (\n      <div>\n        <h1>{this.state.mode} Data Source</h1>\n        \n\n        \n\n        <div>\n          <button type=\"primary\" onClick={this.save}>Save</button>\n          <button type=\"primary\" onClick={this.ping}>Ping</button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default EditDataSource;\n","import React from 'react';\r\n\r\nclass QuerySlicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const isChecked = target.checked;\r\n\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const checkBoxes = this.props.checkBoxes;\r\n    let checkBoxItems = [];\r\n    if (checkBoxes !== undefined && checkBoxes.length !== 0) {\r\n      checkBoxItems = this.props.checkBoxes.map((box, index) => \r\n        <div key={index}>\r\n          <input \r\n            type=\"checkbox\" \r\n            name={box.value} \r\n            value={box.value} \r\n            checked={box.isChecked} \r\n            onChange={this.handleChange}\r\n            />\r\n            {box.value}\r\n          <br/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button onClick={this.toggleSelectAll}>Toggle Select All {this.state.isSelectAll}</button>\r\n        <div>\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuerySlicer;\r\n","import React from 'react';\n\nclass NumberRange extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        min\n        <input type=\"number\" name=\"min\" />\n        max\n        <input type=\"number\" name=\"max\" />\n      </div>\n    );\n  }\n}\n\nexport default NumberRange;","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};","import React, { Component } from 'react';\r\nimport QuerySlicer from \"./QuerySlicer\";\r\nimport NumberRange from \"./NumberRange\";\r\nimport * as util from '../api/Util';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nclass FilterViewPanel extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      dashboardId: null,\r\n      filters: []\r\n    };\r\n  }\r\n\r\n  fetchFilters = (dashboardId) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      dashboardId: dashboardId\r\n    })\r\n\r\n    axios.get('/ws/filter/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          filters: result,\r\n        }, this.queryFilters);\r\n      });\r\n  }\r\n\r\n  queryFilters = () => {\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === 'slicer') {\r\n        const queryRequest = filter.data;\r\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\r\n          .then(res => {\r\n            const result = res.data;\r\n            const index = filters.findIndex(f => f.id === result.id);\r\n            const newFilters = [...this.state.filters];\r\n            const queryResult = JSON.parse(result.data);\r\n            const checkBoxes = [];\r\n\r\n            if (!util.isArrayEmpty(queryResult)) {\r\n              for (let i = 0; i < queryResult.length; i++) {\r\n                const values = Object.values(queryResult[i]);\r\n                for (const val of values) {\r\n                  checkBoxes.push({\r\n                    value: val,\r\n                    isChecked: false\r\n                  });\r\n                }\r\n              }\r\n            }\r\n\r\n            newFilters[index].queryResult = queryResult;\r\n            newFilters[index].checkBoxes = checkBoxes;\r\n\r\n            this.setState({\r\n              filters: newFilters\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderFilterPanel = () => {\r\n    const filterPanel = [];\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === 'slicer') {\r\n        const checkBoxes = filter.checkBoxes;\r\n        filterPanel.push(\r\n          (\r\n            <div className=\"filterCard\">\r\n              <div className=\"filter-card-title\">\r\n                {filter.name}\r\n                <div className=\"icon-button-group\">\r\n                  <div className=\"icon-btn\" onClick={() => this.edit(filter.id)}>\r\n                    <i className=\"fas fa-edit fa-fw\"></i>\r\n                  </div>\r\n                  <div className=\"icon-btn\" onClick={() => this.remove(filter.id)}>\r\n                    <i className=\"fas fa-trash-alt fa-fw\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <QuerySlicer \r\n                  key={i} \r\n                  filterId={filter.id} \r\n                  checkBoxes={checkBoxes} \r\n                  onChange={this.onQuerySlicerChange} \r\n                />\r\n              </div>\r\n            </div>\r\n          )\r\n        );\r\n      } else if (filter.type === 'number-range') {\r\n        filterPanel.push(<NumberRange key={i} />);\r\n      } else if (filter.type === 'date-range') {\r\n\r\n      }\r\n    }\r\n    return filterPanel;\r\n  }\r\n\r\n  edit = (filterId) => {\r\n    this.props.onEdit(filterId);\r\n  }\r\n\r\n  remove = (filterId) => {\r\n    axios.delete('/ws/filter/' + filterId)\r\n      .then(res => {\r\n        const index = this.state.filters.findIndex(f => f.id === filterId);\r\n        const newFilters = [...this.state.filters];\r\n        newFilters.splice(index, 1);\r\n        this.setState({\r\n          filters: newFilters\r\n        });\r\n      });\r\n  }\r\n\r\n  onQuerySlicerChange = (filterId, checkBoxes) => {\r\n    const index = this.state.filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...this.state.filters];\r\n    newFilters[index].checkBoxes = [...checkBoxes];\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n\r\n    // TODO: select all.\r\n    // const isSelectAll = checked.length === checkBoxes.length;    \r\n  }\r\n\r\n  applyFilters = () => {\r\n    console.log('applyFilters');\r\n    const { filters } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === 'slicer') {\r\n        const checkBoxes = filter.checkBoxes;\r\n        const paramValues = [];\r\n        for (let j = 0; j < checkBoxes.length; j++) {\r\n          const checkBox = checkBoxes[j];\r\n          if (checkBox.isChecked) {\r\n            paramValues.push(checkBox.value);\r\n          }\r\n        }\r\n        filterParams.push({\r\n          param: filter.data.param,\r\n          value: paramValues\r\n        });\r\n      }\r\n    }\r\n\r\n    this.props.onApplyFilters(filterParams);\r\n  }\r\n\r\n  render() {\r\n    const panelClass = this.props.show ? 'display-block' : 'display-none';\r\n\r\n    return (\r\n      <div className={`testPanel ${panelClass}`}>\r\n        <h5>FilterViewPanel</h5>\r\n        <button onClick={() => this.props.onClose()}>Close</button>\r\n        <button onClick={this.applyFilters}>Run</button>\r\n        <div className=\"filterViewPanel\">\r\n          {this.renderFilterPanel()}\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterViewPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as util from '../api/Util';\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      snapToGrid: false,\r\n      showGridlines: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const width = thisNode.clientWidth;\r\n    // const height = parentNode.clientHeight;\r\n    this.setState({\r\n      width: width - 20 * 2,\r\n      height: 600\r\n    });\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, filterParams) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n\r\n    axios.get('/ws/widget/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result,\r\n        }, this.queryWidgets(filterParams));\r\n      });\r\n  }\r\n\r\n  queryWidgets = (filterParams) => {\r\n    console.log('queryWidgets', filterParams);\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const widgets = this.state.widgets;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      axios.post('/ws/jdbcquery/widget/' + widget.id, params)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const index = widgets.findIndex(w => w.id === result.id);\r\n          const newWidgets = [...this.state.widgets];\r\n          newWidgets[index].queryResult = JSON.parse(result.data);\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const isChecked = target.checked;\r\n    this.setState({\r\n      [name]: isChecked\r\n    })\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    console.log('onWidgetMove', widget);\r\n    // FIXME: use save button to update position and size of all widgets at the same time.\r\n    axios.post('/ws/widget/position', widget)\r\n      .then(res => {\r\n        const index = this.state.widgets.findIndex(w => w.id === widget.id);\r\n        const newWidgets = [...this.state.widgets];\r\n        newWidgets[index].x = widget.x;\r\n        newWidgets[index].y = widget.y;\r\n        newWidgets[index].width = widget.width;\r\n        newWidgets[index].height = widget.height;\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n      \r\n  }\r\n\r\n  onWidgetRemove = (widgetId) => {\r\n    axios.delete('/ws/widget/' + widgetId)\r\n      .then(res => {\r\n        const index = this.state.widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...this.state.widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const widgetItems = this.state.widgets.map((widget, index) => {\r\n      \r\n      const headers = [];\r\n      const queryResult = widget.queryResult;\r\n      if (!util.isArrayEmpty(queryResult)) {\r\n        const obj = queryResult[0];\r\n        const keys = Object.keys(obj);\r\n        for (const key of keys) {\r\n          headers.push({\r\n            Header: key,\r\n            accessor: key\r\n          })\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div key={index}>\r\n          <ReactTable\r\n            data={queryResult}\r\n            columns={headers}\r\n            minRows={0}\r\n            showPagination={false}\r\n          />\r\n        </div>);\r\n    });\r\n\r\n    return (\r\n      <div className=\"testPanel\">\r\n        <h3>WidgetViewPanel</h3>\r\n        <input \r\n          type=\"checkbox\" \r\n          name=\"snapToGrid\"\r\n          value=\"snapToGrid\"\r\n          checked={this.state.snapToGrid} \r\n          onChange={this.handleChange}\r\n          />\r\n          snapToGrid\r\n        <br/>\r\n        <input \r\n          type=\"checkbox\" \r\n          name=\"showGridlines\"\r\n          value=\"showGridlines\"\r\n          checked={this.state.showGridlines} \r\n          onChange={this.handleChange}\r\n          />\r\n          showGridlines\r\n        <br/>\r\n        \r\n        <GridLayout \r\n          width={this.state.width}\r\n          height={this.state.height}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.onWidgetRemove} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","const CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOption = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      data: legend,\r\n      orient: 'vertical',\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['50%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as util from '../api/Util';\r\nimport * as echartsApi from '../api/EchartsApi';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\n\r\nconst PIE = 'pie';\r\nconst TABLE = 'table';\r\nconst CHART_TYPES = [TABLE, PIE];\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      filters: [],\r\n      widgetId: null,\r\n      name: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: null,\r\n      queryResult: [],\r\n      filterId: null,\r\n      filterParams: [],\r\n      chartType: 'table',\r\n      aggrKey: '',\r\n      aggrValue: '',\r\n      chartOption: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('WidgetEditPanel', 'componentDidMount');\r\n  }\r\n\r\n  fetchWidget = async (widgetId, dashboardId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    const filters = await webApi.fetchFiltersByDashboardId(dashboardId);\r\n    this.setState({ \r\n      filters: filters \r\n    });\r\n\r\n    if (widgetId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n\r\n      if (filters.length !== 0) {\r\n        this.setState({\r\n          filterId: filters[0].id\r\n        });\r\n      }\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            widgetId: widgetId,\r\n            name: result.name,\r\n            x: result.x,\r\n            y: result.y,\r\n            width: result.width,\r\n            height: result.height,\r\n            sqlQuery: result.sqlQuery,\r\n            jdbcDataSourceId: result.jdbcDataSourceId,\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    this.setState({ \r\n      jdbcDataSourceId: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChartTypeChange = (event) => {\r\n    this.setState({ \r\n      chartType: event.target.value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const widget ={\r\n      id: this.state.widgetId,\r\n      name: this.state.name,\r\n      dashboardId: this.props.dashboardId,\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n    \r\n    axios.post('/ws/widget', widget)\r\n      .then(res => {\r\n        \r\n      });\r\n  }\r\n\r\n  close = () => {\r\n    this.props.onClose();\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  addFilterParam = (event) => {\r\n    event.preventDefault();\r\n    const filterId = this.state.filterId;\r\n    const index = this.state.filterParams.findIndex(f => f === filterId);\r\n    if (index === -1) {\r\n      const newFilterParams = [...this.state.filterParams];\r\n      newFilterParams.push(filterId);\r\n      this.setState({\r\n        filterParams: newFilterParams\r\n      });\r\n    } \r\n  }\r\n\r\n  removeFilterParam = (filterId, event) => {\r\n    event.preventDefault();\r\n    const index = this.state.filterParams.findIndex(f => f === filterId);\r\n    if (index !== -1) {\r\n      const newFilterParams = [...this.state.filterParams];\r\n      newFilterParams.splice(index, 1);\r\n      this.setState({\r\n        filterParams: newFilterParams\r\n      });\r\n    } \r\n  }\r\n\r\n  handleFilterChange = (event) => {\r\n    this.setState({ \r\n      filterId: event.target.value\r\n    });\r\n  }\r\n\r\n  generateChart = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.chartType === PIE) {\r\n      const { \r\n        aggrKey, \r\n        aggrValue, \r\n        queryResult \r\n      } = this.state;\r\n      if (!util.isArrayEmpty(queryResult)) {\r\n        let legend = [];\r\n        let series = [];\r\n        for (let i = 0; i < queryResult.length; i++) {\r\n          const row = queryResult[i];\r\n          legend.push(row[aggrKey]);\r\n          series.push({\r\n            name: row[aggrKey],\r\n            value: row[aggrValue]\r\n          });\r\n        }\r\n        const chartOption = echartsApi.getPieOption(legend, series);\r\n        this.setState({\r\n          chartOption: chartOption\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const dataSourceOptions = this.state.jdbcDataSources.map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const filterOptions = this.state.filters.map(f =>\r\n      <option value={f.id} key={f.id}>{f.id}</option>\r\n    );\r\n\r\n    const filterParamItems = this.state.filterParams.map(f =>\r\n      <div key={f}>\r\n        <div>value: {f}</div>\r\n        <button onClick={(event) => this.removeFilterParam(f, event)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const chartOptionList = CHART_TYPES.map(o =>\r\n      <option value={o} key={o}>{o}</option>\r\n    );\r\n\r\n    const headers = [];\r\n    const queryResult = this.state.queryResult;\r\n    let queryResultItem;\r\n    if (!util.isArrayEmpty(queryResult)) {\r\n      const obj = queryResult[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        })\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={this.state.queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResult}</div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>WidgetEditPanel: {this.state.widgetId}</h3>\r\n        <button onClick={this.save}>Save</button>\r\n        <button onClick={this.runQuery}>Run Query</button>\r\n\r\n        <form>\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>DataSource</label>\r\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n            {dataSourceOptions}\r\n          </select>\r\n        \r\n          <label>SQL Query</label>\r\n          <AceEditor\r\n            style={{ marginTop: '8px' }}\r\n            value={this.state.sqlQuery}\r\n            mode=\"mysql\"\r\n            theme=\"xcode\"\r\n            name=\"blah2\"\r\n            onChange={this.handleAceEditorChange}\r\n            height={'300px'}\r\n            width={'100%'}\r\n            fontSize={15}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              enableBasicAutocompletion: true,\r\n              enableLiveAutocompletion: true,\r\n              enableSnippets: false,\r\n              showLineNumbers: true,\r\n              tabSize: 2,\r\n            }}\r\n          />\r\n\r\n          <label>Result</label>\r\n          {queryResultItem}\r\n\r\n          <label>Filter Params</label>\r\n          <div>\r\n            <select value={this.state.filterId} onChange={this.handleFilterChange}>\r\n              {filterOptions}\r\n            </select>\r\n            <div>\r\n              {filterParamItems}\r\n            </div>\r\n            <button onClick={this.addFilterParam}>Add</button>\r\n            <div>\r\n              \r\n            </div>\r\n          </div>\r\n        \r\n\r\n          <label>Columns Mapping</label>\r\n          <div>column name, display name, data type</div>\r\n\r\n          <label>Chart Options</label>\r\n          <select value={this.state.chartType} onChange={this.handleChartTypeChange}>\r\n            {chartOptionList}\r\n          </select>\r\n\r\n          <label><i class=\"fas fa-table\"></i> Table</label>\r\n          <div></div>\r\n\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"users\" by \"last name\"</div>\r\n          <label>Aggr Key</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"aggrKey\" \r\n            value={this.state.aggrKey}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>By Aggr Value</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"aggrValue\" \r\n            value={this.state.aggrValue}\r\n            onChange={this.handleInputChange} \r\n          />\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n\r\n          <ReactEcharts \r\n            option={this.state.chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n\r\n        </form>\r\n        \r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","import React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as util from '../api/Util';\r\n\r\n\r\nconst QUERY_SLICER = 'slicer'\r\nconst TYPES = [QUERY_SLICER];\r\n\r\nclass FilterEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      filterId: null,\r\n      name: '',\r\n      type: 'slicer',\r\n      data: {},\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: null,\r\n      queryResult: [],\r\n      param: ''\r\n    };\r\n  }\r\n\r\n  fetchFilter = async (filterId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    if (filterId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n      this.setState({\r\n        filterId: null\r\n      })\r\n    } else {\r\n      axios.get('/ws/filter/' + filterId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const data = result.data;\r\n          this.setState({\r\n            filterId: filterId,\r\n            name: result.name,\r\n            type: result.type,\r\n            data: data\r\n          });\r\n\r\n          if (result.type === 'slicer') {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              jdbcDataSourceId: data.jdbcDataSourceId,\r\n              param: data.param\r\n            });\r\n          }\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    this.setState({ \r\n      jdbcDataSourceId: event.target.value\r\n    });\r\n  }\r\n\r\n  handleTypeChange = (event) => {\r\n    this.setState({ \r\n      type: event.target.value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const filter ={\r\n      id: this.state.filterId,\r\n      name: this.state.name,\r\n      type: this.state.type,\r\n      dashboardId: this.props.dashboardId,\r\n      data: {\r\n        jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n        sqlQuery: this.state.sqlQuery,\r\n        param: this.state.param\r\n      }\r\n    };\r\n    \r\n    axios.post('/ws/filter', filter)\r\n      .then(res => {\r\n        \r\n      });\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const dataSourceOptions = this.state.jdbcDataSources.map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const typeOptions = TYPES.map(t =>\r\n      <option value={t} key={t}>{t}</option>\r\n    );\r\n\r\n    const headers = [];\r\n    const { queryResult } = this.state;\r\n    let queryResultItem;\r\n    if (!util.isArrayEmpty(queryResult)) {\r\n      console.log('queryResult', queryResult);\r\n      const obj = queryResult[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        })\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={this.state.queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResult}</div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>FilterEditPanel: {this.state.filterId}</h3>\r\n        <button onClick={() => this.props.onClose()}>Close</button>\r\n        <button onClick={this.save}>Save</button>\r\n        <button onClick={this.runQuery}>Run</button>\r\n\r\n        <form>\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>Type</label>\r\n          <select value={this.state.type} onChange={this.handleTypeChange}>\r\n            {typeOptions}\r\n          </select>\r\n\r\n          <label>DataSource</label>\r\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n            {dataSourceOptions}\r\n          </select>\r\n        \r\n          <label>SQL Query</label>\r\n          <AceEditor\r\n            style={{ marginTop: '8px' }}\r\n            value={this.state.sqlQuery}\r\n            mode=\"mysql\"\r\n            theme=\"xcode\"\r\n            name=\"blah2\"\r\n            onChange={this.handleAceEditorChange}\r\n            height={'300px'}\r\n            width={'100%'}\r\n            fontSize={15}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              enableBasicAutocompletion: true,\r\n              enableLiveAutocompletion: true,\r\n              enableSnippets: false,\r\n              showLineNumbers: true,\r\n              tabSize: 2,\r\n            }}\r\n          />\r\n\r\n          <label>Result</label>\r\n          {queryResultItem}\r\n\r\n          <label>Param</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"param\" \r\n            value={this.state.param}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterEditPanel;","import React from 'react';\r\n\r\nclass Modal extends React.Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const modalStatus = this.props.show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={this.props.modalClass}>\r\n          <button onClick={() => this.props.onClose()}>Close</button>\r\n          <div className='modal-body'>\r\n            {this.props.children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport FilterViewPanel from '../components/FilterViewPanel';\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\nimport FilterEditPanel from '../components/FilterEditPanel';\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nconst FILTER_TYPES = [\r\n  { value: 'slicer', label: 'Slicer' },\r\n  { value: 'number-range', label: 'Number Range' },\r\n  { value: 'date-range', label: 'Date Range' }\r\n];\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showFilterEditPanel: false,\r\n      showFilterViewPanel: true,\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      widgets: [],\r\n      filters: []\r\n    }\r\n\r\n    this.filterViewPanel = React.createRef();\r\n    this.filterEditPanel = React.createRef();\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    this.setState({\r\n      dashboardId: dashboardId\r\n    })\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  refresh = () => {\r\n    console.log('refresh');\r\n    const { dashboardId } = this.state;\r\n    this.filterViewPanel.current.fetchFilters(dashboardId);\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, null);\r\n  }\r\n\r\n  save = () => {\r\n    console.log('save');\r\n\r\n  }\r\n\r\n  openFilterEditPanel = (filterId) => {\r\n    this.filterEditPanel.current.fetchFilter(filterId);\r\n    this.setState({\r\n      showFilterEditPanel: true\r\n    });\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    const { dashboardId } = this.state;\r\n    this.widgetEditPanel.current.fetchWidget(widgetId, dashboardId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>\r\n          DashboardEditView: \r\n          <input \r\n          type=\"text\" \r\n          name=\"name\" \r\n          value={this.state.name}\r\n          onChange={this.handleInputChange} />\r\n        </h3>\r\n        <button onClick={this.refresh}>Refresh</button>\r\n        <button onClick={this.save}>Save</button>\r\n        <button onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\r\n        <button onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n        <button onClick={() => this.setState({ showFilterViewPanel: true })}>Show Filters</button>\r\n        \r\n        \r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showFilterViewPanel}\r\n          onClose={() => this.setState({ showFilterViewPanel: false })}\r\n          modalClass={' right-modal-panel'} >\r\n          <FilterViewPanel \r\n            ref={this.filterViewPanel} \r\n            onEdit={this.openFilterEditPanel}\r\n            onApplyFilters={this.applyFilters}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'lg-modal-panel'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showFilterEditPanel} \r\n          onClose={() => this.setState({ showFilterEditPanel: false })}\r\n          modalClass={'lg-modal-panel'} >\r\n          <FilterEditPanel\r\n            ref={this.filterEditPanel}\r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nclass SingleTest extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  getOption = () => {\r\n    return {\r\n      title: {\r\n        text: 'Test'\r\n      },\r\n      tooltip : {\r\n        trigger: 'axis'\r\n      },\r\n      legend: {\r\n        data:['C1','C2','C3']\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          saveAsImage: {}\r\n        }\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      xAxis : [\r\n        {\r\n          type : 'category',\r\n          boundaryGap : false,\r\n          data : ['Mon','Tue','Wed','Thu','Fri','Sat','Sun']\r\n        }\r\n      ],\r\n      yAxis : [\r\n        {\r\n          type : 'value'\r\n        }\r\n      ],\r\n      series : [\r\n        {\r\n          name:'C1',\r\n          type:'line',\r\n          stack: 'Total',\r\n          areaStyle: {normal: {}},\r\n          data:[120, 132, 101, 134, 90, 230, 210]\r\n        },\r\n        {\r\n          name:'C2',\r\n          type:'line',\r\n          stack: 'Total',\r\n          areaStyle: {normal: {}},\r\n          data:[220, 182, 191, 234, 290, 330, 310]\r\n        },\r\n        {\r\n          name:'C3',\r\n          type:'line',\r\n          stack: 'Total',\r\n          areaStyle: {normal: {}},\r\n          data:[150, 232, 201, 154, 190, 330, 410]\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n\r\n  render() {\r\n    let onEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h5>SingleTest</h5>\r\n        <div style={{width: '500px'}}>\r\n          <ReactEcharts \r\n            option={this.getOption()} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts'\r\n            onEvents={onEvents} />\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default SingleTest;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport Overview from './views/Overview';\r\nimport DataSources from './views/DataSources';\r\nimport Dashboards from './views/Dashboards';\r\nimport Test from './views/Test';\r\nimport EditDataSource from './views/EditDataSource';\r\nimport DashboardEditView from './views/DashboardEditView';\r\n\r\nimport SingleTest from './views/SingleTest';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: 'overview',\r\n      menuMin: '',\r\n      appName: 'Poli'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n  }\r\n\r\n  toggleMenu = () => {\r\n    let menuMin;\r\n    let appName;\r\n    if (this.state.menuMin === '') {\r\n      menuMin = 'menu-min';\r\n      appName = 'P';\r\n    } else {\r\n      menuMin = '';\r\n      appName = 'Poli'\r\n    }\r\n    this.setState({\r\n      menuMin: menuMin,\r\n      appName: appName\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"Nav\">\r\n          <div className=\"Nav_title-bar\">\r\n            <div className=\"Nav_title\">{this.state.appName}</div>\r\n          </div>\r\n          <div className=\"Nav_menu\">\r\n            <ul className=\"menu\">\r\n              <li>\r\n                <Link to=\"/overview\">\r\n                  <i className=\"fas fa-heartbeat fa-fw\"></i>\r\n                  <span className=\"menu-text\">Overview</span>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/datasources\">\r\n                  <i className=\"fas fa-database fa-fw\"></i>\r\n                  <span className=\"menu-text\">Data Sources</span>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/dashboards\">\r\n                  <i className=\"fas fa-chalkboard fa-fw\"></i>\r\n                  <span className=\"menu-text\">Dashboards</span>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/test\">Test</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/single-test\">SingleTest</Link>\r\n              </li>\r\n              \r\n            </ul>\r\n            <div className=\"Nav__toggle-menu\">\r\n              <div style={{margin: '5px 0px 5px 15px', color: 'red'}} onClick={this.toggleMenu}>\r\n                <i class=\"fas fa-arrows-alt-h fa-fw fa-lg\"></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={`Content ${this.state.menuMin}`}>\r\n          <Route exact path=\"/\" component={Overview} />\r\n          <Route exact path=\"/overview\" component={Overview} />\r\n          <Route exact path=\"/datasources\" component={DataSources} />\r\n          <Route exact path=\"/dashboards\" component={Dashboards} />\r\n          <Route exact path=\"/test\" component={Test} />\r\n          <Route exact path=\"/datasources/new\" component={EditDataSource} />\r\n          <Route exact path=\"/datasources/edit/:id\" component={EditDataSource} />\r\n          <Route exact path=\"/dashboard/new\" component={DashboardEditView} />\r\n          <Route exact path=\"/dashboard/edit/:id\" component={DashboardEditView} />\r\n          <Route exact path=\"/single-test\" component={SingleTest} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/poli\">\n    <App />\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}