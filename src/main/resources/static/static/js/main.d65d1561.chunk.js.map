{"version":3,"sources":["views/Login.js","api/WebApi.js","components/Modal.js","components/Toast.js","views/DataSource.js","components/Checkbox.js","components/Slicer.js","api/Util.js","components/NumberRange.js","api/Constants.js","components/FilterViewPanel.js","components/ColorPicker.js","components/GridDraggable.js","components/GridResizable.js","api/EchartsApi.js","components/TableWidget.js","components/GridItem.js","components/GridLayout.js","components/WidgetViewPanel.js","components/Tabs.js","components/Select.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/Dashboard.js","views/DashboardFullScreenView.js","views/User.js","views/Group.js","views/UserManagement.js","views/Account.js","api/AuthStore.js","views/Workspace.js","views/PageNotFound.js","App.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","name","value","handleKeyPress","keyCode","login","_this$state","state","username","password","user","axios","post","then","res","result","data","errorMsg","onLoginSuccess","_this2","console","log","react_default","a","createElement","Fragment","className","type","onChange","onKeyDown","onClick","React","Component","withRouter","fetchDataSources","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","t0","stop","apply","arguments","Modal","_this$props","show","_this$props$modalClas","modalClass","title","children","modalStatus","concat","onClose","index_es","icon","size","Toast","message","showToast","setTimeout","hide","_toastRef","assertThisInitialized","toastStatus","DataSource","save","showUpdatePassword","id","connectionUrl","driverClassName","ping","ds","put","closeEditPanel","catch","error","clearEditPanel","initialState","openEditPanel","showEditPanel","confirmDelete","_this$state$objectToD","objectToDelete","delete","closeConfirmDeletionPanel","openConfirmDeletionPanel","datasource","showConfirmDeletionPanel","toggleUpdatePassword","prevState","clearSearch","searchValue","jdbcDataSources","webApi","_this$state2","_this$state2$jdbcData","_this$state2$objectTo","mode","jdbcDataSourceItems","_loop","i","includes","push","key","length","placeholder","style","width","src_components_Modal","rows","margin","Checkbox","toggle","checked","_this$props2","checkmarkBoxStyle","backgroundColor","Slicer","isSelectAll","toggleSelectAll","newIsSelectAll","newCheckBoxes","toConsumableArray","checkBoxes","isChecked","filterId","handleSearchValueChange","indexOf","handleCheckBoxChange","index","findIndex","x","_this$props$checkBoxe","checkBoxItems","map","box","src_components_Checkbox","jsonToArray","json","array","JSON","parse","e","SLICER","SINGLE_VALUE","FILTER_TYPES","PIE","TABLE","CHART_TYPES","DEFAULT_FILTER_VIEW_WIDTH","DEFAULT_DASHBOARD_HEIGHT","FilterViewPanel","fetchFilters","dashboardId","filters","queryFilters","filter","Constants","queryRequest","queryResult","queryResultData","Util","f","newFilters","_arr","values","_i2","val","_arr2","_i3","renderFilterPanel","filterPanel","filterComponent","src_components_Slicer","onSlicerChange","onSingleValueChange","isEditMode","edit","fixedWidth","onEdit","applyFilters","_this$state$filters","filterParams","filterParam","_filter$checkBoxes","paramValues","j","checkBox","remark","param","onApplyFilters","splice","ColorPicker","handleClick","showPalette","handleClose","handleChange","color","rgb","rgba","r","g","b","height","borderRadius","background","padding","boxShadow","display","cursor","position","zIndex","top","right","bottom","left","lib","WIDGET_BORDER","GridDraggable","onMouseDown","preventDefault","gridItemNode","ReactDOM","findDOMNode","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","boxHeight","Math","floor","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","CHART_COLORS","getPieOption","pieKey","pieValue","legend","series","row","tooltip","orient","center","radius","getPieOptionTemplate","TableWidget","_this$props$data","_this$props$columns","columns","_this$props$drillThro","drillThrough","columnHeaders","forEach","column","columnName","header","Header","accessor","d","Cell","href","es","defaultPageSize","previousText","nextText","GridItem","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","exportCsv","exportJson","removeWidget","onWidgetRemove","onTableTdPropsChange","rowInfo","instance","handleOriginal","drills","widgetDrillThrough","history","onChartClick","echarts","onChartLegendselectchanged","echart","renderWidgetContent","onChartEvents","click","legendselectchanged","chartType","_this$props$queryResu","widgetItem","src_components_TableWidget","chartOption","EchartsApi","echarts_for_react_lib_default","option","onEvents","_this$props2$style","_style$showBorder","showBorder","borderStyle","styles","border","marginRight","components_GridDraggable","components_GridResizable","GridLayout","_this$props$widgets","widgets","showGridlines","backgroundSize","backgroundImage","boxItems","components_GridItem","assign","BASE_WIDTH","WidgetViewPanel","resizeGrid","isResizeToBase","preGridWidth","gridWidth","newWidgets","resizeWidgetsToBase","resizeWidgetsToActual","baseX","scaleToBase","baseWidth","actualX","scaleToActual","actualdWidth","num","round","fetchWidgets","queryWidgets","params","w","handleHeightChange","onHeightChange","onBackgroundColorChange","saveWidgets","stringify","widgetViewWidth","components_ColorPicker","src_components_GridLayout","Tabs","handleTabClick","activeTab","_this$props$children","tabHeaders","tabContent","active","Select","handleOptionChange","_this$props$options","options","optionValue","optionDisplay","optionList","WidgetEditPanel","fetchWidget","dashboards","drillDashboards","_result$data","sqlQuery","jdbcDataSourceId","runQuery","_x","_x2","objectSpread","handleAceEditorChange","newValue","handleIntegerOptionChange","intValue","onSave","addDrillThrough","_this$state3","drillColumnName","drillDashboardId","newDrills","removeDrillThrough","drill","generateChart","_this$state4","_this$state4$queryRes","renderChartPreview","_this$state5","_this$state5$queryRes","chartPreview","_this$state6","class","components_Select","_this$state7","_this$state7$jdbcData","_this$state7$drillDas","drillItems","columnItems","col","dataType","src_components_Tabs","react_ace_lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","FilterEditPanel","fetchFilter","useQuery","_this$state2$queryRes","requireSql","DashboardEditView","loadViewByDashboardName","url","location","search","URLSearchParams","dashboardName","showFilterViewPanel","pageWidth","getPageWidth","isReadOnly","refresh","toggleAutoRefresh","autoRefreshTimerId","clearInterval","refreshInterval","interval","timerId","setInterval","filterViewPanel","current","updateLastRefreshed","refreshWidgetView","refreshFilterView","widgetViewPanel","now","Date","toTimeString","replace","lastRefreshed","dashboard","onDashboardSave","cancelEdit","onSaveWidget","showWidgetEditPanel","onSaveFilter","showFilterEditPanel","toggleFilterViewPanel","resizePageLayout","openFilterEditPanel","filterEditPanel","openWidgetEditPanel","widgetEditPanel","fullScreen","window","open","onTableCellClick","onDashboardDelete","deleteDashboard","jdbcDataSourceOptions","createRef","match","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","pair","err","return","editButtonPanel","_this3","autoRefreshStatus","fullScreenButtonPanel","controlButtons","components_WidgetViewPanel","ref","src_components_FilterViewPanel","src_components_WidgetEditPanel","src_components_FilterEditPanel","Dashboard","fetchBoards","view","activeDashboardId","_this$state$dashboard","dashboardRows","menuActive","Route","path","render","views_DashboardEditView","DashboardFullScreenView","dashboardEditView","wrappedComponentRef","comp","SYS_ROLES","User","fetchUsers","users","fetchGroups","groups","tempPassword","sysRole","userGroups","userGroupId","initialEditPanelState","addUserGroup","_this$state2$userGrou","groupId","newUserGroups","removeUserGroup","_this$state$userGroup","_React$createElement","_this$state3$users","_this$state3$groups","_this$state3$userGrou","userItems","userGroupItems","Group","fetchDashboards","group","groupDashboards","groupDashboardId","addGroupDashboard","_this$state2$groupDas","newGroupDashboards","removeGroupDashboard","_this$state$groupDash","_this$state3$dashboar","_this$state3$groupDas","groupItems","groupDashboardItems","UserManagement","views_Group","views_User","Account","fetchUser","generateApiKey","confirmedPassword","alert","apiKey","api_AuthStore","AuthStore","_sysRole","_username","MENU_ITEMS","link","Workspace","handleMenuClick","menuLink","currentMenuLink","logout","requestingLogin","pathname","isAuthenticated","menuItems","menuList","m","menu","Link","to","isAccountMenuActive","Switch","exact","component","src_components_Toast","PageNotFound","library","add","faChalkboard","faDatabase","faUsersCog","faPlus","faTimes","faEdit","faTrashAlt","faPlayCircle","faStopCircle","faRedoAlt","faTv","faPlug","faUser","faSignOutAlt","faCompress","faExpandArrowsAlt","faFileExport","faFileCsv","App","isAuthorizing","_this$state$sysRole","_this$state$sysRole2","PrivateRoute","authenticated","src_views_Login","rest","objectWithoutProperties","Redirect","from","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.d65d1561.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: '',\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Login', 'componentDidMount');\r\n    console.log('Login - componentDidMount', 'cookie');\r\n    axios.post('/auth/login/cookie')\r\n      .then(res => {\r\n        const result = res.data;\r\n        if (result == 'error') {\r\n          this.setState({\r\n            errorMsg: 'Wrong username or password'\r\n          });\r\n        } else {\r\n          this.props.onLoginSuccess(result);\r\n        }\r\n      });\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.keyCode == 13) {\r\n      this.login();\r\n    }\r\n  }\r\n\r\n  login = () => {\r\n    const {\r\n      username,\r\n      password\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    if (!username) {\r\n      this.setState({\r\n        errorMsg: 'Enter username'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      this.setState({\r\n        errorMsg: 'Enter password'\r\n      });\r\n      return;\r\n    }\r\n\r\n    axios.post('/auth/login/user', user)\r\n      .then(res => {\r\n        const result = res.data;\r\n        if (result == 'error') {\r\n          this.setState({\r\n            errorMsg: 'Wrong username or password'\r\n          });\r\n        } else {\r\n          this.props.onLoginSuccess(result);\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    console.log('Login', 'render');\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"login-panel\">\r\n          <div className=\"login-app-title\">Poli</div>\r\n          <div className=\"login-error-msg\">{this.state.errorMsg}</div>\r\n          <div className=\"long-panel-body\">\r\n            <div className=\"form-group\">\r\n              <label>Username</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={this.state.username}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n              <label>Password</label>\r\n              <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.password}\r\n                onChange={this.handleInputChange} \r\n                onKeyDown={this.handleKeyPress} \r\n              />\r\n            </div>\r\n            <button className=\"button login-button\" onClick={this.login}>Login</button>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","import axios from 'axios';\r\n\r\nconst JSON_HEADER = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n};\r\n\r\nexport const fetchDataSources = async () => {\r\n  try {\r\n    const response = await axios.get('/ws/jdbcdatasource');\r\n    return response.data || [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchDashboardById = async (id) => {\r\n  return await get(`/ws/dashboard/${id}`);\r\n}\r\n\r\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\r\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\r\n}\r\n\r\nconst get = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n} \r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Modal extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      modalClass = '',\r\n      title,\r\n      children\r\n    } = this.props;\r\n\r\n    const modalStatus = show ? 'display-block' : 'display-none';\r\n    return (\r\n      <div className={`modal-overlay ${modalStatus}`}>\r\n        <div className={`modal-panel ${modalClass}`}>\r\n          <div className=\"model-header row\">\r\n            <div className=\"model-title\">{title}</div>\r\n            <button className=\"model-close-button icon-button\" onClick={() => this.props.onClose()}>\r\n              <FontAwesomeIcon icon=\"times\" size=\"lg\" />\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          <div className='modal-body'>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Toast.css';\r\n\r\nclass Toast extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showToast: false,\r\n      message: ''\r\n    };\r\n\r\n    Toast._toastRef = this;\r\n  }\r\n\r\n  show = (message) => {\r\n    this.setState({ \r\n      showToast: true,\r\n      message: message\r\n    }, () => {\r\n      setTimeout(() => {\r\n        this.hide();\r\n      }, 3500);\r\n    });\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({ \r\n      showToast: false,\r\n      message: ''\r\n    });\r\n  }\r\n\r\n  static show = (message) => {\r\n    Toast._toastRef.show(message);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showToast,\r\n      message\r\n    } = this.state;\r\n\r\n    const toastStatus = showToast ? 'display-block' : 'display-none';\r\n\r\n    return (\r\n      <div className={`toast-container ${toastStatus}`}>\r\n        <button className=\"button\" onClick={this.hide}>X</button>\r\n        <div>\r\n          {message}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toast;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport Modal from '../components/Modal';\r\nimport Toast from '../components/Toast';\r\nimport './Datasource.css';\r\n\r\nclass DataSource extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      showEditPanel: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      showUpdatePassword: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      name: '',\r\n      connectionUrl: '',\r\n      driverClassName: '',\r\n      username: '',\r\n      password: '',\r\n      ping: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataSources();\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  async fetchDataSources() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      id,\r\n      connectionUrl,\r\n      driverClassName,\r\n      username,\r\n      password,\r\n      name,\r\n      ping,\r\n    } = this.state;\r\n\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    let ds = {\r\n      connectionUrl: connectionUrl,\r\n      driverClassName: driverClassName,\r\n      username: username,\r\n      name: name,\r\n      ping: ping\r\n    };\r\n\r\n    if (id !== null) {\r\n      ds.id = id;\r\n      if (showUpdatePassword) {\r\n        ds.password = password;\r\n      }\r\n\r\n      // Update\r\n      axios.put('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      ds.password = password;\r\n\r\n      // New\r\n      axios.post('/ws/jdbcdatasource', ds)\r\n        .then(res => {\r\n          this.closeEditPanel();\r\n          this.fetchDataSources();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } \r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        const result = res.data;\r\n        Toast.show(result);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  openEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        showUpdatePassword: false,\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        driverClassName: ds.driverClassName,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {} \r\n    } = this.state;\r\n    axios.delete('/ws/jdbcdatasource/' + objectToDelete.id)\r\n      .then(res => {\r\n        this.fetchDataSources();\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (datasource) => {\r\n    this.setState({\r\n      objectToDelete: datasource,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  clearSearch = () => {\r\n    this.setState({\r\n      searchValue: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      showUpdatePassword,\r\n      showConfirmDeletionPanel,\r\n      searchValue,\r\n      id,\r\n      jdbcDataSources = [],\r\n      objectToDelete = {}\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const jdbcDataSourceItems = [];\r\n    for (let i = 0; i < jdbcDataSources.length; i++) {\r\n      const ds = jdbcDataSources[i];\r\n      const name = ds.name;\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        jdbcDataSourceItems.push(\r\n          (\r\n            <div key={i} className=\"datasource-card row\">\r\n              <div className=\"float-left ellipsis datasource-row-name\">\r\n                {name}\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openEditPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"edit\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.openConfirmDeletionPanel(ds)}>\r\n                  <FontAwesomeIcon icon=\"trash-alt\" size=\"lg\" />\r\n                </button>\r\n                <button className=\"icon-button datasource-icon-button\" onClick={() => this.ping(ds.id)}>\r\n                  <FontAwesomeIcon icon=\"plug\" size=\"lg\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchValue\"\r\n            value={this.state.searchValue}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Search...\"\r\n            style={{width: '200px'}}\r\n            />\r\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New datasource\r\n          </button>\r\n          </div>\r\n        <div className=\"table-panel\">\r\n          {jdbcDataSourceItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Name <span className=\"required\">*</span></label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Connection Url</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label>Driver class name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"driverClassName\" \r\n              value={this.state.driverClassName}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            { mode === 'Edit' ? \r\n              (\r\n                <div style={{margin: '3px 0px 8px 0px'}}>\r\n                  <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n                </div>\r\n              ) : null\r\n            }\r\n            { mode === 'New' || showUpdatePassword ? \r\n              (\r\n                <div>\r\n                  <label>Password</label>\r\n                  <input \r\n                    type=\"password\" \r\n                    name=\"password\" \r\n                    value={this.state.password}\r\n                    onChange={this.handleInputChange} />\r\n                </div>\r\n              ) : null\r\n            }\r\n\r\n            <label className=\"form-label\" className=\"mt-3\">Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} />\r\n            <button className=\"button mt-3\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nclass Checkbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    const {\r\n      name,\r\n      checked\r\n    } = this.props;\r\n\r\n    this.props.onChange(name, !checked);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      checked\r\n    } = this.props;\r\n\r\n    const checkmarkBoxBgColor = checked ? '#000000' : '#FFFFFF';\r\n    const checkmarkBoxStyle = {\r\n      backgroundColor: checkmarkBoxBgColor\r\n    };\r\n\r\n    return (\r\n      <div className=\"checkbox-container\" onClick={this.toggle}>\r\n        <div className=\"checkbox-checkmark\">\r\n          <div className=\"checkbox-checkmark-box\" style={checkmarkBoxStyle}>\r\n          </div>\r\n        </div>\r\n        <div className=\"checkbox-label\">{value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport Checkbox from './Checkbox';\r\nimport './Slicer.css';\r\n\r\nclass Slicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n    searchValue: ''\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  handleSearchValueChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    if (searchValue) {\r\n      const result = [];\r\n      const { checkBoxes } = this.props;\r\n      for (let i = 0; i < checkBoxes.length; i++) {\r\n        if (checkBoxes[i].value.indexOf(searchValue) !== -1) {\r\n          result.push(checkBoxes[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: searchValue\r\n    });\r\n\r\n    // TODO: add checkBoxes to states and add a function to setCheckBoxes\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      checkBoxes = []\r\n    } = this.props;\r\n    const checkBoxItems = checkBoxes.map((box, index) => \r\n      <Checkbox \r\n        key={index} \r\n        name={box.value} \r\n        value={box.value} \r\n        checked={box.isChecked} \r\n        onChange={this.handleCheckBoxChange} \r\n      />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.toggleSelectAll}>Select All {this.state.isSelectAll}</button>\r\n        <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.searchValue}\r\n            onChange={this.handleSearchValueChange}\r\n            placeholder=\"Search...\"\r\n          />\r\n        \r\n        <div className=\"slicer-body\">\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slicer;\r\n","\r\nexport const isArrayEmpty = (array) => {\r\n  return !Array.isArray(array) || !array.length;\r\n};\r\n\r\nexport const jsonToArray = (json) => {\r\n  let array;\r\n  try {\r\n    array = JSON.parse(json);\r\n  } catch(e) {\r\n    array = [];\r\n  }\r\n  return array;\r\n}\r\n","import React from 'react';\r\n\r\nclass NumberRange extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        min\r\n        <input type=\"number\" name=\"min\" />\r\n        max\r\n        <input type=\"number\" name=\"max\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberRange;","/**\r\n * Constants\r\n */\r\nexport const SLICER = 'slicer';\r\nexport const SINGLE_VALUE= 'single';\r\nexport const FILTER_TYPES = [SLICER, SINGLE_VALUE];\r\n\r\nexport const PIE = 'pie';\r\nexport const TABLE = 'table';\r\nexport const CHART_TYPES = [TABLE, PIE];\r\n\r\nexport const DEFAULT_FILTER_VIEW_WIDTH = 200;\r\n\r\nexport const SYS_ROLE_ADMIN = 'admin';\r\nexport const SYS_ROLE_DEVELOPER = 'developer';\r\nexport const SYS_ROLE_VIEWER = 'viewer';\r\n\r\nexport const DEFAULT_DASHBOARD_HEIGHT = 600;","import React, { Component } from 'react';\r\nimport Slicer from \"./Slicer\";\r\nimport NumberRange from \"./NumberRange\";\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './FilterViewPanel.css';\r\nimport Modal from '../components/Modal';\r\n\r\nclass FilterViewPanel extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      dashboardId: null,\r\n      filters: [],\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {}\r\n    };\r\n  }\r\n\r\n  fetchFilters = (dashboardId) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      dashboardId: dashboardId\r\n    })\r\n\r\n    axios.get('/ws/filter/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          filters: result,\r\n        }, this.queryFilters);\r\n      });\r\n  }\r\n\r\n  queryFilters = () => {\r\n    const { filters } = this.state;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === Constants.SLICER) {\r\n        const queryRequest = filter.data;\r\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\r\n          .then(res => {\r\n            const queryResult = res.data;\r\n            const queryResultData = Util.jsonToArray(queryResult.data);\r\n\r\n            const index = filters.findIndex(f => f.id === queryResult.id);\r\n            const newFilters = [...this.state.filters];\r\n            newFilters[index].queryResult = queryResult;\r\n            const type = newFilters[index].type;\r\n            if (type === Constants.SLICER) {\r\n              const checkBoxes = [];\r\n              for (let i = 0; i < queryResultData.length; i++) {\r\n                const values = Object.values(queryResultData[i]);\r\n                for (const val of values) {\r\n                  checkBoxes.push({\r\n                    value: val,\r\n                    isChecked: false\r\n                  });\r\n                }\r\n              }\r\n\r\n              newFilters[index].checkBoxes = checkBoxes;\r\n            } else if (type === Constants.SINGLE_VALUE) {\r\n              const values = Object.values(queryResultData);\r\n              let value = '';\r\n              for (const val of values) {\r\n                value = val;\r\n                break;\r\n              }\r\n              newFilters[index].value = value;\r\n            }\r\n\r\n            this.setState({\r\n              filters: newFilters\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderFilterPanel = () => {\r\n    const filterPanel = [];\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      let filterComponent = (<div>NONE</div>);\r\n      if (filter.type === Constants.SLICER) {\r\n        const checkBoxes = filter.checkBoxes;\r\n        filterComponent = (\r\n          <Slicer \r\n            key={i} \r\n            filterId={filter.id} \r\n            checkBoxes={checkBoxes} \r\n            onChange={this.onSlicerChange} \r\n          />\r\n        );\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterComponent = (\r\n          <input \r\n            type=\"text\"  \r\n            value={filter.value}\r\n            onChange={(event) => this.onSingleValueChange(filter.id, event)} \r\n          />\r\n        );\r\n      }\r\n\r\n      filterPanel.push(\r\n        (\r\n          <div className=\"filter-card\">\r\n            <div className=\"filter-card-title\">\r\n              {filter.title}\r\n\r\n              { this.props.isEditMode ? \r\n                (\r\n                  <div className=\"icon-button-group\">\r\n                    <div className=\"inline-block\" onClick={() => this.edit(filter.id)}>\r\n                      <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n                    </div>\r\n                    <div className=\"inline-block\" onClick={() => this.openConfirmDeletionPanel(filter.id)}>\r\n                      <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n                    </div>\r\n                  </div>\r\n                ): null \r\n              }\r\n            </div>\r\n            <div>\r\n              {filterComponent}\r\n            </div>\r\n          </div>\r\n        )\r\n      );\r\n    }\r\n    return filterPanel;\r\n  }\r\n\r\n  edit = (filterId) => {\r\n    this.props.onEdit(filterId);\r\n  }\r\n\r\n  onSlicerChange = (filterId, checkBoxes) => {\r\n    const index = this.state.filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...this.state.filters];\r\n    newFilters[index].checkBoxes = [...checkBoxes];\r\n    this.setState({\r\n      filters: newFilters\r\n    });  \r\n  }\r\n\r\n  onSingleValueChange = (filterId, event) => {\r\n    const { filters } = this.state;\r\n    const value = event.target.value;\r\n    const index = filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...filters];\r\n    newFilters[index].value = value;\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n  }\r\n\r\n  applyFilters = () => {\r\n    const { \r\n      filters = []\r\n    } = this.state;\r\n    const filterParams = [];\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      const filterParam = {};\r\n      if (filter.type === Constants.SLICER) {\r\n        const { \r\n          checkBoxes = []\r\n        } = filter;\r\n        const paramValues = [];\r\n        for (let j = 0; j < checkBoxes.length; j++) {\r\n          const checkBox = checkBoxes[j];\r\n          if (checkBox.isChecked) {\r\n            paramValues.push(checkBox.value);\r\n          }\r\n        }\r\n        filterParam.value = paramValues;\r\n        if (paramValues.length === checkBoxes.length) {\r\n          filterParam.remark = 'select all';\r\n        }\r\n      } else if (filter.type === Constants.SINGLE_VALUE) {\r\n        filterParam.value = filter.value;\r\n      }\r\n      filterParam.param = filter.data.param;\r\n      filterParam.type = filter.type;\r\n      filterParams.push(filterParam);\r\n    }\r\n\r\n    this.props.onApplyFilters(filterParams);\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete\r\n    } = this.state;\r\n    const filterId = objectToDelete;\r\n    axios.delete(`/ws/filter/${filterId}`)\r\n      .then(res => {\r\n        const index = this.state.filters.findIndex(f => f.id === filterId);\r\n        const newFilters = [...this.state.filters];\r\n        newFilters.splice(index, 1);\r\n        this.setState({\r\n          filters: newFilters\r\n        });\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (filterId) => {\r\n    this.setState({\r\n      objectToDelete: filterId,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n    const style = {};\r\n    if (show) {\r\n      style.width = Constants.DEFAULT_FILTER_VIEW_WIDTH + 'px';\r\n    } else {\r\n      style.width = '0px';\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-filter-panel\" style={style}>\r\n        <div>Filters</div>\r\n        <button className=\"button\" onClick={this.applyFilters}>Run</button>\r\n        <div className=\"filter-view-panel\">\r\n          {this.renderFilterPanel()}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete this filter?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterViewPanel;","import React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPalette: false\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      showPalette: !prevState.showPalette\r\n    })); \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ \r\n      showPalette: false \r\n    });\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    const rgb = color.rgb;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    this.props.onChange(rgba);\r\n  };\r\n\r\n  render() {\r\n\r\n    const color = {\r\n      width: '36px',\r\n      height: '14px',\r\n      borderRadius: '2px',\r\n      background: this.props.value\r\n    };\r\n\r\n    const swatch = {\r\n      padding: '5px',\r\n      background: '#fff',\r\n      borderRadius: '1px',\r\n      boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n      display: 'inline-block',\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: '2'\r\n    };\r\n\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={swatch} onClick={this.handleClick}>\r\n          <div style={color} />\r\n        </div>\r\n        { this.state.showPalette ? \r\n          (\r\n            <div style={popover}>\r\n              <div style={cover} onClick={this.handleClose} />\r\n              <ChromePicker color={this.props.value} onChange={this.handleChange} />\r\n            </div>\r\n          ) : null }\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n        <FontAwesomeIcon icon=\"expand-arrows-alt\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n        <FontAwesomeIcon icon=\"compress\" fixedWidth />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","import * as Util from '../api/Util';\r\n\r\nconst CHART_COLORS = [\r\n  \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \r\n  \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \r\n  \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \r\n  \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"\r\n];\r\n\r\nexport const getPieOptionTemplate = (legend, series) => {\r\n  return {\r\n    color: CHART_COLORS,\r\n    tooltip: {\r\n    },\r\n    legend: {\r\n      type: 'scroll',\r\n      orient: 'vertical',\r\n      data: legend,\r\n      right: 10,\r\n      top: 10,\r\n      bottom: 10\r\n    },\r\n    series: [\r\n      {\r\n        type:'pie',\r\n        center: ['40%', '50%'],\r\n        radius: '50%',\r\n        data: series\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport const getPieOption = (queryResultData, pieKey, pieValue) => {\r\n  let legend = [];\r\n  let series = [];\r\n  for (let i = 0; i < queryResultData.length; i++) {\r\n    const row = queryResultData[i];\r\n    legend.push(row[pieKey]);\r\n    series.push({\r\n      name: row[pieKey],\r\n      value: row[pieValue]\r\n    });  \r\n  }\r\n  return getPieOptionTemplate(legend, series);\r\n}\r\n","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport './TableWidget.css';\r\n\r\nclass TableWidget extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  render() {   \r\n    const {\r\n      data = [],\r\n      columns = [],\r\n      drillThrough = [],\r\n      error\r\n    } = this.props;\r\n\r\n    const columnHeaders = [];\r\n    columns.forEach(column => {\r\n      const columnName = column.name;\r\n      const header = {\r\n        Header: columnName,\r\n        accessor: columnName\r\n      };\r\n      if (drillThrough.length > 0) {\r\n        const index = drillThrough.findIndex(d => d.columnName === columnName);\r\n        if (index !== -1) {\r\n          const dashboardId = drillThrough[index].dashboardId;\r\n          header.Cell = (props => <a href={`/poli/workspace/dashboard/${dashboardId}?${columnName}=${props.value}`}>{props.value}</a>);\r\n        }\r\n      }\r\n\r\n      columnHeaders.push(header);\r\n    });\r\n\r\n    if (error) {\r\n      return (\r\n        <div>\r\n          {error}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ReactTable\r\n        data={data}\r\n        columns={columnHeaders}\r\n        defaultPageSize={10}\r\n        previousText={'Prev'}\r\n        nextText={'Next'}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableWidget;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport TableWidget from './TableWidget';\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  exportCsv = (widgetId) => {\r\n\r\n  }\r\n\r\n  exportJson = (widgetId) => {\r\n\r\n  }\r\n\r\n  removeWidget = (widgetId) => {\r\n    this.props.onWidgetRemove(widgetId);\r\n  }\r\n\r\n  onTableTdPropsChange = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        console.log(\"A Td Element was clicked!\");\r\n        console.log(\"it produced this event:\", e);\r\n        console.log(\"It was in this column:\", column);\r\n        console.log(\"It was in this row:\", rowInfo);\r\n        console.log(\"It was in this table instance:\", instance);\r\n        \r\n        const header = column.Header;\r\n        const row = rowInfo.row;\r\n        const value = row[header];\r\n        const drills = instance.props.widgetDrillThrough || []; \r\n        console.log('onTableTdPropsChange', header, value, drills);\r\n        const index = drills.findIndex(d => d.columnName === header);\r\n        if (index !== -1) {\r\n          const dashboardId = drills[index].dashboardId;\r\n          this.props.history.push(`/workspace/dashboard/${dashboardId}?${header}=${value}`);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onChartClick = (param, echarts) => {\r\n    console.log('onChartClick', param, echarts);\r\n  };\r\n\r\n  onChartLegendselectchanged = (param, echart) => {\r\n    console.log('onChartLegendselectchanged', param, echart);\r\n  };\r\n\r\n  renderWidgetContent = () => {\r\n    const onChartEvents = {\r\n      'click': this.onChartClick,\r\n      'legendselectchanged': this.onChartLegendselectchanged\r\n    };\r\n\r\n    const { \r\n      chartType,\r\n      queryResult = {},\r\n      drillThrough,\r\n      data = {}\r\n    } = this.props;\r\n\r\n    const queryResultData = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    let widgetItem = (<div></div>);\r\n    if (chartType === Constants.TABLE) {\r\n      widgetItem = (\r\n        <TableWidget\r\n          data={queryResultData}\r\n          columns={columns}\r\n          error={error}\r\n          drillThrough={drillThrough}\r\n        />\r\n      );\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        pieKey,\r\n        pieValue\r\n      } = data;\r\n      const chartOption = EchartsApi.getPieOption(queryResultData, pieKey, pieValue);\r\n      widgetItem = (\r\n        <ReactEcharts \r\n          option={chartOption}   \r\n          className=\"echarts\"\r\n          onEvents={onChartEvents}  \r\n        />\r\n      );\r\n    } \r\n\r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      title,\r\n      isEditMode,\r\n      style = {}\r\n    } = this.props;\r\n\r\n    const { \r\n      showBorder = false \r\n    } = style;\r\n\r\n    const borderStyle = showBorder ? '2px solid #4b4f56' : '2px solid #FFFFFF';\r\n\r\n    let styles = {\r\n      left: this.props.x + 'px',\r\n      top: this.props.y + 'px',\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n      zIndex: 1,\r\n      border: borderStyle\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {title}\r\n\r\n          { isEditMode ? (\r\n            <div className=\"float-right\" style={{marginRight: '20px'}}>\r\n              <div className=\"inline-block\" onClick={() => this.editWidget(id)}>\r\n                <FontAwesomeIcon icon=\"edit\" fixedWidth />\r\n              </div>\r\n              <div className=\"inline-block\" onClick={() => this.removeWidget(id)}>\r\n                <FontAwesomeIcon icon=\"trash-alt\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid-box-file-button-group\">\r\n              <div className=\"inline-block\" onClick={() => this.exportJson(id)}>\r\n                <FontAwesomeIcon icon=\"file-export\" fixedWidth />\r\n              </div>\r\n              \r\n              <div className=\"inline-block\" onClick={() => this.exportCsv(id)}>\r\n                <FontAwesomeIcon icon=\"file-csv\" fixedWidth />\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        { isEditMode ? (\r\n          <GridDraggable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode}\r\n            snapToGrid={this.props.snapToGrid} />\r\n        ): null}\r\n\r\n        { isEditMode ? (\r\n          <GridResizable \r\n            onMouseUp={this.onMouseUp}\r\n            onMouseDown={this.onMouseDown}\r\n            onMouseMove={this.onMouseMove}\r\n            mode={this.state.mode} />\r\n        ): null}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(GridItem);","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      backgroundColor,\r\n      widgets = [],\r\n      showGridlines\r\n    } = this.props;\r\n\r\n    let style = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      backgroundColor: backgroundColor\r\n    };\r\n\r\n    if (showGridlines) {\r\n      style.backgroundSize = '15px 15px';\r\n      style.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        isEditMode={this.props.isEditMode}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n        onWidgetRemove={this.props.onWidgetRemove}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={style} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ColorPicker from './ColorPicker';\r\nimport Checkbox from './Checkbox';\r\n\r\nimport GridLayout from './GridLayout';\r\nimport * as Util from '../api/Util';\r\nimport Modal from '../components/Modal';\r\n\r\nconst BASE_WIDTH = 1200;\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      gridWidth: 1200,\r\n      snapToGrid: false,\r\n      showGridlines: false,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  resizeGrid = (width, isResizeToBase) => {\r\n    const preGridWidth = this.state.gridWidth;\r\n    const { widgets } = this.state;\r\n    const newWidgets = [...widgets];\r\n    if (isResizeToBase) {\r\n      this.resizeWidgetsToBase(newWidgets, preGridWidth);\r\n    }\r\n\r\n    const gridWidth = width - 10;\r\n    this.resizeWidgetsToActual(newWidgets, gridWidth);\r\n    this.setState({\r\n      widgets: newWidgets,\r\n      gridWidth: gridWidth\r\n    });\r\n  }\r\n\r\n  resizeWidgetsToBase = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const baseX = this.scaleToBase(widgets[i].x, gridWidth);\r\n      const baseWidth = this.scaleToBase(widgets[i].width, gridWidth);\r\n      widgets[i].x = baseX;\r\n      widgets[i].width = baseWidth;\r\n    }\r\n  }\r\n\r\n  resizeWidgetsToActual = (widgets, gridWidth) => {\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const actualX = this.scaleToActual(widgets[i].x, gridWidth);\r\n      const actualdWidth = this.scaleToActual(widgets[i].width, gridWidth);\r\n      widgets[i].x = actualX;\r\n      widgets[i].width = actualdWidth;\r\n    }\r\n  }\r\n\r\n  scaleToActual = (num, gridWidth) => {\r\n    return Math.round(num * gridWidth / BASE_WIDTH);\r\n  }\r\n\r\n  scaleToBase = (num, gridWidth) => {\r\n    return Math.round(num * BASE_WIDTH / gridWidth);\r\n  }\r\n\r\n  fetchWidgets = (dashboardId, width, filterParams) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n    axios.get('/ws/widget/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result\r\n        }, () => {\r\n          this.resizeGrid(width, false);\r\n          this.queryWidgets(filterParams);\r\n        });\r\n      });\r\n  }\r\n\r\n  queryWidgets = (filterParams) => {\r\n    const params = filterParams === null ? [] : filterParams;\r\n    const { widgets } = this.state;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      axios.post('/ws/jdbcquery/widget/' + widget.id, params)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const index = widgets.findIndex(w => w.id === result.id);\r\n          const newWidgets = [...widgets];\r\n          newWidgets[index].queryResult = result;\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    this.setState({\r\n      [name]: isChecked\r\n    });\r\n  }\r\n\r\n  handleHeightChange = (event) => {\r\n    this.props.onHeightChange(event.target.value);\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    this.props.onBackgroundColorChange(color);\r\n  }\r\n\r\n  saveWidgets = () => {\r\n    const newWidgets = JSON.parse(JSON.stringify(this.state.widgets));\r\n    const { gridWidth } = this.state;\r\n    this.resizeWidgetsToBase(newWidgets, gridWidth);\r\n    axios.post('/ws/widget/position', newWidgets)\r\n      .then(res => {\r\n      });\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    const { widgets } = this.state;\r\n    const index = widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete\r\n    } = this.state;\r\n    const widgetId = objectToDelete;\r\n    axios.delete(`/ws/widget/${widgetId}`)\r\n      .then(res => {\r\n        const { widgets } = this.state;\r\n        const index = widgets.findIndex(w => w.id === widgetId);\r\n        const newWidgets = [...widgets];\r\n        newWidgets.splice(index, 1);\r\n        this.setState({\r\n          widgets: newWidgets\r\n        });\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  openConfirmDeletionPanel = (widgetId) => {\r\n    this.setState({\r\n      objectToDelete: widgetId,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { widgetViewWidth } = this.props;\r\n    const style = {\r\n      width: widgetViewWidth + 'px'\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard-content-widget-panel\" style={style}>\r\n\r\n        {this.props.isEditMode ?\r\n        (\r\n          <div className=\"dashboard-attribute-edit-panel\">\r\n            <div className=\"inline-block\">Height:</div>\r\n            <input \r\n              type=\"text\" \r\n              name=\"height\" \r\n              value={this.props.height}\r\n              onChange={this.handleHeightChange} \r\n              className=\"inline-block\" \r\n              style={{width: '200px'}}\r\n              />\r\n\r\n            <div>\r\n              Background Color\r\n              <ColorPicker value={this.props.backgroundColor} onChange={this.onBackgroundColorChange} />\r\n            </div>\r\n\r\n            <Checkbox name=\"snapToGrid\" value=\"Snap to grid\" checked={this.state.snapToGrid} onChange={this.handleCheckBoxChange} />\r\n            <Checkbox name=\"showGridlines\" value=\"Show gridlines\" checked={this.state.showGridlines} onChange={this.handleCheckBoxChange} />\r\n  \r\n          </div>\r\n        ) : null}\r\n        \r\n        <GridLayout \r\n          width={this.state.gridWidth}\r\n          height={this.props.height}\r\n          backgroundColor={this.props.backgroundColor}\r\n          snapToGrid={this.state.snapToGrid}\r\n          showGridlines={this.state.showGridlines}\r\n          widgets={this.state.widgets}\r\n          isEditMode={this.props.isEditMode}\r\n          onWidgetMove={this.onWidgetMove}\r\n          onWidgetEdit={this.props.onWidgetEdit} \r\n          onWidgetRemove={this.openConfirmDeletionPanel} />\r\n        \r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete this widget?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","import React from 'react';\r\nimport './Tabs.css';\r\n\r\nclass Tabs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const activeTab = this.props.activeTab;\r\n    this.setState({\r\n      activeTab: activeTab\r\n    });\r\n  }\r\n\r\n  handleTabClick = (title) => {\r\n    this.setState({\r\n      activeTab: title\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children = []\r\n    } = this.props;\r\n\r\n    const {\r\n      activeTab\r\n    } = this.state;\r\n\r\n    const tabHeaders = [];\r\n    let tabContent = null;\r\n    for (let i = 0; i < children.length; i++) {\r\n      const title = children[i].props.title;\r\n      let active = '';\r\n      if (title === activeTab) {\r\n        active = 'tab-header-active';\r\n        tabContent = children[i].props.children;\r\n      }\r\n      \r\n      tabHeaders.push(\r\n        <li className={`tab-header-item ${active}`} key={i} onClick={() => this.handleTabClick(title)}>{title}</li>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"tab-container\">\r\n        <ul className=\"tab-header\">\r\n          {tabHeaders}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {tabContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Select extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    optionDisplay: PropTypes.string,\r\n    optionValue: PropTypes.string\r\n  };\r\n\r\n  handleOptionChange = (event) => {\r\n    const name = this.props.name;\r\n    const value = event.target.value;\r\n    this.props.onChange(name, value);\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      value,\r\n      options = [],\r\n      optionValue,\r\n      optionDisplay\r\n    } = this.props;\r\n\r\n    const optionList = [];\r\n    optionList.push(\r\n      <option value=\"\" key=\"\"></option>\r\n    );\r\n    options.forEach((option, index) => {\r\n      let value;\r\n      let display;\r\n      if (optionValue && optionDisplay) {\r\n        // The options contain objects.\r\n        value = option[optionValue];\r\n        display = option[optionDisplay];\r\n      } else {\r\n        // The options contain string or number.\r\n        value = option;\r\n        display = option;\r\n      }\r\n      \r\n      optionList.push(\r\n        <option value={value} key={index}>{display}</option>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <select value={value} onChange={this.handleOptionChange}>\r\n        {optionList}\r\n      </select>\r\n    )\r\n  };\r\n}\r\n\r\nexport default Select;","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport TableWidget from './TableWidget';\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as EchartsApi from '../api/EchartsApi';\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nimport './WidgetEditPanel.css';\r\n\r\nimport Checkbox from './Checkbox';\r\nimport Tabs from '../components/Tabs';\r\nimport Select from '../components/Select';\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      widgetId: null,\r\n      title: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: {},\r\n      chartType: Constants.TABLE,\r\n      style: {\r\n        showBorder: false\r\n      },\r\n      pieKey: '',\r\n      pieValue: '',\r\n      chartOption: {},\r\n      drills: [],\r\n      drillDashboards: [],\r\n      drillColumnName: '',\r\n      drillDashboardId: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchWidget = async (widgetId, dashboardId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          drillDashboards: dashboards \r\n        });\r\n      });\r\n\r\n    if (widgetId === null) {\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n      axios.get('/ws/widget/' + widgetId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { chartType } = result;\r\n          if (chartType === Constants.PIE) {\r\n            const {\r\n              pieKey,\r\n              pieValue\r\n            } = result.data;\r\n            this.setState({\r\n              pieKey: pieKey,\r\n              pieValue: pieValue\r\n            });\r\n          }\r\n\r\n          this.setState({\r\n            widgetId: widgetId,\r\n            title: result.title,\r\n            x: result.x,\r\n            y: result.y,\r\n            width: result.width,\r\n            height: result.height,\r\n            sqlQuery: result.sqlQuery,\r\n            chartType: result.chartType,\r\n            jdbcDataSourceId: result.jdbcDataSourceId,\r\n            drills: result.drillThrough,\r\n            style: result.style\r\n          }, () => {\r\n            this.runQuery();\r\n          });\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleCheckBoxChange = (name, isChecked) => {\r\n    if (name === 'showBorder') {\r\n      const style = {...this.state.style};\r\n      style.showBorder = isChecked;\r\n      this.setState({\r\n        style: style\r\n      });\r\n    }\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      widgetId,\r\n      title,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      chartType,\r\n      drills,\r\n      style\r\n    } = this.state;\r\n\r\n    const widget = {\r\n      title: title,\r\n      dashboardId: this.props.dashboardId,\r\n      chartType: chartType,\r\n      jdbcDataSourceId: jdbcDataSourceId,\r\n      sqlQuery: sqlQuery,\r\n      drillThrough: drills,\r\n      style: style\r\n    }\r\n\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const {\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n      widget.data = {\r\n        pieKey: pieKey,\r\n        pieValue: pieValue\r\n      }\r\n    }\r\n\r\n    if (widgetId === null) {\r\n      axios.post('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      widget.id = widgetId;\r\n      axios.put('/ws/widget', widget)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          queryResult: result\r\n        });\r\n      });\r\n  }\r\n\r\n  addDrillThrough = () => {\r\n    const { \r\n      drills,\r\n      drillColumnName,\r\n      drillDashboardId\r\n    } = this.state;\r\n    const filterId = this.state.filterId;\r\n    const index = drills.findIndex(d => d.columnName === drillColumnName);\r\n    if (index === -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.push({\r\n        columnName: drillColumnName,\r\n        dashboardId: drillDashboardId\r\n      });\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  removeDrillThrough = (drill) => {\r\n    const { drills } = this.state;\r\n    const index = drills.findIndex(d => (d.columnName === drill.columnName) && (d.dashboardId === drill.dashboardId));\r\n    if (index !== -1) {\r\n      const newDrills = [...drills];\r\n      newDrills.splice(index, 1);\r\n      this.setState({\r\n        drills: newDrills\r\n      });\r\n    } \r\n  }\r\n\r\n  generateChart = () => {\r\n    if (this.state.chartType === Constants.PIE) {\r\n      const { \r\n        pieKey, \r\n        pieValue, \r\n        queryResult = {}\r\n      } = this.state;\r\n      console.log(\"generateChart\", pieKey, pieValue);\r\n      const data = Util.jsonToArray(queryResult.data);\r\n      const chartOption = EchartsApi.getPieOption(data, pieKey, pieValue);\r\n      this.setState({\r\n        chartOption: chartOption\r\n      });\r\n    }\r\n  }\r\n\r\n  renderChartPreview = () => {\r\n    const { \r\n      chartType,\r\n      queryResult = {},\r\n    } = this.state;\r\n    const columns = queryResult.columns || [];\r\n\r\n    let chartPreview = (<div>NOT SUPPORTED</div>);\r\n    if (chartType === Constants.TABLE) {\r\n\r\n    } else if (chartType === Constants.PIE) {\r\n      const { \r\n        chartOption,\r\n        pieKey,\r\n        pieValue\r\n      } = this.state;\r\n\r\n      chartPreview = (\r\n        <div>\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"value\" by \"key\"</div>\r\n          <label>Aggr Key (string)</label>\r\n          <Select\r\n            name={'pieKey'}\r\n            value={pieKey}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n            />\r\n\r\n\r\n          <label>By Aggr Value (number)</label>\r\n          <Select\r\n            name={'pieValue'}\r\n            value={pieValue}\r\n            onChange={this.handleOptionChange}\r\n            options={columns}\r\n            optionDisplay={'name'}\r\n            optionValue={'name'}\r\n            />\r\n          <button onClick={this.generateChart}>Generete Chart</button>\r\n          <ReactEcharts \r\n            option={chartOption} \r\n            style={{height: '350px', width: '100%'}}  \r\n            className='react_for_echarts' />\r\n        </div>\r\n      );\r\n    }\r\n    return chartPreview;\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      queryResult,\r\n      jdbcDataSources = [],\r\n      drills,\r\n      drillDashboards = []\r\n    } = this.state;\r\n\r\n    const data = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    const drillItems = (drills || []).map(drill =>\r\n      <div key={drill.columnName}>\r\n        <div>Column: {drill.columnName}</div>\r\n        <div>Dashboard: {drill.dashboardId}</div>\r\n        <button onClick={() => this.removeDrillThrough(drill)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const columnItems = columns.map(col =>\r\n      <div key={col.name}>{col.name} {col.dataType}</div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        \r\n        <div className=\"form-panel\">\r\n          <Tabs activeTab=\"basic\">\r\n            <div title=\"basic\">\r\n              <label>Title</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"title\" \r\n                value={this.state.title}\r\n                onChange={this.handleInputChange} \r\n              />\r\n\r\n              <Checkbox name=\"showBorder\" value=\"Show border\" checked={this.state.style.showBorder} onChange={this.handleCheckBoxChange} />\r\n            </div>\r\n\r\n            <div title=\"Query\">\r\n              <label>DataSource</label>\r\n              <Select\r\n                name={'jdbcDataSourceId'}\r\n                value={this.state.jdbcDataSourceId}\r\n                onChange={this.handleIntegerOptionChange}\r\n                options={jdbcDataSources}\r\n                optionDisplay={'name'}\r\n                optionValue={'id'}\r\n                />\r\n            \r\n              <label>SQL Query</label>\r\n              <AceEditor\r\n                style={{ marginTop: '8px' }}\r\n                value={this.state.sqlQuery}\r\n                mode=\"mysql\"\r\n                theme=\"xcode\"\r\n                name=\"blah2\"\r\n                onChange={this.handleAceEditorChange}\r\n                height={'300px'}\r\n                width={'100%'}\r\n                fontSize={15}\r\n                showPrintMargin={false}\r\n                showGutter={true}\r\n                highlightActiveLine={true}\r\n                setOptions={{\r\n                  showLineNumbers: true,\r\n                  tabSize: 2\r\n                }}\r\n              />\r\n\r\n              <div className=\"mt-3\">\r\n                <button className=\"button\" onClick={this.runQuery}>Run Query</button>\r\n              </div>\r\n\r\n              <label>Result</label>\r\n              <TableWidget\r\n                data={data}\r\n                columns={columns}\r\n                error={error}\r\n              />\r\n\r\n              <label>Columns Mapping</label>\r\n              <div>\r\n                {columnItems}\r\n              </div>\r\n            </div>\r\n\r\n            <div title=\"Chart\">\r\n              <label>Chart Options</label>\r\n              <Select\r\n                name={'chartType'}\r\n                value={this.state.chartType}\r\n                onChange={this.handleOptionChange}\r\n                options={Constants.CHART_TYPES}\r\n              />\r\n              <label>Preview</label>\r\n              {this.renderChartPreview()}  \r\n            </div>\r\n\r\n            <div title=\"Drill through\">\r\n              <label>Drill through</label>\r\n              <label>Column</label>\r\n              <Select\r\n                name={'drillColumnName'}\r\n                value={this.state.drillColumnName}\r\n                options={columns}\r\n                onChange={this.handleOptionChange}\r\n                optionDisplay={'name'}\r\n                optionValue={'name'}\r\n              />\r\n\r\n              <label>Dashboard</label>\r\n              <Select\r\n                name={'drillDashboardId'}\r\n                value={this.state.drillDashboardId}\r\n                options={drillDashboards}\r\n                onChange={this.handleIntegerOptionChange}\r\n                optionDisplay={'name'}\r\n                optionValue={'id'}\r\n              />\r\n              <div>\r\n                {drillItems}\r\n              </div>\r\n              <button className=\"button\" onClick={this.addDrillThrough}>Add</button>\r\n            </div>\r\n          </Tabs>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","import React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport * as Util from '../api/Util';\r\nimport * as Constants from '../api/Constants';\r\nimport TableWidget from './TableWidget';\r\nimport Select from './Select';\r\n\r\n\r\nimport './FilterEditPanel.css';\r\n\r\nclass FilterEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      jdbcDataSources: [],\r\n      filterId: null,\r\n      title: '',\r\n      type: Constants.SLICER,\r\n      data: {},\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: '',\r\n      queryResult: {},\r\n      param: '',\r\n    };\r\n  }\r\n\r\n  fetchFilter = async (filterId) => {\r\n    this.setState(this.initialState);\r\n\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    if (filterId === null) {\r\n      this.setState({\r\n        filterId: null\r\n      })\r\n    } else {\r\n      axios.get('/ws/filter/' + filterId)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const { \r\n            data,\r\n            type\r\n          } = result;\r\n          this.setState({\r\n            filterId: filterId,\r\n            title: result.title,\r\n            type: result.type,\r\n            jdbcDataSourceId: result.jdbcDataSourceId,\r\n            data: data\r\n          });\r\n\r\n          if (type === Constants.SLICER) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              param: data.param\r\n            });\r\n          } else if (type === Constants.SINGLE_VALUE) {\r\n            this.setState({\r\n              sqlQuery: data.sqlQuery,\r\n              param: data.param\r\n            });\r\n          }\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({ \r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      filterId,\r\n      title,\r\n      type,\r\n      jdbcDataSourceId,\r\n      sqlQuery,\r\n      param\r\n    } = this.state;\r\n\r\n    const filter = {\r\n      title: title,\r\n      type: type,\r\n      dashboardId: this.props.dashboardId,\r\n      jdbcDataSourceId: jdbcDataSourceId\r\n    };\r\n\r\n    if (type === Constants.SLICER) {\r\n      filter.data = {\r\n        sqlQuery: sqlQuery,\r\n        param: param\r\n      }\r\n    } else if (type === Constants.SINGLE_VALUE) {\r\n      filter.data = {\r\n        useQuery: false,\r\n        sqlQuery: sqlQuery,\r\n        param: param,\r\n      }\r\n    }\r\n\r\n    if (filterId === null) {\r\n      axios.post('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    } else {\r\n      filter.id = filterId;\r\n      axios.put('/ws/filter', filter)\r\n        .then(res => {\r\n          this.props.onSave();\r\n        });\r\n    }\r\n  }\r\n\r\n  runQuery = () => {\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { \r\n      queryResult = {},\r\n      jdbcDataSources = [],\r\n      type\r\n    } = this.state;\r\n\r\n    const data = Util.jsonToArray(queryResult.data);\r\n    const columns = queryResult.columns || [];\r\n    const error = queryResult.error;\r\n\r\n    const requireSql = type === Constants.SLICER;\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={this.save}>Save</button>\r\n        <button className=\"button\" onClick={this.runQuery}>Run</button>\r\n\r\n        <div className=\"form-panel\">\r\n          <label>Title</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"title\" \r\n            value={this.state.title}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>Type</label>\r\n          <Select\r\n            name={'type'} \r\n            value={this.state.type} \r\n            onChange={this.handleOptionChange}\r\n            options={Constants.FILTER_TYPES}\r\n          />\r\n\r\n          {\r\n            requireSql ?\r\n            (\r\n              <React.Fragment>\r\n                <label>DataSource</label>\r\n                <Select\r\n                  name={'jdbcDataSourceId'} \r\n                  value={this.state.jdbcDataSourceId} \r\n                  onChange={this.handleIntegerOptionChange}\r\n                  options={jdbcDataSources}\r\n                  optionDisplay={'name'}\r\n                  optionValue={'id'}\r\n                />\r\n    \r\n                <label>SQL Query</label>\r\n                <AceEditor\r\n                  style={{marginTop: '8px'}}\r\n                  value={this.state.sqlQuery}\r\n                  mode=\"mysql\"\r\n                  theme=\"xcode\"\r\n                  name=\"blah2\"\r\n                  onChange={this.handleAceEditorChange}\r\n                  height={'300px'}\r\n                  width={'100%'}\r\n                  fontSize={15}\r\n                  showPrintMargin={false}\r\n                  showGutter={true}\r\n                  highlightActiveLine={true}\r\n                  setOptions={{\r\n                    showLineNumbers: true,\r\n                    tabSize: 2\r\n                  }}\r\n                />\r\n\r\n                <label>Result</label>\r\n                <TableWidget\r\n                  data={data}\r\n                  columns={columns}\r\n                  error={error}\r\n                />\r\n              </React.Fragment>\r\n            ) : null\r\n          }\r\n\r\n          <label>Param</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"param\" \r\n            value={this.state.param}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterEditPanel;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport FilterViewPanel from '../components/FilterViewPanel';\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\nimport FilterEditPanel from '../components/FilterEditPanel';\r\n\r\nimport Modal from '../components/Modal';\r\n\r\nimport * as Constants from '../api/Constants';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showFilterEditPanel: false,\r\n      showFilterViewPanel: true,\r\n      showConfirmDeletionPanel: false,\r\n      objectToDelete: {},\r\n      isEditMode: false,\r\n      isReadOnly: false,\r\n      autoRefreshTimerId: '',\r\n      lastRefreshed: '',\r\n      refreshInterval: 15,\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      style: {},\r\n      widgetViewWidth: 1000\r\n    }\r\n\r\n    this.filterViewPanel = React.createRef();\r\n    this.filterEditPanel = React.createRef();\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    console.log('DashboardEditView', dashboardId);\r\n\r\n    const url = this.props.location.search;\r\n    console.log('url', url);\r\n    const params = new URLSearchParams(url);\r\n    console.log('params', params);\r\n    for(let pair of params.entries()) {\r\n      console.log(pair[0]+ ', '+ pair[1]); \r\n    } \r\n\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = this.state.showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    console.log('componentDidMount', pageWidth, widgetViewWidth);\r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth\r\n    }, () => {\r\n      if (dashboardId === null) {\r\n        this.setState({\r\n          dashboardId: null\r\n        });\r\n      } else {\r\n        axios.get(`/ws/dashboard/${dashboardId}`)\r\n          .then(res => {\r\n            const result = res.data;\r\n            this.setState({\r\n              dashboardId: result.id,\r\n              name: result.name,\r\n              style: result.style\r\n            }, () => {\r\n              this.refresh();\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n    }\r\n  }\r\n\r\n  loadViewByDashboardName = () => {\r\n    const url = this.props.location.search;\r\n    const params = new URLSearchParams(url);\r\n    const dashboardName = params.get('name');\r\n    const showFilter = params.get('showFilter');\r\n\r\n    const showFilterViewPanel = showFilter == 'true';\r\n\r\n    const pageWidth = this.getPageWidth();\r\n    const widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    \r\n    this.setState({\r\n      pageWidth: pageWidth,\r\n      widgetViewWidth: widgetViewWidth,\r\n      isReadOnly: true,\r\n      name: dashboardName,\r\n      showFilterViewPanel: showFilterViewPanel\r\n    }, () => {\r\n      axios.get(`/ws/dashboard/name/${dashboardName}`)\r\n        .then(res => {\r\n          const result = res.data;\r\n          this.setState({\r\n            dashboardId: result.id,\r\n            name: result.name,\r\n            style: result.style\r\n          }, () => {\r\n            this.refresh();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  getPageWidth = () => {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    return thisNode.clientWidth - 40;\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  toggleAutoRefresh = () => {\r\n    const { autoRefreshTimerId } = this.state;\r\n    if (autoRefreshTimerId) {\r\n      clearInterval(autoRefreshTimerId);\r\n      this.setState({\r\n        autoRefreshTimerId: ''\r\n      });\r\n    } else {\r\n      const { refreshInterval } = this.state;\r\n      let interval = parseInt(refreshInterval, 10) || 15;\r\n      interval = interval < 1 ? 1 : interval;\r\n      const timerId = setInterval(() => {\r\n        this.filterViewPanel.current.applyFilters();\r\n        this.updateLastRefreshed();\r\n      }, interval * 1000);\r\n      this.setState({\r\n        autoRefreshTimerId: timerId\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n    this.refreshWidgetView();\r\n    this.refreshFilterView();\r\n    this.updateLastRefreshed();\r\n  }\r\n\r\n  refreshFilterView = () => {\r\n    const { \r\n      dashboardId\r\n    } = this.state;\r\n    this.filterViewPanel.current.fetchFilters(dashboardId);\r\n  }\r\n\r\n  refreshWidgetView = () => {\r\n    const { \r\n      dashboardId,\r\n      widgetViewWidth\r\n    } = this.state;\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId, widgetViewWidth, null);\r\n  } \r\n\r\n  updateLastRefreshed = () => {\r\n    const now = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\r\n    this.setState({\r\n      lastRefreshed: now\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    console.log('save');\r\n    const {\r\n      dashboardId,\r\n      name,\r\n      style\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      id: dashboardId, \r\n      name: name,\r\n      style: style\r\n    };\r\n\r\n    axios.put('/ws/dashboard/', dashboard)\r\n      .then(res => {\r\n      });\r\n\r\n    this.widgetViewPanel.current.saveWidgets();\r\n\r\n    this.props.onDashboardSave(dashboardId);\r\n\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      isEditMode: true\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  onSaveWidget = () => {\r\n    this.setState({ \r\n      showWidgetEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshWidgetView();\r\n  }\r\n\r\n  onSaveFilter = () => {\r\n    this.setState({ \r\n      showFilterEditPanel: false \r\n    });\r\n    // FIXME: not need to refresh. Just add to state.widgets\r\n    this.refreshFilterView();\r\n  }\r\n\r\n  toggleFilterViewPanel = () => {\r\n    const { \r\n      showFilterViewPanel\r\n    } = this.state;\r\n    this.resizePageLayout(!showFilterViewPanel);\r\n  }\r\n\r\n  resizePageLayout = (showFilterViewPanel) => {\r\n    const pageWidth = this.getPageWidth();;\r\n    let widgetViewWidth = showFilterViewPanel ? pageWidth - Constants.DEFAULT_FILTER_VIEW_WIDTH : pageWidth;\r\n    this.widgetViewPanel.current.resizeGrid(widgetViewWidth, true);\r\n\r\n    this.setState({\r\n      showFilterViewPanel: showFilterViewPanel,\r\n      widgetViewWidth: widgetViewWidth\r\n    }); \r\n  }\r\n\r\n  openFilterEditPanel = (filterId) => {\r\n    this.filterEditPanel.current.fetchFilter(filterId);\r\n    this.setState({\r\n      showFilterEditPanel: true\r\n    });\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    const { dashboardId } = this.state;\r\n    this.widgetEditPanel.current.fetchWidget(widgetId, dashboardId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  applyFilters = (filterParams) => {\r\n    this.widgetViewPanel.current.queryWidgets(filterParams);\r\n  }\r\n\r\n  fullScreen = () => {\r\n    const { name } = this.state;\r\n    const url = `/workspace/dashboard/view?name=${name}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onTableCellClick = () => {\r\n    this.props.history.push(`/workspace/dashboard/drill?name=&`);\r\n  }\r\n\r\n  onHeightChange = (height) => {\r\n    const style = {...this.state.style};\r\n    style.height = height;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  onBackgroundColorChange = (color) => {\r\n    const style = {...this.state.style};\r\n    style.backgroundColor = color;\r\n    this.setState({\r\n      style: style\r\n    });\r\n  }\r\n\r\n  confirmDelete = () => {\r\n    const { \r\n      objectToDelete = {},\r\n    } = this.state;\r\n    const dashboardId = objectToDelete.id;\r\n    axios.delete(`/ws/dashboard/${dashboardId}`)\r\n      .then(res => {\r\n        this.props.onDashboardDelete(dashboardId);\r\n        this.closeConfirmDeletionPanel();\r\n      });\r\n  }\r\n\r\n  deleteDashboard = () => {\r\n    const { \r\n      dashboardId,\r\n      name\r\n    } = this.state;\r\n    const dashboard = {\r\n      id: dashboardId,\r\n      name: name\r\n    }\r\n    this.openConfirmDeletionPanel(dashboard);\r\n  }\r\n\r\n  openConfirmDeletionPanel = (dashboard) => {\r\n    this.setState({\r\n      objectToDelete: dashboard,\r\n      showConfirmDeletionPanel: true\r\n    });\r\n  }\r\n\r\n  closeConfirmDeletionPanel = () => {\r\n    this.setState({\r\n      objectToDelete: {},\r\n      showConfirmDeletionPanel: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoRefreshTimerId,\r\n      lastRefreshed,\r\n      isEditMode,\r\n      isReadOnly\r\n    } = this.state;\r\n    const autoRefreshStatus = autoRefreshTimerId === '' ? 'OFF' : 'ON';\r\n\r\n    let editButtonPanel;\r\n    let fullScreenButtonPanel = null;\r\n    const controlButtons = (\r\n      <React.Fragment>\r\n        <span className=\"mr-3\">Last refreshed: {lastRefreshed}</span>\r\n        {\r\n          autoRefreshStatus === 'OFF' ? \r\n          (\r\n            <input \r\n              type=\"text\" \r\n              name=\"refreshInterval\" \r\n              value={this.state.refreshInterval}\r\n              onChange={this.handleInputChange}\r\n              className=\"inline-block\" \r\n              style={{width: '50px'}}\r\n            />\r\n          ) : null\r\n        }\r\n        <button className=\"button square-button mr-3\" onClick={this.toggleAutoRefresh}>\r\n          {\r\n            autoRefreshStatus === 'ON' ? \r\n            (\r\n              <FontAwesomeIcon icon=\"stop-circle\" size=\"lg\" fixedWidth />\r\n            ) : \r\n            (\r\n              <FontAwesomeIcon icon=\"play-circle\" size=\"lg\" fixedWidth />\r\n            )\r\n          }\r\n        </button>\r\n        \r\n        <button className=\"button mr-3\" onClick={this.toggleFilterViewPanel}>Show Filters</button>\r\n        <button className=\"button square-button\" onClick={this.refresh}>\r\n          <FontAwesomeIcon icon=\"redo-alt\" size=\"lg\" fixedWidth />\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n\r\n    if (!isReadOnly) {\r\n      if (isEditMode) {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button mr-3\" onClick={this.cancelEdit}>Cancel</button>\r\n            <button className=\"button mr-3\" onClick={this.save}>Save</button>\r\n            <button className=\"button mr-3\" onClick={this.deleteDashboard}>Delete</button>\r\n            <button className=\"button mr-3\" onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\r\n            <button className=\"button\" onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        editButtonPanel = (\r\n          <React.Fragment>\r\n            <button className=\"button square-button mr-3\" onClick={this.fullScreen}>\r\n              <FontAwesomeIcon icon=\"tv\" size=\"lg\" fixedWidth />\r\n            </button>\r\n            <button className=\"button\" onClick={this.edit}>Edit</button>\r\n            {controlButtons}\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      fullScreenButtonPanel = controlButtons;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-menu-panel row\">\r\n          <div className=\"float-left\">\r\n            {\r\n              isReadOnly || !isEditMode ?\r\n              (\r\n                <div className=\"dashboard-name\">\r\n                  {this.state.name}\r\n                </div>\r\n              ) :(\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"name\" \r\n                  value={this.state.name}\r\n                  onChange={this.handleInputChange} \r\n                  className=\"dashboard-name\"\r\n                  />\r\n              )\r\n            }\r\n            \r\n          </div>\r\n          <div className=\"float-right\">\r\n            {fullScreenButtonPanel}\r\n            {editButtonPanel}\r\n          </div>\r\n        </div>\r\n\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          isEditMode={this.state.isEditMode}\r\n          widgetViewWidth={this.state.widgetViewWidth}\r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n          onHeightChange={this.onHeightChange}\r\n          onBackgroundColorChange={this.onBackgroundColorChange}\r\n          {...this.state.style}\r\n        />\r\n        <FilterViewPanel \r\n          ref={this.filterViewPanel} \r\n          onEdit={this.openFilterEditPanel}\r\n          onApplyFilters={this.applyFilters}\r\n          isEditMode={this.state.isEditMode}\r\n          show={this.state.showFilterViewPanel}\r\n        />\r\n\r\n        <Modal \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false })}\r\n          modalClass={'dashboard-edit-widget-dialog'} \r\n          title={'Widget Edit'} >\r\n          <WidgetEditPanel \r\n            ref={this.widgetEditPanel} \r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveWidget}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showFilterEditPanel}\r\n          onClose={() => this.setState({ showFilterEditPanel: false })}\r\n          modalClass={'dashboard-edit-filter-dialog'} \r\n          title={'Filter Edit'}>\r\n          <FilterEditPanel\r\n            ref={this.filterEditPanel}\r\n            jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n            dashboardId={this.state.dashboardId}\r\n            onSave={this.onSaveFilter}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal \r\n          show={this.state.showConfirmDeletionPanel}\r\n          onClose={this.closeConfirmDeletionPanel}\r\n          modalClass={'small-modal-panel'}\r\n          title={'Confirm Deletion'} >\r\n          <div className=\"confirm-deletion-panel\">\r\n            Are you sure you want to delete {this.state.objectToDelete.name}?\r\n          </div>\r\n          <button className=\"button\" onClick={this.confirmDelete}>Delete</button>\r\n        </Modal>\r\n\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\nimport Modal from '../components/Modal';\r\nimport './Dashboard.css';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as Constants from '../api/Constants';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: '',\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      activeDashboardId: 0,\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false,\r\n      name: ''\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      name\r\n    } = this.state;\r\n\r\n    const dashboard = {\r\n      name: name,\r\n      style: {\r\n        height: Constants.DEFAULT_DASHBOARD_HEIGHT,\r\n        backgroundColor: 'rgba(233, 235, 238, 1)'\r\n      }\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.closeEditPanel();\r\n        this.fetchBoards();\r\n        this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  view = (dashboardId) => {\r\n    this.setState({\r\n      activeDashboardId: dashboardId\r\n    });\r\n    this.props.history.push(`/workspace/dashboard/${dashboardId}`);\r\n  }\r\n\r\n  onDashboardSave = (dashboardId) => {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  onDashboardDelete = (dashboardId) => {\r\n    this.fetchBoards();\r\n    this.setState({\r\n      activeDashboardId: 0\r\n    });\r\n    this.props.history.push('/workspace/dashboard');\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dashboards = [],\r\n      activeDashboardId,\r\n      searchValue\r\n    } = this.state;\r\n\r\n    \r\n    const dashboardRows = [];\r\n    for (let i = 0; i < dashboards.length; i++) {\r\n      const dashboard = dashboards[i];\r\n      const name = dashboard.name;\r\n      const menuActive = activeDashboardId === dashboard.id ? 'dashboard-menu-item-active' : '';\r\n      if (!searchValue || (searchValue && name.includes(searchValue))) {\r\n        dashboardRows.push(\r\n          (\r\n            <div key={i} className={`dashboard-menu-item ellipsis ${menuActive}`} onClick={() => this.view(dashboard.id)}>\r\n              {name}\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dashboard-sidebar\">\r\n          <div style={{margin: '5px'}}>\r\n            <button className=\"button icon-button dashboard-add-button\" onClick={() => this.setState({ showEditPanel: true })}>\r\n              <FontAwesomeIcon icon=\"plus\" /> New\r\n            </button>\r\n            <input \r\n              type=\"text\" \r\n              name=\"searchValue\" \r\n              value={this.state.searchValue}\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleInputChange} />\r\n          </div>\r\n          <div>\r\n            {dashboardRows}\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <Route \r\n            path=\"/workspace/dashboard/:id\" \r\n            render={(props) => <DashboardEditView key={props.match.params.id} onDashboardSave={this.onDashboardSave} onDashboardDelete={this.onDashboardDelete} />} \r\n            />\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={() => this.setState({ showEditPanel: false })}\r\n          modalClass={'small-modal-panel'} \r\n          title={'New'} >\r\n          <div>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} \r\n              />\r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DashboardEditView from './DashboardEditView';\r\n\r\nclass DashboardFullScreenView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.dashboardEditView.loadViewByDashboardName();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-screen-view\">\r\n        <DashboardEditView wrappedComponentRef={comp => (this.dashboardEditView = comp)} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default DashboardFullScreenView;\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst SYS_ROLES = ['developer', 'viewer'];\r\n\r\nclass User extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      groups: [],\r\n      searchValue: '',\r\n      showEditPanel: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleOptionChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      tempPassword: '',\r\n      sysRole: '',\r\n      userGroupId: '',\r\n      userGroups: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    axios.get('/ws/user')\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ \r\n          users: users \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (user) => {\r\n    if (user !== null) {\r\n      this.setState({\r\n        id: user.id,\r\n        username: user.username,\r\n        name: user.name,\r\n        tempPassword: '',\r\n        sysRole: user.sysRole,\r\n        userGroups: user.userGroups\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n\r\n    this.setState({\r\n      userGroupId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      id,\r\n      username,\r\n      name,\r\n      tempPassword,\r\n      sysRole,\r\n      userGroups\r\n    } = this.state;\r\n\r\n    let user = {\r\n      username: username,\r\n      name: name,\r\n      sysRole: sysRole,\r\n      userGroups: userGroups\r\n    };\r\n\r\n    if (id !== null) {\r\n      user.id = id;\r\n      \r\n      axios.put('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } else {\r\n      user.tempPassword = tempPassword;\r\n\r\n      axios.post('/ws/user', user)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.closeEditPanel();\r\n          this.fetchUsers();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/user/' + id)\r\n      .then(res => {\r\n        this.fetchUsers();\r\n      });\r\n  }\r\n\r\n  addUserGroup = () => {\r\n    const { \r\n      userGroupId,\r\n      userGroups = []\r\n    } = this.state;\r\n    const index = userGroups.findIndex(groupId => groupId === userGroupId);\r\n    if (index === -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.push(userGroupId);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUserGroup = (groupId) => {\r\n    const { \r\n      userGroups = [] \r\n    } = this.state;\r\n    const index = userGroups.findIndex(id => id === groupId);\r\n    if (index !== -1) {\r\n      const newUserGroups = [...userGroups];\r\n      newUserGroups.splice(index, 1);\r\n      this.setState({\r\n        userGroups: newUserGroups\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      users = [],\r\n      groups = [],\r\n      userGroups = []\r\n    } = this.state;\r\n\r\n    const userItems = users.map(user => \r\n      <div key={user.id} className=\"user-card\">\r\n        <p>\r\n          {user.username}\r\n          {user.name}\r\n          {user.sysRole}\r\n          <button className=\"button\" onClick={() => this.openEditPanel(user)}>update</button>\r\n          <button className=\"button\" onClick={() => this.delete(user.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const userGroupItems = [];\r\n    for (let i = 0; i < userGroups.length; i++) {\r\n      const groupId = userGroups[i];\r\n      for (let j = 0; j < groups.length; j++) {\r\n        if (groupId === groups[j].id) {\r\n          userGroupItems.push(\r\n            (\r\n              <div key={groupId}>\r\n                <div>Group: {groups[j].name}</div>\r\n                <button className=\"button\" onClick={() => this.removeUserGroup(groupId)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchValue\"\r\n            value={this.state.searchValue}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Search...\"\r\n            style={{width: '200px'}}\r\n          />\r\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New User\r\n          </button>\r\n        </div>\r\n        <div className=\"row\">\r\n          {userItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'} \r\n          title={'User'} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Temp password</label>\r\n            <input \r\n              type=\"password\" \r\n              name=\"tempPassword\" \r\n              value={this.state.tempPassword}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            <label>System Role</label>\r\n            <Select\r\n              name={'sysRole'}\r\n              value={this.state.sysRole}\r\n              onChange={this.handleOptionChange}\r\n              options={SYS_ROLES}\r\n            />\r\n            \r\n            <br/>\r\n            \r\n            <label>Groups</label>\r\n            <Select\r\n              name={'userGroupId'}\r\n              value={this.state.userGroupId}\r\n              onChange={this.handleIntegerOptionChange}\r\n              options={groups}\r\n              optionDisplay={'name'}\r\n              optionValue={'id'}\r\n            />\r\n            <button className=\"button\" onClick={this.addUserGroup}>Add</button>\r\n            <div>\r\n              {userGroupItems}\r\n            </div>\r\n\r\n            <button className=\"button\" className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\nimport Select from '../components/Select';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      dashboards: [],\r\n      showEditPanel: false,\r\n      searchValue: '',\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleIntegerOptionChange = (name, value) => {\r\n    const intValue = parseInt(value, 10) || 0;\r\n    this.setState({ \r\n      [name]: intValue\r\n    });\r\n  }\r\n\r\n  get initialEditPanelState() {\r\n    return {\r\n      id: null,\r\n      name: '',\r\n      groupDashboardId: '',\r\n      groupDashboards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGroups();\r\n    this.fetchDashboards();\r\n  }\r\n\r\n  fetchGroups = () => {\r\n    axios.get('/ws/group')\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ \r\n          groups: groups \r\n        });\r\n      });\r\n  }\r\n\r\n  fetchDashboards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  openEditPanel = (group) => {\r\n    if (group !== null) {\r\n      this.setState({\r\n        id: group.id,\r\n        name: group.name,\r\n        groupDashboards: group.groupDashboards\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    this.setState({\r\n      groupDashboardId: '',\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  closeEditPanel = () => {\r\n    this.setState({\r\n      showEditPanel: false\r\n    });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState(this.initialEditPanelState);\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      id,\r\n      name,\r\n      groupDashboards\r\n    } = this.state;\r\n\r\n    let group = {\r\n      name: name,\r\n      groupDashboards: groupDashboards\r\n    };\r\n\r\n    if (id !== null) {\r\n      group.id = id;\r\n      axios.put('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } else {\r\n      axios.post('/ws/group', group)\r\n        .then(res => {\r\n          this.clearEditPanel();\r\n          this.fetchGroups();\r\n          this.closeEditPanel();\r\n        });\r\n    } \r\n  }\r\n\r\n  delete = (id) => {\r\n    axios.delete('/ws/group/' + id)\r\n      .then(res => {\r\n        this.fetchGroups();\r\n      });\r\n  }\r\n\r\n  addGroupDashboard= () => {\r\n    const { \r\n      groupDashboardId,\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    console.log('addGroupDashboard', groupDashboardId);\r\n    console.log('addGroupDashboard', groupDashboards);\r\n\r\n    if (groupDashboardId) {\r\n      const index = groupDashboards.findIndex(dashboardId => dashboardId === groupDashboardId);\r\n      if (index === -1) {\r\n        const newGroupDashboards = [...groupDashboards];\r\n        newGroupDashboards.push(groupDashboardId);\r\n        this.setState({\r\n          groupDashboards: newGroupDashboards\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  removeGroupDashboard = (dashboardId) => {\r\n    const { \r\n      groupDashboards = [] \r\n    } = this.state;\r\n    const index = groupDashboards.findIndex(id => id === dashboardId);\r\n    if (index !== -1) {\r\n      const newGroupDashboards = [...groupDashboards];\r\n      newGroupDashboards.splice(index, 1);\r\n      this.setState({\r\n        groupDashboards: newGroupDashboards\r\n      });\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { \r\n      id,\r\n      groups = [],\r\n      dashboards = [],\r\n      groupDashboards = []\r\n    } = this.state;\r\n\r\n    const mode = id === null ? 'New' : 'Edit';\r\n\r\n    const groupItems = groups.map(group => \r\n      <div key={group.id} className=\"group-card\">\r\n        <p>\r\n          {group.name}\r\n          <button className=\"button\" onClick={() => this.openEditPanel(group)}>update</button>\r\n          <button className=\"button\" onClick={() => this.delete(group.id)}>delete</button>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    const groupDashboardItems = [];\r\n    for (let i = 0; i < groupDashboards.length; i++) {\r\n      const dashboardId = groupDashboards[i];\r\n      for (let j = 0; j < dashboards.length; j++) {\r\n        if (dashboardId === dashboards[j].id) {\r\n          groupDashboardItems.push(\r\n            (\r\n              <div key={dashboardId}>\r\n                <div>Name: {dashboards[j].name}</div>\r\n                <button className=\"button\" onClick={() => this.removeGroupDashboard(dashboardId)}>delete</button>\r\n              </div>\r\n            )\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchValue\"\r\n            value={this.state.searchValue}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Search...\"\r\n            style={{width: '200px'}}\r\n            />\r\n          <button className=\"button\" onClick={this.clearSearch}>Clear</button>\r\n          <button className=\"button\" onClick={() => this.openEditPanel(null)}>\r\n            <FontAwesomeIcon icon=\"plus\" /> New Group\r\n          </button>\r\n        </div>\r\n        <div className=\"row\">\r\n          {groupItems}\r\n        </div>\r\n\r\n        <Modal \r\n          show={this.state.showEditPanel}\r\n          onClose={this.closeEditPanel}\r\n          modalClass={'small-modal-panel'} \r\n          title={mode} >\r\n\r\n          <div className=\"form-panel\">\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n            \r\n            <label>Dashboards</label>\r\n            <Select\r\n              name={'groupDashboardId'}\r\n              value={this.state.groupDashboardId}\r\n              onChange={this.handleIntegerOptionChange}\r\n              options={dashboards}\r\n              optionDisplay={'name'}\r\n              optionValue={'id'}\r\n            />\r\n            <button className=\"button\" onClick={this.addGroupDashboard}>Add</button>\r\n            <div>\r\n              {groupDashboardItems}\r\n            </div>\r\n            \r\n            <button className=\"button\" onClick={this.save}>Save</button>\r\n          </div>\r\n        </Modal>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group;","\r\nimport React from 'react';\r\n\r\nimport User from './User';\r\nimport Group from './Group';\r\nimport Tabs from '../components/Tabs';\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Tabs activeTab=\"Group\">\r\n          <div title=\"Group\">\r\n            <Group />\r\n          </div>\r\n          <div title=\"User\">\r\n            <User />\r\n          </div>\r\n        </Tabs>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UserManagement;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Account extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdatePassword: false,\r\n      id: null,\r\n      username: '',\r\n      name: '',\r\n      sysRole: '',\r\n      apiKey: '',\r\n      password: '',\r\n      confirmedPassword: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n  }\r\n\r\n  fetchUser = () => {\r\n    axios.get('/ws/user/account')\r\n      .then(res => {\r\n        const result = res.data;\r\n      });\r\n  }\r\n\r\n  generateApiKey = () => {\r\n  }\r\n\r\n  save = () => {\r\n    const {\r\n      showUpdatePassword,\r\n      name,\r\n      password,\r\n      confirmedPassword\r\n    } = this.state;\r\n\r\n    const user = {\r\n      name: name\r\n    }\r\n\r\n    if (showUpdatePassword) {\r\n      if (password !== confirmedPassword) {\r\n        alert('confirm password');\r\n        return;\r\n      }\r\n      \r\n      user.password = password;\r\n    }\r\n  }\r\n\r\n  toggleUpdatePassword = () => {\r\n    this.setState(prevState => ({\r\n      showUpdatePassword: !prevState.showUpdatePassword\r\n    })); \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showUpdatePassword,\r\n      username,\r\n      sysRole,\r\n      apiKey\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>Account</div>\r\n        <div className=\"form-panel\">   \r\n          <label>Username</label>\r\n          <div>{username}</div>\r\n\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} />\r\n\r\n          <label>System Role</label>\r\n          <div>{sysRole}</div>\r\n\r\n          <label>API Key</label>\r\n          <div>{apiKey}</div>\r\n          <button className=\"button\" onClick={this.generateApiKey}>Generate new API Key</button>\r\n          <br/>\r\n\r\n          <button className=\"button\" onClick={this.toggleUpdatePassword}>Update password</button>\r\n          {\r\n            showUpdatePassword ?\r\n            (\r\n              <React.Fragment>\r\n                <br/>\r\n                <label>Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange} />\r\n                <label>Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  name=\"confirmedPassword\" \r\n                  value={this.state.confirmedPassword}\r\n                  onChange={this.handleInputChange} />\r\n              </React.Fragment>\r\n            ) : null\r\n          }\r\n\r\n          <br/>\r\n          <button className=\"button\" onClick={this.save}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","\r\nclass AuthStore {\r\n\r\n  constructor() {\r\n    this._sysRole = '';\r\n    this._username = '';\r\n  }\r\n\r\n  set sysRole(sysRole) {\r\n    this._sysRole = sysRole;\r\n  }\r\n\r\n  get sysRole() {\r\n    return this._sysRole;\r\n  }\r\n\r\n  set username(username) {\r\n    this._username = username;\r\n  }\r\n\r\n  get username() {\r\n    return this._username;\r\n  }\r\n\r\n  get isAuthenticated() {\r\n    return this._sysRole !== '';\r\n  }\r\n}\r\n\r\nexport default new AuthStore();","import React from 'react';\r\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport DataSource from './DataSource';\r\nimport Dashboard from './Dashboard';\r\nimport DashboardFullScreenView from './DashboardFullScreenView';\r\nimport UserManagement from './UserManagement';\r\nimport Account from './Account';\r\n\r\nimport Toast from '../components/Toast';\r\n\r\nimport * as Constants from '../api/Constants';\r\nimport AuthStore from '../api/AuthStore';\r\nimport './Workspace.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    link: '/workspace/dashboard',\r\n    value: 'Dashboard',\r\n    icon: 'chalkboard',\r\n  }, \r\n  {\r\n    link: '/workspace/datasource',\r\n    value: 'Data source',\r\n    icon: 'database'\r\n  }, \r\n  {\r\n    link: '/workspace/usermanagement',\r\n    value: 'User Management',\r\n    icon: 'users-cog'\r\n  }\r\n];\r\n\r\nconst ACCOUNT_MENU_LINK = '/workspace/account';\r\n\r\nclass Workspace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuLink: '/workspace/dashboard',\r\n      username: '',\r\n      sysRole: '',\r\n      requestingLogin: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Workspace - componentDidMount');\r\n    const pathname = this.props.location.pathname;\r\n    // TODO: fetch user information\r\n    this.setState({\r\n      currentMenuLink: pathname,\r\n    });\r\n    if (AuthStore.isAuthenticated) {\r\n      const sysRole = AuthStore.sysRole;\r\n      this.setState({\r\n        sysRole: sysRole\r\n      });\r\n    } else {\r\n      // Try login. If not, redirect\r\n    }\r\n  }\r\n\r\n  handleMenuClick = (menuLink) => {\r\n    this.setState({\r\n      currentMenuLink: menuLink\r\n    });\r\n  }\r\n\r\n  logout = () => {\r\n    axios.get('/auth/logout')\r\n      .then(res => {\r\n        this.props.history.push('/login');\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMenuLink,\r\n      sysRole\r\n    } = this.state;\r\n\r\n    let menuItems = [];\r\n    let menuList = [];\r\n    if (sysRole === Constants.SYS_ROLE_VIEWER) {\r\n      menuList = MENU_ITEMS.filter(m => m.name === 'dashboard' || m.name === 'account');\r\n    } else {\r\n      menuList = MENU_ITEMS;\r\n    }\r\n    for (let i = 0; i < menuList.length; i++) {\r\n      const menu = menuList[i];\r\n      const active = currentMenuLink === menu.link ? 'menu-item-active' : '';\r\n      menuItems.push(\r\n        (\r\n          <li key={menu.link} className={active}>\r\n            <Link to={menu.link} onClick={() => this.handleMenuClick(menu.link)}>\r\n              <FontAwesomeIcon icon={menu.icon} fixedWidth />\r\n              <span className=\"workspace-nav-menu-text\">{menu.value}</span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    const isAccountMenuActive = currentMenuLink === ACCOUNT_MENU_LINK ? 'menu-item-active' : '';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"workspace-nav\">  \r\n          <div className=\"workspace-name\">Poli</div>\r\n          <ul className=\"workspace-nav-menu\">\r\n            {menuItems}\r\n          </ul>\r\n          <div className=\"workspace-account-menu\">\r\n            <div className={`workspace-account-button inline-block ${isAccountMenuActive}`}>\r\n              <Link to=\"/workspace/account\" onClick={() => this.handleMenuClick(ACCOUNT_MENU_LINK)}>\r\n                <FontAwesomeIcon icon=\"user\" fixedWidth />\r\n                <span className=\"workspace-nav-menu-text\">Account</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"workspace-logout-button inline-block\" onClick={this.logout}>\r\n              <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"workspace-content\">\r\n          <Switch>\r\n            <Route exact path=\"/workspace/datasource\" component={DataSource} />\r\n            <Route exact path=\"/workspace/dashboard/view\" component={DashboardFullScreenView} />\r\n            <Route exact path=\"/workspace/account\" component={Account} />\r\n            <Route exact path=\"/workspace/usermanagement\" component={UserManagement} />\r\n            <Route path=\"/workspace/dashboard\" component={Dashboard} />\r\n          </Switch>\r\n        </div>\r\n        <Toast />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Workspace);\r\n","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>PageNotFound</h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { Route, Switch, Redirect, withRouter, Component } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nimport Login from './views/Login';\r\nimport Workspace from './views/Workspace';\r\nimport PageNotFound from './views/PageNotFound';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faChalkboard, faDatabase, faUsersCog, faPlus, faTimes,\r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt,\r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv\r\n} from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(faChalkboard, faDatabase, faUsersCog, faPlus, faTimes, \r\n  faEdit, faTrashAlt, faPlayCircle, faStopCircle, faRedoAlt, \r\n  faTv, faPlug, faUser, faSignOutAlt, faCompress, faExpandArrowsAlt,\r\n  faFileExport, faFileCsv\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      sysRole: '',\r\n      isAuthorizing: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      sysRole = ''\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    console.log('App - componentDidMount',isAuthenticated);\r\n\r\n    if (!isAuthenticated) {\r\n      console.log('App - componentDidMount', 'cookie');\r\n      axios.post('/auth/login/cookie')\r\n        .then(res => {\r\n          const result = res.data;\r\n          if (result == 'error') {\r\n            this.setState({\r\n              sysRole: ''\r\n            });\r\n          } else {\r\n            this.setState({\r\n              sysRole: result\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  onLoginSuccess = (sysRole) => {\r\n    console.log('App - onLoginSuccess', sysRole);\r\n    this.setState({\r\n      sysRole: sysRole\r\n    });\r\n  }\r\n   \r\n  render() {\r\n    const {\r\n      sysRole = ''\r\n    } = this.state;\r\n\r\n    let isAuthenticated = false;\r\n    if (sysRole) {\r\n      isAuthenticated = true;\r\n    }\r\n    console.log('App - render', sysRole, isAuthenticated);\r\n    return (\r\n      <div className=\"app\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Login} />\r\n        <PrivateRoute authenticated={isAuthenticated} path='/workspace' component={Workspace} />\r\n        <Route path=\"/login\" render={() => <Login onLoginSuccess={this.onLoginSuccess} />} />\r\n        <Route component={PageNotFound} />\r\n      </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({component: Component, authenticated, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => authenticated === true\r\n        ? <Component {...props} />\r\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/poli\">\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}