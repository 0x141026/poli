{"version":3,"sources":["views/Overview.js","api/WebApi.js","views/DataSources.js","views/Dashboards.js","components/GridDraggable.js","components/GridResizable.js","components/GridItem.js","components/GridLayout.js","views/Test.js","views/EditDataSource.js","components/QuerySlicer.js","components/NumberRange.js","components/FilterViewPanel.js","components/WidgetViewPanel.js","components/WidgetEditPanel.js","components/FilterEditPanel.js","views/DashboardEditView.js","views/SingleTest.js","App.js","index.js"],"names":["Overview","react_default","a","createElement","Component","fetchDataSources","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","get","abrupt","sent","stop","this","apply","arguments","fetchFiltersByDashboardId","_ref3","_callee3","dashboardId","_context3","concat","_x2","_ref4","_callee4","url","response","_context4","axios","data","t0","_x3","DataSources","state","jdbcDataSources","showEditPanel","id","name","connectionUrl","username","password","type","ping","handleInputChange","event","target","value","_this","setState","defineProperty","save","preventDefault","ds","post","then","res","initData","update","console","log","put","delete","clearEditPanel","showDeletePanel","webApi","_this2","filterDrawerClass","jdbcDataSourceItems","map","index","key","onClick","mode","className","onChange","row","Dashboard","dashboards","fetchBoards","dashboard","props","history","push","jump","panelClass","dashboardRows","d","withRouter","WIDGET_BORDER","GridDraggable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onMouseDown","gridItemNode","ReactDOM","findDOMNode","assertThisInitialized","parentNode","xOffset","clientX","offsetLeft","yOffset","clientY","offsetTop","boxes","document","getElementsByClassName","i","length","style","zIndex","ownerDocument","addEventListener","onMouseUp","onMouseMove","thisNode","removeEventListener","gridCell","snapToGrid","currentX","currentY","containerNode","containerWidth","clientWidth","containerHeight","clientHeight","boxWidth","parseInt","width","boxHeight","height","Math","floor","left","top","React","MIN_WIDTH","MIN_HEIGHT","GridResizable","prevWidth","prevHeight","newWidth","newHeight","GridItem","x","y","widget","onWidgetMove","editWidget","widgetId","onWidgetEdit","renderWidgetContent","widgetItem","headers","queryResult","undefined","Array","isArray","obj","keys","_i","Header","accessor","es","columns","minRows","showPagination","styles","marginRight","components_GridDraggable","components_GridResizable","GridLayout","showGridlines","backgroundSize","backgroundImage","boxItems","widgets","components_GridItem","assign","Test","selectedOption","firstName","lastName","newValue","submit","handleChange","src_components_GridLayout","PureComponent","EditDataSource","router","reset","initialState","match","params","QuerySlicer","isSelectAll","isChecked","checked","newCheckBoxes","toConsumableArray","checkBoxes","findIndex","filterId","toggleSelectAll","newIsSelectAll","prevState","checkBoxItems","box","NumberRange","FilterViewPanel","fetchFilters","result","filters","queryFilters","filter","queryRequest","f","newFilters","JSON","parse","isArrayNotEmpty","values","_i2","val","renderFilterPanel","filterPanel","_loop","edit","components_QuerySlicer","onQuerySlicerChange","components_NumberRange","onEdit","splice","run","show","onClose","WidgetViewPanel","fetchWidgets","queryWidgets","w","newWidgets","widgetItems","CHART_TYPES","WidgetEditPanel","fetchWidget","jdbcDataSourceId","_x","handleAceEditorChange","sqlQuery","handleDataSourceChange","close","runQuery","addFilterParam","filterParams","newFilterParams","removeFilterParam","handleFilterChange","queryResultItem","dataSourceOptions","filterOptions","filterParamItems","chartOptionList","o","lib_default","marginTop","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","optionValue","handleOptionChange","class","TYPES","FilterEditPanel","fetchFilter","param","handleTypeChange","typeOptions","t","DashboardEditView","refresh","filterViewPanel","current","widgetViewPanel","openFilterEditPanel","filterEditPanel","showFilterEditPanel","openWidgetEditPanel","widgetEditPanel","showWidgetEditPanel","showFilterViewPanel","jdbcDataSourceOptions","createRef","components_FilterViewPanel","ref","components_WidgetViewPanel","components_WidgetEditPanel","components_FilterEditPanel","SingleTest","App","handleClick","e","toggleMenu","menuMin","Link","to","Route","exact","path","component","Dashboards","render","BrowserRouter","basename","src_App_0","getElementById"],"mappings":"8QAgBeA,mLAVX,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,0CAPeC,8DCKVC,EAAgB,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAP,EAAAQ,KAAG,SAAAC,IAAA,OAAAF,EAAAP,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACjBC,EAAI,sBADa,cAAAH,EAAAI,OAAA,SAAAJ,EAAAK,MAAA,wBAAAL,EAAAM,SAAAR,EAAAS,SAAH,yBAAAd,EAAAe,MAAAD,KAAAE,YAAA,GAQhBC,EAAyB,eAAAC,EAAAjB,OAAAC,EAAA,EAAAD,CAAAE,EAAAP,EAAAQ,KAAG,SAAAe,EAAOC,GAAP,OAAAjB,EAAAP,EAAAU,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EAC1BC,EAAG,wBAAAY,OAAyBF,IADF,cAAAC,EAAAV,OAAA,SAAAU,EAAAT,MAAA,wBAAAS,EAAAR,SAAAM,EAAAL,SAAH,gBAAAS,GAAA,OAAAL,EAAAH,MAAAD,KAAAE,YAAA,GAIhCN,EAAG,eAAAc,EAAAvB,OAAAC,EAAA,EAAAD,CAAAE,EAAAP,EAAAQ,KAAG,SAAAqB,EAAOC,GAAP,IAAAC,EAAA,OAAAxB,EAAAP,EAAAU,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAApB,KAAA,EAAAoB,EAAAnB,KAAA,EAEeoB,IAAMnB,IAAIgB,GAFzB,cAEFC,EAFEC,EAAAhB,KAAAgB,EAAAjB,OAAA,SAGDgB,EAASG,MAHR,cAAAF,EAAApB,KAAA,EAAAoB,EAAAG,GAAAH,EAAA,SAAAA,EAAAjB,OAAA,SAKD,MALC,yBAAAiB,EAAAf,SAAAY,EAAAX,KAAA,YAAH,gBAAAkB,GAAA,OAAAR,EAAAT,MAAAD,KAAAE,YAAA,GCoMMiB,6MAjNbC,MAAQ,CACNC,gBAAiB,GACjBC,eAAe,EACfC,GAAI,KACJC,KAAM,GACNC,cAAe,GACfC,SAAU,GACVC,SAAU,GACVC,KAAM,GACNC,KAAM,MAgBRC,kBAAoB,SAACC,GACnB,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfT,EAAOQ,EAAOR,KAEpBU,EAAKC,SAALhD,OAAAiD,EAAA,EAAAjD,CAAA,GACGqC,EAAOS,OAIZI,KAAO,SAACN,GACNA,EAAMO,iBACN,IAAMC,EAAK,CACTd,cAAeS,EAAKd,MAAMK,cAC1BC,SAAUQ,EAAKd,MAAMM,SACrBC,SAAUO,EAAKd,MAAMO,SACrBH,KAAMU,EAAKd,MAAMI,KACjBI,KAAMM,EAAKd,MAAMO,SACjBE,KAAMK,EAAKd,MAAMS,MAGnBd,IAAMyB,KAAK,qBAAsBD,GAC9BE,KAAK,SAAAC,GACJR,EAAKS,gBAIXC,OAAS,SAACL,GACRM,QAAQC,IAAI,SAAUP,GAEtBxB,IAAMgC,IAAI,qBAAsBR,GAC7BE,KAAK,SAAAC,GACJR,EAAKS,gBAIXK,OAAS,SAACzB,GACRsB,QAAQC,IAAI,SAAUvB,GACtBR,IAAMiC,OAAO,sBAAwBzB,GAClCkB,KAAK,SAAAC,GACJR,EAAKS,gBAIXd,KAAO,SAACN,GACNR,IAAMnB,IAAN,2BAAAY,OAAqCe,IAClCkB,KAAK,SAAAC,GACJG,QAAQC,IAAI,OAAQJ,EAAI1B,WAI9BiC,eAAiB,WACff,EAAKC,SAAS,CACZZ,GAAI,KACJE,cAAe,GACfC,SAAU,GACVC,SAAU,GACVH,KAAM,GACNI,KAAM,GACNC,KAAM,QAIVP,cAAgB,SAACiB,GACJ,OAAPA,EACFL,EAAKC,SAAS,CACZZ,GAAIgB,EAAGhB,GACPE,cAAec,EAAGd,cAClBC,SAAUa,EAAGb,SACbC,SAAUY,EAAGZ,SACbH,KAAMe,EAAGf,KACTI,KAAMW,EAAGX,KACTC,KAAMU,EAAGV,OAGXK,EAAKe,iBAGPf,EAAKC,SAAS,CACZb,eAAe,OAInB4B,gBAAkB,gGA9FhBlD,KAAK2C,4KAKyBQ,WAAxB9B,SACNrB,KAAKmC,SAAS,CACZd,gBAAiBA,uIA2FZ,IAAA+B,EAAApD,KAEDqD,EAAoBrD,KAAKoB,MAAME,cAAgB,6BAA+B,4BAE9EgC,EAAsBtD,KAAKoB,MAAMC,gBAAgBkC,IAAI,SAAChB,EAAIiB,GAAL,OACzD3E,EAAAC,EAAAC,cAAA,MAAI0E,IAAKD,GACP3E,EAAAC,EAAAC,cAAA,UAAKwD,EAAGf,MACR3C,EAAAC,EAAAC,cAAA,UAAKwD,EAAGd,eACR5C,EAAAC,EAAAC,cAAA,UAAKwD,EAAGX,MACR/C,EAAAC,EAAAC,cAAA,UAAKwD,EAAGb,UACR7C,EAAAC,EAAAC,cAAA,UAAKwD,EAAGV,MACRhD,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS,kBAAMN,EAAK9B,cAAciB,KAA1C,WACJ1D,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS,kBAAMN,EAAKJ,OAAOT,EAAGhB,MAAtC,WACJ1C,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS,kBAAMN,EAAKvB,KAAKU,EAAGhB,MAApC,YAIFoC,EAAyB,OAAlB3D,KAAKoB,MAAMG,GAAc,MAAQ,SAE9C,OACE1C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBAEAF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,cAEAF,EAAAC,EAAAC,cAAA,aACGuE,KAKPzE,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS,kBAAMN,EAAK9B,cAAc,QAA1C,OAIAzC,EAAAC,EAAAC,cAAA,OAAK6E,UAAWP,GACdxE,EAAAC,EAAAC,cAAA,UAAK4E,GACL9E,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS,kBAAMN,EAAKjB,SAAS,CAACb,eAAe,MAArD,SACAzC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACE6C,KAAK,OACLJ,KAAK,OACLS,MAAOjC,KAAKoB,MAAMI,KAClBqC,SAAU7D,KAAK8B,oBAEjBjD,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,YACE+E,IAAI,IACJlC,KAAK,OACLJ,KAAK,gBACLS,MAAOjC,KAAKoB,MAAMK,cAClBoC,SAAU7D,KAAK8B,oBAGjBjD,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACE6C,KAAK,OACLJ,KAAK,WACLS,MAAOjC,KAAKoB,MAAMM,SAClBmC,SAAU7D,KAAK8B,oBAEjBjD,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACE6C,KAAK,WACLJ,KAAK,WACLS,MAAOjC,KAAKoB,MAAMO,SAClBkC,SAAU7D,KAAK8B,oBAEjBjD,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACE6C,KAAK,OACLJ,KAAK,OACLS,MAAOjC,KAAKoB,MAAMQ,KAClBiC,SAAU7D,KAAK8B,oBAEjBjD,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACE6C,KAAK,OACLJ,KAAK,OACLS,MAAOjC,KAAKoB,MAAMS,KAClBgC,SAAU7D,KAAK8B,qBAGnBjD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS1D,KAAKqC,MAAtB,QACAxD,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS1D,KAAK6B,MAAtB,kBA3Mc7C,qBCEpB+E,6MAEJ3C,MAAQ,CACN4C,WAAY,GACZ1C,eAAe,EACfE,KAAM,MAORyC,YAAc,WACZlD,IAAMnB,IAAI,iBACP6C,KAAK,SAAAC,GACJ,IAAMsB,EAAatB,EAAI1B,KACvBkB,EAAKC,SAAS,CACZ6B,WAAYA,SAKpBlC,kBAAoB,SAACC,GACnB,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfT,EAAOQ,EAAOR,KAEpBU,EAAKC,SAALhD,OAAAiD,EAAA,EAAAjD,CAAA,GACGqC,EAAOS,OAIZI,KAAO,WACL,IAAM6B,EAAY,CAChB1C,KAAMU,EAAKd,MAAMI,MAGnBT,IAAMyB,KAAK,gBAAiB0B,GACzBzB,KAAK,SAAAC,GACJ,IAAMpC,EAAcoC,EAAI1B,KACxBkB,EAAKiC,MAAMC,QAAQC,KAAnB,mBAAA7D,OAA2CF,SAIjDsC,OAAS,SAACtC,GACR4B,EAAKiC,MAAMC,QAAQC,KAAnB,mBAAA7D,OAA2CF,OAG7C0C,OAAS,SAAC1C,GACRuC,QAAQC,IAAI,SAAUxC,GACtBS,IAAMiC,OAAO,iBAAmB1C,GAC7BmC,KAAK,SAAAC,GACJR,EAAK+B,mBAIXK,KAAO,WACLpC,EAAKiC,MAAMC,QAAQC,KAAK,iGAhDxBrE,KAAKiE,+CAmDE,IAAAb,EAAApD,KACDuE,EAAavE,KAAKoB,MAAME,cAAgB,6BAA+B,4BAEvEkD,EAAgBxE,KAAKoB,MAAM4C,WAAWT,IAAI,SAACkB,EAAGjB,GAAJ,OAC9C3E,EAAAC,EAAAC,cAAA,MAAI0E,IAAKD,GACP3E,EAAAC,EAAAC,cAAA,UAAK0F,EAAElD,IACP1C,EAAAC,EAAAC,cAAA,UAAK0F,EAAEjD,MACP3C,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS,kBAAMN,EAAKR,OAAO6B,EAAElD,MAArC,WACJ1C,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS,kBAAMN,EAAKJ,OAAOyB,EAAElD,MAArC,cAIR,OACE1C,EAAAC,EAAAC,cAAA,mBAEEF,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS1D,KAAKsE,MAAtB,YACAzF,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS,kBAAMN,EAAKjB,SAAS,CAAEb,eAAe,MAAtD,OAEAzC,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,cAEAF,EAAAC,EAAAC,cAAA,aACGyF,IAIL3F,EAAAC,EAAAC,cAAA,OAAK6E,UAAWW,GACd1F,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS,kBAAMN,EAAKjB,SAAS,CAACb,eAAe,MAArD,SACAzC,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS1D,KAAKqC,MAAtB,QACAxD,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACE6C,KAAK,OACLJ,KAAK,OACLS,MAAOjC,KAAKoB,MAAMI,KAClBqC,SAAU7D,KAAK8B,8BAhGL9C,aAwGT0F,cAAWX,yDC5GpBY,EAAgB,EAgHPC,cA5Gb,SAAAA,EAAYT,GAAO,IAAAjC,EAAA,OAAA/C,OAAA0F,EAAA,EAAA1F,CAAAa,KAAA4E,IACjB1C,EAAA/C,OAAA2F,EAAA,EAAA3F,CAAAa,KAAAb,OAAA4F,EAAA,EAAA5F,CAAAyF,GAAAI,KAAAhF,KAAMmE,KAiBRc,YAAc,SAAClD,GACbA,EAAMO,iBAON,IANA,IACM4C,EADWC,IAASC,YAATjG,OAAAkG,EAAA,EAAAlG,QAAAkG,EAAA,EAAAlG,CAAA+C,KACaoD,WACxBC,EAAUxD,EAAMyD,QAAUN,EAAaO,WACvCC,EAAU3D,EAAM4D,QAAUT,EAAaU,UAEzCC,EAAQC,SAASC,uBAAuB,YACnCC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAC9BH,EAAMG,GAAGE,MAAMC,OAAS,GAE5BjB,EAAagB,MAAMC,OAAS,GAXL,IAafC,EAAkBlB,EAAlBkB,cACRA,EAAcC,iBAAiB,UAAWnE,EAAKoE,WAC/CF,EAAcC,iBAAiB,YAAanE,EAAKqE,aACjDrE,EAAKC,SAAS,CACZoD,QAASA,EACTG,QAASA,IAGXxD,EAAKiC,MAAMc,YAAY,SAvCN/C,EA0CnBoE,UAAY,SAACvE,GACXA,EAAMO,iBACN,IAAMkE,EAAWrB,IAASC,YAATjG,OAAAkG,EAAA,EAAAlG,QAAAkG,EAAA,EAAAlG,CAAA+C,KACjB,GAAIsE,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAavE,EAAK+C,aACpDmB,EAAcK,oBAAoB,UAAWvE,EAAKoE,WAClDF,EAAcK,oBAAoB,YAAavE,EAAKqE,aAEtDrE,EAAKiC,MAAMmC,aAnDMpE,EAsDnBqE,YAAc,SAACxE,GAGb,GAFAc,QAAQC,IAAI,4BAA6Bf,GACzCA,EAAMO,iBACkB,SAApBJ,EAAKiC,MAAMR,KAAf,CAIA,IAAI+C,EAAW,EACXxE,EAAKiC,MAAMwC,aACbD,EAAW,GAGb,IACMxB,EADWC,IAASC,YAATjG,OAAAkG,EAAA,EAAAlG,QAAAkG,EAAA,EAAAlG,CAAA+C,KACaoD,WAC1BsB,EAAW7E,EAAMyD,QAAUtD,EAAKd,MAAMmE,QACtCsB,EAAW9E,EAAM4D,QAAUzD,EAAKd,MAAMsE,QAEpCoB,EAAgB5B,EAAaI,WAC7ByB,EAAiBD,EAAcE,YAC/BC,EAAkBH,EAAcI,aAElCC,EAAWC,SAASlC,EAAagB,MAAMmB,MAAO,IAAsB,EAAhB1C,EACpD2C,EAAYF,SAASlC,EAAagB,MAAMqB,OAAQ,IAAsB,EAAhB5C,EAEtDiC,EAAW,IACbA,EAAW,GAETC,EAAW,IACbA,EAAW,GAETD,EAAWO,EAAWJ,IACxBH,EAAWG,EAAiBI,GAE1BN,EAAWS,EAAYL,IACzBJ,EAAWI,EAAkBK,GAG/BV,EAAWY,KAAKC,MAAMb,EAAWF,GAAYA,EAC7CG,EAAWW,KAAKC,MAAMZ,EAAWH,GAAYA,EAE7CxB,EAAagB,MAAMwB,KAAOd,EAAW,KACrC1B,EAAagB,MAAMyB,IAAMd,EAAW,OA7FpC3E,EAAKd,MAAQ,CACXmE,QAAS,EACTG,QAAS,GAJMxD,sFASjB,IAAMsE,EAAWrB,IAASC,YAAYpF,MACtC,GAAIwG,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAazG,KAAKiF,aACpDmB,EAAcK,oBAAoB,UAAWzG,KAAKsG,WAClDF,EAAcK,oBAAoB,YAAazG,KAAKuG,+CAqFtD,OACE1H,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,iBACbqB,YAAajF,KAAKiF,YAClBqB,UAAWtG,KAAKsG,mBAxGIsB,IAAM5I,WCF5B6I,EAAY,GACZC,EAAa,GACbnD,EAAgB,EAiHPoD,cA7Gb,SAAAA,EAAY5D,GAAO,IAAAjC,EAAA,OAAA/C,OAAA0F,EAAA,EAAA1F,CAAAa,KAAA+H,IACjB7F,EAAA/C,OAAA2F,EAAA,EAAA3F,CAAAa,KAAAb,OAAA4F,EAAA,EAAA5F,CAAA4I,GAAA/C,KAAAhF,KAAMmE,KAiBRc,YAAc,SAAClD,GACbc,QAAQC,IAAI,cAAef,GAC3BA,EAAMO,iBACN,IAAMkE,EAAWrB,IAASC,YAATjG,OAAAkG,EAAA,EAAAlG,QAAAkG,EAAA,EAAAlG,CAAA+C,KACX0E,EAAW7E,EAAMyD,QACjBqB,EAAW9E,EAAM4D,QAEfS,EAAkBI,EAAlBJ,cACRA,EAAcC,iBAAiB,UAAWnE,EAAKoE,WAC/CF,EAAcC,iBAAiB,YAAanE,EAAKqE,aACjDrE,EAAKC,SAAS,CACZyE,SAAUA,EACVC,SAAUA,IAGZ3E,EAAKiC,MAAMc,YAAY,WAjCN/C,EAoCnBoE,UAAY,SAACvE,GACXA,EAAMO,iBACN,IAAMkE,EAAWrB,IAASC,YAATjG,OAAAkG,EAAA,EAAAlG,QAAAkG,EAAA,EAAAlG,CAAA+C,KACjB,GAAIsE,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAavE,EAAK+C,aACpDmB,EAAcK,oBAAoB,UAAWvE,EAAKoE,WAClDF,EAAcK,oBAAoB,YAAavE,EAAKqE,aAEtDrE,EAAKiC,MAAMmC,aA7CMpE,EAgDnBqE,YAAc,SAACxE,GAGb,GAFAc,QAAQC,IAAI,0BAA2Bf,GACvCA,EAAMO,iBACkB,WAApBJ,EAAKiC,MAAMR,KAAf,CAIA,IAAI4B,EAAUxD,EAAMyD,QAAUtD,EAAKd,MAAMwF,SACrClB,EAAU3D,EAAM4D,QAAUzD,EAAKd,MAAMyF,SAGnC3B,EADWC,IAASC,YAATjG,OAAAkG,EAAA,EAAAlG,QAAAkG,EAAA,EAAAlG,CAAA+C,KACaoD,WACxB0C,EAAYZ,SAASlC,EAAagB,MAAMmB,MAAO,IAC/CY,EAAab,SAASlC,EAAagB,MAAMqB,OAAQ,IAEjDT,EAAgB5B,EAAaI,WAC7ByB,EAAiBD,EAAcE,YAC/BC,EAAkBH,EAAcI,aAElCgB,EAAWV,KAAKC,MAAMO,EAAYzC,GAClC4C,EAAYX,KAAKC,MAAMQ,EAAavC,GAEpCwC,EAAWL,IACbK,EAAWL,GAGTM,EAAYL,IACdK,EAAYL,GAGd,IAAMJ,EAAOxC,EAAaO,WAA6B,EAAhBd,EACjCgD,EAAMzC,EAAaU,UAA4B,EAAhBjB,EAEjCuD,EAAYR,EAAOX,IACrBmB,EAAWnB,EAAiBW,GAG1BS,EAAYR,EAAMV,IACpBkB,EAAYlB,EAAkBU,GAGhCzC,EAAagB,MAAMmB,MAAQa,EAAW,KACtChD,EAAagB,MAAMqB,OAASY,EAAY,KAExCjG,EAAKC,SAAS,CACZyE,SAAU7E,EAAMyD,QAChBqB,SAAU9E,EAAM4D,YA5FlBzD,EAAKd,MAAQ,CACXwF,SAAU,EACVC,SAAU,GAJK3E,sFASjB,IAAMsE,EAAWrB,IAASC,YAAYpF,MACtC,GAAIwG,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAazG,KAAKiF,aACpDmB,EAAcK,oBAAoB,UAAWzG,KAAKsG,WAClDF,EAAcK,oBAAoB,YAAazG,KAAKuG,+CAqFtD,OACE1H,EAAAC,EAAAC,cAAA,OACE6E,UAAU,iBACVqB,YAAajF,KAAKiF,YAClBqB,UAAWtG,KAAKsG,mBAzGIsB,IAAM5I,WCgJnBoJ,cA5Ib,SAAAA,EAAYjE,GAAO,IAAAjC,EAAA,OAAA/C,OAAA0F,EAAA,EAAA1F,CAAAa,KAAAoI,IACjBlG,EAAA/C,OAAA2F,EAAA,EAAA3F,CAAAa,KAAAb,OAAA4F,EAAA,EAAA5F,CAAAiJ,GAAApD,KAAAhF,KAAMmE,KAkBRc,YAAc,SAACtB,GACbd,QAAQC,IAAI,uBAAwBa,GACpCzB,EAAKC,SAAS,CACZwB,KAAMA,KAtBSzB,EA0BnBoE,UAAY,WACVzD,QAAQC,IAAI,sBACZZ,EAAKC,SAAS,CACZwB,KAAM,KAGR,IAAM6C,EAAWrB,IAASC,YAATjG,OAAAkG,EAAA,EAAAlG,QAAAkG,EAAA,EAAAlG,CAAA+C,KACXmG,EAAI7B,EAASf,WACb6C,EAAI9B,EAASZ,UACbyB,EAAQD,SAASZ,EAASN,MAAMmB,MAAO,IACvCE,EAASH,SAASZ,EAASN,MAAMqB,OAAQ,IAGzCgB,EAAS,CACbhH,GAHeW,EAAKiC,MAAM5C,GAI1B8G,EAAGA,EACHC,EAAGA,EACHjB,MAAOA,EACPE,OAAQA,GAGVrF,EAAKiC,MAAMqE,aAAaD,IA/CPrG,EAkDnBqE,YAAc,SAACxE,EAAO4B,EAAMvC,GAC1ByB,QAAQC,IAAI,uBAAwBf,GACpCA,EAAMO,kBApDWJ,EAuDnBuG,WAAa,SAACC,GACZ7F,QAAQC,IAAI,aAAc4F,GAC1BxG,EAAKiC,MAAMwE,aAAaD,IAzDPxG,EA4DnBc,OAAS,aA5DUd,EAgEnB0G,oBAAsB,WACpB,IAAML,EAASrG,EAAKiC,MAChB0E,EAAchK,EAAAC,EAAAC,cAAA,mBAClB,GAAoB,UAAhBwJ,EAAO3G,KAAkB,CAE3B,IAAMkH,EAAU,GACVC,EAAcR,EAAOQ,YAC3B,QAAoBC,IAAhBD,GACwB,IAAvBA,EAAY9C,QACZgD,MAAMC,QAAQH,GAGjB,IAFA,IAAMI,EAAMJ,EAAY,GAClBK,EAAOjK,OAAOiK,KAAKD,GACzBE,EAAA,EAAAA,EAAkBD,EAAlBnD,OAAAoD,IAAwB,CAAnB,IAAM5F,EAAO2F,EAAJC,GACZP,EAAQzE,KAAK,CACXiF,OAAQ7F,EACR8F,SAAU9F,IAKhBoF,EACEhK,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CACExI,KAAM+H,EACNU,QAASX,EACTY,QAAS,EACTC,gBAAgB,IAItB,OAAOd,GA3FP3G,EAAKd,MAAQ,CACXiH,EAAGnG,EAAKiC,MAAMkE,EACdC,EAAGpG,EAAKiC,MAAMmE,EACd3E,KAAM,IALSzB,sFAUjB,IAAMsE,EAAWrB,IAASC,YAAYpF,MACtC,GAAIwG,EAAU,KACJJ,EAAkBI,EAAlBJ,cACRA,EAAcK,oBAAoB,YAAazG,KAAKiF,aACpDmB,EAAcK,oBAAoB,UAAWzG,KAAKsG,WAClDF,EAAcK,oBAAoB,YAAazG,KAAKuG,+CAiF/C,IAAAnD,EAAApD,KACH4J,EAAS,CACXlC,KAAM1H,KAAKoB,MAAMiH,EACjBV,IAAK3H,KAAKoB,MAAMkH,EAChBjB,MAAOrH,KAAKmE,MAAMkD,MAClBE,OAAQvH,KAAKmE,MAAMoD,OACnBpB,OAAQ,GAGV,OACEtH,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,WAAWsC,MAAO0D,GAC/B/K,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,kBACZ5D,KAAKmE,MAAM3C,KAEZ3C,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,oBAAoBsC,MAAO,CAAC2D,YAAa,SACtDhL,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,WAAWF,QAAS,kBAAMN,EAAKqF,WAAWrF,EAAKe,MAAM5C,MAClE1C,EAAAC,EAAAC,cAAA,KAAG6E,UAAU,uBAEf/E,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,WAAWF,QAAS,kBAAMN,EAAKJ,WAC5CnE,EAAAC,EAAAC,cAAA,KAAG6E,UAAU,8BAInB/E,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,oBACZ5D,KAAK4I,uBAGR/J,EAAAC,EAAAC,cAAC+K,EAAD,CACExD,UAAWtG,KAAKsG,UAChBrB,YAAajF,KAAKiF,YAClBsB,YAAavG,KAAKuG,YAClB5C,KAAM3D,KAAKoB,MAAMuC,KACjBgD,WAAY3G,KAAKmE,MAAMwC,aAEzB9H,EAAAC,EAAAC,cAACgL,EAAD,CACEzD,UAAWtG,KAAKsG,UAChBrB,YAAajF,KAAKiF,YAClBsB,YAAavG,KAAKuG,YAClB5C,KAAM3D,KAAKoB,MAAMuC,eAxIJiE,IAAM5I,WCuCdgL,qBAzCb,SAAAA,EAAY7F,GAAO,IAAAjC,EAAA,OAAA/C,OAAA0F,EAAA,EAAA1F,CAAAa,KAAAgK,IACjB9H,EAAA/C,OAAA2F,EAAA,EAAA3F,CAAAa,KAAAb,OAAA4F,EAAA,EAAA5F,CAAA6K,GAAAhF,KAAAhF,KAAMmE,KACD/C,MAAQ,GAFIc,qHASV,IAAAkB,EAAApD,KACH4J,EAAS,CACXvC,MAAOrH,KAAKmE,MAAMkD,MAAQ,KAC1BE,OAAQvH,KAAKmE,MAAMoD,OAAS,MAG1BvH,KAAKmE,MAAM8F,gBACbL,EAAOM,eAAiB,YACxBN,EAAOO,gBAAkB,0DAG3B,IAAMC,EAAWpK,KAAKmE,MAAMkG,QAAQ9G,IAAI,SAACgF,EAAQ/E,GAAT,OACtC3E,EAAAC,EAAAC,cAACuL,EAADnL,OAAAoL,OAAA,CACE9G,IAAKD,EACLmD,WAAYvD,EAAKe,MAAMwC,YACnB4B,EAHN,CAIEC,aAAcpF,EAAKe,MAAMqE,aACzBG,aAAcvF,EAAKe,MAAMwE,kBAK7B,OACE9J,EAAAC,EAAAC,cAAA,OACE6E,UAAU,cACVsC,MAAO0D,GACNQ,UArCgBxC,IAAM5I,YCazBqL,EAAU,CACb,CACC9I,GAAI,EACJC,KAAM,SACN6G,EAAG,EACHC,EAAG,EACHjB,MAAO,IACPE,OAAQ,KAEV,CACEhG,GAAI,EACJC,KAAM,SACN6G,EAAG,IACHC,EAAG,IACHjB,MAAO,IACPE,OAAQ,MA+CGiD,6MAzCbpJ,MAAQ,CACNqJ,eAAgB,KAChBzJ,KAAM,CACJ,CAAC0J,UAAW,KAAMC,SAAU,MAC5B,CAACD,UAAW,KAAMC,SAAU,MAC5B,CAACD,UAAW,KAAMC,SAAU,UAIhC9G,SAAW,SAAC+G,GACV/H,QAAQC,IAAI,SAAS8H,MAGvBC,OAAS,WACPhI,QAAQC,IAAI,aAGdgI,aAAe,SAACL,GACdvI,EAAKC,SAAS,CAAEsI,mBAChB5H,QAAQC,IAAR,mBAAgC2H,MAGlChC,WAAa,SAACC,GACZ7F,QAAQC,IAAI,aAAc4F,4EAI1B,OACE7J,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAACgM,EAAD,CACE1D,MAAO,IACPE,OAAQ,IACRZ,YAAY,EACZsD,eAAe,EACfI,QAASA,YArCFzC,IAAMoD,eCyDVC,cAvFb,SAAAA,EAAY9G,GAAM,IAAAjC,EAAA,OAAA/C,OAAA0F,EAAA,EAAA1F,CAAAa,KAAAiL,IAChB/I,EAAA/C,OAAA2F,EAAA,EAAA3F,CAAAa,KAAAb,OAAA4F,EAAA,EAAA5F,CAAA8L,GAAAjG,KAAAhF,KAAMmE,KA6BRrC,kBAAoB,SAACC,GACnB,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfT,EAAOQ,EAAOR,KAEpBU,EAAKC,SAALhD,OAAAiD,EAAA,EAAAjD,CAAA,GACGqC,EAAOS,KApCMC,EAwClBG,KAAO,SAACN,GACNA,EAAMO,iBACN,IAAMC,EAAK,CACTd,cAAeS,EAAKd,MAAMK,cAC1BC,SAAUQ,EAAKd,MAAMM,SACrBC,SAAUO,EAAKd,MAAMO,SACrBH,KAAMU,EAAKd,MAAMI,KACjBI,KAAMM,EAAKd,MAAMO,SACjBE,KAAMK,EAAKd,MAAMS,MAGXqJ,EAAWhJ,EAAKiC,MAAhB+G,OAERnK,IAAMyB,KAAK,qBAAsBD,GAC9BE,KAAK,SAAAC,GACJR,EAAKiJ,QACLD,EAAO7G,KAAK,mBAxDAnC,EA4DlBiJ,MAAQ,WACNjJ,EAAKC,SAASD,EAAKkJ,eA7DHlJ,EAgElBL,KAAO,aA9DLK,EAAKd,MAAQc,EAAKkJ,aAFFlJ,mFAmBhB,IAAMX,EAAKvB,KAAKmE,MAAMkH,MAAMC,OAAO/J,GACnCsB,QAAQC,IAAI,KAAMvB,GAClB,IAAIoC,EAAO,YACAqF,IAAPzH,IACFoC,EAAO,OAET3D,KAAKmC,SAAS,CACZwB,KAAMA,qCA4CR,OACE9E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKiB,KAAKoB,MAAMuC,KAAhB,gBAKA9E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQ6C,KAAK,UAAU8B,QAAS1D,KAAKqC,MAArC,QACAxD,EAAAC,EAAAC,cAAA,UAAQ6C,KAAK,UAAU8B,QAAS1D,KAAK6B,MAArC,+CAzEN,MAAO,CACLN,GAAI,EACJC,KAAM,GACNC,cAAe,GACfC,SAAU,GACVC,SAAU,GACVC,KAAM,GACNC,KAAM,GACN8B,KAAM,WAhBiB3E,qBCyDduM,6MA1DbnK,MAAQ,CACNoK,aAAa,KAGfV,aAAe,SAAC/I,GACd,IAAMC,EAASD,EAAMC,OACfR,EAAOQ,EAAOR,KACdiK,EAAYzJ,EAAO0J,QAEnBC,EAAaxM,OAAAyM,EAAA,EAAAzM,CAAO+C,EAAKiC,MAAM0H,YAC/BrI,EAAQmI,EAAcG,UAAU,SAAAzD,GAAC,OAAIA,EAAEpG,QAAUT,IACvDmK,EAAcnI,GAAOiI,UAAYA,EACjCvJ,EAAKiC,MAAMN,SAAS3B,EAAKiC,MAAM4H,SAAUJ,MAG3CK,gBAAkB,WAGhB,IAFA,IAAMC,GAAkB/J,EAAKd,MAAMoK,YAC7BG,EAAaxM,OAAAyM,EAAA,EAAAzM,CAAO+C,EAAKiC,MAAM0H,YAC5B7F,EAAI,EAAGA,EAAI2F,EAAc1F,OAAQD,IACxC2F,EAAc3F,GAAGyF,UAAYQ,EAE/B/J,EAAKiC,MAAMN,SAAS3B,EAAKiC,MAAM4H,SAAUJ,GAEzCzJ,EAAKC,SAAS,SAAA+J,GAAS,MAAK,CAC1BV,aAAcU,EAAUV,wFAInB,IAAApI,EAAApD,KACD6L,EAAa7L,KAAKmE,MAAM0H,WAC1BM,EAAgB,GAiBpB,YAhBmBnD,IAAf6C,GAAkD,IAAtBA,EAAW5F,SACzCkG,EAAgBnM,KAAKmE,MAAM0H,WAAWtI,IAAI,SAAC6I,EAAK5I,GAAN,OACxC3E,EAAAC,EAAAC,cAAA,OAAK0E,IAAKD,GACR3E,EAAAC,EAAAC,cAAA,SACE6C,KAAK,WACLJ,KAAM4K,EAAInK,MACVA,MAAOmK,EAAInK,MACXyJ,QAASU,EAAIX,UACb5H,SAAUT,EAAK0H,eAEdsB,EAAInK,MACPpD,EAAAC,EAAAC,cAAA,eAMJF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS1D,KAAKgM,iBAAtB,qBAA0DhM,KAAKoB,MAAMoK,aACrE3M,EAAAC,EAAAC,cAAA,WACGoN,WArDevE,IAAM5I,WCqBjBqN,cAnBb,SAAAA,EAAYlI,GAAO,IAAAjC,EAAA,OAAA/C,OAAA0F,EAAA,EAAA1F,CAAAa,KAAAqM,IACjBnK,EAAA/C,OAAA2F,EAAA,EAAA3F,CAAAa,KAAAb,OAAA4F,EAAA,EAAA5F,CAAAkN,GAAArH,KAAAhF,KAAMmE,KACD/C,MAAQ,GAFIc,wEAQjB,OACErD,EAAAC,EAAAC,cAAA,iBAEEF,EAAAC,EAAAC,cAAA,SAAO6C,KAAK,SAASJ,KAAK,QAF5B,MAIE3C,EAAAC,EAAAC,cAAA,SAAO6C,KAAK,SAASJ,KAAK,gBAfRoG,IAAM5I,WCsKjBsN,cA/Jb,SAAAA,EAAYnI,GAAM,IAAAjC,EAAA,OAAA/C,OAAA0F,EAAA,EAAA1F,CAAAa,KAAAsM,IAChBpK,EAAA/C,OAAA2F,EAAA,EAAA3F,CAAAa,KAAAb,OAAA4F,EAAA,EAAA5F,CAAAmN,GAAAtH,KAAAhF,KAAMmE,KAORoI,aAAe,SAACjM,GACM,OAAhBA,IAIJ4B,EAAKC,SAAS,CACZ7B,YAAaA,IAGfS,IAAMnB,IAAI,wBAA0BU,GACjCmC,KAAK,SAAAC,GACJ,IAAM8J,EAAS9J,EAAI1B,KACnBkB,EAAKC,SAAS,CACZsK,QAASD,GACRtK,EAAKwK,kBAtBIxK,EA0BlBwK,aAAe,WAEb,IADA,IAAMD,EAAUvK,EAAKd,MAAMqL,QAClBzG,EAAI,EAAGA,EAAIyG,EAAQxG,OAAQD,IAAK,CACvC,IAAM2G,EAASF,EAAQzG,GACvB,GAAoB,WAAhB2G,EAAO/K,KAAmB,CAC5B,IAAMgL,EAAeD,EAAO3L,KAC5BD,IAAMyB,KAAK,wBAA0BmK,EAAOpL,GAAIqL,GAC7CnK,KAAK,SAAAC,GACJ,IAAM8J,EAAS9J,EAAI1B,KACbwC,EAAQiJ,EAAQX,UAAU,SAAAe,GAAC,OAAIA,EAAEtL,KAAOiL,EAAOjL,KAC/CuL,EAAU3N,OAAAyM,EAAA,EAAAzM,CAAO+C,EAAKd,MAAMqL,SAC5B1D,EAAcgE,KAAKC,MAAMR,EAAOxL,MAChC6K,EAAa,GAEnB,GAAI3J,EAAK+K,gBAAgBlE,GACvB,IAAK,IAAI/C,EAAI,EAAGA,EAAI+C,EAAY9C,OAAQD,IAEtC,IADA,IAAMkH,EAAS/N,OAAO+N,OAAOnE,EAAY/C,IACzCmH,EAAA,EAAAA,EAAkBD,EAAlBjH,OAAAkH,IAA0B,CAArB,IAAMC,EAAOF,EAAJC,GACZtB,EAAWxH,KAAK,CACdpC,MAAOmL,EACP3B,WAAW,IAMnBqB,EAAWtJ,GAAOuF,YAAcA,EAChC+D,EAAWtJ,GAAOqI,WAAaA,EAE/B3J,EAAKC,SAAS,CACZsK,QAASK,SAxDH5K,EAmElBmL,kBAAoB,WAGlB,IAFA,IAAMC,EAAc,GACdb,EAAUvK,EAAKd,MAAMqL,QAFHc,EAAA,SAGfvH,GACP,IAAM2G,EAASF,EAAQzG,GACvB,GAAoB,WAAhB2G,EAAO/K,KAAmB,CAC5B,IAAMiK,EAAac,EAAOd,WAC1ByB,EAAYjJ,KAERxF,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,cACb/E,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,qBACZ+I,EAAOnL,KACR3C,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,qBACb/E,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,WAAWF,QAAS,kBAAMxB,EAAKsL,KAAKb,EAAOpL,MACxD1C,EAAAC,EAAAC,cAAA,KAAG6E,UAAU,uBAEf/E,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,WAAWF,QAAS,kBAAMxB,EAAKc,OAAO2J,EAAOpL,MAC1D1C,EAAAC,EAAAC,cAAA,KAAG6E,UAAU,8BAInB/E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0O,EAAD,CACEhK,IAAKuC,EACL+F,SAAUY,EAAOpL,GACjBsK,WAAYA,EACZhI,SAAU3B,EAAKwL,6BAMA,iBAAhBf,EAAO/K,KAChB0L,EAAYjJ,KAAKxF,EAAAC,EAAAC,cAAC4O,EAAD,CAAalK,IAAKuC,KAC1B2G,EAAO/K,MA/BXoE,EAAI,EAAGA,EAAIyG,EAAQxG,OAAQD,IAAKuH,EAAhCvH,GAmCT,OAAOsH,GAzGSpL,EA4GlBsL,KAAO,SAACzB,GACN7J,EAAKiC,MAAMyJ,OAAO7B,IA7GF7J,EAgHlBc,OAAS,SAAC+I,GACRhL,IAAMnB,IAAI,cAAgBmM,GACvBtJ,KAAK,SAAAC,GACJ,IAAMc,EAAQtB,EAAKd,MAAMqL,QAAQX,UAAU,SAAAe,GAAC,OAAIA,EAAEtL,KAAOwK,IACnDe,EAAU3N,OAAAyM,EAAA,EAAAzM,CAAO+C,EAAKd,MAAMqL,SAClCK,EAAWe,OAAOrK,EAAO,GACzBtB,EAAKC,SAAS,CACZsK,QAASK,OAvHC5K,EA4HlBwL,oBAAsB,SAAC3B,EAAUF,GAC/B,IAAMrI,EAAQtB,EAAKd,MAAMqL,QAAQX,UAAU,SAAAe,GAAC,OAAIA,EAAEtL,KAAOwK,IACnDe,EAAU3N,OAAAyM,EAAA,EAAAzM,CAAO+C,EAAKd,MAAMqL,SAClCK,EAAWtJ,GAAOqI,WAAlB1M,OAAAyM,EAAA,EAAAzM,CAAmC0M,GACnC3J,EAAKC,SAAS,CACZsK,QAASK,KAjIK5K,EAyIlB4L,IAAM,WACJjL,QAAQC,IAAI,QAxIZZ,EAAKd,MAAQ,CACXd,YAAa,KACbmM,QAAS,IAJKvK,+EA+DFpD,GACd,YAAakK,IAANlK,GAAgC,IAAbA,EAAEmH,QAAgBgD,MAAMC,QAAQpK,oCA+EnD,IAAAsE,EAAApD,KACDuE,EAAavE,KAAKmE,MAAM4J,KAAO,gBAAkB,eAEvD,OACElP,EAAAC,EAAAC,cAAA,OAAK6E,UAAS,aAAApD,OAAe+D,IAC3B1F,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS,kBAAMN,EAAKe,MAAM6J,YAAlC,SACAnP,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS1D,KAAK8N,KAAtB,OACAjP,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,mBACZ5D,KAAKqN,6BA1JcrO,aCuIfiP,cAlIb,SAAAA,EAAY9J,GAAO,IAAAjC,EAAA,OAAA/C,OAAA0F,EAAA,EAAA1F,CAAAa,KAAAiO,IACjB/L,EAAA/C,OAAA2F,EAAA,EAAA3F,CAAAa,KAAAb,OAAA4F,EAAA,EAAA5F,CAAA8O,GAAAjJ,KAAAhF,KAAMmE,KAQR+J,aAAe,SAAC5N,GACM,OAAhBA,GAIJS,IAAMnB,IAAI,wBAA0BU,GACjCmC,KAAK,SAAAC,GACJ,IAAM8J,EAAS9J,EAAI1B,KACnBkB,EAAKC,SAAS,CACZkI,QAASmC,GACRtK,EAAKiM,iBAnBKjM,EAwCnB4I,aAAe,SAAC/I,GACd,IAAMC,EAASD,EAAMC,OACfR,EAAOQ,EAAOR,KACdiK,EAAYzJ,EAAO0J,QACzBxJ,EAAKC,SAALhD,OAAAiD,EAAA,EAAAjD,CAAA,GACGqC,EAAOiK,KA7COvJ,EAiDnBsG,aAAe,SAACD,GACd1F,QAAQC,IAAI,eAAgByF,GAE5B,IAAM/E,EAAQtB,EAAKd,MAAMiJ,QAAQyB,UAAU,SAAAsC,GAAC,OAAIA,EAAE7M,KAAOgH,EAAOhH,KAC1D8M,EAAUlP,OAAAyM,EAAA,EAAAzM,CAAO+C,EAAKd,MAAMiJ,SAClCgE,EAAW7K,GAAO6E,EAAIE,EAAOF,EAC7BgG,EAAW7K,GAAO8E,EAAIC,EAAOD,EAC7B+F,EAAW7K,GAAO6D,MAAQkB,EAAOlB,MACjCgH,EAAW7K,GAAO+D,OAASgB,EAAOhB,OAElCrF,EAAKC,SAAS,CACZkI,QAASgE,KA1DXnM,EAAKd,MAAQ,CACXiJ,QAAS,GACT1D,YAAY,EACZsD,eAAe,GALA/H,8EAyBjB,IAFa,IAAAkB,EAAApD,KACPqK,EAAUrK,KAAKoB,MAAMiJ,QAClBrE,EAAI,EAAGA,EAAIqE,EAAQpE,OAAQD,IAAK,CACvC,IAAMuC,EAAS8B,EAAQrE,GACvBjF,IAAMnB,IAAI,wBAA0B2I,EAAOhH,IACxCkB,KAAK,SAAAC,GACJ,IAAM8J,EAAS9J,EAAI1B,KACbwC,EAAQ6G,EAAQyB,UAAU,SAAAsC,GAAC,OAAIA,EAAE7M,KAAOiL,EAAOjL,KAC/C8M,EAAUlP,OAAAyM,EAAA,EAAAzM,CAAOiE,EAAKhC,MAAMiJ,SAClCgE,EAAW7K,GAAOuF,YAAcgE,KAAKC,MAAMR,EAAOxL,MAClDoC,EAAKjB,SAAS,CACZkI,QAASgE,wCAgCjB,IAAMC,EAActO,KAAKoB,MAAMiJ,QAAQ9G,IAAI,SAACgF,EAAQ/E,GAElD,IAAMsF,EAAU,GACVC,EAAcR,EAAOQ,YAC3B,QAAoBC,IAAhBD,GAA6BE,MAAMC,QAAQH,GAG7C,IAFA,IAAMI,EAAMJ,EAAY,GAClBK,EAAOjK,OAAOiK,KAAKD,GACzBE,EAAA,EAAAA,EAAkBD,EAAlBnD,OAAAoD,IAAwB,CAAnB,IAAM5F,EAAO2F,EAAJC,GACZP,EAAQzE,KAAK,CACXiF,OAAQ7F,EACR8F,SAAU9F,IAKhB,OACE5E,EAAAC,EAAAC,cAAA,OAAK0E,IAAKD,GACR3E,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CACExI,KAAM+H,EACNU,QAASX,EACTY,QAAS,EACTC,gBAAgB,OAKxB,OACE9K,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,aACb/E,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACE6C,KAAK,WACLJ,KAAK,aACLS,MAAM,aACNyJ,QAAS1L,KAAKoB,MAAMuF,WACpB9C,SAAU7D,KAAK8K,eAPnB,aAUEjM,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACE6C,KAAK,WACLJ,KAAK,gBACLS,MAAM,gBACNyJ,QAAS1L,KAAKoB,MAAM6I,cACpBpG,SAAU7D,KAAK8K,eAhBnB,gBAmBEjM,EAAAC,EAAAC,cAAA,WAECuP,EACDzP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgM,EAAD,CACE1D,MAAO,IACPE,OAAQ,IACRZ,WAAY3G,KAAKoB,MAAMuF,WACvBsD,cAAejK,KAAKoB,MAAM6I,cAC1BI,QAASrK,KAAKoB,MAAMiJ,QACpB7B,aAAcxI,KAAKwI,aACnBG,aAAc3I,KAAKmE,MAAMwE,wBA7HPf,IAAM5I,WCM9BuP,EAAc,CAAC,QAAS,OAuRfC,cAnRb,SAAAA,EAAYrK,GAAO,IAAAjC,EAAA,OAAA/C,OAAA0F,EAAA,EAAA1F,CAAAa,KAAAwO,IACjBtM,EAAA/C,OAAA2F,EAAA,EAAA3F,CAAAa,KAAAb,OAAA4F,EAAA,EAAA5F,CAAAqP,GAAAxJ,KAAAhF,KAAMmE,KAkBRsK,YAnBmB,eAAAvP,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAP,EAAAQ,KAmBL,SAAAC,EAAOmJ,EAAUpI,GAAjB,IAAAe,EAAAoL,EAAA,OAAApN,EAAAP,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACkBwD,IADlB,cACN9B,EADM5B,EAAAK,KAEZoC,EAAKC,SAAS,CACZd,gBAAiBA,IAHP5B,EAAAE,KAAA,EAMUwD,EAAiC7C,GAN3C,OAMNmM,EANMhN,EAAAK,KAOZoC,EAAKC,SAAS,CACZsK,QAASA,IAGM,OAAb/D,GAC6B,IAA3BrH,EAAgB4E,QAClB/D,EAAKC,SAAS,CACZuM,iBAAkBrN,EAAgB,GAAGE,KAIlB,IAAnBkL,EAAQxG,QACV/D,EAAKC,SAAS,CACZ4J,SAAUU,EAAQ,GAAGlL,KAGzBW,EAAKC,SAAS,CACZuG,SAAU,QAGZxG,EAAKC,SAAS,CACZuG,SAAUA,IA5BF,wBAAAjJ,EAAAM,SAAAR,EAAAS,SAnBK,gBAAA2O,EAAAlO,GAAA,OAAAvB,EAAAe,MAAAD,KAAAE,YAAA,GAAAgC,EAoDnBJ,kBAAoB,SAACC,GACnB,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfT,EAAOQ,EAAOR,KAEpBU,EAAKC,SAALhD,OAAAiD,EAAA,EAAAjD,CAAA,GACGqC,EAAOS,KA1DOC,EA8DnB0M,sBAAwB,SAAChE,GACvB1I,EAAKC,SAAS,CACZ0M,SAAUjE,KAhEK1I,EAoEnB4M,uBAAyB,SAAC/M,GACxBG,EAAKC,SAAS,CACZuM,iBAAkB3M,EAAMC,OAAOC,SAtEhBC,EA0EnBG,KAAO,SAACN,GACNA,EAAMO,iBACN,IAAMiG,EAAQ,CACZhH,GAAIW,EAAKd,MAAMsH,SACflH,KAAMU,EAAKd,MAAMI,KACjBlB,YAAa4B,EAAKiC,MAAM7D,YACxBoO,iBAAkBxM,EAAKd,MAAMsN,iBAC7BG,SAAU3M,EAAKd,MAAMyN,UAGvB9N,IAAMyB,KAAK,aAAc+F,GACtB9F,KAAK,SAAAC,OArFSR,EA0FnB6M,MAAQ,WACN7M,EAAKiC,MAAM6J,WA3FM9L,EA8FnB8M,SAAW,SAACjN,GACVA,EAAMO,iBACN,IAAMsK,EAAc,CAClB8B,iBAAkBxM,EAAKd,MAAMsN,iBAC7BG,SAAU3M,EAAKd,MAAMyN,UAGvB9N,IAAMyB,KAAK,sBAAuBoK,GAC/BnK,KAAK,SAAAC,GACJ,IACMqG,EADSrG,EAAI1B,KAEnBkB,EAAKC,SAAS,CACZ4G,YAAaA,OA1GF7G,EA+GnB+M,eAAiB,SAAClN,GAChBA,EAAMO,iBACN,IAAMyJ,EAAW7J,EAAKd,MAAM2K,SAE5B,IAAe,IADD7J,EAAKd,MAAM8N,aAAapD,UAAU,SAAAe,GAAC,OAAIA,IAAMd,IACzC,CAChB,IAAMoD,EAAehQ,OAAAyM,EAAA,EAAAzM,CAAO+C,EAAKd,MAAM8N,cACvCC,EAAgB9K,KAAK0H,GACrB7J,EAAKC,SAAS,CACZ+M,aAAcC,MAvHDjN,EA4HnBkN,kBAAoB,SAACrD,EAAUhK,GAC7BA,EAAMO,iBACN,IAAMkB,EAAQtB,EAAKd,MAAM8N,aAAapD,UAAU,SAAAe,GAAC,OAAIA,IAAMd,IAC3D,IAAe,IAAXvI,EAAc,CAChB,IAAM2L,EAAehQ,OAAAyM,EAAA,EAAAzM,CAAO+C,EAAKd,MAAM8N,cACvCC,EAAgBtB,OAAOrK,EAAO,GAC9BtB,EAAKC,SAAS,CACZ+M,aAAcC,MAnIDjN,EAwInBmN,mBAAqB,SAACtN,GACpBG,EAAKC,SAAS,CACZ4J,SAAUhK,EAAMC,OAAOC,SAxIzBC,EAAKd,MAAQ,CACXC,gBAAiB,GACjBoL,QAAS,GACT/D,SAAU,KACVlH,KAAM,GACNqN,SAAU,GACVH,iBAAkB,KAClB3F,YAAa,GACbgD,SAAU,KACVmD,aAAc,IAXChN,mFAgBjBW,QAAQC,IAAI,kBAAmB,sDA8HxB,IAwBHwM,EAxBGlM,EAAApD,KACDuE,EAAavE,KAAKmE,MAAM4J,KAAO,6BAA+B,4BAE9DwB,EAAoBvP,KAAKoB,MAAMC,gBAAgBkC,IAAI,SAAAhB,GAAE,OACzD1D,EAAAC,EAAAC,cAAA,UAAQkD,MAAOM,EAAGhB,GAAIkC,IAAKlB,EAAGhB,IAAKgB,EAAGf,QAGlCgO,EAAgBxP,KAAKoB,MAAMqL,QAAQlJ,IAAI,SAAAsJ,GAAC,OAC5ChO,EAAAC,EAAAC,cAAA,UAAQkD,MAAO4K,EAAEtL,GAAIkC,IAAKoJ,EAAEtL,IAAKsL,EAAEtL,MAG/BkO,EAAmBzP,KAAKoB,MAAM8N,aAAa3L,IAAI,SAAAsJ,GAAC,OACpDhO,EAAAC,EAAAC,cAAA,OAAK0E,IAAKoJ,GACRhO,EAAAC,EAAAC,cAAA,qBAAa8N,GACbhO,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS,SAAC3B,GAAD,OAAWqB,EAAKgM,kBAAkBvC,EAAG9K,KAAtD,aAIE2N,EAAkBnB,EAAYhL,IAAI,SAAAoM,GAAC,OACvC9Q,EAAAC,EAAAC,cAAA,UAAQkD,MAAO0N,EAAGlM,IAAKkM,GAAIA,KAGvB7G,EAAU,GACVC,EAAc/I,KAAKoB,MAAM2H,YAE/B,QAAoBC,IAAhBD,GAAoD,IAAvBA,EAAY9C,QAAgBgD,MAAMC,QAAQH,GAAc,CAGvF,IAFA,IAAMI,EAAMJ,EAAY,GAClBK,EAAOjK,OAAOiK,KAAKD,GACzBE,EAAA,EAAAA,EAAkBD,EAAlBnD,OAAAoD,IAAwB,CAAnB,IAAM5F,EAAO2F,EAAJC,GACZP,EAAQzE,KAAK,CACXiF,OAAQ7F,EACR8F,SAAU9F,IAId6L,EACEzQ,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CACExI,KAAMhB,KAAKoB,MAAM2H,YACjBU,QAASX,EACTY,QAAS,EACTC,gBAAgB,SAIpB2F,EACEzQ,EAAAC,EAAAC,cAAA,WAAMgK,GAIV,OACElK,EAAAC,EAAAC,cAAA,OAAK6E,UAAWW,GACd1F,EAAAC,EAAAC,cAAA,8BAAsBiB,KAAKoB,MAAMsH,UACjC7J,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS,kBAAMN,EAAKe,MAAM6J,YAAlC,SACAnP,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS1D,KAAKqC,MAAtB,QACAxD,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS1D,KAAKgP,UAAtB,aAEAnQ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACE6C,KAAK,OACLJ,KAAK,OACLS,MAAOjC,KAAKoB,MAAMI,KAClBqC,SAAU7D,KAAK8B,oBAGjBjD,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,UAAQkD,MAAOjC,KAAKoB,MAAMsN,iBAAkB7K,SAAU7D,KAAK8O,wBACxDS,GAGH1Q,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAC6Q,EAAA9Q,EAAD,CACEoH,MAAO,CAAE2J,UAAW,OACpB5N,MAAOjC,KAAKoB,MAAMyN,SAClBlL,KAAK,QACLmM,MAAM,QACNtO,KAAK,QACLqC,SAAU7D,KAAK4O,sBACfrH,OAAQ,QACRF,MAAO,OACP0I,SAAU,GACVC,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBC,WAAY,CACVC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAS,KAIb3R,EAAAC,EAAAC,cAAA,uBACCuQ,EAEDzQ,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQkD,MAAOjC,KAAKoB,MAAM2K,SAAUlI,SAAU7D,KAAKqP,oBAChDG,GAEH3Q,EAAAC,EAAAC,cAAA,WACG0Q,GAEH5Q,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS1D,KAAKiP,gBAAtB,OACApQ,EAAAC,EAAAC,cAAA,aAMFF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,mDAEAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,UAAQkD,MAAOjC,KAAKoB,MAAMqP,YAAa5M,SAAU7D,KAAK0Q,oBACnDhB,GAGH7Q,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,KAAG4R,MAAM,iBAAhB,UACA9R,EAAAC,EAAAC,cAAA,YAEAF,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,KAAG4R,MAAM,qBAAhB,cACA9R,EAAAC,EAAAC,cAAA,oDA3QoB6I,IAAM5I,WCH9B4R,EAAQ,CADO,UAoONC,cA/Nb,SAAAA,EAAY1M,GAAO,IAAAjC,EAAA,OAAA/C,OAAA0F,EAAA,EAAA1F,CAAAa,KAAA6Q,IACjB3O,EAAA/C,OAAA2F,EAAA,EAAA3F,CAAAa,KAAAb,OAAA4F,EAAA,EAAA5F,CAAA0R,GAAA7L,KAAAhF,KAAMmE,KAcR2M,YAfmB,eAAA5R,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAP,EAAAQ,KAeL,SAAAC,EAAOwM,GAAP,IAAA1K,EAAA,OAAAhC,EAAAP,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACkBwD,IADlB,OACN9B,EADM5B,EAAAK,KAEZoC,EAAKC,SAAS,CACZd,gBAAiBA,IAGF,OAAb0K,GAC6B,IAA3B1K,EAAgB4E,QAClB/D,EAAKC,SAAS,CACZuM,iBAAkBrN,EAAgB,GAAGE,KAGzCW,EAAKC,SAAS,CACZ4J,SAAU,QAGZhL,IAAMnB,IAAI,cAAgBmM,GACzBtJ,KAAK,SAAAC,GACJ,IAAM8J,EAAS9J,EAAI1B,KACbA,EAAOwL,EAAOxL,KACpBkB,EAAKC,SAAS,CACZ4J,SAAUA,EACVvK,KAAMgL,EAAOhL,KACbI,KAAM4K,EAAO5K,KACbZ,KAAMA,IAGY,WAAhBwL,EAAO5K,MACRM,EAAKC,SAAS,CACb0M,SAAU7N,EAAK6N,SACfH,iBAAkB1N,EAAK0N,iBACvBqC,MAAO/P,EAAK+P,UA/BR,wBAAAtR,EAAAM,SAAAR,EAAAS,SAfK,gBAAA2O,GAAA,OAAAzP,EAAAe,MAAAD,KAAAE,YAAA,GAAAgC,EAsDnBJ,kBAAoB,SAACC,GACnB,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfT,EAAOQ,EAAOR,KAEpBU,EAAKC,SAALhD,OAAAiD,EAAA,EAAAjD,CAAA,GACGqC,EAAOS,KA5DOC,EAgEnB0M,sBAAwB,SAAChE,GACvB1I,EAAKC,SAAS,CACZ0M,SAAUjE,KAlEK1I,EAsEnB4M,uBAAyB,SAAC/M,GACxBG,EAAKC,SAAS,CACZuM,iBAAkB3M,EAAMC,OAAOC,SAxEhBC,EA4EnB8O,iBAAmB,SAACjP,GAClBG,EAAKC,SAAS,CACZP,KAAMG,EAAMC,OAAOC,SA9EJC,EAkFnBG,KAAO,SAACN,GACNA,EAAMO,iBACN,IAAMqK,EAAQ,CACZpL,GAAIW,EAAKd,MAAM2K,SACfvK,KAAMU,EAAKd,MAAMI,KACjBI,KAAMM,EAAKd,MAAMQ,KACjBtB,YAAa4B,EAAKiC,MAAM7D,YACxBU,KAAM,CACJ0N,iBAAkBxM,EAAKd,MAAMsN,iBAC7BG,SAAU3M,EAAKd,MAAMyN,SACrBkC,MAAO7O,EAAKd,MAAM2P,QAItBhQ,IAAMyB,KAAK,aAAcmK,GACtBlK,KAAK,SAAAC,OAjGSR,EAsGnB8M,SAAW,SAACjN,GACVA,EAAMO,iBACN,IAAMsK,EAAc,CAClB8B,iBAAkBxM,EAAKd,MAAMsN,iBAC7BG,SAAU3M,EAAKd,MAAMyN,UAGvB9N,IAAMyB,KAAK,sBAAuBoK,GAC/BnK,KAAK,SAAAC,GACJ,IACMqG,EADSrG,EAAI1B,KAEnBkB,EAAKC,SAAS,CACZ4G,YAAaA,OAhHnB7G,EAAKd,MAAQ,CACXC,gBAAiB,GACjB0K,SAAU,KACVvK,KAAM,GACNI,KAAM,SACNZ,KAAM,GACN6N,SAAU,GACVH,iBAAkB,KAClB3F,YAAa,GACbgI,MAAO,IAXQ7O,wEAuHV,IAYHoN,EAZGlM,EAAApD,KACDuE,EAAavE,KAAKmE,MAAM4J,KAAO,6BAA+B,4BAC9DwB,EAAoBvP,KAAKoB,MAAMC,gBAAgBkC,IAAI,SAAAhB,GAAE,OACzD1D,EAAAC,EAAAC,cAAA,UAAQkD,MAAOM,EAAGhB,GAAIkC,IAAKlB,EAAGhB,IAAKgB,EAAGf,QAGlCyP,EAAcL,EAAMrN,IAAI,SAAA2N,GAAC,OAC7BrS,EAAAC,EAAAC,cAAA,UAAQkD,MAAOiP,EAAGzN,IAAKyN,GAAIA,KAGvBpI,EAAU,GACVC,EAAc/I,KAAKoB,MAAM2H,YAE/B,QAAoBC,IAAhBD,GAAoD,IAAvBA,EAAY9C,QAAgBgD,MAAMC,QAAQH,GAAc,CAGvF,IAFA,IAAMI,EAAMJ,EAAY,GAClBK,EAAOjK,OAAOiK,KAAKD,GACzBE,EAAA,EAAAA,EAAkBD,EAAlBnD,OAAAoD,IAAwB,CAAnB,IAAM5F,EAAO2F,EAAJC,GACZP,EAAQzE,KAAK,CACXiF,OAAQ7F,EACR8F,SAAU9F,IAId6L,EACEzQ,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CACExI,KAAMhB,KAAKoB,MAAM2H,YACjBU,QAASX,EACTY,QAAS,EACTC,gBAAgB,SAIpB2F,EACEzQ,EAAAC,EAAAC,cAAA,WAAMgK,GAIV,OACElK,EAAAC,EAAAC,cAAA,OAAK6E,UAAWW,GACd1F,EAAAC,EAAAC,cAAA,8BAAsBiB,KAAKoB,MAAM2K,UACjClN,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS,kBAAMN,EAAKe,MAAM6J,YAAlC,SACAnP,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS1D,KAAKqC,MAAtB,QACAxD,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS1D,KAAKgP,UAAtB,OAEAnQ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACE6C,KAAK,OACLJ,KAAK,OACLS,MAAOjC,KAAKoB,MAAMI,KAClBqC,SAAU7D,KAAK8B,oBAGjBjD,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UAAQkD,MAAOjC,KAAKoB,MAAMQ,KAAMiC,SAAU7D,KAAKgR,kBAC5CC,GAGHpS,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,UAAQkD,MAAOjC,KAAKoB,MAAMsN,iBAAkB7K,SAAU7D,KAAK8O,wBACxDS,GAGH1Q,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAC6Q,EAAA9Q,EAAD,CACEoH,MAAO,CAAE2J,UAAW,OACpB5N,MAAOjC,KAAKoB,MAAMyN,SAClBlL,KAAK,QACLmM,MAAM,QACNtO,KAAK,QACLqC,SAAU7D,KAAK4O,sBACfrH,OAAQ,QACRF,MAAO,OACP0I,SAAU,GACVC,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBC,WAAY,CACVC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAS,KAIb3R,EAAAC,EAAAC,cAAA,uBACCuQ,EAEDzQ,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACE6C,KAAK,OACLJ,KAAK,OACLS,MAAOjC,KAAKoB,MAAM2P,MAClBlN,SAAU7D,KAAK8B,6BAvNG8F,IAAM5I,WC6B9BmS,cAEJ,SAAAA,EAAYhN,GAAO,IAAAjC,EAAA,OAAA/C,OAAA0F,EAAA,EAAA1F,CAAAa,KAAAmR,IACjBjP,EAAA/C,OAAA2F,EAAA,EAAA3F,CAAAa,KAAAb,OAAA4F,EAAA,EAAA5F,CAAAgS,GAAAnM,KAAAhF,KAAMmE,KA2BRrC,kBAAoB,SAACC,GACnB,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfT,EAAOQ,EAAOR,KAEpBU,EAAKC,SAALhD,OAAAiD,EAAA,EAAAjD,CAAA,GACGqC,EAAOS,KAlCOC,EAsCnBkP,QAAU,WACRvO,QAAQC,IAAI,WADE,IAENxC,EAAgB4B,EAAKd,MAArBd,YACR4B,EAAKmP,gBAAgBC,QAAQ/E,aAAajM,GAC1C4B,EAAKqP,gBAAgBD,QAAQpD,aAAa5N,IA1CzB4B,EA6CnBG,KAAO,WACLQ,QAAQC,IAAI,SA9CKZ,EAkDnBsP,oBAAsB,SAACzF,GACrB7J,EAAKuP,gBAAgBH,QAAQR,YAAY/E,GACzC7J,EAAKC,SAAS,CACZuP,qBAAqB,KArDNxP,EAyDnByP,oBAAsB,SAACjJ,GAAa,IAC1BpI,EAAgB4B,EAAKd,MAArBd,YACR4B,EAAK0P,gBAAgBN,QAAQ7C,YAAY/F,EAAUpI,GACnD4B,EAAKC,SAAS,CACZ0P,qBAAqB,KA1DvB3P,EAAKd,MAAQ,CACXyQ,qBAAqB,EACrBH,qBAAqB,EACrBI,qBAAqB,EACrBC,sBAAuB,GACvBzR,YAAa,EACbkB,KAAM,GACN6I,QAAS,GACToC,QAAS,IAGXvK,EAAKmP,gBAAkBzJ,IAAMoK,YAC7B9P,EAAKuP,gBAAkB7J,IAAMoK,YAC7B9P,EAAKqP,gBAAkB3J,IAAMoK,YAC7B9P,EAAK0P,gBAAkBhK,IAAMoK,YAjBZ9P,mFAqBjB,IAAIX,EAAKvB,KAAKmE,MAAMkH,MAAMC,OAAO/J,GAC3BjB,OAAqB0I,IAAPzH,EAAmBA,EAAK,KAC5CvB,KAAKmC,SAAS,CACZ7B,YAAaA,qCAyCR,IAAA8C,EAAApD,KACP,OACEnB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+BAEEF,EAAAC,EAAAC,cAAA,SACA6C,KAAK,OACLJ,KAAK,OACLS,MAAOjC,KAAKoB,MAAMI,KAClBqC,SAAU7D,KAAK8B,qBAEjBjD,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS1D,KAAKoR,SAAtB,WACAvS,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS1D,KAAKqC,MAAtB,QACAxD,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS,kBAAMN,EAAKoO,oBAAoB,QAAhD,cACA3S,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS,kBAAMN,EAAKuO,oBAAoB,QAAhD,cACA9S,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS,kBAAMN,EAAKjB,SAAS,CAAE2P,qBAAqB,MAA5D,gBAEAjT,EAAAC,EAAAC,cAACkT,EAAD,CACEC,IAAKlS,KAAKqR,gBACVzD,OAAQ5N,KAAKwR,oBACbzD,KAAM/N,KAAKoB,MAAM0Q,oBACjB9D,QAAS,kBAAM5K,EAAKjB,SAAS,CAAE2P,qBAAqB,OAEtDjT,EAAAC,EAAAC,cAACoT,EAAD,CACED,IAAKlS,KAAKuR,gBACV5I,aAAc3I,KAAK2R,sBAErB9S,EAAAC,EAAAC,cAACqT,EAAD,CACEF,IAAKlS,KAAK4R,gBACV7D,KAAM/N,KAAKoB,MAAMyQ,oBACjB7D,QAAS,kBAAM5K,EAAKjB,SAAS,CAAE0P,qBAAqB,KACpDE,sBAAuB/R,KAAKoB,MAAM2Q,sBAClCzR,YAAaN,KAAKoB,MAAMd,cAE1BzB,EAAAC,EAAAC,cAACsT,EAAD,CACEH,IAAKlS,KAAKyR,gBACV1D,KAAM/N,KAAKoB,MAAMsQ,oBACjB1D,QAAS,kBAAM5K,EAAKjB,SAAS,CAAEuP,qBAAqB,KACpDK,sBAAuB/R,KAAKoB,MAAM2Q,sBAClCzR,YAAaN,KAAKoB,MAAMd,sBA1GFsH,IAAM5I,WAiHvB0F,cAAWyM,GCpIXmB,eArBb,SAAAA,EAAYnO,GAAO,IAAAjC,EAAA,OAAA/C,OAAA0F,EAAA,EAAA1F,CAAAa,KAAAsS,IACjBpQ,EAAA/C,OAAA2F,EAAA,EAAA3F,CAAAa,KAAAb,OAAA4F,EAAA,EAAA5F,CAAAmT,GAAAtN,KAAAhF,KAAMmE,KAIRiN,QAAU,WACRvO,QAAQC,IAAI,WACZZ,EAAKmP,gBAAgBC,QAAQ/E,gBAL7BrK,EAAKmP,gBAAkBzJ,IAAMoK,YAFZ9P,wEAWjB,OACErD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAACkT,EAAD,CAAiBC,IAAKlS,KAAKqR,kBAC3BxS,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS1D,KAAKoR,SAAtB,mBAjBiBpS,aC0FVuT,eAhFb,SAAAA,EAAYpO,GAAO,IAAAjC,EAAA,OAAA/C,OAAA0F,EAAA,EAAA1F,CAAAa,KAAAuS,IACjBrQ,EAAA/C,OAAA2F,EAAA,EAAA3F,CAAAa,KAAAb,OAAA4F,EAAA,EAAA5F,CAAAoT,GAAAvN,KAAAhF,KAAMmE,KAURqO,YAAc,SAACC,GACbvQ,EAAKC,SAAS,CACZmP,QAASmB,EAAEhP,OAbIvB,EAiBnBwQ,WAAa,WACX,IAAMC,EAAiC,KAAvBzQ,EAAKd,MAAMuR,QAAiB,WAAa,GACzDzQ,EAAKC,SAAS,CACZwQ,QAASA,KAlBXzQ,EAAKd,MAAQ,CACXkQ,QAAS,WACTqB,QAAS,IAJMzQ,qHAyBjB,OACErD,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,OACb/E,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,OACb/E,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,iBACb/E,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,aAAf,SAEF/E,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,YACb/E,EAAAC,EAAAC,cAAA,MAAI6E,UAAU,QACZ/E,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC6T,EAAA,EAAD,CAAMC,GAAG,aACPhU,EAAAC,EAAAC,cAAA,KAAG6E,UAAU,2BACb/E,EAAAC,EAAAC,cAAA,QAAM6E,UAAU,aAAhB,cAGJ/E,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC6T,EAAA,EAAD,CAAMC,GAAG,gBACPhU,EAAAC,EAAAC,cAAA,KAAG6E,UAAU,0BACb/E,EAAAC,EAAAC,cAAA,QAAM6E,UAAU,aAAhB,kBAGJ/E,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC6T,EAAA,EAAD,CAAMC,GAAG,eACPhU,EAAAC,EAAAC,cAAA,KAAG6E,UAAU,4BACb/E,EAAAC,EAAAC,cAAA,QAAM6E,UAAU,aAAhB,gBAGJ/E,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC6T,EAAA,EAAD,CAAMC,GAAG,SAAT,SAEFhU,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC6T,EAAA,EAAD,CAAMC,GAAG,gBAAT,gBAIJhU,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,oBACb/E,EAAAC,EAAAC,cAAA,OAAK2E,QAAS1D,KAAK0S,YAAnB,aAIN7T,EAAAC,EAAAC,cAAA,OAAK6E,UAAS,WAAApD,OAAaR,KAAKoB,MAAMuR,UACpC9T,EAAAC,EAAAC,cAAC+T,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrU,IACjCC,EAAAC,EAAAC,cAAC+T,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWrU,IACzCC,EAAAC,EAAAC,cAAC+T,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAW9R,IAC5CtC,EAAAC,EAAAC,cAAC+T,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAcC,UAAWC,IAC3CrU,EAAAC,EAAAC,cAAC+T,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWzI,IACrC3L,EAAAC,EAAAC,cAAC+T,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,mBAAmBC,UAAWhI,IAChDpM,EAAAC,EAAAC,cAAC+T,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,wBAAwBC,UAAWhI,IACrDpM,EAAAC,EAAAC,cAAC+T,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBC,UAAW9B,IAC9CtS,EAAAC,EAAAC,cAAC+T,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,sBAAsBC,UAAW9B,IACnDtS,EAAAC,EAAAC,cAAC+T,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWX,cA3EpCtT,sBCRlBmG,IAASgO,OACPtU,EAAAC,EAAAC,cAACqU,GAAA,EAAD,CAAeC,SAAS,SACtBxU,EAAAC,EAAAC,cAACuU,GAAD,OAEFxN,SAASyN,eAAe","file":"static/js/main.9292e513.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\n\r\nclass Overview extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Overview</h1>     \r\n        <h5>Number of data sources</h5>\r\n        <h5>Number of dashboards</h5>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Overview;\r\n","import axios from 'axios';\n\nconst JSON_HEADER = {\n  headers: {\n    'Content-Type': 'application/json',\n  }\n};\n\nexport const fetchDataSources = async () => {\n  return await get('/ws/jdbcdatasource');\n};\n\nexport const fetchDashboardById = async (id) => {\n  return await get(`/ws/dashboard/${id}`);\n}\n\nexport const fetchFiltersByDashboardId = async (dashboardId) => {\n  return await get(`/ws/filter/dashboard/${dashboardId}`);\n}\n\nconst get = async (url) => {\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (e) {\n    return null;\n  }\n} \n\n\n","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as webApi from '../api/WebApi';\r\n\r\nclass DataSources extends Component {\r\n\r\n  state = { \r\n    jdbcDataSources: [],\r\n    showEditPanel: false,\r\n    id: null,\r\n    name: '',\r\n    connectionUrl: '',\r\n    username: '',\r\n    password: '',\r\n    type: '',\r\n    ping: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Fetch all datasources\r\n    this.initData();\r\n    \r\n  }\r\n\r\n  async initData() {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const ds = {\r\n      connectionUrl: this.state.connectionUrl,\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      name: this.state.name,\r\n      type: this.state.password,\r\n      ping: this.state.ping\r\n    };\r\n\r\n    axios.post('/ws/jdbcdatasource', ds)\r\n      .then(res => {\r\n        this.initData();\r\n      });\r\n  }\r\n\r\n  update = (ds) => {\r\n    console.log('update', ds);\r\n\r\n    axios.put('/ws/jdbcdatasource', ds)\r\n      .then(res => {\r\n        this.initData();\r\n      });\r\n  }\r\n\r\n  delete = (id) => {\r\n    console.log('delete', id);\r\n    axios.delete('/ws/jdbcdatasource/' + id)\r\n      .then(res => {\r\n        this.initData();\r\n      });\r\n  }\r\n\r\n  ping = (id) => {\r\n    axios.get(`/ws/jdbcdatasource/ping/${id}`)\r\n      .then(res => {\r\n        console.log('ping', res.data);\r\n      });\r\n  }\r\n\r\n  clearEditPanel = () => {\r\n    this.setState({\r\n      id: null,\r\n      connectionUrl: '',\r\n      username: '',\r\n      password: '',\r\n      name: '',\r\n      type: '',\r\n      ping: ''\r\n    });\r\n  }\r\n\r\n  showEditPanel = (ds) => {\r\n    if (ds !== null) {\r\n      this.setState({\r\n        id: ds.id,\r\n        connectionUrl: ds.connectionUrl,\r\n        username: ds.username,\r\n        password: ds.password,\r\n        name: ds.name,\r\n        type: ds.type,\r\n        ping: ds.ping\r\n      });\r\n    } else {\r\n      this.clearEditPanel();\r\n    }\r\n    \r\n    this.setState({\r\n      showEditPanel: true\r\n    }); \r\n  }\r\n\r\n  showDeletePanel = () => {\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const filterDrawerClass = this.state.showEditPanel ? 'right-drawer display-block' : 'right-drawer display-none';\r\n\r\n    const jdbcDataSourceItems = this.state.jdbcDataSources.map((ds, index) => \r\n      <tr key={index}>\r\n        <td>{ds.name}</td>\r\n        <td>{ds.connectionUrl}</td>\r\n        <td>{ds.type}</td>\r\n        <td>{ds.username}</td>\r\n        <td>{ds.ping}</td>\r\n        <td><button onClick={() => this.showEditPanel(ds)}>update</button></td>\r\n        <td><button onClick={() => this.delete(ds.id)}>delete</button></td>\r\n        <td><button onClick={() => this.ping(ds.id)}>ping</button></td>\r\n      </tr>\r\n    );\r\n\r\n    const mode = this.state.id === null ? 'New' : 'Update';\r\n\r\n    return (\r\n      <div>\r\n        <h1>Data Sources</h1>\r\n        <div>\r\n          <h2>Table</h2>\r\n\r\n          <table>\r\n            <thead>\r\n            </thead>\r\n            <tbody>\r\n              {jdbcDataSourceItems}\r\n            </tbody>\r\n          </table>\r\n\r\n        </div>\r\n        <button onClick={() => this.showEditPanel(null)}>\r\n          Add\r\n        </button>\r\n\r\n        <div className={filterDrawerClass}>\r\n          <h3>{mode}</h3>\r\n          <button onClick={() => this.setState({showEditPanel: false })}>Close</button>\r\n          <form>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Connection Url</label>\r\n            <textarea\r\n              row=\"3\"\r\n              type=\"text\" \r\n              name=\"connectionUrl\" \r\n              value={this.state.connectionUrl}\r\n              onChange={this.handleInputChange} >\r\n            </textarea>\r\n\r\n            <label>Username</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={this.state.username}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Password</label>\r\n            <input \r\n              type=\"password\" \r\n              name=\"password\" \r\n              value={this.state.password}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Type</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"type\" \r\n              value={this.state.type}\r\n              onChange={this.handleInputChange} />\r\n\r\n            <label>Ping</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"ping\" \r\n              value={this.state.ping}\r\n              onChange={this.handleInputChange} />\r\n          </form>\r\n\r\n          <div>\r\n            <button onClick={this.save}>Save</button>\r\n            <button onClick={this.ping}>Ping</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSources;\r\n","\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n  state = { \r\n    dashboards: [],\r\n    showEditPanel: false,\r\n    name: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchBoards();\r\n  }\r\n\r\n  fetchBoards = () => {\r\n    axios.get('/ws/dashboard')\r\n      .then(res => {\r\n        const dashboards = res.data;\r\n        this.setState({ \r\n          dashboards: dashboards \r\n        });\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    const dashboard = {\r\n      name: this.state.name\r\n    };\r\n\r\n    axios.post('/ws/dashboard', dashboard)\r\n      .then(res => {\r\n        const dashboardId = res.data;\r\n        this.props.history.push(`/dashboard/edit/${dashboardId}`);\r\n      });\r\n  }\r\n\r\n  update = (dashboardId) => {\r\n    this.props.history.push(`/dashboard/edit/${dashboardId}`);\r\n  }\r\n\r\n  delete = (dashboardId) => {\r\n    console.log('delete', dashboardId);\r\n    axios.delete('/ws/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        this.fetchBoards();\r\n      });\r\n  }\r\n\r\n  jump = () => {\r\n    this.props.history.push('/overview');\r\n  }\r\n\r\n  render() {\r\n    const panelClass = this.state.showEditPanel ? 'right-drawer display-block' : 'right-drawer display-none';\r\n\r\n    const dashboardRows = this.state.dashboards.map((d, index) => \r\n      <tr key={index}>\r\n        <td>{d.id}</td>\r\n        <td>{d.name}</td>\r\n        <td><button onClick={() => this.update(d.id)}>update</button></td>\r\n        <td><button onClick={() => this.delete(d.id)}>delete</button></td>\r\n      </tr>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        Board\r\n        <button onClick={this.jump}>Overview</button>\r\n        <button onClick={() => this.setState({ showEditPanel: true })}>Add</button>\r\n\r\n        <table>\r\n          <thead>\r\n          </thead>\r\n          <tbody>\r\n            {dashboardRows}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className={panelClass}>\r\n          <div>New dashboard</div>\r\n          <button onClick={() => this.setState({showEditPanel: false })}>Close</button>\r\n          <button onClick={this.save}>Save</button>\r\n          <form>\r\n            <label>Name</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={this.state.name}\r\n              onChange={this.handleInputChange} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridDraggable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const xOffset = event.clientX - gridItemNode.offsetLeft;\r\n    const yOffset = event.clientY - gridItemNode.offsetTop;\r\n\r\n    let boxes = document.getElementsByClassName(\"grid-box\");\r\n    for (let i = 0; i < boxes.length; i++) {\r\n        boxes[i].style.zIndex = 20;\r\n    }\r\n    gridItemNode.style.zIndex = 30;\r\n\r\n    const { ownerDocument } = gridItemNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      xOffset: xOffset,\r\n      yOffset: yOffset\r\n    });\r\n\r\n    this.props.onMouseDown('drag');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    console.log('GridDraggable onMouseMove', event);\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'drag') {\r\n      return; \r\n    }\r\n\r\n    let gridCell = 1;\r\n    if (this.props.snapToGrid) {\r\n      gridCell = 4;\r\n    }\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    let currentX = event.clientX - this.state.xOffset;\r\n    let currentY = event.clientY - this.state.yOffset;\r\n    \r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n    \r\n    let boxWidth = parseInt(gridItemNode.style.width, 10) + WIDGET_BORDER * 2;\r\n    let boxHeight = parseInt(gridItemNode.style.height, 10) + WIDGET_BORDER * 2;\r\n\r\n    if (currentX < 0) {\r\n      currentX = 0;\r\n    }\r\n    if (currentY < 0) {\r\n      currentY = 0;\r\n    }\r\n    if (currentX + boxWidth > containerWidth) {\r\n      currentX = containerWidth - boxWidth;\r\n    }\r\n    if (currentY + boxHeight > containerHeight) {\r\n      currentY = containerHeight - boxHeight;\r\n    }\r\n\r\n    currentX = Math.floor(currentX / gridCell) * gridCell;\r\n    currentY = Math.floor(currentY / gridCell) * gridCell;\r\n\r\n    gridItemNode.style.left = currentX + 'px';\r\n    gridItemNode.style.top = currentY + 'px';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-draggable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp}>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridDraggable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst MIN_WIDTH = 30;\r\nconst MIN_HEIGHT = 30;\r\nconst WIDGET_BORDER = 2;\r\n\r\nclass GridResizable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentX: 0,\r\n      currentY: 0,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event) => {\r\n    console.log('onMouseDown', event);\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const currentX = event.clientX;\r\n    const currentY = event.clientY;\r\n    \r\n    const { ownerDocument } = thisNode;\r\n    ownerDocument.addEventListener('mouseup', this.onMouseUp);\r\n    ownerDocument.addEventListener('mousemove', this.onMouseMove);\r\n    this.setState({\r\n      currentX: currentX,\r\n      currentY: currentY\r\n    });\r\n\r\n    this.props.onMouseDown('resize');\r\n  }\r\n\r\n  onMouseUp = (event) => {\r\n    event.preventDefault();\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n    this.props.onMouseUp();\r\n  }\r\n\r\n  onMouseMove = (event) => {\r\n    console.log('GridResizer onMouseMove', event);\r\n    event.preventDefault();\r\n    if (this.props.mode !== 'resize') {\r\n      return; \r\n    }\r\n\r\n    let xOffset = event.clientX - this.state.currentX;\r\n    let yOffset = event.clientY - this.state.currentY;\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const gridItemNode = thisNode.parentNode;\r\n    const prevWidth = parseInt(gridItemNode.style.width, 10);\r\n    const prevHeight = parseInt(gridItemNode.style.height, 10);\r\n\r\n    const containerNode = gridItemNode.parentNode;\r\n    const containerWidth = containerNode.clientWidth;\r\n    const containerHeight = containerNode.clientHeight;\r\n\r\n    let newWidth = Math.floor(prevWidth + xOffset);\r\n    let newHeight = Math.floor(prevHeight + yOffset);\r\n\r\n    if (newWidth < MIN_WIDTH) {\r\n      newWidth = MIN_WIDTH;\r\n    }\r\n    \r\n    if (newHeight < MIN_HEIGHT) {\r\n      newHeight = MIN_HEIGHT;\r\n    }\r\n\r\n    const left = gridItemNode.offsetLeft + WIDGET_BORDER * 2;\r\n    const top = gridItemNode.offsetTop + WIDGET_BORDER * 2;\r\n\r\n    if (newWidth +  left > containerWidth) {\r\n      newWidth = containerWidth - left;\r\n    }\r\n\r\n    if (newHeight + top > containerHeight) {\r\n      newHeight = containerHeight - top;\r\n    }\r\n\r\n    gridItemNode.style.width = newWidth + 'px';\r\n    gridItemNode.style.height = newHeight + 'px';\r\n\r\n    this.setState({\r\n      currentX: event.clientX,\r\n      currentY: event.clientY\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"grid-resizable\"\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} >\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridResizable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GridDraggable from './GridDraggable';\r\nimport GridResizable from './GridResizable';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nclass GridItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      x: this.props.x,\r\n      y: this.props.y,\r\n      mode: ''\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    if (thisNode) {\r\n      const { ownerDocument } = thisNode;\r\n      ownerDocument.removeEventListener('mousedown', this.onMouseDown);\r\n      ownerDocument.removeEventListener('mouseup', this.onMouseUp);\r\n      ownerDocument.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n  }\r\n\r\n  onMouseDown = (mode) => {\r\n    console.log('GridItem onMouseDown', mode);\r\n    this.setState({\r\n      mode: mode\r\n    });\r\n  }\r\n\r\n  onMouseUp = () => {\r\n    console.log('GridItem onMouseUp');\r\n    this.setState({\r\n      mode: ''\r\n    });\r\n\r\n    const thisNode = ReactDOM.findDOMNode(this);\r\n    const x = thisNode.offsetLeft;\r\n    const y = thisNode.offsetTop;\r\n    const width = parseInt(thisNode.style.width, 10);\r\n    const height = parseInt(thisNode.style.height, 10);\r\n    const widgetId = this.props.id;\r\n\r\n    const widget = {\r\n      id: widgetId,\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n\r\n    this.props.onWidgetMove(widget);\r\n  }\r\n\r\n  onMouseMove = (event, mode, state) => {\r\n    console.log('GridItem onMouseMove', event);\r\n    event.preventDefault();   \r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    console.log('editWidget', widgetId);\r\n    this.props.onWidgetEdit(widgetId);\r\n  }\r\n\r\n  delete = () => {\r\n\r\n  }\r\n\r\n  renderWidgetContent = () => {\r\n    const widget = this.props;\r\n    let widgetItem = (<div>NONE</div>);\r\n    if (widget.type === 'table') {\r\n\r\n      const headers = [];\r\n      const queryResult = widget.queryResult;\r\n      if (queryResult !== undefined \r\n        && queryResult.length !== 0 \r\n        && Array.isArray(queryResult)) {\r\n        const obj = queryResult[0];\r\n        const keys = Object.keys(obj);\r\n        for (const key of keys) {\r\n          headers.push({\r\n            Header: key,\r\n            accessor: key\r\n          })\r\n        }\r\n      }\r\n\r\n      widgetItem = (\r\n        <ReactTable\r\n          data={queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } \r\n    return widgetItem;\r\n  }\r\n\r\n  render() {\r\n    let styles = {\r\n      left: this.state.x,\r\n      top: this.state.y,\r\n      width: this.props.width,\r\n      height: this.props.height,\r\n      zIndex: 1\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid-box\" style={styles}>\r\n        <div className=\"grid-box-title\">\r\n          {this.props.name}\r\n\r\n          <div className=\"icon-button-group\" style={{marginRight: '20px'}}>\r\n            <div className=\"icon-btn\" onClick={() => this.editWidget(this.props.id)}>\r\n              <i className=\"fas fa-edit fa-fw\"></i>\r\n            </div>\r\n            <div className=\"icon-btn\" onClick={() => this.delete()}>\r\n              <i className=\"fas fa-trash-alt fa-fw\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"grid-box-content\">\r\n          {this.renderWidgetContent()}\r\n        </div>\r\n\r\n        <GridDraggable \r\n          onMouseUp={this.onMouseUp}\r\n          onMouseDown={this.onMouseDown}\r\n          onMouseMove={this.onMouseMove}\r\n          mode={this.state.mode}\r\n          snapToGrid={this.props.snapToGrid} />\r\n\r\n        <GridResizable \r\n          onMouseUp={this.onMouseUp}\r\n          onMouseDown={this.onMouseDown}\r\n          onMouseMove={this.onMouseMove}\r\n          mode={this.state.mode} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridItem;","import React from 'react';\r\n\r\nimport GridItem from './GridItem';\r\nimport './GridLayout.css';\r\n\r\nclass GridLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    let styles = {\r\n      width: this.props.width + 'px',\r\n      height: this.props.height + 'px',\r\n    };\r\n\r\n    if (this.props.showGridlines) {\r\n      styles.backgroundSize = '15px 15px';\r\n      styles.backgroundImage = 'radial-gradient(rgb(63, 93, 131) 10%, transparent 10%)';\r\n    }\r\n\r\n    const boxItems = this.props.widgets.map((widget, index) => \r\n      <GridItem\r\n        key={index}\r\n        snapToGrid={this.props.snapToGrid}\r\n        {...widget}\r\n        onWidgetMove={this.props.onWidgetMove}\r\n        onWidgetEdit={this.props.onWidgetEdit}\r\n      />\r\n    );\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"grid-layout\"\r\n        style={styles} >\r\n        {boxItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout;","\r\nimport React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport GridLayout from '../components/GridLayout';\r\n\r\nconst options = [\r\n  { value: 'chocolate', label: 'Chocolate' },\r\n  { value: 'strawberry', label: 'Strawberry' },\r\n  { value: 'vanilla', label: 'Vanilla' }\r\n];\r\n\r\nconst widgets = [\r\n   {\r\n    id: 1,\r\n    name: 'title1',\r\n    x: 0,\r\n    y: 0,\r\n    width: 100,\r\n    height: 100\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'title2',\r\n    x: 100,\r\n    y: 100,\r\n    width: 100,\r\n    height: 100\r\n  }\r\n];\r\n\r\nclass Test extends React.PureComponent {\r\n\r\n  state = {\r\n    selectedOption: null,\r\n    data: [\r\n      {firstName: 'a1', lastName: 'b1'},\r\n      {firstName: 'a2', lastName: 'b2'},\r\n      {firstName: 'a3', lastName: 'b3'}\r\n    ]\r\n  }\r\n\r\n  onChange = (newValue) => {\r\n    console.log('change',newValue);\r\n  }\r\n\r\n  submit = () => {\r\n    console.log('submit', );\r\n  }\r\n\r\n  handleChange = (selectedOption) => {\r\n    this.setState({ selectedOption });\r\n    console.log(`Option selected:`, selectedOption);\r\n  }\r\n\r\n  editWidget = (widgetId) => {\r\n    console.log('editWidget', widgetId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n          <GridLayout \r\n            width={800}\r\n            height={600}\r\n            snapToGrid={false}\r\n            showGridlines={true}\r\n            widgets={widgets} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass EditDataSource extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {\n      id: 0,\n      name: '',\n      connectionUrl: '',\n      username: '',\n      password: '',\n      type: '',\n      ping: '',\n      mode: ''\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    console.log(\"id\", id);\n    let mode = 'Edit';\n    if (id === undefined) {\n      mode = 'New';\n    }\n    this.setState({\n      mode: mode\n    });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  save = (event) => {\n    event.preventDefault();\n    const ds = {\n      connectionUrl: this.state.connectionUrl,\n      username: this.state.username,\n      password: this.state.password,\n      name: this.state.name,\n      type: this.state.password,\n      ping: this.state.ping\n    };\n\n    const { router } = this.props;\n\n    axios.post('/ws/jdbcdatasource', ds)\n      .then(res => {\n        this.reset();\n        router.push('/datasources');\n      });\n  }\n\n  reset = () => {\n    this.setState(this.initialState);\n  }\n\n  ping = () => {\n    \n  }\n\n  render() {\n\n    return (\n      <div>\n        <h1>{this.state.mode} Data Source</h1>\n        \n\n        \n\n        <div>\n          <button type=\"primary\" onClick={this.save}>Save</button>\n          <button type=\"primary\" onClick={this.ping}>Ping</button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default EditDataSource;\n","import React from 'react';\r\n\r\nclass QuerySlicer extends React.Component {\r\n\r\n  state = {\r\n    isSelectAll: false,\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const isChecked = target.checked;\r\n\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    const index = newCheckBoxes.findIndex(x => x.value === name);\r\n    newCheckBoxes[index].isChecked = isChecked;\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n  }\r\n\r\n  toggleSelectAll = () => {\r\n    const newIsSelectAll = !this.state.isSelectAll;\r\n    const newCheckBoxes = [...this.props.checkBoxes];\r\n    for (let i = 0; i < newCheckBoxes.length; i++) {\r\n      newCheckBoxes[i].isChecked = newIsSelectAll;\r\n    }\r\n    this.props.onChange(this.props.filterId, newCheckBoxes);\r\n\r\n    this.setState(prevState => ({\r\n      isSelectAll: !prevState.isSelectAll\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const checkBoxes = this.props.checkBoxes;\r\n    let checkBoxItems = [];\r\n    if (checkBoxes !== undefined && checkBoxes.length !== 0) {\r\n      checkBoxItems = this.props.checkBoxes.map((box, index) => \r\n        <div key={index}>\r\n          <input \r\n            type=\"checkbox\" \r\n            name={box.value} \r\n            value={box.value} \r\n            checked={box.isChecked} \r\n            onChange={this.handleChange}\r\n            />\r\n            {box.value}\r\n          <br/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button onClick={this.toggleSelectAll}>Toggle Select All {this.state.isSelectAll}</button>\r\n        <div>\r\n          {checkBoxItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuerySlicer;\r\n","import React from 'react';\n\nclass NumberRange extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        min\n        <input type=\"number\" name=\"min\" />\n        max\n        <input type=\"number\" name=\"max\" />\n      </div>\n    );\n  }\n}\n\nexport default NumberRange;","import React, { Component } from 'react';\r\nimport QuerySlicer from \"./QuerySlicer\";\r\nimport NumberRange from \"./NumberRange\";\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nclass FilterViewPanel extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      dashboardId: null,\r\n      filters: []\r\n    };\r\n  }\r\n\r\n  fetchFilters = (dashboardId) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      dashboardId: dashboardId\r\n    })\r\n\r\n    axios.get('/ws/filter/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          filters: result,\r\n        }, this.queryFilters);\r\n      });\r\n  }\r\n\r\n  queryFilters = () => {\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === 'slicer') {\r\n        const queryRequest = filter.data;\r\n        axios.post('/ws/jdbcquery/filter/' + filter.id, queryRequest)\r\n          .then(res => {\r\n            const result = res.data;\r\n            const index = filters.findIndex(f => f.id === result.id);\r\n            const newFilters = [...this.state.filters];\r\n            const queryResult = JSON.parse(result.data);\r\n            const checkBoxes = [];\r\n\r\n            if (this.isArrayNotEmpty(queryResult)) {\r\n              for (let i = 0; i < queryResult.length; i++) {\r\n                const values = Object.values(queryResult[i]);\r\n                for (const val of values) {\r\n                  checkBoxes.push({\r\n                    value: val,\r\n                    isChecked: false\r\n                  });\r\n                }\r\n              }\r\n            }\r\n\r\n            newFilters[index].queryResult = queryResult;\r\n            newFilters[index].checkBoxes = checkBoxes;\r\n\r\n            this.setState({\r\n              filters: newFilters\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  isArrayNotEmpty(a) {\r\n    return a !== undefined && a.length !== 0 && Array.isArray(a);\r\n  }\r\n\r\n  renderFilterPanel = () => {\r\n    const filterPanel = [];\r\n    const filters = this.state.filters;\r\n    for (let i = 0; i < filters.length; i++) {\r\n      const filter = filters[i];\r\n      if (filter.type === 'slicer') {\r\n        const checkBoxes = filter.checkBoxes;\r\n        filterPanel.push(\r\n          (\r\n            <div className=\"filterCard\">\r\n              <div className=\"filter-card-title\">\r\n                {filter.name}\r\n                <div className=\"icon-button-group\">\r\n                  <div className=\"icon-btn\" onClick={() => this.edit(filter.id)}>\r\n                    <i className=\"fas fa-edit fa-fw\"></i>\r\n                  </div>\r\n                  <div className=\"icon-btn\" onClick={() => this.delete(filter.id)}>\r\n                    <i className=\"fas fa-trash-alt fa-fw\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <QuerySlicer \r\n                  key={i} \r\n                  filterId={filter.id} \r\n                  checkBoxes={checkBoxes} \r\n                  onChange={this.onQuerySlicerChange} \r\n                />\r\n              </div>\r\n            </div>\r\n          )\r\n        );\r\n      } else if (filter.type === 'number-range') {\r\n        filterPanel.push(<NumberRange key={i} />);\r\n      } else if (filter.type === 'date-range') {\r\n\r\n      }\r\n    }\r\n    return filterPanel;\r\n  }\r\n\r\n  edit = (filterId) => {\r\n    this.props.onEdit(filterId);\r\n  }\r\n\r\n  delete = (filterId) => {\r\n    axios.get('/ws/filter/' + filterId)\r\n      .then(res => {\r\n        const index = this.state.filters.findIndex(f => f.id === filterId);\r\n        const newFilters = [...this.state.filters];\r\n        newFilters.splice(index, 1);\r\n        this.setState({\r\n          filters: newFilters\r\n        });\r\n      });\r\n  }\r\n\r\n  onQuerySlicerChange = (filterId, checkBoxes) => {\r\n    const index = this.state.filters.findIndex(f => f.id === filterId);\r\n    const newFilters = [...this.state.filters];\r\n    newFilters[index].checkBoxes = [...checkBoxes];\r\n    this.setState({\r\n      filters: newFilters\r\n    });\r\n\r\n    // TODO: select all.\r\n    // const isSelectAll = checked.length === checkBoxes.length;    \r\n  }\r\n\r\n\r\n  run = () => {\r\n    console.log('run');\r\n  \r\n    // TODO: call props\r\n  }\r\n\r\n  render() {\r\n    const panelClass = this.props.show ? 'display-block' : 'display-none';\r\n\r\n    return (\r\n      <div className={`testPanel ${panelClass}`}>\r\n        <h5>FilterViewPanel</h5>\r\n        <button onClick={() => this.props.onClose()}>Close</button>\r\n        <button onClick={this.run}>Run</button>\r\n        <div className=\"filterViewPanel\">\r\n          {this.renderFilterPanel()}\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterViewPanel;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\nimport GridLayout from './GridLayout';\r\n\r\n\r\nclass WidgetViewPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgets: [],\r\n      snapToGrid: false,\r\n      showGridlines: true\r\n    };\r\n  }\r\n\r\n  fetchWidgets = (dashboardId) => {\r\n    if (dashboardId === null) {\r\n      return;\r\n    }\r\n\r\n    axios.get('/ws/widget/dashboard/' + dashboardId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        this.setState({\r\n          widgets: result,\r\n        }, this.queryWidgets);\r\n      });\r\n  }\r\n\r\n  queryWidgets() {\r\n    const widgets = this.state.widgets;\r\n    for (let i = 0; i < widgets.length; i++) {\r\n      const widget = widgets[i];\r\n      axios.get('/ws/jdbcquery/widget/' + widget.id)\r\n        .then(res => {\r\n          const result = res.data;\r\n          const index = widgets.findIndex(w => w.id === result.id);\r\n          const newWidgets = [...this.state.widgets];\r\n          newWidgets[index].queryResult = JSON.parse(result.data);\r\n          this.setState({\r\n            widgets: newWidgets\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const isChecked = target.checked;\r\n    this.setState({\r\n      [name]: isChecked\r\n    })\r\n  }\r\n\r\n  onWidgetMove = (widget) => {\r\n    console.log('onWidgetMove', widget);\r\n\r\n    const index = this.state.widgets.findIndex(w => w.id === widget.id);\r\n    const newWidgets = [...this.state.widgets];\r\n    newWidgets[index].x = widget.x;\r\n    newWidgets[index].y = widget.y;\r\n    newWidgets[index].width = widget.width;\r\n    newWidgets[index].height = widget.height;\r\n\r\n    this.setState({\r\n      widgets: newWidgets\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const widgetItems = this.state.widgets.map((widget, index) => {\r\n      \r\n      const headers = [];\r\n      const queryResult = widget.queryResult;\r\n      if (queryResult !== undefined && Array.isArray(queryResult)) {\r\n        const obj = queryResult[0];\r\n        const keys = Object.keys(obj);\r\n        for (const key of keys) {\r\n          headers.push({\r\n            Header: key,\r\n            accessor: key\r\n          })\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div key={index}>\r\n          <ReactTable\r\n            data={queryResult}\r\n            columns={headers}\r\n            minRows={0}\r\n            showPagination={false}\r\n          />\r\n        </div>);\r\n    });\r\n\r\n    return (\r\n      <div className=\"testPanel\">\r\n        <h3>WidgetViewPanel</h3>\r\n        <input \r\n          type=\"checkbox\" \r\n          name=\"snapToGrid\"\r\n          value=\"snapToGrid\"\r\n          checked={this.state.snapToGrid} \r\n          onChange={this.handleChange}\r\n          />\r\n          snapToGrid\r\n        <br/>\r\n        <input \r\n          type=\"checkbox\" \r\n          name=\"showGridlines\"\r\n          value=\"showGridlines\"\r\n          checked={this.state.showGridlines} \r\n          onChange={this.handleChange}\r\n          />\r\n          showGridlines\r\n        <br/>\r\n        \r\n        {widgetItems}\r\n        <div>\r\n          <GridLayout \r\n            width={800}\r\n            height={600}\r\n            snapToGrid={this.state.snapToGrid}\r\n            showGridlines={this.state.showGridlines}\r\n            widgets={this.state.widgets}\r\n            onWidgetMove={this.onWidgetMove}\r\n            onWidgetEdit={this.props.onWidgetEdit} />\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetViewPanel;","\r\nimport React from 'react';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\n\r\nconst CHART_TYPES = ['table', 'pie'];\r\n\r\nclass WidgetEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      filters: [],\r\n      widgetId: null,\r\n      name: '',\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: null,\r\n      queryResult: [],\r\n      filterId: null,\r\n      filterParams: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('WidgetEditPanel', 'componentDidMount');\r\n  }\r\n\r\n  fetchWidget = async (widgetId, dashboardId) => {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    const filters = await webApi.fetchFiltersByDashboardId(dashboardId);\r\n    this.setState({ \r\n      filters: filters \r\n    });\r\n\r\n    if (widgetId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n\r\n      if (filters.length !== 0) {\r\n        this.setState({\r\n          filterId: filters[0].id\r\n        });\r\n      }\r\n      this.setState({\r\n        widgetId: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        widgetId: widgetId\r\n      })\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    this.setState({ \r\n      jdbcDataSourceId: event.target.value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const widget ={\r\n      id: this.state.widgetId,\r\n      name: this.state.name,\r\n      dashboardId: this.props.dashboardId,\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n    \r\n    axios.post('/ws/widget', widget)\r\n      .then(res => {\r\n        \r\n      });\r\n  }\r\n\r\n  close = () => {\r\n    this.props.onClose();\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  addFilterParam = (event) => {\r\n    event.preventDefault();\r\n    const filterId = this.state.filterId;\r\n    const index = this.state.filterParams.findIndex(f => f === filterId);\r\n    if (index === -1) {\r\n      const newFilterParams = [...this.state.filterParams];\r\n      newFilterParams.push(filterId);\r\n      this.setState({\r\n        filterParams: newFilterParams\r\n      });\r\n    } \r\n  }\r\n\r\n  removeFilterParam = (filterId, event) => {\r\n    event.preventDefault();\r\n    const index = this.state.filterParams.findIndex(f => f === filterId);\r\n    if (index !== -1) {\r\n      const newFilterParams = [...this.state.filterParams];\r\n      newFilterParams.splice(index, 1);\r\n      this.setState({\r\n        filterParams: newFilterParams\r\n      });\r\n    } \r\n  }\r\n\r\n  handleFilterChange = (event) => {\r\n    this.setState({ \r\n      filterId: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const panelClass = this.props.show ? 'right-drawer display-block' : 'right-drawer display-none';\r\n\r\n    const dataSourceOptions = this.state.jdbcDataSources.map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const filterOptions = this.state.filters.map(f =>\r\n      <option value={f.id} key={f.id}>{f.id}</option>\r\n    );\r\n\r\n    const filterParamItems = this.state.filterParams.map(f =>\r\n      <div key={f}>\r\n        <div>value: {f}</div>\r\n        <button onClick={(event) => this.removeFilterParam(f, event)}>delete</button>\r\n      </div>\r\n    );\r\n\r\n    const chartOptionList = CHART_TYPES.map(o =>\r\n      <option value={o} key={o}>{o}</option>\r\n    );\r\n\r\n    const headers = [];\r\n    const queryResult = this.state.queryResult;\r\n    let queryResultItem;\r\n    if (queryResult !== undefined && queryResult.length !== 0 && Array.isArray(queryResult)) {\r\n      const obj = queryResult[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        })\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={this.state.queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResult}</div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className={panelClass}>\r\n        <h3>WidgetEditPanel: {this.state.widgetId}</h3>\r\n        <button onClick={() => this.props.onClose()}>Close</button>\r\n        <button onClick={this.save}>Save</button>\r\n        <button onClick={this.runQuery}>Run Query</button>\r\n\r\n        <form>\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>DataSource</label>\r\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n            {dataSourceOptions}\r\n          </select>\r\n        \r\n          <label>SQL Query</label>\r\n          <AceEditor\r\n            style={{ marginTop: '8px' }}\r\n            value={this.state.sqlQuery}\r\n            mode=\"mysql\"\r\n            theme=\"xcode\"\r\n            name=\"blah2\"\r\n            onChange={this.handleAceEditorChange}\r\n            height={'300px'}\r\n            width={'100%'}\r\n            fontSize={15}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              enableBasicAutocompletion: true,\r\n              enableLiveAutocompletion: true,\r\n              enableSnippets: false,\r\n              showLineNumbers: true,\r\n              tabSize: 2,\r\n            }}\r\n          />\r\n\r\n          <label>Result</label>\r\n          {queryResultItem}\r\n\r\n          <label>Filter Params</label>\r\n          <div>\r\n            <select value={this.state.filterId} onChange={this.handleFilterChange}>\r\n              {filterOptions}\r\n            </select>\r\n            <div>\r\n              {filterParamItems}\r\n            </div>\r\n            <button onClick={this.addFilterParam}>Add</button>\r\n            <div>\r\n              \r\n            </div>\r\n          </div>\r\n        \r\n\r\n          <label>Columns Mapping</label>\r\n          <div>column name, display name, data type</div>\r\n\r\n          <label>Chart Options</label>\r\n          <select value={this.state.optionValue} onChange={this.handleOptionChange}>\r\n            {chartOptionList}\r\n          </select>\r\n\r\n          <label><i class=\"fas fa-table\"></i> Table</label>\r\n          <div></div>\r\n\r\n          <label><i class=\"fas fa-chart-pie\"></i> Pie Chart</label>\r\n          <div>Count \"users\" by \"last name\"</div>\r\n\r\n\r\n        </form>\r\n        \r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WidgetEditPanel;","import React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/mysql';\r\nimport 'brace/theme/xcode';\r\n\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport * as webApi from '../api/WebApi';\r\n\r\nconst QUERY_SLICER = 'slicer'\r\nconst TYPES = [QUERY_SLICER];\r\n\r\nclass FilterEditPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jdbcDataSources: [],\r\n      filterId: null,\r\n      name: '',\r\n      type: 'slicer',\r\n      data: {},\r\n      sqlQuery: '',\r\n      jdbcDataSourceId: null,\r\n      queryResult: [],\r\n      param: ''\r\n    };\r\n  }\r\n\r\n  fetchFilter = async (filterId) => {\r\n    const jdbcDataSources = await webApi.fetchDataSources();\r\n    this.setState({ \r\n      jdbcDataSources: jdbcDataSources \r\n    });\r\n\r\n    if (filterId === null) {\r\n      if (jdbcDataSources.length !== 0) {\r\n        this.setState({\r\n          jdbcDataSourceId: jdbcDataSources[0].id \r\n        });\r\n      }\r\n      this.setState({\r\n        filterId: null\r\n      })\r\n    } else {\r\n      axios.get('/ws/filter/' + filterId)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const data = result.data;\r\n        this.setState({\r\n          filterId: filterId,\r\n          name: result.name,\r\n          type: result.type,\r\n          data: data\r\n        });\r\n\r\n        if (result.type === 'slicer') {\r\n           this.setState({\r\n            sqlQuery: data.sqlQuery,\r\n            jdbcDataSourceId: data.jdbcDataSourceId,\r\n            param: data.param\r\n          });\r\n        }\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleAceEditorChange = (newValue) => {\r\n    this.setState({\r\n      sqlQuery: newValue\r\n    });\r\n  }\r\n\r\n  handleDataSourceChange = (event) => {\r\n    this.setState({ \r\n      jdbcDataSourceId: event.target.value\r\n    });\r\n  }\r\n\r\n  handleTypeChange = (event) => {\r\n    this.setState({ \r\n      type: event.target.value\r\n    });\r\n  }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    const filter ={\r\n      id: this.state.filterId,\r\n      name: this.state.name,\r\n      type: this.state.type,\r\n      dashboardId: this.props.dashboardId,\r\n      data: {\r\n        jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n        sqlQuery: this.state.sqlQuery,\r\n        param: this.state.param\r\n      }\r\n    };\r\n    \r\n    axios.post('/ws/filter', filter)\r\n      .then(res => {\r\n        \r\n      });\r\n  }\r\n\r\n  runQuery = (event) => {\r\n    event.preventDefault();\r\n    const queryRequest ={\r\n      jdbcDataSourceId: this.state.jdbcDataSourceId,\r\n      sqlQuery: this.state.sqlQuery\r\n    };\r\n\r\n    axios.post('/ws/jdbcquery/query', queryRequest)\r\n      .then(res => {\r\n        const result = res.data;\r\n        const queryResult = result;\r\n        this.setState({\r\n          queryResult: queryResult\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const panelClass = this.props.show ? 'right-drawer display-block' : 'right-drawer display-none';\r\n    const dataSourceOptions = this.state.jdbcDataSources.map(ds =>\r\n      <option value={ds.id} key={ds.id}>{ds.name}</option>\r\n    );\r\n\r\n    const typeOptions = TYPES.map(t =>\r\n      <option value={t} key={t}>{t}</option>\r\n    );\r\n\r\n    const headers = [];\r\n    const queryResult = this.state.queryResult;\r\n    let queryResultItem;\r\n    if (queryResult !== undefined && queryResult.length !== 0 && Array.isArray(queryResult)) {\r\n      const obj = queryResult[0];\r\n      const keys = Object.keys(obj);\r\n      for (const key of keys) {\r\n        headers.push({\r\n          Header: key,\r\n          accessor: key\r\n        })\r\n      }\r\n\r\n      queryResultItem = (\r\n        <ReactTable\r\n          data={this.state.queryResult}\r\n          columns={headers}\r\n          minRows={0}\r\n          showPagination={false}\r\n        />\r\n      );\r\n    } else {\r\n      queryResultItem = (\r\n        <div>{queryResult}</div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className={panelClass}>\r\n        <h3>FilterEditPanel: {this.state.filterId}</h3>\r\n        <button onClick={() => this.props.onClose()}>Close</button>\r\n        <button onClick={this.save}>Save</button>\r\n        <button onClick={this.runQuery}>Run</button>\r\n\r\n        <form>\r\n          <label>Name</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.name}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n          <label>Type</label>\r\n          <select value={this.state.type} onChange={this.handleTypeChange}>\r\n            {typeOptions}\r\n          </select>\r\n\r\n          <label>DataSource</label>\r\n          <select value={this.state.jdbcDataSourceId} onChange={this.handleDataSourceChange}>\r\n            {dataSourceOptions}\r\n          </select>\r\n        \r\n          <label>SQL Query</label>\r\n          <AceEditor\r\n            style={{ marginTop: '8px' }}\r\n            value={this.state.sqlQuery}\r\n            mode=\"mysql\"\r\n            theme=\"xcode\"\r\n            name=\"blah2\"\r\n            onChange={this.handleAceEditorChange}\r\n            height={'300px'}\r\n            width={'100%'}\r\n            fontSize={15}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              enableBasicAutocompletion: true,\r\n              enableLiveAutocompletion: true,\r\n              enableSnippets: false,\r\n              showLineNumbers: true,\r\n              tabSize: 2,\r\n            }}\r\n          />\r\n\r\n          <label>Result</label>\r\n          {queryResultItem}\r\n\r\n          <label>Param</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={this.state.param}\r\n            onChange={this.handleInputChange} \r\n          />\r\n\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FilterEditPanel;","\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport FilterViewPanel from '../components/FilterViewPanel';\r\nimport WidgetViewPanel from '../components/WidgetViewPanel';\r\nimport WidgetEditPanel from '../components/WidgetEditPanel';\r\nimport FilterEditPanel from '../components/FilterEditPanel';\r\n\r\nimport * as webApi from '../api/WebApi';\r\nimport axios from 'axios';\r\n\r\nconst FILTER_TYPES = [\r\n  { value: 'slicer', label: 'Slicer' },\r\n  { value: 'number-range', label: 'Number Range' },\r\n  { value: 'date-range', label: 'Date Range' }\r\n];\r\n\r\nconst mockDashboard = {\r\n  dashboardId: 1,\r\n  filters: [\r\n    {\r\n      type: 'slicer',\r\n      id: 1,\r\n      dashboardId: 1,\r\n      data: {\r\n        dataSourceId: 2,\r\n        sqlQuery: 'select name from table',\r\n        display: 'Name',\r\n        columns: [{\r\n            name: 'name',\r\n            param: 'name'\r\n          },\r\n          {\r\n            name: 'b',\r\n            param: ':column b'\r\n          }\r\n        ]\r\n      },\r\n      queryResult: ['s1', 's2', 's3']\r\n    }\r\n  ],\r\n  widgets: []\r\n}\r\n\r\n\r\nclass DashboardEditView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showWidgetEditPanel: false,\r\n      showFilterEditPanel: false,\r\n      showFilterViewPanel: true,\r\n      jdbcDataSourceOptions: [],\r\n      dashboardId: 0,\r\n      name: '',\r\n      widgets: [],\r\n      filters: []\r\n    }\r\n\r\n    this.filterViewPanel = React.createRef();\r\n    this.filterEditPanel = React.createRef();\r\n    this.widgetViewPanel = React.createRef();\r\n    this.widgetEditPanel = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    const dashboardId = id !== undefined ? id : null;\r\n    this.setState({\r\n      dashboardId: dashboardId\r\n    })\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  refresh = () => {\r\n    console.log('refresh');\r\n    const { dashboardId } = this.state;\r\n    this.filterViewPanel.current.fetchFilters(dashboardId);\r\n    this.widgetViewPanel.current.fetchWidgets(dashboardId);\r\n  }\r\n\r\n  save = () => {\r\n    console.log('save');\r\n\r\n  }\r\n\r\n  openFilterEditPanel = (filterId) => {\r\n    this.filterEditPanel.current.fetchFilter(filterId);\r\n    this.setState({\r\n      showFilterEditPanel: true\r\n    });\r\n  }\r\n\r\n  openWidgetEditPanel = (widgetId) => {\r\n    const { dashboardId } = this.state;\r\n    this.widgetEditPanel.current.fetchWidget(widgetId, dashboardId);\r\n    this.setState({\r\n      showWidgetEditPanel: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>\r\n          DashboardEditView: \r\n          <input \r\n          type=\"text\" \r\n          name=\"name\" \r\n          value={this.state.name}\r\n          onChange={this.handleInputChange} />\r\n        </h3>\r\n        <button onClick={this.refresh}>Refresh</button>\r\n        <button onClick={this.save}>Save</button>\r\n        <button onClick={() => this.openFilterEditPanel(null)}>Add Filter</button>\r\n        <button onClick={() => this.openWidgetEditPanel(null)}>Add Widget</button>\r\n        <button onClick={() => this.setState({ showFilterViewPanel: true})}>Show Filters</button>\r\n        \r\n        <FilterViewPanel \r\n          ref={this.filterViewPanel} \r\n          onEdit={this.openFilterEditPanel}\r\n          show={this.state.showFilterViewPanel}\r\n          onClose={() => this.setState({ showFilterViewPanel: false})}\r\n        />\r\n        <WidgetViewPanel \r\n          ref={this.widgetViewPanel} \r\n          onWidgetEdit={this.openWidgetEditPanel}\r\n        />\r\n        <WidgetEditPanel \r\n          ref={this.widgetEditPanel} \r\n          show={this.state.showWidgetEditPanel}\r\n          onClose={() => this.setState({ showWidgetEditPanel: false})}\r\n          jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n          dashboardId={this.state.dashboardId}\r\n        />\r\n        <FilterEditPanel\r\n          ref={this.filterEditPanel}\r\n          show={this.state.showFilterEditPanel}\r\n          onClose={() => this.setState({ showFilterEditPanel: false})}\r\n          jdbcDataSourceOptions={this.state.jdbcDataSourceOptions}\r\n          dashboardId={this.state.dashboardId}\r\n        />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(DashboardEditView);\r\n","\r\nimport React, { Component } from 'react';\r\nimport FilterViewPanel from '../components/FilterViewPanel';\r\n\r\nclass SingleTest extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.filterViewPanel = React.createRef();\r\n  }\r\n\r\n  refresh = () => {\r\n    console.log('refresh');\r\n    this.filterViewPanel.current.fetchFilters();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h5>SingleTest</h5>\r\n        <FilterViewPanel ref={this.filterViewPanel}/>\r\n        <button onClick={this.refresh}>Refresh</button>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default SingleTest;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport Overview from './views/Overview';\r\nimport DataSources from './views/DataSources';\r\nimport Dashboards from './views/Dashboards';\r\nimport Test from './views/Test';\r\nimport EditDataSource from './views/EditDataSource';\r\nimport DashboardEditView from './views/DashboardEditView';\r\n\r\nimport SingleTest from './views/SingleTest';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: 'overview',\r\n      menuMin: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n  }\r\n\r\n  toggleMenu = () => {\r\n    const menuMin = this.state.menuMin === '' ? 'menu-min' : '';\r\n    this.setState({\r\n      menuMin: menuMin\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"Nav\">\r\n          <div className=\"Nav_title-bar\">\r\n            <div className=\"Nav_title\">Poli</div>\r\n          </div>\r\n          <div className=\"Nav_menu\">\r\n            <ul className=\"menu\">\r\n              <li>\r\n                <Link to=\"/overview\">\r\n                  <i className=\"fas fa-heartbeat fa-fw\"></i>\r\n                  <span className=\"menu-text\">Overview</span>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/datasources\">\r\n                  <i className=\"fas fa-database fa-fw\"></i>\r\n                  <span className=\"menu-text\">Data Sources</span>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/dashboards\">\r\n                  <i className=\"fas fa-chalkboard fa-fw\"></i>\r\n                  <span className=\"menu-text\">Dashboards</span>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/test\">Test</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/single-test\">SingleTest</Link>\r\n              </li>\r\n              \r\n            </ul>\r\n            <div className=\"Nav__toggle-menu\">\r\n              <div onClick={this.toggleMenu}>toggle</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={`Content ${this.state.menuMin}`}>\r\n          <Route exact path=\"/\" component={Overview} />\r\n          <Route exact path=\"/overview\" component={Overview} />\r\n          <Route exact path=\"/datasources\" component={DataSources} />\r\n          <Route exact path=\"/dashboards\" component={Dashboards} />\r\n          <Route exact path=\"/test\" component={Test} />\r\n          <Route exact path=\"/datasources/new\" component={EditDataSource} />\r\n          <Route exact path=\"/datasources/edit/:id\" component={EditDataSource} />\r\n          <Route exact path=\"/dashboard/new\" component={DashboardEditView} />\r\n          <Route exact path=\"/dashboard/edit/:id\" component={DashboardEditView} />\r\n          <Route exact path=\"/single-test\" component={SingleTest} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/poli\">\n    <App />\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}